{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/elements/functions.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/store/reducers.js","js/store/actions.js","js/lk/invite.js","js/lk/lk.js","js/elements/spinner.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/elements/modalPage.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","Warn.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["osname","platform","Head","theme","left","onClick","this","props","goBack","IOS","addon","title","React","Component","BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","subscribers","onarrayid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getAll","logs","params","sendmessage","keyGroup","secretKey","moder","patchData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","response","console","log","json","catch","e","MastersCard","handleChange","event","setState","target","name","value","favStatus","state","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","getPhone","share","bridge","send","activeMaster","_id","result","openSnackAvatar","avatarLink","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","sendMessage","firstname","lastname","sendtitle","phone","vkUid","token","Math","random","snackbar","mess","userId","userVkUid","masterId","masterVkUid","postData","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","activeMasterId","res","setActiveMaster","count","images","start_index","text","after","src","size","marginTop","photo","description","brand","bottomContent","expandable","openComments","indicator","comments","length","photos","map","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","openPhoto","separator","priceList","item","multiline","price","header","connect","reverse","image","gridPhoto","MastersComments","sendComment","rating","Number","moderation","isCommended","commentsArr","countComments","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","step","min","max","top","bottom","replace","placeholder","stretched","commentList","validate","News","addFav","group_id","inGroup","feedList","icon","action","feed","vertical","marginBottom","isMaster","openModer","openReg","dispatch","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","setMaster","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","Invite","getCategories","categories","regMaster","checkLicense","statusMessage","cat","subcat","filter","active","id","label","sex","location","country","city","banned","status","visible","closeReg","error","addProd","add","saveProd","undefined","newProdTitle","newProdBody","newProdPrice","onRemove","slice","permMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","asideContent","checked","i","subcategory","removable","require","openRules","bindActionCreators","Lk","checkModeration","addToFavApp","connection","tmpUser","isUser","favsArr","mastersArr","openSetting","openFavourite","activePanel","subheader","actions","openMasterPhoto","openFindModel","Spin","spinner","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","CityListModal","search","cities","getCities","toLowerCase","items","updateModalHeight","Fragment","region","withModalRootContext","Setting","saveChanges","checkBan","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","prevProps","prevState","snapshot","Array","isArray","modalBack","activeModal","dynamicContentHeight","ANDROID","right","String","onSubmit","handleSubmit","Favourite","loadFavsMasters","ids","isLoaded","err","caption","openFavMasterOnId","FindCard","find","openMasterOnId","FindList","findArr","FindModel","loadFind","window","scrollTo","self","pageYOffset","FindModelMaster","save","isActive","activeFind","deleteImage","Partners","addToCommunity","CityList","Moder","good","reasons","bad","reason","disabled","openMaster","renderMasters","MastersList","setBottom","setTitle","ratingArr","reduce","a","b","openPanelMaster","countSubcat","ScrollSubcat","selected","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","App","verificationUser","vkUser","usersArr","first_name","last_name","photo_200","newUser","openAlert","actionsLayout","autoclose","newMaster","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeStory","activeViewMasters","activePanelLk","openStory","storyName","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","scheme","activePanelNews","onStoryChange","setActiveModal","linkParams","masterid","subscribe","detail","validationParams","backgroundColor","dataset","story","tabbar","data-story","moderId","activeView","modal","vk_is_favorite","Boolean","hostname","match","store","createStore","changeIsMaster","hash","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0d3079bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, IOS, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nconst osname = platform();\r\n\r\nclass Head extends React.Component {\r\n    render(){\r\n        return (\r\n            <PanelHeader\r\n                theme=\"light\"\r\n                left={<PanelHeaderButton onClick={this.props.goBack}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                addon={<PanelHeaderButton onClick={this.props.goBack}>Назад</PanelHeaderButton>}\r\n            >{this.props.title}\r\n            </PanelHeader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head;","//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    keyGroup: 'f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf', //'17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b'\r\n    secretKey: 'eb8wUDGs1LQoSKPsIS9i',\r\n    moder: BACK_LINK+'masters/moderation'\r\n};","import React from \"react\";\r\n\r\nfunction postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, FormLayout, RichCell, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.setActiveMaster(master);\r\n                this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n            });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            patchData(BACKEND.users+'/'+this.state.user._id, this.state.user);\r\n            if (this.state.isFavourite === true) {\r\n                let count = {count: 1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //прибавляем счетчик мастера\r\n            } else {\r\n                let count = {count: -1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //убавляем счетчик\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.getPhone(title)}\r\n                mode=\"outline\"\r\n            >\r\n                Записаться\r\n            </Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = BACKEND.keyGroup;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number});\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                <Cell>\r\n                                    {this.favStatus()}\r\n                                    <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}\r\n                            description={'Подписчиков: ' + this.state.countFavs}\r\n                        >\r\n                            Отзывы\r\n                        </Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Div>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <div>\r\n                                                            <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                        </div>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersCard);","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout, Snackbar\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 3,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({commentsArr: this.props.activeMaster.comments, countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body,\r\n                moderation: false\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n            this.setState({isCommended: true});\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Комментарий отправлен на проверку\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.setState({ snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                        >\r\n                            Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                        </Snackbar>\r\n                });\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                if (comment.moderation === true) {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{comment.body}</Cell>\r\n                            <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell multiline>Комментарий находится на модерации</Cell>\r\n                        </Group>\r\n                    )\r\n                }\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={1}\r\n                            max={5}\r\n                            value={Number(this.state.rating)}\r\n                            onChange={rating=>this.setState({rating})}\r\n                            top={\"Моя оценка работы мастера: \"+this.state.rating}\r\n                            bottom='Перемещайте ползунок влево или вправо для изменения оценки'\r\n                        />\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/ /g, \"\").length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            stretched\r\n                            mode=\"outline\"\r\n                            before={<Icon24Add />}\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, FixedLayout, CardGrid, Card, Button, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = this.props.user;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n                    \"method\": \"groups.isMember\",\r\n                    \"params\": {\"group_id\": \"193179174\",\"user_id\": user.vkUid, \"v\":\"5.103\", \"access_token\": BACKEND.keyGroup}})\r\n                    .then(result => {\r\n                        if (result.response === 0){\r\n                            this.setState({inGroup: false})\r\n                        } else {\r\n                            this.setState({inGroup: true})\r\n                        }\r\n                    })\r\n                    .catch(e => console.log(e))\r\n    }\r\n\r\n    addFav = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        }).then(result=>this.setState({inGroup: result}));\r\n    };\r\n\r\n    feedList = () => {\r\n        if(this.state.inGroup){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                    header=\"Привет!\"\r\n                >\r\n                    Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return(\r\n                <Placeholder\r\n                    icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                    header=\"Привет!\"\r\n                    action={<Button onClick={this.addFav} size=\"l\">Вступить в группу</Button>}\r\n                >\r\n                    Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным. Вступайте в нашу группу Вконтакте, чтобы не пропустить важные обновления!\r\n                </Placeholder>\r\n            )\r\n        }\r\n\r\n\r\n            // this.state.feed.map(feed=>{\r\n            //     return (\r\n            //         <CardGrid>\r\n            //             <Card key={feed} size=\"l\" mode=\"shadow\">\r\n            //                 <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n            //             </Card>\r\n            //         </CardGrid>\r\n            //     )\r\n            // })\r\n    };\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Group>\r\n                {this.feedList()}\r\n                <FixedLayout\r\n                    vertical=\"bottom\"\r\n                    style={{marginBottom: 5}}\r\n                >\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <Cell\r\n                                photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                description={\r\n                                    user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                                }\r\n                                //bottomContent={}\r\n                                before={<Avatar src={user.avatarLink} size={50}/>}\r\n                                size=\"l\"\r\n                            >{user.firstname} {user.lastname}\r\n                            </Cell>\r\n                            {\r\n                                user.vkUid === '199500866' &&\r\n                                //user.vkUid === '2314852' &&\r\n                                <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                            }\r\n                            {user.isMaster === false &&\r\n                            <Cell\r\n                                multiline\r\n                                onClick={this.props.openReg}\r\n                                before={<Icon24UserOutgoing/>}\r\n                                expandable\r\n                            >\r\n                                Если вы - мастер, пройдите простую процедуру регистрации\r\n                            </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                </FixedLayout>\r\n            </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);;","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: {},\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity:action.payload.location.city};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    LOGIN_USER,\r\n    SET_MASTER\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER', master);\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER', user);\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST', newMastersList);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY', newTargetCategory);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY', newTargetCity);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL', newScroll);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST', newFindModelsList);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL', newFindModelsListScroll);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                firstname: this.props.user.firstname,\r\n                lastname: this.props.user.lastname,\r\n                description: this.state.description,\r\n                vkUid: this.props.user.vkUid,\r\n                type: this.state.type,\r\n                avatarLink: this.props.user.avatarLink,\r\n                sex: this.props.user.sex,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                banned: {status: false},\r\n                priceList: this.state.priceList,\r\n                visible: true\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена');\r\n    };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        size=\"l\"\r\n                                        description=\"Регистрация мастера\"\r\n                                        before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                    >\r\n                                        {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={this.props.changeCity}\r\n                                        indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                        status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                        bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                    >\r\n                                        Ваш город\r\n                                    </Cell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        multiline\r\n                                        asideContent={\r\n                                            <Switch\r\n                                                onChange={this.permMessage}\r\n                                                checked={this.state.statusMessage}/>\r\n                                        }\r\n                                        bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                    >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                    </Cell>\r\n                                    {/*<Cell*/}\r\n                                    {/*    expandable*/}\r\n                                    {/*    multiline*/}\r\n                                    {/*    onClick={this.permMessage}*/}\r\n                                    {/*    description=\"Для получения уведомлений о заявках\"*/}\r\n                                    {/*    status={this.state.statusMessage === true ? 'valid' : 'error'}*/}\r\n                                    {/*>Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? <span style={{color: 'green'}}>Разрешен</span> : <span style={{color: 'red'}}>Не разрешен</span>}*/}\r\n                                    {/*</Cell>*/}\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                removable\r\n                                                onRemove={() => {\r\n                                                    this.onRemove(index)\r\n                                                }}>\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            </Cell>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdTitle\"\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Textarea\r\n                                            require\r\n                                            name=\"newProdBody\"\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdPrice\"\r\n                                            type=\"number\" value={this.state.newProdPrice}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button, Switch} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            return (\r\n                <Cell multiline>Ваш профиль на проверке. В течении часа он будет доступен в поиске.</Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    bottomContent={this.state.user.isMaster && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                {this.state.user.isMaster && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport spinner from \"./img/spinner.svg\";\r\n\r\nexport default function Spin(props){\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n            <img src={spinner}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spin/>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories, isLoad: true});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        this.props.setMaster(this.state.master);\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n        this.props.snackbar('Изменения сохранены');\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                this.props.modalBack();\r\n                this.props.snackbar('Изменения сохранены');\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.props.snackbar('Процедура добавлена');\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({master: master});\r\n            this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.props.snackbar('Процедура добавлена');\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <ModalRoot\r\n                        activeModal={this.props.activeModal}\r\n                        onClose={this.saveChanges}\r\n                    >\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'setting'}\r\n                                   onClose={this.saveChanges}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={this.saveChanges}>{'Сохранить'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={this.saveChanges}>{osname === IOS ? 'Сохранить' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Настройки\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.master.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.props.changeModal('changeCity')}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\">\r\n                                                <Cell\r\n                                                    key={item}\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    removable\r\n                                                    onRemove={() => {\r\n                                                        this.onRemove(index)\r\n                                                    }}>\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Textarea\r\n                                                require\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\" value={this.state.newProdPrice}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={this.checkSubcat}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                            </Div>\r\n                        </ModalPage>\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'changeCity'}\r\n                                   onClose={() => this.props.changeModal('setting')}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{'Назад'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{osname === IOS ? 'Назад' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Выбор города\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <CityListModal dynamicContentHeight\r\n                                           changeTargetCity={(city) => this.changeCity(city)}\r\n                            />\r\n                        </ModalPage>\r\n                    </ModalRoot>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\nimport Spin from '../elements/spinner'\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56LikeOutline/>}\r\n                        header={this.state.mastersArr.message}\r\n                    >Добавить мастера в этот список можно, нажав соответствующую кнопку в профиле мастера.\r\n                    </Placeholder>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <RichCell\r\n                                    key={master._id}\r\n                                    before={<Avatar size={72} src={master.avatarLink} />}\r\n                                    text={master.type}\r\n                                    caption={master.location.city.title}\r\n                                    after={<Icon16Chevron/>}\r\n                                    onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                >\r\n                                    {master.firstname} {master.lastname}\r\n                                </RichCell>\r\n\r\n                                // <CardGrid key={master._id}>\r\n                                //     <Card size=\"l\" mode=\"shadow\">\r\n                                //         <Cell expandable\r\n                                //               photo={master.avatarLink}\r\n                                //               description={master.type}\r\n                                //               before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                //               size=\"l\"\r\n                                //               onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                //         >{master.firstname} {master.lastname}\r\n                                //         </Cell>\r\n                                //     </Card>\r\n                                // </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <Cell expandable\r\n                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                      description={props.date}\r\n                      before={<Avatar src={props.find.avatarLink} size={50}/>}\r\n                      size=\"l\"\r\n                      onClick={()=>props.openMasterOnId(props.find.masterId)}\r\n                      bottom=\"\"\r\n                >{props.find.firstname} {props.find.lastname}\r\n                </Cell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card size='s' key={i}>\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder,Card} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\nfunction renderLastPhoto(arr){\r\n    for (let i =0; i<arr.length; i++){\r\n        if (!arr[i]) break;\r\n        return (\r\n            <Card\r\n                size=\"s\"\r\n                mode=\"shadow\"\r\n                key={i}\r\n                //onClick={() => this.openShowImages(this.state.images, index)}\r\n            >\r\n                <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport Spin from '../elements/spinner'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    this.setState({findArr: find, isLoad: true});\r\n                    this.props.changeFindModelsList(find);\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Div, PanelSpinner\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0]});\r\n                fetch(BACKEND.findModel.onMasterId+activeMaster[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        if (find.length > 0) {\r\n                            console.log(find);\r\n                            this.setState({loadFind: find[0], body:find[0].body, error: '', isLoaded: true, isActive: true});\r\n                        } else {\r\n                            let error = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({error: error, isLoaded: true});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n\r\n    uploadPhoto = () =>{\r\n        try {\r\n            if (this.state.loadFind.images.length >= 3) throw 'Можно загрузить только 3 фотографии в разделе Мастер ищет модель';\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n            formData.append('uploadUrl', this.state.uploadUrl);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;//адрес фото\r\n                            let imgArr = this.state.images;\r\n                            let data = {\r\n                                findId: this.state.loadFind,\r\n                                newImg: newImg\r\n                            };\r\n                            let loadFind = this.state.loadFind;\r\n                            loadFind.images.push(newImg);\r\n                            this.setState({loading: false, loadFind: loadFind}, ()=>this.save());\r\n                        })\r\n                        .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.openSnack(error);\r\n                })\r\n        } catch (e) {\r\n            this.openSnack(e);\r\n        }\r\n\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        if (this.state.isActive === true) {\r\n            let find =this.state.loadFind;\r\n            find.body = this.state.body;\r\n            console.log('измененный',find);\r\n            this.setState({loadFind: find});\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            this.openSnack('Информация успешно обновлена.')\r\n        } else {\r\n            let find =this.state.loadFind;\r\n            find.body = this.state.body;\r\n            find.masterId = this.state.activeMaster._id;\r\n            find.location = this.state.activeMaster.location;\r\n            find.firstname = this.state.activeMaster.firstname;\r\n            find.lastname = this.state.activeMaster.lastname;\r\n            find.avatarLink = this.state.activeMaster.avatarLink;\r\n            this.postData(BACKEND.findModel.new, find);\r\n            this.openSnack('Информация о поиске успешно размещена.')\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    deleteImage(index){\r\n        let find = this.state.loadFind;\r\n        if (index > -1) {\r\n            find.images.splice(index, 1);\r\n        } else find.images.splice(0, index);\r\n        this.setState({activeFind: find}, ()=> this.save())\r\n    }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spin />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                {\r\n                    this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div> :\r\n                        <FormLayout>\r\n                            <FormLayoutGroup>\r\n                                <Cell>Добавить / изменить</Cell>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.state.isActive &&\r\n                                    this.state.loadFind.images.map((image,i)=>{\r\n                                        return (\r\n                                            <Card size='s' key={i}>\r\n                                                <div\r\n                                                    style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                >\r\n                                                    <Icon24DismissSubstract\r\n                                                        onClick={()=>this.deleteImage(i)}\r\n                                                    />\r\n                                                </div>\r\n                                            </Card>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </CardGrid>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Добавить фото\r\n                                </File>\r\n                            </FormLayoutGroup>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                        </FormLayout>\r\n                }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества со схожей тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: true,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 1, title: 'Другой город'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items, isLoad: true}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                    {this.state.cities.length > 0 ?\r\n                    <List>\r\n                        {this.state.cities.map(city =>\r\n                            <Cell\r\n                                description={city.region || ''}\r\n                                onClick={()=>this.props.changeCity(city)}\r\n                                key={city.id}\r\n                            >\r\n                                {city.title}\r\n                            </Cell>\r\n                        )}\r\n                    </List> :\r\n                        <Placeholder\r\n                            icon={<Icon56PlaceOutline />}\r\n                            header=\"Город не найден\"\r\n                        >\r\n                            Проверьте опечатки или измените критерии поиска\r\n                        </Placeholder>\r\n                    }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {ANDROID, IOS, ModalPage, ModalPageHeader, ModalRoot, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nconst osname = platform();\r\n\r\nexport default function Modal(props){\r\n    return(\r\n        <ModalRoot\r\n            activeModal={props.activeModal}\r\n            onClose={props.onClose}\r\n        >\r\n            <ModalPage dynamicContentHeight\r\n                       id={props.pageId}\r\n                       onClose={props.onClose}\r\n                       header={\r\n                           <ModalPageHeader\r\n                               left={osname === ANDROID && props.leftButton &&\r\n                               <PanelHeaderButton onClick={props.onClose}>{'Сохранить'}</PanelHeaderButton>}\r\n                               right={props.rightButton && <PanelHeaderButton onClick={props.onClose}>{osname === IOS  ? 'Сохранить' :\r\n                                   <Icon24Done/>}</PanelHeaderButton>}\r\n                           >\r\n                               {props.header}\r\n                           </ModalPageHeader>\r\n                       }\r\n            >\r\n                {props.content}\r\n            </ModalPage>\r\n        </ModalRoot>\r\n    )\r\n}","import React, {ReactFragment} from 'react';\r\nimport {\r\n    Placeholder,\r\n    Div,\r\n    RichCell,\r\n    Avatar, FixedLayout, CardGrid, Card, Button, CellButton, Textarea\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(BACKEND.moder);\r\n        fetch(BACKEND.moder)\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: []\r\n        };\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons\r\n        };\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    renderMasters() {\r\n        return this.state.mastersList.map((master, index) => {\r\n            return (\r\n                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            before={<Avatar onClick={() => this.props.openMaster(master._id)} src={master.avatarLink} size={70}/>}\r\n                            caption={master.location.city.title}\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                    {/*<Button onClick={()=>this.bad(master._id, index)} mode=\"secondary\">Отклонить</Button>*/}\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {master.firstname} {master.lastname}\r\n                        </RichCell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.renderMasters()}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Moder;","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.mastersList);\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArr = master.comments.map(comment => {\r\n                return Number(comment.rating)\r\n            });\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nexport default function ScrollSubcat(props){\r\n    const subcatStyle = {\r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        fontSize: 10\r\n    };\r\n    if(props.targetCategory._id!=='all'){\r\n        return(\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n            // <HorizontalScroll>\r\n            //     <div style={{display: 'flex'}}>\r\n            //         {\r\n            //             props.targetCategory.subcat.map(subcat=>{\r\n            //                 return (\r\n            //                     <div style={{subcatStyle}} key={subcat._id}>\r\n            //                         <Button\r\n            //                             after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n            //                             id={subcat._id}\r\n            //                             onClick={props.checkSubcat}\r\n            //                             style={{margin: '4px 4px 0px 0px'}}\r\n            //                             mode=\"outline\"\r\n            //                         >\r\n            //                             {subcat.label}\r\n            //                         </Button>\r\n            //                     </div>\r\n            //                 )\r\n            //             })\r\n            //         }\r\n            //     </div>\r\n            // </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    window.scrollTo(0, this.props.mastersListScroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <React.Fragment>\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <SelectMimicry\r\n                        top=\"Выберите категорию\"\r\n                        placeholder=\"Показаны мастера всех категорий\"\r\n                        onClick={user.location.city === 'Не определено' ?\r\n                            this.props.openSnack('Сначала выберите город') :\r\n                            this.props.changeCategory\r\n                        }\r\n                    >{targetCategory.label}</SelectMimicry>\r\n                    {\r\n                        targetCategory && this.state.isLoad &&\r\n                        <ScrollSubcat\r\n                            targetCategory={targetCategory}\r\n                            mastersList={this.props.mastersList}\r\n                            checkSubcat={(e)=>this.checkSubcat(e)}\r\n                            filter={this.state.filter}\r\n                        />\r\n                    }\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Alert,\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Modal from './js/elements/modalPage'\r\nimport Moder from \"./js/news/moder\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {postData, patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport spinner from './js/elements/img/spinner.svg'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            activePanelNews: 'news'\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.modalBack = () => {\r\n            this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data => {this.verificationUser(data)});\r\n        if (this.props.linkParams.masterid) {\r\n            this.setState({activeMasterId: this.props.linkParams.masterid});\r\n            this.openMasterOnLink(this.props.linkParams.masterid);\r\n            //bridge.send(\"VKWebAppSetLocation\", {\"location\": \"masterid=\"+this.props.linkParams.masterid});\r\n        }\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n            // if (type === 'VKWebAppViewRestore') { // Восстановление из кэша\r\n            //     if (this.props.linkParams.masterid) {\r\n            //         this.setState({activeMasterId: this.props.linkParams.masterid});\r\n            //     }\r\n            // }\r\n            // if (type === 'VKWebAppLocationChanged'){\r\n            //     let id = data.location.split('=');\r\n            //     console.log('В параметры пришел мастер', id[1]);\r\n            //     this.openMasterOnLink(id[1]);\r\n            // }\r\n            // if (type === 'VKWebAppUpdateConfig') { // Получаем тему клиента.\r\n            //     this.setState({scheme: data.scheme})\r\n            // }\r\n        });\r\n        if (this.props.params) {\r\n            fetch(BACKEND.logs.params, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {'Content-Type': 'application/json',},\r\n                redirect: 'follow',\r\n                referrer: 'no-referrer',\r\n                body: JSON.stringify(this.props.params)\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.setState({validationParams: res.status})\r\n                })\r\n                .catch(e=>console.log(e));\r\n        }\r\n    }\r\n\r\n    verificationUser = (vkUser) => {\r\n         fetch(BACKEND.users + '/vkuid/' + vkUser.id)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0) {\r\n                    const user = {\r\n                        vkUid: vkUser.id,\r\n                        firstname: vkUser.first_name,\r\n                        lastname: vkUser.last_name,\r\n                        avatarLink: vkUser.photo_200,\r\n                        sex: vkUser.sex,\r\n                        location: {\r\n                            country: vkUser.country || 'Не определен',\r\n                            city: vkUser.city || 'Не определен'\r\n                        },\r\n                        isMaster: false,\r\n                        favs: []\r\n                    };\r\n                    fetch(BACKEND.users, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {'Content-Type': 'application/json',},\r\n                        redirect: 'follow',\r\n                        referrer: 'no-referrer',\r\n                        body: JSON.stringify(user)\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(newUser => {\r\n                            this.props.loginUser(newUser);\r\n                        });\r\n                } else {\r\n                    if (usersArr[0].isMaster === true) {\r\n                        fetch(BACKEND.masters.vkuid + usersArr[0].vkUid)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                if (master.length === 0) {\r\n                                    console.log('Мастер удален');\r\n                                    return null\r\n                                } else {\r\n                                    this.props.setMaster(master[0]);\r\n                                }\r\n                            });\r\n                    }\r\n                    this.props.loginUser(usersArr[0]);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.openSnack('Отсутствует соединение с базой пользователей.');\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n\r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openAlert = (title, body, action) => {\r\n        this.setState({\r\n            popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={() => this.setState({popout: null})}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                this.props.setMaster(newMaster);\r\n                this.setState({activeViewLk: 'lk'});\r\n                this.openSnack('Ваш профиль отправлен на проверку. Не забудьте добавить фотографии в портфолио - так, шансы получить заказ намного выше.');\r\n                this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack('Ошибка при регистрации');\r\n            this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    sendMessage = (message) => {\r\n        let token = BACKEND.keyGroup;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.user.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => console.log(result))\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({activeMaster: master, activeMasterId: master._id, activePanelMasters: panelName});\r\n    };\r\n\r\n    openMasterOnId = (masterId) => {\r\n        this.setState({activePanelFindModels: 'masterInfo', activeMasterId: masterId});\r\n    };\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n        console.log(masterId);\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        this.setState({activeMasterId: masterId, activePanelLk: 'masterInfo'});\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        patchData(BACKEND.users+'/'+user._id, user);\r\n        this.setActiveModal(null)\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"auth\" activePanel=\"auth\">\r\n                        <Panel id=\"auth\">\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                                header=\"Выполняется вход...\"\r\n                            >Это может занять несколько секунд\r\n                                {this.state.snackbar}\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n      } if (this.state.validationParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Все, беда. Кто-то лезет в параметры запуска :(\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" activePanel={this.state.activePanelNews}>\r\n                        <Panel id=\"news\">\r\n                            <PanelHeader>Новости</PanelHeader>\r\n                            <News\r\n                                openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                openModer={() => this.setState({activePanelNews: 'moder'})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"moder\">\r\n                            <Head\r\n                                title={'Модерация'}\r\n                                goBack={() => this.setState({activePanelNews: 'news'})}\r\n                            />\r\n                            <Moder\r\n                                goBack={() => this.setState({activePanelNews: 'news'})}\r\n                                user={this.state.user}\r\n                                openMaster={(id) => this.setState({moderId: id, activePanelNews: 'masterInfo'})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head\r\n                                title={'О мастере'}\r\n                                goBack={() => this.setState({activePanelNews: 'moder'})}\r\n                            />\r\n                            <MasterCard\r\n                                openPhoto={() => 'null'}\r\n                                openComments={() => 'null'}\r\n                                activeMasterId={this.state.moderId}\r\n                                setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n                    <Root\r\n                        id=\"masters\"\r\n                        activeView={this.state.activeViewMasters}\r\n                        // modal={\r\n                        //     // <Modal\r\n                        //     //     header={'Выбор города'}\r\n                        //     //     activeModal={this.state.activeModal}\r\n                        //     //     pageId={'cityList'}\r\n                        //     //     onClose={()=>this.setActiveModal(null)}\r\n                        //     //     content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                        //     //     leftButton={false}\r\n                        //     //     rightButton={false}\r\n                        //     // />\r\n                        // }\r\n                    >\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <Masters\r\n                                    changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    changeCategory={()=>this.setState({activeViewMasters: 'masterCat'})}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'mastersList'})}/>\r\n                                <CityList changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelMasters: 'mastersList'})\r\n                                }}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head\r\n                                    title={'О мастере'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                />\r\n                                <MasterCard\r\n                                    openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openComments={() => this.setState({activePanelMasters: 'masterComments'})}\r\n                                    activeMasterId={this.state.activeMasterId}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.setState({activeViewMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.state.activePanelFindModels}\r\n                        // modal={\r\n                        //     <Modal\r\n                        //         header={'Выбор города'}\r\n                        //         activeModal={this.state.activeModal}\r\n                        //         pageId={'cityList'}\r\n                        //         onClose={()=>this.setActiveModal(null)}\r\n                        //         content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                        //         leftButton={false}\r\n                        //         rightButton={false}\r\n                        //     />\r\n                        // }\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ишу модель</PanelHeader>\r\n                            <FindModel\r\n                                openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='changeCity'>\r\n                            <Head title={'Выбор города'}\r\n                                  goBack={() => this.setState({activePanelFindModels: 'findmodel'})}/>\r\n                            <CityList changeCity={(city) => {\r\n                                this.changeTargetCity(city);\r\n                                this.setState({activePanelFindModels: 'findmodel'})\r\n                            }}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head\r\n                                title={'О мастере'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                            />\r\n                            <MasterCard\r\n                                openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                activeMasterId={this.state.activeMasterId}\r\n                                openComments={() => this.setState({activePanelFindModels: 'masterComments'})}\r\n                                setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterComments\r\n                                activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout} modal={\r\n                            <Setting\r\n                                snackbar={(message) => this.openSnack(message)}\r\n                                modalBack={this.modalBack}\r\n                                activeModal={this.state.activeModal}\r\n                                changeModal={(name) => this.setActiveModal(name)}\r\n                            />\r\n                        }>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнерам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.setActiveModal('setting')}\r\n                                            openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                            openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                            openMasterPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head\r\n                                    title={'Избранное'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Favourite\r\n                                    user={user}\r\n                                    openFavMasterOnId={this.openFavMasterOnId}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head\r\n                                    title={'О мастере'}\r\n                                    goBack={() => this.setState({activePanelLk: 'favourite'})}\r\n                                />\r\n                                <MasterCard\r\n                                    openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                    user={user}\r\n                                    activeMasterId={this.state.activeMasterId}\r\n                                    openComments={() => this.setState({activePanelLk: 'masterComments'})}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Portfolio user={user}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <MasterComments user={user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head title={'Мастер ищет модель'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <FindModelMaster user={user} popout={this.openAlert}/>\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id='registration'>\r\n                            <Panel id='registration'>\r\n                                <Head title={'Регистрация'} goBack={() => this.setState({activeViewLk: 'lk'})}/>\r\n                                <Invite\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                    openRules={() => this.setState({activePanelReg: 'rules'})}\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='rules'>\r\n                                <Head title={'Соглашение'} goBack={() => this.setState({activePanelReg: 'registration'})}/>\r\n                                <Rules />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelReg: 'registration'})}/>\r\n                                <CityList changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelReg: 'registration'})\r\n                                }}/>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","import React from 'react';\r\nimport {Panel, View, Cell} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Warn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <View>\r\n                <Panel>\r\n                    <Cell>Доступ запрещен</Cell>\r\n                </Panel>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Warn;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Warn from './Warn';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nconst qs = require('query-string');\r\nconst crypto = require('crypto');\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}><App linkParams={linkParams} params={params} /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}