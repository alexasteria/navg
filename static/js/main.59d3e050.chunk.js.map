{"version":3,"sources":["js/func/func.js","js/masters/panelMasterList.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/idea/idea.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","App.js","serviceWorker.js","index.js"],"names":["BACK_LINK","BACKEND","users","masters","all","onID","category","vkuid","favs","new","master","user","findModel","onMasterId","onCity","comment","MasterList","props","state","mastersList","title","isLoad","console","log","this","fetch","then","res","json","setState","setTitle","length","id","count","undefined","Array","isArray","style","display","alignItems","flexDirection","size","marginTop","multiline","level","map","key","vkUid","expandable","photo","description","active","label","bottomContent","padding","fontSize","color","before","src","avatarLink","onClick","openPanelMaster","firstname","lastname","renderMaster","React","Component","MastersCard","loadFavs","activeMaster","_id","favsArr","countFavs","fav","userId","isFavourite","status","changeVisible","index","checkFavs","userVkUid","masterId","masterVkUid","postData","openSnackAvatar","activeMasterId","priceList","text","snackbar","layout","onClose","after","url","data","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","type","openComments","fill","photos","slideWidth","align","height","backgroundImage","backgroundSize","openPhoto","item","price","indicator","photoArr","images","bridge","send","start_index","image","openShowImages","separator","gridPhoto","sendComment","isCommended","e","alert","message","handleChange","event","target","name","value","comments","author","date","Date","now","commentsArr","countComments","arr","push","top","placeholder","onChange","commentList","validate","Idea","activeTab","vertical","theme","selected","activePanel","News","icon","openStory","wide","Invite","handleCheck","mass","countMass","filter","checkLicense","hairVisible","manicureVisible","pedicureVisible","eyelashesVisible","eyebrowsVisible","shugaringVisible","cosmeticVisible","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","bind","prevProps","prevState","snapshot","about","sex","city","country","onSubmit","handleSubmit","bottom","subcategory","asideContent","checked","closeReg","Lk","connection","tmpUser","isMaster","isUser","mastersArr","openReg","margin","openFavourite","openMasterPhoto","openFindModel","openSetting","uploadPhoto","selectedFile","document","getElementById","files","uploadUrl","fetchJsonp","server","photos_list","hash","token","result","catch","ex","error","getUploadServer","upload_url","getToken","access_token","photoFile","showProfile","onRemove","slice","patchData","openSnack","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","tooltip","popout","loadCount","backgroundColor","width","removable","require","stretched","marginRight","Favourite","loadFavsMasters","isLoaded","openFavMasterOnId","FindModel","findList","findArr","find","openMasterOnId","FindModelMaster","save","loadFind","activeFind","osname","platform","App","verifiedUser","usersArr","openAlert","action","actionsLayout","actions","autoclose","closeAlert","activeViewLk","change","story","view","panel","panelName","activePanelMasters","openMaster","activeViewMasters","activeStory","activePanelFindModels","activePanelLk","storyName","targetCategory","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","categories","onStoryChange","subscribe","detail","first_name","last_name","photo_200","currentTarget","dataset","tabbar","data-story","activeView","left","IOS","addon","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59d3e050.chunk.js","sourcesContent":["//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nconst BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    }\r\n};\r\n\r\nexport {BACKEND};","import React from 'react';\r\nimport {Spinner, Separator, Avatar, Button, Cell, Div, Group, List, UsersStack} from \"@vkontakte/vkui\";\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MasterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: null,\r\n            title: '',\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Страница загрузилась');\r\n            if(this.state.category === '') {\r\n                fetch(BACKEND.masters.all)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                            this.setState({isLoad: true});\r\n                    });\r\n            } else {\r\n                fetch(BACKEND.masters.category+this.state.category.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                            this.setState({isLoad: true});\r\n                    });\r\n            }\r\n        }\r\n\r\n    setTitle(count) {\r\n        if (count===undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n    renderMaster() {\r\n        if(Array.isArray(this.state.mastersList)) {\r\n            if(this.state.isLoad === false) {\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (this.state.mastersList.length === 0) {\r\n                    return (\r\n                        <List>\r\n                            <Cell multiline>Увы, сейчас у нас нет данных о специалистах данного профиля в вашем городе.\r\n                                Помогите нам их найти :) Поделитесь ссылкой на наше приложение нажав кнопку</Cell>\r\n                            <Cell><Button size=\"xl\" level=\"commerce\">Поделиться</Button></Cell>\r\n                        </List>\r\n                    );\r\n                } else {\r\n                    return this.state.mastersList.map(master => {\r\n                        return (\r\n                            <Group key={master.vkUid}>\r\n                                <Cell expandable\r\n                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                      description={\r\n                                          master.category.map(category => {\r\n                                              if(category.active === true) {\r\n                                                  return category.label+\" \"\r\n                                              }\r\n                                          })\r\n                                      }\r\n                                      bottomContent={\r\n                                          <Div style={{padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>Рейтинг - 4.7 (На основе 23 отзывов)</Div>\r\n                                      }\r\n                                      before={<Avatar src={master.avatarLink} size={70}/>}\r\n                                      size=\"l\"\r\n                                      onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                                >{master.firstname} {master.lastname}\r\n                                </Cell>\r\n                            </Group>\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell>{this.state.title}</Cell>\r\n                    {this.renderMaster()}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MasterList","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner\r\n} from \"@vkontakte/vkui\"\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {\r\n                priceList: []\r\n            },\r\n            favsArr: [\r\n                {vkUid:12523452}\r\n            ],\r\n            isFavourite: {\r\n                status: false\r\n            },\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({activeMaster: this.props.activeMaster});\r\n        this.loadFavs();\r\n    }\r\n\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    //action=\"Отменить\"\r\n                    //onActionClick={() => this.setState({ text: 'Сообщение Ивану было отменено.' })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        //console.log(BACKEND.favs.master+this.props.activeMaster._id);\r\n        fetch(BACKEND.favs.master+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                this.setState({favsArr: favsArr});\r\n                let count = favsArr.length;\r\n                this.setState({countFavs: count});\r\n                this.setState({isLoad: true})\r\n                this.state.favsArr.map(fav => {\r\n                    if (fav.userId === this.props.user._id) {\r\n                        this.setState({isFavourite: {status: true, id: fav._id}});\r\n                        //console.log('У тебя в избранном');\r\n                    } else {\r\n                        this.setState({isFavourite: {status: false}})\r\n                        //console.log('Нет в избранном');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    }\r\n    checkFavs = () => {\r\n        //console.log('click');\r\n        if (this.state.isFavourite.status === false) {\r\n            //console.log('post');\r\n            let fav = {\r\n                userId: this.props.user._id,\r\n                userVkUid: this.props.user.vkUid,\r\n                masterId: this.state.activeMaster._id,\r\n                masterVkUid: this.state.activeMaster.vkUid\r\n            };\r\n            this.postData(BACKEND.favs.new, fav, 'POST');\r\n            this.setState({isFavourite: {status: true}});\r\n            this.setState({countFavs: this.state.countFavs+1});\r\n            this.openSnackAvatar('Вы подписались на обновления мастера. Отменить подписку можно во вкладке Кабинет, в разделе Избранное.', this.state.activeMaster.avatarLink);\r\n        }\r\n\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={this.state.activeMaster.type}\r\n                            bottomContent={<Div style={{display: '-webkit-inline-box'}}>\r\n                                <Icon16Like/><Icon16Like/><Icon16Like/><Icon16Like/><Icon16LikeOutline/>\r\n                            </Div>/*<Button>В избранное</Button>*/}\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                    </Group>\r\n                    <Group title=\"\">\r\n                        <List>\r\n                            <Cell expandable onClick={() => this.props.openComments()}>Отзывы</Cell>\r\n                            {\r\n                                this.state.isFavourite.status === false &&\r\n                                <Cell\r\n                                    onClick={this.checkFavs}\r\n                                    before={<Icon16LikeOutline fill=\"red\"/>}\r\n                                    description=\"для получения быстрого доступа к мастеру\"\r\n                                >\r\n                                    Подписаться\r\n                                </Cell>\r\n\r\n                            }\r\n                            {\r\n                                this.state.isFavourite.status &&\r\n                                <Cell\r\n                                    before={<Icon16Like fill=\"var(--blue)\"/>}\r\n                                >Вы подписаны на мастера</Cell>\r\n\r\n                            }\r\n                            {<UsersStack\r\n                                photos={[\r\n                                    'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n                                    'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n                                ]}\r\n                                size=\"s\"\r\n                            >Настя и Jean подписаны на мастера</UsersStack>}\r\n                            <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                        </List>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        <Gallery\r\n                            slideWidth=\"90%\"\r\n                            align=\"center\"\r\n                            style={{height: 250}}\r\n                        >\r\n                            <div style={{\r\n                                backgroundImage: 'url(https://i.pinimg.com/474x/9a/57/f0/9a57f0e84191e278d840a5536ebab34c.jpg)',\r\n                                backgroundSize: 'cover'\r\n                            }}/>\r\n                            <div style={{\r\n                                backgroundImage: 'url(https://avatars.mds.yandex.net/get-zen_doc/1554513/pub_5d77a5dd74f1bc00ad79c9f1_5d77a5f198930900ae483c74/scale_1200)',\r\n                                backgroundSize: 'cover'\r\n                            }}/>\r\n                            <div style={{\r\n                                backgroundImage: 'url(https://womans.ws/wp-content/uploads/2019/10/1523527373_44-1068x1068.jpg)',\r\n                                backgroundSize: 'cover'\r\n                            }}/>\r\n                        </Gallery>\r\n                        <Cell expandable onClick={() => this.props.openPhoto()}>Посмотреть все работы</Cell>\r\n                    </Group>\r\n                    <Group>\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <Cell\r\n                                            description={'От ' + item.price + \" рублей\"}\r\n                                            expandable\r\n                                            indicator=\"\">\r\n                                            {this.state.activeMaster.priceList[index].title}\r\n                                        </Cell>\r\n                                        {\r\n                                            this.state[index] &&\r\n                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                  multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                        }\r\n                                        <Separator></Separator>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group>\r\n                        <Cell multiline title=\"Информация\">\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Gallery, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n            .then(response => response.json())\r\n            .then(photoArr => {\r\n                const images = photoArr.map(photo => {\r\n                    return photo.url\r\n                });\r\n                //console.log(images);\r\n                this.setState({images: images});\r\n                this.setState({isLoad: true});\r\n            })\r\n        console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        return (\r\n            <CardGrid>\r\n                {\r\n                    this.state.images.map((image, index) => {\r\n                        //console.log(image, index);\r\n                        return (\r\n                            <Card\r\n                                size=\"s\"\r\n                                mode=\"shadow\"\r\n                                key={index}\r\n                                onClick={() => this.openShowImages(this.state.images, index)}\r\n                            >\r\n                                <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                            </Card>\r\n                        )\r\n                    })\r\n                }\r\n            </ CardGrid>\r\n        )\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, Avatar, Separator, CellButton, Textarea, Spinner} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: {\r\n                id: '1',\r\n                body: 'ТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТест',\r\n                author: 'Тест Тестович',\r\n                date: Date.now()\r\n            },\r\n            body: '',\r\n            commentsArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log('comments ',  this.props);\r\n        fetch(BACKEND.comment.onMasterId+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(commentsArr => {\r\n                commentsArr.map(comment => {\r\n                    if (comment.user.userId === this.props.user._id) {\r\n                        this.setState({isCommended: true})\r\n                    }\r\n                });\r\n                this.setState({commentsArr: commentsArr})\r\n                let count = commentsArr.length;\r\n                this.setState({countComments: count})\r\n                this.setState({isLoad: true})\r\n            });\r\n\r\n    }\r\n    sendComment = () => {\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                body: this.state.body\r\n            };\r\n            try {\r\n                this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n                this.setState({isCommended: true});\r\n            } catch (e) {\r\n                alert(e);\r\n                console.log(e.message);\r\n            }\r\n    }\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id}>\r\n                        <Cell\r\n                            description={comment.date}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        //console.log(this.props.activeMaster.vkUid, this.props.user.vkUid);\r\n        if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n            return (\r\n                <Cell multiline>Нельзя оставлять комментарий на самого себя</Cell>\r\n            )\r\n        }\r\n        else if (this.state.isCommended === true) {\r\n            return (\r\n                <Cell multiline>Вы уже оставляли комментарий об этом мастере</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Textarea\r\n                        name={'body'}\r\n                        value={this.state.body}\r\n                        top=\"Добавление отзыва\"\r\n                        placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    {this.validate()}\r\n\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {Group, HorizontalScroll, FixedLayout, TabsItem, Tabs, Panel, PanelHeader, Cell} from \"@vkontakte/vkui\"\r\n\r\n\r\nclass Idea extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: 'all',\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Panel id=\"idea\">\r\n                <PanelHeader>Случайная идея</PanelHeader>\r\n                <FixedLayout vertical=\"top\">\r\n                    <Tabs theme=\"header\" type=\"buttons\">\r\n                        <HorizontalScroll>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'all' })}\r\n                                selected={this.state.activeTab === 'all'}\r\n                            >\r\n                                Ногти\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'users' })}\r\n                                selected={this.state.activeTab === 'users'}\r\n                            >\r\n                                Информация о разделе\r\n                            </TabsItem>\r\n                        </HorizontalScroll>\r\n                    </Tabs>\r\n                </FixedLayout>\r\n                <Group>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Этот раздел</Cell>\r\n                </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Idea;","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Group>\r\n                    <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n                        Привет, {this.props.user.firstname}!\r\n                    </Placeholder>\r\n                    <Cell multiline>\r\n                        Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по любой области косметологии или предложить свои услуги.\r\n                    </Cell>\r\n                    <Cell\r\n                        onClick={()=>this.props.openStory('masters')}\r\n                        before={<Icon24UserIncoming />}\r\n                        expandable\r\n                    >Я клиент - ищу мастера</Cell>\r\n                    <Cell\r\n                        onClick={()=>this.props.openStory('lk')}\r\n                        before={<Icon24UserOutgoing />}\r\n                        expandable\r\n                    >Я мастер - ищу клиентов</Cell>\r\n                </Group>\r\n                <Separator wide />\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n//import connect from \"@vkontakte/vk-connect\";\r\n//import VKConnect from '@vkontakte/vkui-connect-mock';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar} from \"@vkontakte/vkui\"\r\n//import {BACKEND} from \"../func/func\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkLicense: false,\r\n            hairVisible: false,\r\n            manicureVisible: false,\r\n            pedicureVisible: false,\r\n            eyelashesVisible: false,\r\n            eyebrowsVisible: false,\r\n            shugaringVisible: false,\r\n            cosmeticVisible: false,\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            activeMaster: {\r\n\r\n            },\r\n            manicureStatus: [\r\n                    {active: false, id:\"5e3756b37612461064809b28\", label: \"Наращивание\"},\r\n                    {active: false, id:\"5e3757907612461064809b29\", label: \"Покрытие гелем\"},\r\n                    {active: false, id:\"5e3757977612461064809b2a\", label: \"Маникюр комбинированый\"},\r\n                    {active: false, id:\"5e3757a37612461064809b2b\", label: \"Маникюр обрезной\"},\r\n                    {active: false, id:\"5e3757a97612461064809b2c\", label: \"Аппаратный маникюр\"},\r\n                    {active: false, id:\"5e3757b17612461064809b2d\", label: \"Укрепление ногтей\"}\r\n                ],\r\n            pedicureStatus: [\r\n                    {active: false, id:\"5e3757f67612461064809b33\", label: \"Классический\"},\r\n                    {active: false, id:\"5e3757fb7612461064809b34\", label: \"Аппаратный\"},\r\n                    {active: false, id:\"5e3757ff7612461064809b35\", label: \"Экспресс\"},\r\n                    {active: false, id:\"5e3758037612461064809b36\", label: \"Комбинированный\"},\r\n                    {active: false, id:\"5e3758087612461064809b37\", label: \"Покрытие\"}\r\n                ],\r\n            eyelashesStatus: [\r\n                    {active: false, id:\"5e3758147612461064809b38\", label: \"Наращивание\"},\r\n                    {active: false, id:\"5e3758197612461064809b39\", label: \"Ламинирование\"},\r\n                    {active: false, id:\"5e37581e7612461064809b3a\", label: \"Кератиновая завивка\"},\r\n                    {active: false, id:\"5e3758267612461064809b3b\", label: \"Окрашивание\"},\r\n                    {active: false, id:\"5e37582b7612461064809b3c\", label: \"Биозавивка\"}\r\n                ],\r\n            eyebrowsStatus: [\r\n                    {active: false, id:\"5e3758347612461064809b3d\", label: \"Перманентный макияж\"},\r\n                    {active: false, id:\"5e37583b7612461064809b3e\", label: \"Микроблейдинг\"},\r\n                    {active: false, id:\"5e3758407612461064809b3f\", label: \"Нанонапыление\"},\r\n                    {active: false, id:\"5e3758467612461064809b40\", label: \"Долговременная укладка\"},\r\n                    {active: false, id:\"5e37584c7612461064809b41\", label: \"Окрашивание\"}\r\n                ],\r\n            shugaringStatus: [\r\n                    {active: false, id:\"5e37585a7612461064809b42\", label: \"Подмышечные впадины\"},\r\n                    {active: false, id:\"5e3758607612461064809b43\", label: \"Бикини\"},\r\n                    {active: false, id:\"5e3758647612461064809b44\", label: \"Руки\"},\r\n                    {active: false, id:\"5e3758697612461064809b45\", label: \"Ноги\"},\r\n                    {active: false, id:\"5e37586e7612461064809b46\", label: \"Белая линия живота\"}\r\n                ],\r\n            hairStatus: [\r\n                    {active: false, id:\"5e3757d07612461064809b2e\", label: \"Ламинирование\"},\r\n                    {active: false, id:\"5e3757d87612461064809b2f\", label: \"Окрашивание\"},\r\n                    {active: false, id:\"5e3757dd7612461064809b30\", label: \"Мелирование\"},\r\n                    {active: false, id:\"5e3757e17612461064809b31\", label: \"Ботокс волос\"},\r\n                    {active: false, id:\"5e3757e97612461064809b32\", label: \"Стрижка\"}\r\n                ],\r\n            cosmeticStatus: [\r\n                    {active: false, id:\"5e3758767612461064809b47\", label: \"Макияж\"},\r\n                    {active: false, id:\"5e37587a7612461064809b48\", label: \"Пилинг\"},\r\n                    {active: false, id:\"5e37587d7612461064809b49\", label: \"Чистка\"},\r\n                    {active: false, id:\"5e3758827612461064809b4a\", label: \"Массаж лица\"},\r\n                ],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.type !== this.state.type || prevState.about !== this.state.about || prevState.category !== this.state.category) {\r\n            let user = this.state.activeMaster;\r\n            user.type = this.state.type;\r\n            user.description = this.state.about;\r\n            user.category = [\r\n                {id: '5e37537a58b85c13bcffb8b4', active: this.state.count.manicureStatus > 0, label:'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', active: this.state.count.pedicureStatus > 0, label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', active: this.state.count.eyelashesStatus > 0, label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', active: this.state.count.eyebrowsStatus > 0, label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', active: this.state.count.shugaringStatus > 0, label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', active: this.state.count.hairStatus > 0, label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', active: this.state.count.cosmeticStatus > 0, label: 'Косметология'}\r\n            ];\r\n            this.setState({activeMaster: user});\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let master = this.state.activeMaster;\r\n        console.log('user пришел из props', this.props.user);\r\n        master.firstname = this.props.user.firstname;\r\n        master.lastname =this.props.user.lastname;\r\n        master.vkUid =this.props.user.vkUid;\r\n        master.avatarLink =this.props.user.avatarLink;\r\n        master.sex =this.props.user.sex;\r\n        master.city =this.props.user.city;\r\n        master.country =this.props.user.country;\r\n        master.manicureStatus = this.state.manicureStatus;\r\n        master.pedicureStatus = this.state.pedicureStatus;\r\n        master.eyelashesStatus = this.state.eyelashesStatus;\r\n        master.eyebrowsStatus = this.state.eyebrowsStatus;\r\n        master.shugaringStatus = this.state.shugaringStatus;\r\n        master.hairStatus = this.state.hairStatus;\r\n        master.cosmeticStatus = this.state.cosmeticStatus;\r\n        console.log('после обработки', master);\r\n        this.setState({activeMaster: master});\r\n\r\n    }\r\n    handleCheck = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let mass = this.state.activeMaster[name];\r\n        const index = target.id;\r\n        mass[index].active = !mass[index].active;\r\n        this.setState({ [name]: mass });\r\n        let countMass = this.state.activeMaster[name].filter(\r\n            function(item){\r\n                //console.log(item);\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n        let count = this.state.count;\r\n        count[name] = countMass.length;\r\n        this.setState({ count: count });\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                                bottomContent={'Bottom content'}\r\n                            >\r\n                                {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                            </Cell>\r\n                            <Textarea\r\n                                name={'about'}\r\n                                status={this.state.about ? 'valid' : 'error'}\r\n                                bottom={this.state.about ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.about}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                                <Cell expandable name={'manicureVisible'}\r\n                                      onClick={() => this.setState({manicureVisible: !this.state.manicureVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.manicureStatus}>Маникюр</Cell>\r\n                                {this.state.manicureVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.manicureStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'manicureStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.manicureStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.manicureStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'pedicureVisible'}\r\n                                      onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.pedicureStatus}>Педикюр</Cell>\r\n                                {this.state.pedicureVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.pedicureStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'pedicureStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.pedicureStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.pedicureStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'eyelashesVisible'}\r\n                                      onClick={() => this.setState({eyelashesVisible: !this.state.eyelashesVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.eyelashesStatus}>Ресницы</Cell>\r\n                                {this.state.eyelashesVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.eyelashesStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'eyelashesStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.eyelashesStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.eyelashesStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'eyebrowsVisible'}\r\n                                      onClick={() => this.setState({eyebrowsVisible: !this.state.eyebrowsVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.eyebrowsStatus}>Брови</Cell>\r\n                                {this.state.eyebrowsVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.eyebrowsStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'eyebrowsStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.eyebrowsStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.eyebrowsStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'shugaringVisible'}\r\n                                      onClick={() => this.setState({shugaringVisible: !this.state.shugaringVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.shugaringStatus}>Шугаринг</Cell>\r\n                                {this.state.shugaringVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.shugaringStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'shugaringStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.shugaringStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.shugaringStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'hairVisible'}\r\n                                      onClick={() => this.setState({hairVisible: !this.state.hairVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.hairStatus}>Уход за волосами</Cell>\r\n                                {this.state.hairVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.hairStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'hairStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.hairStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.hairStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'hairVisible'}\r\n                                      onClick={() => this.setState({cosmeticVisible: !this.state.cosmeticVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.cosmeticStatus}>Косметология</Cell>\r\n                                {this.state.cosmeticVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.cosmeticStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'cosmeticStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.cosmeticStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.cosmeticStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            {this.state.checkLicense && this.state.about && this.state.type &&\r\n                            <Button size=\"xl\" onClick={() => this.props.closeReg(this.state.activeMaster)}>Зарегистрироваться как мастер</Button>\r\n                            }\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.user);\r\n        //this.verifiedUser(this.props.user);\r\n    }\r\n    /*verifiedUser = (user) => {\r\n        console.log(BACKEND.users+'/vkuid/'+user.vkUid);\r\n        fetch(BACKEND.users+'/vkuid/'+user.vkUid)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0){\r\n                    console.log('Пользователь ', user, ' не найден');\r\n                    this.postData(BACKEND.users, user); //регитрируем\r\n                } else {\r\n                    console.log('Пришло при авторизации', usersArr[0]);\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };*/\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                {this.state.user.isMaster === false &&\r\n                    <CellButton\r\n                        onClick={this.props.openReg}\r\n                    >Зарегистрироваться как мастер</CellButton>\r\n                }\r\n                    <Group title=\"Основное\">\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                            user={this.state.user}\r\n                            indicator={this.state.user.city.title}\r\n                        >Выбранный город</Cell>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon28Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Settings />}\r\n                    >Настройки</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button} from \"@vkontakte/vkui\"\r\nimport fetchJsonp from 'fetch-jsonp'\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import VKConnect from '@vkontakte/vkui-connect-mock';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: ''\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n            .then(response => response.json())\r\n            .then(photoArr => {\r\n                const images = photoArr.map(photo => {\r\n                    return photo.url\r\n                });\r\n                //console.log(images);\r\n                this.setState({images: images});\r\n                this.setState({isLoad: true});\r\n            })\r\n        console.log(this.props)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        console.log(selectedFile);\r\n        let url = this.state.uploadUrl;\r\n        console.log(url);\r\n        fetchJsonp(url, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: selectedFile\r\n        })\r\n            .then(response => {\r\n                console.log('ответ при отправке фото', response);\r\n                fetchJsonp('https://api.vk.com/method/photos.save?album_id=269622026&group_id=193179174&server='+response.server+'&photos_list='+response.photos_list+'&hash='+response.hash+'&access_token='+this.state.token+'&v=5.103')\r\n                    .then(function(response) {\r\n                        return response.json()\r\n                    })\r\n                    .then(result => {\r\n                        console.log(result);\r\n                        //this.setState({uploadUrl: result.response.upload_url});\r\n                    })\r\n                    .catch(function(ex) {\r\n                        console.log('parsing failed', ex)\r\n                    })\r\n                // console.log('ответ при отправке фото', response);\r\n                // fetch('https://api.vk.com/method/photos.save?album_id=269622026&group_id=193179174&server='+response.server+'&photos_list='+response.photos_list+'&hash='+response.hash+'&access_token='+this.state.token+'&v=5.103')\r\n                //     .then(response => response.json())\r\n                //     .then(response => {\r\n                //         console.log(response)\r\n                //     })\r\n                //     .catch(error => console.log(error))\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    getUploadServer = (token) => {\r\n        fetchJsonp('https://api.vk.com/method/photos.getUploadServer?album_id=269622026&group_id=193179174&access_token='+token+'&v=5.103')\r\n            .then(function(response) {\r\n                return response.json()\r\n            })\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url});\r\n            })\r\n            .catch(function(ex) {\r\n            console.log('parsing failed', ex)\r\n        })\r\n    }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                console.log('Токен '+data.access_token);\r\n                this.setState({token: data.access_token})\r\n                this.getUploadServer(data.access_token)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        return (\r\n            <CardGrid>\r\n                {\r\n                    this.state.images.map((image, index) => {\r\n                        //console.log(image, index);\r\n                        return (\r\n                            <Card\r\n                                size=\"s\"\r\n                                mode=\"shadow\"\r\n                                key={index}\r\n                                onClick={() => this.openShowImages(this.state.images, index)}\r\n                            >\r\n                                <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                            </Card>\r\n                        )\r\n                    })\r\n                }\r\n            </ CardGrid>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"\">\r\n                        <FormLayout>\r\n                            <File\r\n                                top=\"Добавьте фото в портфолио\"\r\n                                before={<Icon24Camera />}\r\n                                size=\"l\"\r\n                                onChange={this.uploadPhoto}\r\n                                id=\"input\"\r\n                            >\r\n                                Открыть галерею\r\n                            </File>\r\n                        </FormLayout>\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    List, Button, CellButton, Input, Spinner,Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            activeMaster: {\r\n                priceList: [],\r\n                showProfile: false\r\n            },\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            hairVisible: false,\r\n            manicureVisible: false,\r\n            pedicureVisible: false,\r\n            eyelashesVisible: false,\r\n            eyebrowsVisible: false,\r\n            shugaringVisible: false,\r\n            cosmeticVisible: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0]})\r\n                this.loadCount()\r\n                this.setState({about: activeMaster[0].description})\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    onChange(event) {\r\n        //console.log(event.target.value)\r\n    }\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        //console.log(activeMaster);\r\n        activeMaster.description = this.state.about;\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.openSnack(\"Изменения сохранены\");\r\n                //this.props.popout();\r\n                console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    showProfile = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        //console.log('Изменено с ', activeMaster[name], ' на ', !activeMaster[name]);\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    }\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    }\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        //console.log(this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    loadCount() {\r\n        const arrCategory = ['manicureStatus', 'pedicureStatus', 'eyelashesStatus',\r\n            'eyebrowsStatus', 'shugaringStatus', 'hairStatus'];\r\n        arrCategory.map(category => {\r\n            let countMass = this.state.activeMaster[category].filter(\r\n                item => item.active === true\r\n            );\r\n            let count = this.state.count;\r\n            count[category] = countMass.length;\r\n            this.setState({count: count});\r\n        });\r\n    }\r\n\r\n    handleCheck = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        //const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        let mass = this.state.activeMaster[name];\r\n        const index = target.id;\r\n        //console.log(mass);\r\n        mass[index].active = !mass[index].active;\r\n        this.setState({[name]: mass});\r\n        let countMass = this.state.activeMaster[name].filter(\r\n            function (item) {\r\n                //console.log(item);\r\n                if (item.active === true) {\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n        let count = this.state.count;\r\n        count[name] = countMass.length;\r\n        this.setState({count: count});\r\n        //console.log(this.state.activeMaster);\r\n    };\r\n\r\n    render() {\r\n        //console.log(this.state);\r\n        if (!this.state.activeMaster._id) {\r\n            //console.log(this.state.activeMaster);\r\n            return (<div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                <Spinner size=\"large\" style={{marginTop: 120}}/>\r\n            </div>)\r\n        } else {\r\n            //console.log(this.state.activeMaster);\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={'Показывать в поиске'}\r\n                        before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                    </Cell>\r\n                    <Group>\r\n                        <Cell\r\n                            asideContent={<Switch\r\n                                name={'showProfile'}\r\n                                onChange={this.showProfile}\r\n                                checked={this.state.activeMaster.showProfile}/>}>\r\n                            Показывать мой профиль в поиске\r\n                        </Cell>\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                    {this.state.activeMaster.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры</Cell>\r\n                    }\r\n                    {this.state.activeMaster.priceList.map((item, index) => (\r\n                        <List key={index}>\r\n                            <Cell\r\n                                key={item}\r\n                                multiline\r\n                                //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                removable\r\n                                onRemove={() => {\r\n                                    this.onRemove(index)\r\n                                }}>\r\n                                <Cell\r\n                                    description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                <Cell description=\"Краткое описание процедуры\"\r\n                                      multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                <Cell\r\n                                    description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                            </Cell>\r\n                        </List>\r\n                    ))}\r\n                    {this.state.add &&\r\n                    <Div>\r\n                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdTitle\"\r\n                                type=\"text\"\r\n                                value={this.state.newProdTitle}\r\n                                placeholder={'Введите название'}\r\n                                onChange={this.handleChange}/>\r\n                            <Textarea\r\n                                require\r\n                                name=\"newProdBody\"\r\n                                value={this.state.newProdBody}\r\n                                placeholder={'Укажите описание'}\r\n                                onChange={this.handleChange}/>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdPrice\"\r\n                                type=\"number\" value={this.state.newProdPrice}\r\n                                placeholder={'Укажите цену'}\r\n                                onChange={this.handleChange}/>\r\n                        </Cell>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                        </Div>\r\n                    </Div>\r\n                    }\r\n                    </Group>\r\n                    <Group>\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Textarea\r\n                                name={'about'}\r\n                                status={this.state.about ? 'valid' : 'error'}\r\n                                bottom={this.state.about ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.about}\r\n                                onChange={this.handleChange}/>\r\n                        </ FormLayout>\r\n                        <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                         bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                         id={'category'}>\r\n                            <Cell expandable name={'manicureVisible'}\r\n                                  onClick={() => this.setState({manicureVisible: !this.state.manicureVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.manicureStatus}>Маникюр</Cell>\r\n                            {this.state.manicureVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.manicureStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'manicureStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.manicureStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.manicureStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'pedicureVisible'}\r\n                                  onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.pedicureStatus}>Педикюр</Cell>\r\n                            {this.state.pedicureVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.pedicureStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'pedicureStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.pedicureStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.pedicureStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'eyelashesVisible'}\r\n                                  onClick={() => this.setState({eyelashesVisible: !this.state.eyelashesVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.eyelashesStatus}>Ресницы</Cell>\r\n                            {this.state.eyelashesVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.eyelashesStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'eyelashesStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.eyelashesStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.eyelashesStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'eyebrowsVisible'}\r\n                                  onClick={() => this.setState({eyebrowsVisible: !this.state.eyebrowsVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.eyebrowsStatus}>Брови</Cell>\r\n                            {this.state.eyebrowsVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.eyebrowsStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'eyebrowsStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.eyebrowsStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.eyebrowsStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'shugaringVisible'}\r\n                                  onClick={() => this.setState({shugaringVisible: !this.state.shugaringVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.shugaringStatus}>Шугаринг</Cell>\r\n                            {this.state.shugaringVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.shugaringStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'shugaringStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.shugaringStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.shugaringStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'hairVisible'}\r\n                                  onClick={() => this.setState({hairVisible: !this.state.hairVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.hairStatus}>Уход за волосами</Cell>\r\n                            {this.state.hairVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.hairStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'hairStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.hairStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.hairStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'hairVisible'}\r\n                                  onClick={() => this.setState({cosmeticVisible: !this.state.cosmeticVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.cosmeticStatus}>Косметология</Cell>\r\n                            {this.state.cosmeticVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.cosmeticStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'cosmeticStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.cosmeticStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.cosmeticStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                        </FormLayoutGroup>\r\n                        <Button size=\"xl\"\r\n                                onClick={() => this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)}>Сохранить\r\n                            изменения</Button>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Lk;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div, Separator, Cell, Avatar, Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadFavsMasters(this.props.user);\r\n    }\r\n\r\n    loadFavsMasters = (user) => {\r\n        //console.log(BACKEND.favs.user + user._id);\r\n        fetch(BACKEND.favs.user + user._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                //console.log(favsArr);\r\n                //this.setState({favsArr: favsArr});\r\n                if(favsArr.length === 0){\r\n                    this.setState({isLoaded: true});\r\n                } else {\r\n                    favsArr.map(fav => {\r\n                        fetch(BACKEND.masters.onID + fav.masterId)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                let mastersArr = this.state.mastersArr;\r\n                                mastersArr.push(master);\r\n                                this.setState({mastersArr: mastersArr});\r\n                            });\r\n                    });\r\n                    this.setState({isLoaded: true});\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.length === 0) {\r\n                return (\r\n                    <Group>\r\n                        <Cell multiline>\r\n                            Вы еще не добавили ни одного мастера в список избранного\r\n                        </Cell>\r\n                    </Group>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => (\r\n                        <Group key={master._id}>\r\n                            <Separator style={{margin: '12px 0'}}/>\r\n                            <Cell expandable\r\n                                  photo={master.avatarLink}\r\n                                  description={<Div style={{display: '-webkit-inline-box'}}>\r\n                                      <Icon16Like/><Icon16Like/><Icon16Like/><Icon16Like/><Icon16LikeOutline/>\r\n                                  </Div>\r\n                                  }\r\n                                  before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                            >{master.firstname} {master.lastname}\r\n                            </Cell>\r\n                        </Group>\r\n                    ))\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Cell, Div, Group, Separator, Spinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: [],\r\n            title: '',\r\n            master: {\r\n                vkUid: 9999999999,\r\n                avatarLink: \"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\",\r\n                firstname: 'Евгения',\r\n                lastname: 'Плюхова'\r\n            },\r\n            findArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(BACKEND.findModel.onCity+this.props.user.city.id);\r\n        fetch(BACKEND.findModel.onCity+this.props.user.city.id)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                console.log(find);\r\n                this.setState({findArr: find});\r\n                console.log('Найдено '+find.length);\r\n                this.setState({isLoad: true})\r\n            });\r\n    }\r\n\r\n    findList = () => {\r\n        if (this.state.findArr.length === 0) {\r\n            return (\r\n                <Cell multiline>В данный в вашем городе нет поиска моледей</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                this.state.findArr.map(find => {\r\n                    return (\r\n                        <Group key={find._id}>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            <Cell expandable\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                // description={'Место под категории'}\r\n                                  before={<Avatar src={find.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openMasterOnId(find.masterId)}\r\n                                  bottom=\"\"\r\n                            >{find.firstname} {find.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>\r\n                                {find.body}\r\n                            </Cell>\r\n                        </Group>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={this.props.user.city.title}>Выбранный город</Cell>\r\n                    {this.findList()}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            master: '',\r\n            body: '',\r\n            loadFind: '',\r\n            isLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({master: master[0]});\r\n                console.log(master[0]);\r\n                fetch(BACKEND.findModel.onMasterId+master[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        console.log(find);\r\n                        this.setState({findArr: find});\r\n                        console.log(find.length);\r\n                        this.setState({isLoaded: true});\r\n                        if (find.length > 0) {\r\n                            this.setState({body: find[0].body});\r\n                            this.setState({loadFind: find[0]});\r\n                            let activeFind =\r\n                                <Group>\r\n                                    <Cell>Ваш активный поиск</Cell>\r\n                                    <Separator style={{ margin: '12px 0' }} />\r\n                                    <Cell expandable\r\n                                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                          description={'desf'}\r\n                                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                          size=\"l\"\r\n                                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                                    </Cell>\r\n                                    <Cell multiline>\r\n                                        {this.state.findArr[0].body}\r\n                                    </Cell>\r\n                                </Group>\r\n                            ;\r\n                            this.setState({activeFind: activeFind});\r\n                        } else {\r\n                            let activeFind = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({activeFind: activeFind});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.master._id,\r\n            body: this.state.body,\r\n            city: this.state.master.city,\r\n            firstname: this.state.master.firstname,\r\n            lastname: this.state.master.lastname,\r\n            avatarLink: this.state.master.avatarLink\r\n        };\r\n        console.log(BACKEND.findModel.new+this.state.loadFind._id);\r\n        if (this.state.loadFind._id) {\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            let activeFind =\r\n                <Group>\r\n                    <Cell>Ваш активный поиск</Cell>\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <Cell expandable\r\n                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                          description={'desf'}\r\n                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                          size=\"l\"\r\n                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                    </Cell>\r\n                    <Cell multiline>\r\n                        {find.body}\r\n                    </Cell>\r\n                </Group>\r\n            ;\r\n            this.setState({activeFind: activeFind});\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.popout();\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Cell>Добавить / изменить</Cell>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                            top=\"О себе\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}/>\r\n                    </FormLayoutGroup>\r\n                    <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    {this.state.activeFind}\r\n                </FormLayout>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {\r\n    View,\r\n    Panel,\r\n    PanelHeader,\r\n    Tabbar,\r\n    TabbarItem,\r\n    Epic,\r\n    SelectMimicry,\r\n    FormLayout,\r\n    Group, List, Cell, Root, PanelHeaderButton, platform, IOS, Alert\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n//import Sale from './js/sale/sale.js';\r\nimport PanelMasterList from './js/masters/panelMasterList.js';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport Idea from './js/idea/idea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {BACKEND} from \"./js/func/func\";\r\n//import VKConnect from \"@vkontakte/vkui-connect-mock\";\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nconst osname = platform();\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            mastersList: null,\r\n            user: {\r\n                firstname: '',\r\n                lastname: '',\r\n                avatarLink: '',\r\n                vkUid: '',\r\n                status: '',\r\n                city: {id:1, title: 'СПБ'}\r\n            },\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ]\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n\r\n    }\r\n    componentWillMount() {\r\n        bridge.subscribe((e) => {\r\n            if (e.detail.type === 'VKWebAppGetUserInfoResult') {\r\n                const user = {\r\n                    vkUid: e.detail.data.id,\r\n                    firstname: e.detail.data.first_name,\r\n                    lastname: e.detail.data.last_name,\r\n                    avatarLink: e.detail.data.photo_200,\r\n                    sex: e.detail.data.sex,\r\n                    city: {id: e.detail.data.city.id, title: e.detail.data.city.title},\r\n                    country: {id: e.detail.data.country.id, title: e.detail.data.country.title},\r\n                    isMaster: false\r\n                };\r\n                this.setState({user: user});\r\n                //console.log(this.state.user);\r\n                this.verifiedUser(user);\r\n            }\r\n        });\r\n        bridge.send(\"VKWebAppInit\", {}).then(data => console.log(data));\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => console.log(data));\r\n    }\r\n    verifiedUser = (user) => {\r\n        console.log('auth');\r\n        //console.log(BACKEND.users+'/vkuid/'+user.vkUid);\r\n        fetch(BACKEND.users+'/vkuid/'+user.vkUid)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0){\r\n                    console.log('Пользователь ', user, ' не найден');\r\n                    this.postData(BACKEND.users, user); //регитрируем\r\n                } else {\r\n                    console.log('Пришло при авторизации', usersArr[0]);\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    openAlert = (title, body, action) => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    closeReg = (master) => {\r\n        console.log('master - ', master);\r\n        this.postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({ user: user });\r\n        //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n        this.setState({ activeViewLk: 'lk' });\r\n    };\r\n    change = (story, view, panel) => {\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n    };\r\n    /*\r\n    *Story (news,masters,findmodel,idea,lk)\r\n    * mastersView -> mastersPanel\r\n    *\r\n    *\r\n    */\r\n\r\n    /*\r\n    *\r\n    *\r\n    *\r\n     */\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({ activePanelMasters: panelName });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMaster = (master) => {\r\n        this.setState({ activeViewMasters: 'mastersList' });\r\n        this.setState({ activeStory: 'masters' });\r\n        this.setState({ activePanelMasters: 'masterInfo' });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelFindModels: 'masterInfo' });\r\n            });\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelLk: 'masterInfo' });\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({ activePanelMasters: name });\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({ activeStory: storyName })\r\n    }\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n    render () {\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    {\r\n                        /*<TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'sale'}\r\n                            data-story=\"sale\"\r\n                            text=\"Акции\"\r\n                        ><Icon28FireOutline /></TabbarItem>*/\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'news'}\r\n                        data-story=\"news\"\r\n                        text=\"News\"\r\n                    ><Icon28FireOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'masters'}\r\n                        data-story=\"masters\"\r\n                        text=\"Мастера\"\r\n                    ><Icon28ServicesOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'findmodel'}\r\n                        data-story=\"findmodel\"\r\n                        text=\"Ищу модель\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'idea'}*/}\r\n                    {/*    data-story=\"idea\"*/}\r\n                    {/*    text=\"Идеи\"*/}\r\n                    {/*><Icon28HelpOutline /></TabbarItem>*/}\r\n                    {\r\n                        /*\r\n                        <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомлен.\"\r\n                        label=\"1\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                        * */\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'lk'}\r\n                        data-story=\"lk\"\r\n                        text=\"Кабинет\"\r\n                    ><Icon28More /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                {\r\n                    /*<View id=\"sale\" activePanel=\"sale\">\r\n                    <Panel id=\"sale\">\r\n                        <PanelHeader>Акции</PanelHeader>\r\n                        <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })} indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                        <Sale />\r\n                    </Panel>\r\n                </View>*/\r\n                }\r\n                <View id=\"news\" activePanel=\"news\">\r\n                    <Panel id=\"news\">\r\n                        <PanelHeader>Горячие новости</PanelHeader>\r\n                        <News user={this.state.user} openStory={this.openStory}/>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"masters\" activeView={this.state.activeViewMasters}>\r\n                    <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                        <Panel id=\"mastersList\">\r\n                            <FormLayout>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                    indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                                <SelectMimicry\r\n                                    top=\"Выберите категорию\"\r\n                                    placeholder=\"Не выбрана\"\r\n                                    onClick={() => this.setState({ activeViewMasters: 'masterCat' })}\r\n                                >{this.state.targetCategory.label}</SelectMimicry>\r\n                            </FormLayout>\r\n                            <PanelHeader>Мастера</PanelHeader>\r\n                            <PanelMasterList category={this.state.targetCategory} city={this.state.user.city} openPanelMaster={this.openPanelMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelMasters: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelMasters: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <MasterPhoto activeMasterId={this.state.activeMasterId} />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                        <Panel id=\"masterCat\">\r\n                            <PanelHeader>Выбор категории</PanelHeader>\r\n                            <Group>\r\n                                <List>\r\n                                    {\r\n                                        this.state.categories.map(category => {\r\n                                            //console.log(category);\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={category.id}\r\n                                                    onClick={() => this.setState({ targetCategory: category, activeViewMasters: 'mastersList' })}\r\n                                                    asideContent={this.state.targetCategory === category ? <Icon24Done fill=\"var(--accent)\" /> : null}\r\n                                                >\r\n                                                    {category.label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </Group>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n                <View id=\"idea\" activePanel=\"idea\">\r\n                    <Panel id=\"idea\">\r\n                        <Idea />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"findmodel\" activePanel={this.state.activePanelFindModels}>\r\n                    <Panel id=\"findmodel\">\r\n                        <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                        <FindModel openMasterOnId={this.openMasterOnId} user={this.state.user}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterInfo\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            О мастере\r\n                        </PanelHeader>\r\n                        <MasterCard openPhoto={() => this.setState({ activePanelFindModels: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelFindModels: 'masterComments' })}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterPhoto\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Портфолио\r\n                        </PanelHeader>\r\n                        <MasterPhoto activeMasterId={this.state.activeMasterId} />\r\n                    </Panel>\r\n                    <Panel id=\"masterComments\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Отзывы\r\n                        </PanelHeader>\r\n                        <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Этот раздел</Cell>\r\n                        </Group>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                    <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout}>\r\n                        <Panel id=\"lk\">\r\n                            <PanelHeader>Личный кабинет</PanelHeader>\r\n                            <Lk\r\n                                user={this.state.user}\r\n                                openReg={() => this.setState({ activeViewLk: 'masterReg' })}\r\n                                openSetting={() => this.setState({ activePanelLk: 'setting' })}\r\n                                openFavourite={() => this.setState({ activePanelLk: 'favourite' })}\r\n                                openFindModel={() => this.setState({ activePanelLk: 'findModel' })}\r\n                                openMasterPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='favourite'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Избранное</PanelHeader>\r\n                            <Favourite user={this.state.user} openFavMasterOnId={this.openFavMasterOnId}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelLk: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <Portfolio activeMasterId={this.state.activeMasterId} openShowImages={this.openShowImages} />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id='findModel'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Мастер ищет модель</PanelHeader>\r\n                            <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                        <Panel id='setting'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Настройки</PanelHeader>\r\n                            <Setting user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterReg\" id=\"masterReg\">\r\n                        <Panel id=\"masterReg\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Регистрация мастера\r\n                            </PanelHeader>\r\n                            <Invite user={this.state.user} closeReg={this.closeReg}/>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import VKConnect from '@vkontakte/vkui-connect-mock';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\n//import bridge from '@vkontakte/vk-bridge';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}