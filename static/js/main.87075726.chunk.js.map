{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/elements/functions.js","js/store/reducers.js","js/store/actions.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["Head","props","theme","left","onClick","goBack","title","BACK_LINK","process","BACKEND","users","onid","auth","like","message","masters","all","onID","category","vkuid","subscribers","onarrayid","connect","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getAll","logs","params","sendmessage","moder","postData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","catch","e","console","log","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","setMaster","type","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","MastersCard","handleChange","event","setState","target","name","value","sendMessage","state","sendtitle","phone","activeMaster","_id","openSnackAvatar","avatarLink","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","getPhone","share","bridge","send","result","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","phone_number","enterNumber","error_data","error_reason","number","snackbar","duration","layout","onClose","className","mask","defaultValue","align","onChange","this","images","start_index","text","after","src","size","response","marginTop","visible","id","photo","description","brand","bottomContent","vkUid","firstname","lastname","expandable","openComments","indicator","comments","length","photos","map","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","openPhoto","icon","header","separator","priceList","item","multiline","price","React","Component","dispatch","bindActionCreators","reverse","image","gridPhoto","MastersComments","changeStars","stars","i","rating","sendComment","Number","userId","isCommended","count","commentsArr","countComments","prevProps","prevState","snapshot","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","star","bottom","replace","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","isMember","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","openModer","openReg","nowCounter","countUsers","countMasters","countCities","cities","city","inGroup","vk_is_favorite","sort","Invite","getCategories","categories","regMaster","checkLicense","statusMessage","cat","subcat","filter","active","label","location","country","closeReg","error","addProd","status","add","saveProd","undefined","newProdTitle","newProdBody","newProdPrice","onRemove","slice","permMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","asideContent","checked","subcategory","require","stretched","openRules","Lk","checkModeration","addToFavApp","connection","tmpUser","isMaster","isUser","favsArr","mastersArr","openSetting","openFavourite","openMasterPhoto","openFindModel","Portfolio","uploadUrl","token","loading","formData","FormData","selectedFile","document","getElementById","files","append","imgArr","unshift","img","openSnack","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","CityListModal","search","getCities","toLowerCase","items","updateModalHeight","Fragment","region","withModalRootContext","Setting","platform","saveChanges","patchData","openSnackDismiss","checkBan","banned","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","Array","isArray","String","onSubmit","handleSubmit","Favourite","loadFavsMasters","ids","isLoaded","err","window","history","replaceState","pushState","addEventListener","caption","openFavMasterOnId","FindCard","disabled","find","sale","openMasterOnId","masterId","marginBottom","FindList","findArr","action","FindModel","loadFind","scrollTo","self","pageYOffset","FindModelMaster","handleChangeSelect","selectvalue","save","isActive","Partners","addToCommunity","CityList","Moder","good","reasons","bad","reason","goodComment","badComment","activeTab","mastersCount","usersCount","openMaster","selected","renderMasters","renderComments","MastersList","setBottom","setTitle","ratingArr","reduce","a","b","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","App","validLaunchParams","goBackNews","newsHistory","pop","activePanelNews","goForwardNews","newMaster","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeMasterId","activeStory","activeViewMasters","activePanelLk","openStory","storyName","activePanelReg","baseCities","searchCity","activeModal","modalHistory","activeTabLk","scheme","onStoryChange","launchParams","sign","subscribe","detail","onpopstate","dataset","story","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","activeView","modalBack","setActiveModal","openAlert","Boolean","hostname","match","config","store","createStore","changeIsMaster","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.87075726.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","const BACK_LINK = process.env.REACT_APP_BACK_LINK;\r\n\r\nexport const BACKEND = {\r\n    users: {\r\n        onid: BACK_LINK+'users/',\r\n        auth: BACK_LINK+'users/auth/',\r\n        like: BACK_LINK+'users/like/'\r\n    },\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/',\r\n        connect: BACK_LINK+'masters/connect/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    moder: BACK_LINK+'masters/moderation'\r\n};","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: null,\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity:action.payload.location.city};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload};\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload};\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER');\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER');\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS');\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, FormLayout, RichCell, CellButton, Placeholder, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData, postData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline';\r\nimport Head from \"../elements/panelHeader\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {loginUser} from \"../store/actions\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props.activeMaster);\r\n       this.setState({activeMaster: this.props.activeMaster}, ()=> this.loadFavs())\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            postData(BACKEND.users.like+this.state.activeMaster._id, this.props.params);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let data = {\r\n            params: this.props.params,\r\n            title: this.state.sendtitle,\r\n            phone: this.state.phone\r\n        };\r\n        postData(BACKEND.masters.connect+this.state.activeMaster._id, data)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink)\r\n            })\r\n            .catch(e=>console.log(e));\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.getPhone(title)}\r\n                mode=\"outline\"\r\n            >\r\n                Записаться\r\n            </Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number});\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Cell>Мастер скрыт</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                    ?\r\n                                    <Cell before={<Icon20UserOutline />}>Да, это Вы</Cell>\r\n                                    :\r\n                                    <Cell>\r\n                                        {this.favStatus()}\r\n                                        <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                    </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}\r\n                            description={'Подписчиков: ' + this.state.countFavs}\r\n                        >\r\n                            Отзывы\r\n                        </Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Div>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Div> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <div>\r\n                                                            <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                        </div>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        loginUser: bindActionCreators(loginUser, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MastersCard);","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport {connect} from \"react-redux\";\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars();\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({commentsArr: this.props.activeMaster.comments, countComments: count, isLoad: true});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = [];\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            }\r\n        }\r\n        this.setState({stars: stars});\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера';\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body,\r\n                moderation: false,\r\n                params: this.props.params\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Комментарий отправлен на проверку\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr, isCommended: true, snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                        >\r\n                            Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                        </Snackbar>});\r\n            })\r\n            .catch(e=>this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e.message}\r\n                    </Snackbar>\r\n            }));\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={comment.rating+` из 5`}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        {/*<Slider*/}\r\n                        {/*    step={1}*/}\r\n                        {/*    min={1}*/}\r\n                        {/*    max={5}*/}\r\n                        {/*    value={Number(this.state.rating)}*/}\r\n                        {/*    onChange={rating=>this.setState({rating})}*/}\r\n                        {/*    top={\"Моя оценка работы мастера: \"+this.state.rating}*/}\r\n                        {/*    bottom='Перемещайте ползунок влево или вправо для изменения оценки'*/}\r\n                        {/*/>*/}\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/ /g, \"\").length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers, countCities: data.countCities, cities: data.cities.sort()})\r\n            });\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранные</Button>}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"groups.isMember\",\r\n            \"params\": {\"group_id\": \"193179174\",\"user_id\": this.props.user.vkUid, \"v\":\"5.103\", \"access_token\": process.env.REACT_APP_SECRETKEY}})\r\n            .then(result => {\r\n                if (result.response === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {this.props.master === null &&\r\n                    <Cell\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы - мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <div>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        <Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>\r\n                        <Cell multiline>\r\n                            {\r\n                                this.state.cities &&\r\n                                this.state.cities.map(city=>{\r\n                                    return city+' '\r\n                                })\r\n                            }\r\n                        </Cell>\r\n                    </div>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                    <Group>\r\n                        <Placeholder\r\n                            icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                            header=\"Привет!\"\r\n                        >\r\n                            У нас ты можешь найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                        </Placeholder>\r\n                        {this.userInfo(user)}\r\n                        {this.nowCounter()}\r\n                        {this.isMember()}\r\n                        {this.favApp()}\r\n                        {/*{this.feedList()}*/}\r\n                        {/*<FixedLayout*/}\r\n                        {/*    vertical=\"bottom\"*/}\r\n                        {/*    style={{marginBottom: 5}}*/}\r\n                        {/*>*/}\r\n                        {/*    */}\r\n                        {/*</FixedLayout>*/}\r\n                    </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                description: this.state.description,\r\n                type: this.state.type,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                priceList: this.state.priceList,\r\n                params: this.props.params\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена');\r\n    };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        size=\"l\"\r\n                                        description=\"Регистрация мастера\"\r\n                                        before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                    >\r\n                                        {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={this.props.changeCity}\r\n                                        indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                        status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                        bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                    >\r\n                                        Ваш город\r\n                                    </Cell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        multiline\r\n                                        asideContent={\r\n                                            <Switch\r\n                                                onChange={this.permMessage}\r\n                                                checked={this.state.statusMessage}/>\r\n                                        }\r\n                                        bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                    >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                    </Cell>\r\n                                    {/*<Cell*/}\r\n                                    {/*    expandable*/}\r\n                                    {/*    multiline*/}\r\n                                    {/*    onClick={this.permMessage}*/}\r\n                                    {/*    description=\"Для получения уведомлений о заявках\"*/}\r\n                                    {/*    status={this.state.statusMessage === true ? 'valid' : 'error'}*/}\r\n                                    {/*>Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? <span style={{color: 'green'}}>Разрешен</span> : <span style={{color: 'red'}}>Не разрешен</span>}*/}\r\n                                    {/*</Cell>*/}\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                // removable\r\n                                                // onRemove={() => {\r\n                                                //     this.onRemove(index)\r\n                                                // }}\r\n                                                >\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            </Cell>\r\n                                            <Button\r\n                                                //before={<Icon24Dismiss/>}\r\n                                                onClick={() => {this.onRemove(index)}}\r\n                                                size=\"xl\"\r\n                                                mode=\"destructive\"\r\n                                            >Удалить</Button>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdTitle\"\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Textarea\r\n                                            require\r\n                                            name=\"newProdBody\"\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdPrice\"\r\n                                            type=\"number\" value={this.state.newProdPrice}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            return (\r\n                <Cell multiline>Ваш профиль на проверке. В течении часа он будет доступен в поиске.</Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'}\r\n                    bottomContent={this.props.master !== null && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.props.user.firstname+' '+this.props.user.lastname}\r\n                </Cell>\r\n                {this.props.master !== null && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.props.master !== null &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Lk);","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Snackbar, Cell, PanelSpinner, Spinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Portfolio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.master.photos.reverse(), isLoad: true});\r\n    }\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        try {\r\n            if (this.state.uploadUrl === undefined) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n            if (this.state.token === undefined) throw 'Ошибка. Не получен токен пользователя.';\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            formData.append('master', this.props.master.firstname+' '+this.props.master.lastname );\r\n            formData.append('uploadUrl', this.state.uploadUrl);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            formData.append('masterId', this.props.master._id);\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n                    let imgArr = this.state.images;\r\n                    imgArr.unshift(res.img);\r\n                    this.openSnack('Фото успешно загружено');\r\n                    this.setState({images: imgArr, loading: false});\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n        } catch(e){\r\n            this.openSnack(e);\r\n        }\r\n\r\n    };\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    onClick={this.getToken}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Portfolio);","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories, isLoad: true});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveChanges()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        const master = this.state.master;\r\n        master.params = this.props.params;\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, master);\r\n        this.props.setMaster(this.state.master);\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.props.snackbar('Изменения сохранены');\r\n            })\r\n            .catch(e=>console.log(e.message))\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.openSnack('Процедура добавлена');\r\n        } catch (error) {\r\n            this.openSnackDismiss(error)\r\n        }\r\n    };\r\n    // saveProd = () => {\r\n    //     try {\r\n    //         if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n    //         if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n    //         if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n    //         let master = this.state.master;\r\n    //         master.priceList.push({\r\n    //             title: this.state.newProdTitle,\r\n    //             body: this.state.newProdBody,\r\n    //             price: this.state.newProdPrice\r\n    //         });\r\n    //         this.setState({master: master});\r\n    //         this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n    //         this.props.snackbar('Процедура добавлена');\r\n    //     } catch (error) {\r\n    //         this.props.snackbar(error)\r\n    //     }\r\n    // };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.master.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.props.changeModal('changeCity')}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\" key={index}>\r\n                                                <Cell\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    //removable\r\n                                                    // onRemove={() => {\r\n                                                    //     this.onRemove(index)\r\n                                                    // }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                    <Button\r\n                                                        //before={<Icon24Dismiss/>}\r\n                                                        onClick={() => {this.onRemove(index)}}\r\n                                                        size=\"xl\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Удалить</Button>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Textarea\r\n                                                require\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\" value={this.state.newProdPrice}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={this.checkSubcat}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                        {this.state.snackbar}\r\n                            </Div>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.history.replaceState({}, '', '#init');\r\n        window.history.pushState({}, '', '#router');\r\n        window.addEventListener('popstate', event => {\r\n            window.history.pushState({}, '', '#router-back');\r\n            this.props.goBack();\r\n        });\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56LikeOutline/>}\r\n                        header={this.state.mastersArr.message}\r\n                    >Добавить мастера в этот список можно, нажав соответствующую кнопку в профиле мастера.\r\n                    </Placeholder>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master.vkUid}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <RichCell\r\n                                            key={master._id}\r\n                                            before={<Avatar size={72} src={master.avatarLink} />}\r\n                                            text={master.type}\r\n                                            caption={master.location.city.title}\r\n                                            after={<Icon16Chevron/>}\r\n                                            onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >\r\n                                            {master.firstname} {master.lastname}\r\n                                        </RichCell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n\r\n                                // <CardGrid key={master._id}>\r\n                                //     <Card size=\"l\" mode=\"shadow\">\r\n                                //         <Cell expandable\r\n                                //               photo={master.avatarLink}\r\n                                //               description={master.type}\r\n                                //               before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                //               size=\"l\"\r\n                                //               onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                //         >{master.firstname} {master.lastname}\r\n                                //         </Cell>\r\n                                //     </Card>\r\n                                // </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\n// function renderLastPhoto(arr){\r\n//     for (let i =0; i<arr.length; i++){\r\n//         if (!arr[i]) break;\r\n//         return (\r\n//             <Card\r\n//                 size=\"s\"\r\n//                 mode=\"shadow\"\r\n//                 key={i}\r\n//                 //onClick={() => this.openShowImages(this.state.images, index)}\r\n//             >\r\n//                 <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    console.log(find);\r\n                    this.props.changeFindModelsList(find);\r\n                    this.setState({findArr: find, isLoad: true});\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.findModel.onMasterId+this.props.master._id)\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                if (find.length > 0) {\r\n                    console.log(find);\r\n                    this.setState({loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                } else {\r\n                    let error = <Cell>У вас нет активных поисков</Cell>;\r\n                    this.setState({error: error, isLoaded: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if(this.props.master.photos.length < 3) throw 'В портфолио должно быть не менее 3-х фотографий';\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if (this.state.body.length === 0) throw 'Пустое сообщение недопустимо';\r\n            let images = [];\r\n            this.props.master.photos.map((image,i)=> {\r\n                if (i < 3){\r\n                    images.push(image)\r\n                }\r\n            });\r\n            if (this.state.isActive === true) {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                console.log('измененный',find);\r\n                this.setState({loadFind: find});\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n                this.openSnack('Информация успешно обновлена.')\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                // find.masterId = this.state.activeMaster._id;\r\n                // find.location = this.state.activeMaster.location;\r\n                // find.firstname = this.state.activeMaster.firstname;\r\n                // find.lastname = this.state.activeMaster.lastname;\r\n                // find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                this.postData(BACKEND.findModel.new, find);\r\n                this.openSnack('Информация о поиске успешно размещена.')\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.props.master.photos.length > 0 ?\r\n                                    this.props.master.photos.map((image,i)=>{\r\n                                        return (\r\n                                            <Card size='s' key={i}>\r\n                                                <div\r\n                                                    style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                >\r\n                                                </div>\r\n                                            </Card>\r\n                                        )\r\n                                    }) : 'У вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий'\r\n                                }\r\n                                </CardGrid>\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>this.setState({visible: !this.state.visible})}\r\n                                        checked={this.state.visible}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModelMaster);","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества со схожей тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\nimport Head from \"./panelHeader\";\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: true,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 49, title: 'Екатеринбург'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": process.env.REACT_APP_TOKEN\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items, isLoad: true}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Panel id='changeCity'>\r\n                    <Head title={'Выбор города'}\r\n                          goBack={() => this.props.goBack()}/>\r\n                        <React.Fragment>\r\n                            <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                            {this.state.cities.length > 0 ?\r\n                            <List>\r\n                                {this.state.cities.map(city =>\r\n                                    <Cell\r\n                                        description={city.region || ''}\r\n                                        onClick={()=>this.props.changeCity(city)}\r\n                                        key={city.id}\r\n                                    >\r\n                                        {city.title}\r\n                                    </Cell>\r\n                                )}\r\n                            </List> :\r\n                                <Placeholder\r\n                                    icon={<Icon56PlaceOutline />}\r\n                                    header=\"Город не найден\"\r\n                                >\r\n                                    Проверьте опечатки или измените критерии поиска\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n                </Panel>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel, Textarea\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\n\r\nimport {BACKEND} from \"../func/func\";\r\nimport Head from \"../elements/panelHeader\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.moder)\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            });\r\n        fetch(BACKEND.comment.moderation)\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                console.log(comments);\r\n                this.setState({comments: comments})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: []\r\n        };\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons\r\n        };\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    goodComment = () => {\r\n\r\n    };\r\n\r\n    badComment = () => {\r\n\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment[0]._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment[0]._id, index)} mode=\"secondary\">Отклонить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment[0].body}\r\n                        </RichCell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                        <Button onClick={()=>this.setState({[master.vkUid]: true})} mode=\"secondary\">Отклонить</Button>\r\n                                        {\r\n                                            this.state[master.vkUid] === true &&\r\n                                            <React.Fragment>\r\n                                                <Textarea name='reason' value={this.state.reason} onChange={()=>this.handleChange}/>\r\n                                                <Button onClick={()=>this.bad(master._id, index)} mode=\"secondary\">Отклонить</Button>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Panel id=\"moder\">\r\n                <Head\r\n                    title={'Модерация'}\r\n                    goBack={() => this.props.goBack()}\r\n                />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'masters' })}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'comments' })}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Moder;","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArr = master.comments.map(comment => {\r\n                return Number(comment.rating)\r\n            });\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster('masterInfo',master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner, Div} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    window.scrollTo(0, this.props.mastersListScroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e)=>this.checkSubcat(e)}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster, changeActiveMasterOnMasters, changeActiveMasterOnFindModels, changeActiveMasterOnFavs, changeLaunchParams} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport HeadCity from \"./js/elements/headCity\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            activePanelNews: 'news',\r\n            newsHistory: ['news'],\r\n            validLaunchParams: false\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.launchParams.sign !== undefined) {\r\n            console.log('Параметры пришли');\r\n            this.props.changeLaunchParams(this.props.launchParams);\r\n            this.auth(this.props.launchParams);\r\n        } else {\r\n            this.openSnack('Ошибка. Не переданы параметры запуска.');\r\n            this.setState({validLaunchParams: false});\r\n        }\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n        });\r\n        window.onpopstate = () => {\r\n            window.history.pushState(null, null);\r\n        };\r\n    }\r\n\r\n    auth = (params) => {\r\n        fetch(BACKEND.users.auth, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                this.setState({validLaunchParams: true});\r\n                this.props.loginUser(data.user);\r\n                if (data.master !== null){\r\n                    this.props.setMaster(data.master)\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                this.openSnack('Ошибка подключения к серверу.')\r\n                this.setState({validLaunchParams: false});\r\n            })\r\n    };\r\n\r\n    goBackNews = () => {\r\n            const newsHistory = [...this.state.newsHistory];\r\n            newsHistory.pop();\r\n            const activePanelNews = newsHistory[newsHistory.length - 1];\r\n            if (activePanelNews === 'news') {\r\n                bridge.send('VKWebAppDisableSwipeBack');\r\n            }\r\n            this.setState({ newsHistory, activePanelNews });\r\n    };\r\n\r\n    goForwardNews = (activePanelNews) => {\r\n        const newsHistory = [...this.state.newsHistory];\r\n        newsHistory.push(activePanelNews);\r\n        if (this.state.activePanelNews === 'news') {\r\n            bridge.send('VKWebAppEnableSwipeBack');\r\n        }\r\n        this.setState({ newsHistory, activePanelNews });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                this.props.setMaster(newMaster);\r\n                this.setState({activeViewLk: 'lk'});\r\n                this.openSnack('Ваш профиль отправлен на проверку. Не забудьте добавить фотографии в портфолио - так, шансы получить заказ намного выше.');\r\n                //this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack(e.message);\r\n            //this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    openPanelMaster = (panelName, master) => {\r\n        this.props.changeActiveMasterOnMasters(master);\r\n        this.setState({activePanelMasters: panelName});\r\n    };\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFindModels(master);\r\n                this.setState({activePanelFindModels: 'masterInfo'});\r\n            });\r\n    };\r\n\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n        console.log(masterId);\r\n    };\r\n\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFavs(master);\r\n                this.setState({activePanelLk: 'masterInfo'});\r\n            });\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        user.params = this.props.params;\r\n        patchData(BACKEND.users.onid+user._id, user);\r\n        //this.setActiveModal(null)\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                        header=\"Выполняется вход...\"\r\n                    >Это может занять несколько секунд\r\n                        {this.state.snackbar}\r\n                    </Placeholder>\r\n                </ConfigProvider>\r\n            )\r\n      } if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Все, беда. Кто-то лезет в параметры запуска :(\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" history={this.state.newsHistory} activePanel={this.state.activePanelNews} onSwipeBack={() => this.goBackNews()}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                openModer={() => this.goForwardNews('moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBackNews()}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master});\r\n                                    this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBackNews()}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                    </View>\r\n                    <Root id=\"masters\" activeView={this.state.activeViewMasters}>\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <PanelHeader>Мастера</PanelHeader>\r\n                                <Masters\r\n                                    changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    changeCategory={()=>this.setState({activePanelMasters: 'masterCat'})}\r\n                                    //openPanelMaster={this.openPanelMaster}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelMasters: 'mastersList'})\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    //onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openComments={() => this.setState({activePanelMasters: 'masterComments'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.setState({activePanelMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                        {/*<View activePanel=\"masterCat\" id=\"masterCat\">*/}\r\n                        {/*    /!*<Panel id=\"masterCat\">*!/*/}\r\n                        {/*    /!*    <PanelHeader>Выбор категории</PanelHeader>*!/*/}\r\n                        {/*    /!*    <Group>*!/*/}\r\n                        {/*    /!*        <CategoriesList*!/*/}\r\n                        {/*    /!*            setCategory={(category) => {*!/*/}\r\n                        {/*    /!*                this.props.changeTargetCategory(category);*!/*/}\r\n                        {/*    /!*                this.setState({activeViewMasters: 'mastersList'});*!/*/}\r\n                        {/*    /!*            }}*!/*/}\r\n                        {/*    /!*        />*!/*/}\r\n                        {/*    /!*    </Group>*!/*/}\r\n                        {/*    /!*</Panel>*!/*/}\r\n                        {/*</View>*/}\r\n                    </Root>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.state.activePanelFindModels}\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ишу модель</PanelHeader>\r\n                            <FindModel\r\n                                openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                            />\r\n                        </Panel>\r\n                        <CityList\r\n                                id='changeCity'\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                                changeCity={(city) => {\r\n                                this.setState({activePanelFindModels: 'findmodel'});\r\n                                this.changeTargetCity(city);\r\n                            }}\r\n                        />\r\n                        <Panel id=\"masterInfo\">\r\n                            <MasterCard\r\n                                id=\"masterInfo\"\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                                openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                openComments={() => this.setState({activePanelFindModels: 'masterComments'})}\r\n                                //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterPhoto\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterComments\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнерам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.setState({activePanelLk: 'setting'})}\r\n                                            openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                            openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                            openMasterPhoto={() => this.setState({activePanelLk: 'portfolio'})}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Head\r\n                                    title='Настройки'\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Setting\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                    modalBack={this.modalBack}\r\n                                    activeModal={this.state.activeModal}\r\n                                    changeModal={(name) => this.setActiveModal(name)}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head\r\n                                    title='Избранное'\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Favourite\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user}\r\n                                    openFavMasterOnId={this.openFavMasterOnId}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.setState({activePanelLk: 'favourite'})}\r\n                                    openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    openComments={() => this.setState({activePanelLk: 'masterComments'})}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"portfolio\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Portfolio\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title='Отзывы'\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head\r\n                                    title='Ищу модель'\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <FindModelMaster\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user} popout={this.openAlert}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id='registration'>\r\n                            <Panel id='registration'>\r\n                                <Head\r\n                                    title={'Регистрация'}\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                />\r\n                                <Invite\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                    openRules={() => this.setState({activePanelReg: 'rules'})}\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='rules'>\r\n                                <Head\r\n                                    title='Соглашение'\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                                <Rules\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                            </Panel>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelReg: 'registration'})\r\n                                }}\r\n                            />\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch)\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nrequire('dotenv').config();\r\n\r\n\r\nconst store = createStore(rootReducer);\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\n// let linkParams =  window\r\n//     .location\r\n//     .hash\r\n//     .replace('#','')\r\n//     .split('&')\r\n//     .reduce(\r\n//         function(p,e){\r\n//             let a = e.split('=');\r\n//             p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n//             return p;\r\n//         },\r\n//         {}\r\n//     );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App launchParams={params} />\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}