{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/store/reducers.js","js/store/actions.js","js/masters/mastersCard.js","js/elements/functions.js","js/masters/mastersPhoto.js","js/elements/items/ratingStars.js","js/masters/mastersComments.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/history.js","js/lk/portfolio.js","js/elements/headCity.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js"],"names":["Head","props","theme","left","onClick","goBack","title","BACK_LINK","process","BACKEND","users","auth","like","changeCity","message","masters","all","onID","category","vkuid","subscribers","onarrayid","connect","history","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getCities","getCountries","isMember","getAlbum","delPhoto","stories","repost","notyStatus","getAll","logs","params","sendmessage","moder","moderCom","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","targetCountry","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","activePanelnews","activePanelmasters","activePanelfindmodel","activePanellk","newsHistory","mastersHistory","findmodelHistory","lkHistory","activeStory","activeViewLk","regSet","filter","setMaster","console","log","type","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","goTo","story","panel","goForward","changeStory","changeActiveViewLk","activeView","regSetInvite","data","setFilter","MastersCard","handleChange","event","setState","target","name","value","changeNumber","openModal","sendMessage","state","sendtitle","phone","fetch","activeMaster","_id","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","error","openSnackAvatar","avatarLink","catch","e","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","enterNumber","share","bridge","send","result","loadFavs","includes","countFavs","length","isLoad","changeVisible","index","push","isChange","indexOf","splice","getPhone","phone_number","a","activeModal","onClose","id","header","caption","className","align","onChange","novalidate","snackbar","bind","window","scrollTo","this","map","item","url","postData","images","start_index","text","duration","layout","after","src","size","response","icon","marginTop","visible","Fragment","separator","disabled","multiline","level","weight","marginBottom","brand","vkUid","firstname","lastname","expandable","openComments","indicator","meta","comments","description","photos","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","openPhoto","priceList","price","asideContent","React","Component","dispatch","bindActionCreators","imgArr","image","gridPhoto","RatingStars","useState","stars","setStars","activeStar","inactiveStar","useEffect","starsArr","i","countStars","display","star","MastersComments","changeStars","rating","validCommentText","replace","sendComment","Number","onModer","ids","isCommended","commentsArr","countComments","prevProps","prevState","snapshot","comDate","date","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","alignItems","flexDirection","fontSize","color","webkitUserSelect","userSelect","status","bottom","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","user_id","ingroup","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","photo","openModer","openReg","nowCounter","countUsers","countMasters","inGroup","promo","vk_is_favorite","subscribe","detail","bannerData","Invite","deleteProcedure","setAlert","actionsLayout","autoclose","action","onRemove","getCategories","categories","regMaster","statusMessage","trim","checkLicense","cat","subcat","active","label","location","country","city","closeReg","addProd","add","saveProd","validateNewProdTitle","newProdTitle","validateNewProdBody","newProdBody","validateNewProdPrice","newProdPrice","slice","permMessage","checkSubcat","indexCat","indexSubcat","counter","count","statusPhoto","qapi","undefined","subcategory","checked","require","stretched","openRules","Lk","notifyChange","notifyStatus","wallPost","link","prods","prod","join","storiesPost","checkModeration","reasons","reason","addToFavApp","connection","tmpUser","isMaster","isUser","favsArr","mastersArr","vk_user_id","error_data","story_owner_id","openSetting","openFavourite","openHistory","openMasterPhoto","openFindModel","History","connectionList","isLoaded","href","Portfolio","deletePhoto","setTimeout","delete","loading","deleteMode","getToken","selectedFile","document","getElementById","files","match","create_album","encodeURI","token","fetchJsonp","album","album_id","getUploadServer","uploadServer","formData","FormData","append","openSnack","saveUrl","savePh","sizes","unshift","img","uploadUrl","upload_url","access_token","photoArr","photoFile","user_albums","items","textAlign","accept","Setting","saveChanges","patchData","snackbarDismiss","saveEdit","editProdTitle","editProdBody","editProdPrice","editProd","edit","checkBan","banned","statusProfile","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","warnConnection","changed","Array","isArray","String","defaultValue","snackbarLk","withModalRootContext","Favourite","loadFavsMasters","err","openFavMasterOnId","FindCard","find","sale","openMasterOnId","masterId","FindList","findArr","FindModel","loadFind","self","pageYOffset","FindModelMaster","targetImg","handleChangeSelect","selectvalue","save","isActive","mStatus","Partners","addToCommunity","CityList","renderCityList","cities","region","search","countryList","toLowerCase","country_id","cityList","changeCountry","Boolean","selected","Moder","good","bad","goodComment","badComment","activeTab","mastersCount","usersCount","to","openMaster","renderMasters","renderComments","MastersList","setBottom","marginLeft","setTitle","bottomContent","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","App","validLaunchParams","openFindMasterOnId","newMaster","pushState","activePanelMasters","openStory","storyName","popoutLk","popoutInvite","activePanelFindModels","activeMasterId","activeViewMasters","activePanelLk","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","scheme","mastersModal","findModal","lkModal","snackbarInvite","onStoryChange","launchParams","sign","linkParams","masterid","onpopstate","dataset","geo","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","content","modal","alert","openSnackLk","openSnackLkDismiss","modalBack","openAlert","openSnackInvite","activePanelregistration","registrationHistory","hostname","config","store","createStore","changeIsMaster","newhistory","pop","hash","split","reduce","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1adb82a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","const BACK_LINK = process.env.REACT_APP_BACK_LINK;\r\n\r\nexport const BACKEND = {\r\n    users: {\r\n        auth: BACK_LINK+'users/auth/',\r\n        like: BACK_LINK+'users/like/',\r\n        changeCity: BACK_LINK+'users/changeCity/'\r\n    },\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/',\r\n        connect: BACK_LINK+'masters/connect/',\r\n        history: BACK_LINK+'masters/history/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/',\r\n        getCities: BACK_LINK+'vkapi/getCities',\r\n        getCountries: BACK_LINK+'vkapi/getCountries',\r\n        isMember: BACK_LINK+'vkapi/isMember',\r\n        getAlbum: BACK_LINK+'vkapi/getAlbum',\r\n        delPhoto: BACK_LINK+'vkapi/delPhoto/',\r\n        stories: BACK_LINK+'vkapi/stories/',\r\n        repost: BACK_LINK+'vkapi/repost/',\r\n        notyStatus: BACK_LINK+'vkapi/notifyStatus/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    moder: BACK_LINK+'masters/moderation/',\r\n    moderCom: BACK_LINK+'comment/moderation/',\r\n};","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST'\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY'\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY'\r\nexport const ACTION_CHANGE_TARGET_COUNTRY= 'ACTION_CHANGE_TARGET_COUNTRY'\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL'\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST'\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL'\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS'\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS'\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS'\r\nexport const LOGIN_USER = 'LOGIN_USER'\r\nexport const SET_MASTER = 'SET_MASTER'\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS'\r\nexport const GO_TO = 'GO_TO'\r\nexport const GO_FORWARD = 'GO_FORWARD'\r\nexport const CHANGE_STORY = 'CHANGE_STORY'\r\nexport const CHANGE_ACTIVE_VIEW_LK = 'CHANGE_ACTIVE_VIEW_LK'\r\nexport const REG_SET = 'REG_SET'\r\nexport const SET_FILTER = 'SET_FILTER'\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: null,\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    targetCountry: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null,\r\n    activePanelnews: 'news',\r\n    activePanelmasters: 'mastersList',\r\n    activePanelfindmodel: 'findmodel',\r\n    activePanellk: 'lk',\r\n    //activePanelregistration: 'registration',\r\n    newsHistory: ['news'],\r\n    mastersHistory: ['mastersList'],\r\n    findmodelHistory: ['findmodel'],\r\n    lkHistory: ['lk'],\r\n    //registrationHistory: ['registration'],\r\n    activeStory: 'news',\r\n    activeViewLk: 'lk',\r\n    regSet: null,\r\n    filter: []\r\n}\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload}\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []}\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user\r\n            changeCity.location.city = action.payload\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity}\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload}\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload}\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload}\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity: action.payload.location !== undefined ? action.payload.location.city : {id: 1, title: 'Москва'}}\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user\r\n            changeIsMaster.isMaster = true\r\n            return {...state, master: action.payload, user: changeIsMaster}\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload}\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload}\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload}\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload}\r\n        case GO_TO:\r\n            let history = state[action.payload.story+'History']\r\n            if (history[history.length-1] !== action.payload.panel) history.push(action.payload.panel)\r\n            if (action.payload.panel === history[0]) history = [action.payload.panel]\r\n            return {...state, ['activePanel'+action.payload.story]: action.payload.panel, [action.payload.story+'History']: history, activeStory: action.payload.story}\r\n        case GO_FORWARD:\r\n            let newhistory = state[action.payload.story+'History']\r\n            newhistory.pop()\r\n            return {...state, [action.payload.story+'History']: newhistory, ['activePanel'+action.payload.story]: newhistory[newhistory.length -1], activeStory: action.payload.story}\r\n        case CHANGE_STORY:\r\n            return {...state, activeStory: action.payload}\r\n        case CHANGE_ACTIVE_VIEW_LK:\r\n            return {...state, activeViewLk: action.payload}\r\n        case REG_SET:\r\n            return {...state, regSet: action.payload}\r\n        case SET_FILTER:\r\n            return {...state, filter: action.payload}\r\n\r\n    }\r\n    return state\r\n}","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_TARGET_COUNTRY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS,\r\n    GO_TO,\r\n    GO_FORWARD,\r\n    CHANGE_STORY,\r\n    CHANGE_ACTIVE_VIEW_LK,\r\n    REG_SET,\r\n    SET_FILTER\r\n} from \"./reducers\"\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER')\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    }\r\n}\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER')\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST')\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    }\r\n}\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY')\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    }\r\n}\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY')\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    }\r\n}\r\n\r\nexport const changeTargetCountry = (newTargetCountry) => {\r\n    console.log('in ACTION_CHANGE_TARGET_COUNTRY')\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_COUNTRY,\r\n        payload: newTargetCountry\r\n    }\r\n}\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL')\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    }\r\n}\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST')\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    }\r\n}\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL')\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    }\r\n}\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS')\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    }\r\n}\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS')\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    }\r\n}\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS')\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    }\r\n}\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS')\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    }\r\n}\r\n\r\nexport const goTo = (story, panel) => {\r\n    return {\r\n        type: GO_TO,\r\n        payload: {story: story, panel: panel}\r\n    }\r\n}\r\n\r\nexport const goForward = (story) => {\r\n    return {\r\n        type: GO_FORWARD,\r\n        payload: {story: story}\r\n    }\r\n}\r\n\r\nexport const changeStory = (story) => {\r\n    return {\r\n        type: CHANGE_STORY,\r\n        payload: story\r\n    }\r\n}\r\n\r\nexport const changeActiveViewLk = (activeView) => {\r\n    return {\r\n        type: CHANGE_ACTIVE_VIEW_LK,\r\n        payload: activeView\r\n    }\r\n}\r\n\r\nexport const regSetInvite = (data) => {\r\n    return {\r\n        type: REG_SET,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const setFilter = (filter) => {\r\n    return {\r\n        type: SET_FILTER,\r\n        payload: filter\r\n    }\r\n}","import React from 'react'\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Snackbar,\r\n    Spinner,\r\n    Header,\r\n    Card,\r\n    CardGrid,\r\n    CardScroll,\r\n    Button,\r\n    FormLayout,\r\n    RichCell,\r\n    CellButton,\r\n    Placeholder,\r\n    Panel,\r\n    ModalCard, ModalRoot, Caption\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask'\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like'\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline'\r\nimport {BACKEND} from '../func/func'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {postData} from \"../elements/functions\"\r\nimport {connect} from \"react-redux\"\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline'\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone'\r\nimport Head from \"../elements/panelHeader\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {loginUser, changeMastersList, changeActiveMasterOnFindModels} from \"../store/actions\"\r\nimport Icon56AccessibilityOutline from '@vkontakte/icons/dist/56/accessibility_outline'\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down'\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up'\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false,\r\n            activeMaster: {},\r\n            phone: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        this.setState({activeMaster: this.props.activeMaster}, () => {\r\n            if (this.props.activeMaster !== null) {\r\n                this.loadFavs()\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.openModal(null)\r\n        if (this.state.isChange) { //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            let mastersList = this.props.mastersList\r\n            let newMastersList = mastersList.map(master => {\r\n                if (master._id === this.state.activeMaster._id) {\r\n                    if (master.subscribers.includes(this.props.user._id)) {\r\n                        master.subscribers = master.subscribers.filter(item => item !== this.props.user._id)\r\n                    } else {\r\n                        master.subscribers.push(this.props.user._id)\r\n                    }\r\n                    return master\r\n                } else {\r\n                    return master\r\n                }\r\n            })\r\n            this.props.changeMastersList(newMastersList)\r\n            if (this.props.activeMasterOnFindModels._id === this.state.activeMaster._id) {\r\n                let master = this.props.activeMasterOnFindModels\r\n                if (master.subscribers.includes(this.props.user._id)) {\r\n                    master.subscribers = master.subscribers.filter(item => item !== this.props.user._id)\r\n                } else {\r\n                    master.subscribers.push(this.props.user._id)\r\n                }\r\n                this.props.changeActiveMasterOnFindModels(master)\r\n            }\r\n            postData(BACKEND.users.like + this.state.activeMaster._id, this.props.params)\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    changeNumber = (event) => {\r\n\r\n        this.setState({[event.target.name]: event.target.value}, this.openModal)\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data))\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let data = {\r\n            params: this.props.params,\r\n            title: this.state.sendtitle,\r\n            phone: this.state.phone\r\n        }\r\n        fetch(BACKEND.masters.connect + this.state.activeMaster._id, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar(res.error, this.state.activeMaster.avatarLink)\r\n                } else {\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n            .catch(e => {\r\n                this.props.openModal(null)\r\n                this.openSnackAvatar(e.message, this.state.activeMaster.avatarLink)\r\n            })\r\n    };\r\n\r\n    favStatus = () => {\r\n        if (this.state.isFavourite === false) {\r\n            return (\r\n                <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                    <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                    <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <CellButton\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.enterNumber(title)}\r\n            >Записаться\r\n            </CellButton>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938#masterid=' + this.state.activeMaster._id})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult') {\r\n                    this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n    };\r\n\r\n    openSnackAvatar(text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null})\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    after={<Avatar src={avatarLink} size={32}/>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    loadFavs = () => {\r\n        if (this.props.user.favs) {\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)) {\r\n                this.setState({isFavourite: true})\r\n            } else {\r\n                this.setState({isFavourite: false})\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers.length, isLoad: true})\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user\r\n            user.favs.push(this.state.activeMaster._id)\r\n            this.props.loginUser(user)\r\n            this.setState({\r\n                isFavourite: true,\r\n                countFavs: this.state.countFavs + 1,\r\n                isChange: !this.state.isChange\r\n            }, () =>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink))\r\n        } else {\r\n            let user = this.props.user\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id)\r\n            let favs = this.props.user.favs\r\n            if (index > -1) {\r\n                favs.splice(index, 1)\r\n            } else favs.splice(0, index)\r\n            this.props.loginUser(user)\r\n            this.setState({\r\n                isFavourite: false,\r\n                countFavs: this.state.countFavs - 1,\r\n                isChange: !this.state.isChange\r\n            }, () =>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink))\r\n        }\r\n\r\n    };\r\n\r\n    getPhone = () => {\r\n        console.log('Запрашиваю номер')\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number}, () => this.openModal())\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.openModal()\r\n            })\r\n    };\r\n\r\n    enterNumber = async (title) => {\r\n        this.setState({sendtitle: title})\r\n        this.openModal()\r\n    };\r\n\r\n    openModal = () => {\r\n        console.log('Открываю модалку')\r\n        this.props.openModal(\r\n            <ModalRoot\r\n                activeModal={'phoneNumber'}\r\n                onClose={() => this.props.openModal(null)}\r\n            >\r\n                <ModalCard\r\n                    id={'phoneNumber'}\r\n                    onClose={() => this.props.openModal(null)}\r\n                    header=\"Укажите номер телефона\"\r\n                    caption={\r\n                        <FormLayout>\r\n                            <Div className=\"FormField Input Input--center\">\r\n                                <InputMask\r\n                                    className=\"Input__el\"\r\n                                    //mask=\"7 (999) 999-99-99\"\r\n                                    name=\"phone\"\r\n                                    type=\"number\"\r\n                                    //defaultValue={number || ''}\r\n                                    align=\"center\"\r\n                                    value={this.state.phone}\r\n                                    onChange={this.changeNumber}\r\n                                    novalidate\r\n                                />\r\n                                <Div className=\"FormField__border\"></Div>\r\n                            </Div>\r\n                            {\r\n                                this.state.phone === '' &&\r\n                                <CellButton onClick={() => {\r\n                                    this.getPhone()\r\n                                }}>Запросить номер</CellButton>\r\n                            }\r\n                            <p>Укажите номер телефона, начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет\r\n                                ответить прямо сейчас, он свяжется с вами.</p>\r\n                            <Button onClick={this.sendMessage}>Отправить</Button>\r\n                        </FormLayout>\r\n                    }\r\n                >\r\n\r\n                </ModalCard>\r\n            </ModalRoot>\r\n        )\r\n    }\r\n\r\n    postData(url = '', data = {}, method) {\r\n        return fetch(url, {\r\n            method: method,\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => console.log('ok'))\r\n    }\r\n\r\n    render() {\r\n        if (this.props.activeMaster === null) {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline/>}\r\n                        header=\"Мы не знаем таких мастеров.\"\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else if (this.props.activeMaster.error) {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline/>}\r\n                        header=\"Тут никого нет :)\"\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        }\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n            )\r\n        }\r\n        if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline/>}\r\n                        header=\"Тут никого нет :)\"\r\n                    >\r\n                        Мастер предпочел скрыть свой профиль.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <React.Fragment>\r\n                        <Group separator={'hide'}>\r\n                            <CardGrid>\r\n                                <Card size=\"l\">\r\n                                    <RichCell\r\n                                        disabled\r\n                                        multiline\r\n                                        before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                                        text={\r\n                                            <Caption level=\"2\" weight=\"regular\" style={{marginBottom: 15}}>\r\n                                                {this.state.activeMaster.type === 'Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}\r\n                                            </Caption>\r\n                                        }\r\n                                        caption={\r\n                                            <React.Fragment>\r\n                                                <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                                {\r\n                                                    this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                                        ?\r\n                                                        null\r\n                                                        :\r\n                                                        this.favStatus()\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    >\r\n                                        {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                                    </RichCell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                        </Group>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.props.openComments()}\r\n                                indicator={this.state.activeMaster.meta.comments || 0}\r\n                                description={'Подписчиков: ' + this.state.countFavs}\r\n                            >\r\n                                Отзывы\r\n                            </Cell>\r\n                        </Group>\r\n                        <Group title=\"Портфолио\">\r\n                            {\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    <Group header={<Header mode=\"secondary\">Выполненые работы мастера</Header>}>\r\n                                        <CardScroll>\r\n                                            {\r\n                                                this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                    return (\r\n                                                        <Card\r\n                                                            style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                            size=\"s\"\r\n                                                            mode=\"shadow\"\r\n                                                            key={index}\r\n                                                            onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                        >\r\n                                                            <div style={{\r\n                                                                width: 144,\r\n                                                                height: 96,\r\n                                                                backgroundImage: 'url(' + photoUrl + ')',\r\n                                                                backgroundSize: 'cover',\r\n                                                                backgroundPosition: 'center 35%',\r\n                                                                backgroundRepeat: 'no-repeat',\r\n                                                                borderRadius: 13\r\n                                                            }}/>\r\n                                                        </Card>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </CardScroll>\r\n                                        <Cell\r\n                                            expandable\r\n                                            onClick={() => this.props.openPhoto()}\r\n                                            description={this.state.activeMaster.photos.length + ' фото в портфолио'}\r\n                                            indicator={this.state.activeMaster.photos.length}\r\n                                        >Посмотреть сеткой</Cell>\r\n                                    </Group> :\r\n                                    <Placeholder\r\n                                        icon={<Icon56GalleryOutline/>}\r\n                                        header=\"Нет фотографий\"\r\n                                    />\r\n                            }\r\n                        </Group>\r\n                        <Group separator=\"hide\" header={<Header mode=\"secondary\">Запись к мастеру</Header>}\r\n                               description={'Выберите необходимую процедуру и нажмите на кнопку записи к мастеру. Мастер свяжется с Вами.'}>\r\n                            {\r\n                                this.state.activeMaster.priceList.map((item, index) => (\r\n                                        <CardGrid key={index}>\r\n                                            <Card size=\"l\" onClick={() => this.changeVisible(index)}>\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" руб.\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    asideContent={this.state[index] ? <Icon16Up/> : <Icon16Down/>}\r\n                                                    indicator=\"\"\r\n                                                >\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <React.Fragment>\r\n                                                        <Cell description=\"Краткое описание процедуры\"\r\n                                                              multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                        </Cell>\r\n                                                        {this.connectStatus(this.state.activeMaster.priceList[index].title)}\r\n                                                    </React.Fragment>\r\n                                                }\r\n                                                <Separator/>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                        // </Cell>\r\n                                    )\r\n                                )}\r\n                        </Group>\r\n                        <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                            <Cell multiline>\r\n                                {this.state.activeMaster.description}\r\n                            </Cell>\r\n                        </Group>\r\n                        {this.state.snackbar}\r\n                    </React.Fragment>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params,\r\n        mastersList: state.mastersList,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MastersCard)","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log('ok');\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react'\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos, isLoad: true})\r\n    }\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data))\r\n    }\r\n\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            let imgArr = this.state.images\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        imgArr.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{\r\n                                        height: 96,\r\n                                        backgroundImage: 'url(' + image + ')',\r\n                                        backgroundSize: 'cover',\r\n                                        backgroundPosition: 'center 35%',\r\n                                        backgroundRepeat: 'no-repeat',\r\n                                        borderRadius: 13\r\n                                    }}/>\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard","import React, {useState, useEffect} from 'react'\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline'\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite'\r\nimport {Div} from \"@vkontakte/vkui\"\r\n\r\nfunction RatingStars(props){\r\n    const [stars, setStars] = useState([])\r\n    const activeStar = <Icon24Favorite width={22} height={22} fill={'ffbb00'} />\r\n    const inactiveStar = <Icon24FavoriteOutline width={22} height={22} fill={'ffbb00'} />\r\n    useEffect(()=>{\r\n        let starsArr = []\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= props.countStars){\r\n                starsArr.push(activeStar)\r\n            } else {\r\n                starsArr.push(inactiveStar)\r\n            }\r\n        }\r\n        setStars(starsArr)\r\n    }, [])\r\n    return (\r\n        <Div style={{display: 'inline-flex', padding: 0}}>\r\n            {\r\n                stars.map(star=> {\r\n                    return star\r\n                })\r\n            }\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default RatingStars","import React from 'react'\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\"\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline'\r\nimport {connect} from \"react-redux\"\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline'\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite'\r\nimport RatingStars from '../elements/items/ratingStars'\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: [],\r\n            onModer: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.changeStars()\r\n        fetch(BACKEND.comment.onMasterId + this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.ids.includes(this.props.user._id)) {\r\n                    this.setState({isCommended: true})\r\n                }\r\n                this.setState({\r\n                    commentsArr: res.comments,\r\n                    countComments: res.comments.length,\r\n                    isLoad: true,\r\n                    onModer: res.onModer\r\n                })\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating) {\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = []\r\n        for (let i = 1; i <= 5; i++) {\r\n            if (i <= this.state.rating) {\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={() => this.setState({rating: i})}\r\n                                           fill={'ffbb00'}/>)\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i}\r\n                                                  onClick={() => this.setState({rating: i})} fill={'ffbb00'}/>)\r\n            }\r\n        }\r\n        this.setState({stars: stars})\r\n    };\r\n\r\n    validCommentText = (text) => {\r\n        return !!(this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length < 101 & this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length > 19)\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера.'\r\n            if (this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите Ваши впечатления подробнее.'\r\n            if (this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length > 100) throw 'Длина отзыва ограничена 100 символами.'\r\n            let comment = {\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body.replace(/(\\r?\\n){2,}/g, '$1'),\r\n                moderation: false,\r\n                params: this.props.params\r\n            }\r\n            this.postData(BACKEND.comment.new + this.props.activeMaster._id, comment, 'POST')\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({\r\n                snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({snackbar: null})}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            })\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}, method) {\r\n        return fetch(url, {\r\n            method: method,\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log(data.error)\r\n                } else {\r\n                    this.setState({\r\n                        isCommended: true, onModer: this.state.onModer + 1, snackbar:\r\n                            <Snackbar\r\n                                layout=\"vertical\"\r\n                                onClose={() => this.setState({snackbar: null})}\r\n                            >\r\n                                Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                            </Snackbar>\r\n                    })\r\n                }\r\n            })\r\n            .catch(e => {\r\n                if (this.state.snackbar) this.setState({snackbar: null})\r\n                this.setState({\r\n                    snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({snackbar: null})}\r\n                        >\r\n                            {e.message}\r\n                        </Snackbar>\r\n                })\r\n            })\r\n    }\r\n\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate\r\n        } else {\r\n            let date = new Date(comDate)\r\n            let hours = date.getHours()\r\n            if (hours < 10) hours = '0' + hours\r\n            let minutes = date.getMinutes()\r\n            if (minutes < 10) minutes = '0' + minutes\r\n            let date1 = date.getDate()\r\n            if (date1 < 10) date1 = '0' + date1\r\n            let month = date.getMonth()\r\n            if (month < 10) month = '0' + month\r\n            return date1 + '.' + month + '.' + date.getFullYear() + ' в ' + hours + ':' + minutes\r\n        }\r\n    }\r\n\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </Div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={this.getDate(comment.date)}\r\n                            before={<Avatar size={40} src={comment.user.avatarLink}/>}\r\n                        >\r\n                            {comment.user.firstname + ' ' + comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{\r\n                            comment.moderation === true ? comment.body :\r\n                                <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                        }\r\n                        </Cell>\r\n                        <Cell indicator={<RatingStars countStars={comment.rating}/>}>Оценка</Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            })\r\n        }\r\n    };\r\n\r\n    validate() {\r\n        if (this.state.isLoad === true) {\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray', webkitUserSelect: 'none', userSelect: 'none'}}>Нельзя\r\n                        оставлять комментарий на самого себя</Div>\r\n                )\r\n            } else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray', webkitUserSelect: 'none', userSelect: 'none'}}>Вы уже\r\n                        оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                <Div style={{display: 'inline-flex'}}>\r\n                                    {\r\n                                        this.state.stars.map(star => {\r\n                                            return star\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            status={\r\n                                this.state.body.length > 0 ?\r\n                                    this.validCommentText(this.state.body) === true ? 'valid' : 'error' :\r\n                                    null\r\n                            }\r\n                            value={this.state.body}\r\n                            bottom={'Отзыв должен состоять от 20 до 100 символов. Сейчас ' + this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length + ' из 100.'}\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target\r\n        this.setState({[name]: value})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    this.state.onModer !== 0 ?\r\n                        <Cell indicator={this.state.onModer} before={<Icon24CommentOutline/>}>Отзывов на\r\n                            модерации</Cell> : null\r\n                }\r\n                {this.commentList()}\r\n                <Footer>{this.validate()}</Footer>\r\n                {this.state.snackbar}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps)(MastersComments)","import React from 'react'\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel, Footer, PromoBanner\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {connect} from \"react-redux\"\r\nimport {BACKEND} from \"../func/func\"\r\n\r\nclass News extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            feed: [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n            inGroup: false,\r\n            isFav: 0,\r\n            promo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        if (this.props.params) {\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers})\r\n            })\r\n        bridge.subscribe(e => {\r\n            if (!e.detail) {\r\n                return\r\n            }\r\n\r\n            const {type, data} = e.detail\r\n\r\n            if (type === 'VKWebAppGetAdsResult') {\r\n                this.setState({promo: data})\r\n            }\r\n\r\n        })\r\n        bridge.send(\"VKWebAppGetAds\", {})\r\n            .then(data => console.log('ads'))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true) {\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0) {\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={() => this.addToFav()}>В избранное</Button>}\r\n                />\r\n            )\r\n        } else {\r\n            return <Footer/>\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        const data = {\r\n            user_id: this.props.user.vkUid,\r\n            params: this.props.params\r\n        }\r\n        fetch(BACKEND.vkapi.isMember, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.ingroup === 1) {\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={() => this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed => {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{height: 96, backgroundColor: 'aliceblue'}}/>\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {this.props.master === null &&\r\n                    <Cell\r\n                        style={{borderRadius: '0 0 10px 10px'}}\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если Вы — мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <React.Fragment>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> :\r\n                            <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> :\r\n                            <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                    </React.Fragment>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        const {user} = this.props\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                <Group>\r\n                    <Placeholder\r\n                        icon={<Avatar\r\n                            src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\"\r\n                            size={70}/>}\r\n                        header=\"Привет!\"\r\n                    >\r\n                        У нас можно найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах\r\n                        пополняется ежедневно.\r\n                    </Placeholder>\r\n                    {this.userInfo(user)}\r\n                    {this.nowCounter()}\r\n                    {this.isMember()}\r\n                    {this.favApp()}\r\n                    {/*{this.feedList()}*/}\r\n                    {\r\n                        this.state.promo !== null ?\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <PromoBanner bannerData={this.state.promo}\r\n                                             onClose={() => this.setState({promo: null})}/>\r\n                            </Card> :\r\n                            null\r\n                    }\r\n                </Group>\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps)(News)","import React from 'react'\r\nimport {\r\n    Alert,\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardGrid,\r\n    Cell,\r\n    CellButton,\r\n    Checkbox,\r\n    Div,\r\n    Footer,\r\n    FormLayout,\r\n    FormLayoutGroup,\r\n    Group,\r\n    Input,\r\n    Link,\r\n    List,\r\n    Select,\r\n    Switch,\r\n    Textarea\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\"\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {changeTargetCity, regSetInvite} from \"../store/actions\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add'\r\nimport {connect} from \"react-redux\"\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down'\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up'\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: [],\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            qapi: false,\r\n            type: 'Частный мастер',\r\n            brand: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        if (this.props.regSet !== null) {\r\n            this.setState({\r\n                checkLicense: this.props.regSet.checkLicense,\r\n                description: this.props.regSet.description,\r\n                priceList: this.props.regSet.priceList,\r\n                type: this.props.regSet.type,\r\n                categories: this.props.regSet.categories,\r\n                brand: this.props.regSet.brand\r\n            })\r\n        } else {\r\n            this.getCategories()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const data = {}\r\n        data.checkLicense = this.state.checkLicense\r\n        data.description = this.state.description\r\n        data.priceList = this.state.priceList\r\n        data.type = this.state.type\r\n        data.categories = this.state.categories\r\n        data.brand = this.state.brand\r\n        this.props.regSetInvite(data)\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.props.setAlert(\r\n            <Alert\r\n                actionsLayout=\"vertical\"\r\n                actions={[{\r\n                    title: 'Удалить процедуру',\r\n                    autoclose: true,\r\n                    mode: 'destructive',\r\n                    action: () => this.onRemove(index),\r\n                }, {\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    mode: 'cancel'\r\n                }]}\r\n                onClose={() => this.props.setAlert(null)}\r\n            >\r\n                <h2>Подтвердите действие</h2>\r\n                <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n            </Alert>\r\n        )\r\n    };\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories})\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false})\r\n                })\r\n            })\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.state.type === 'Частный мастер') this.setState({brand: ''})\r\n            if (this.props.targetCity === 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.'\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20-ти символов.'\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать менее 200 символов.'\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.'\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.'\r\n            if (this.state.brand !== \"\") {\r\n                if (this.state.brand.length > 25) throw 'Длина названия организации ограничена 25 символами.'\r\n            }\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.'\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            }\r\n            let categories = this.state.categories\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function (subcat) {\r\n                        if (subcat.active === true) {\r\n                            cat.subcat.push(subcat._id)\r\n                            return subcat.active\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                )\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label})\r\n                    category.active = true\r\n                } else {\r\n                    category.active = false\r\n                }\r\n            })\r\n            let master = {\r\n                description: this.state.description,\r\n                type: this.state.type,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                priceList: this.state.priceList,\r\n                params: this.props.params\r\n            }\r\n            this.props.closeReg(master)\r\n        } catch (error) {\r\n            console.log(error)\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    validateNewProdTitle(newProdTitle) {\r\n        if (newProdTitle === undefined) {\r\n            return {status: false, error: 'Не заполнено название процедуры.'}\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20) {\r\n                return {status: false, error: 'Недопустимая длина заголовка.'}\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2) {\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'}\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody) {\r\n        if (newProdBody === undefined) {\r\n            return {status: false, error: 'Не заполнено описание процедуры.'}\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250) {\r\n                return {status: false, error: 'Недопустимая длина описания.'}\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5) {\r\n                    return {status: false, error: 'Недопустимая длина описания.'}\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice) {\r\n        if (newProdPrice === undefined) {\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'}\r\n        } else {\r\n            if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').trim().length > 5) {\r\n                return {\r\n                    status: false,\r\n                    error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'\r\n                }\r\n            } else {\r\n                if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').trim().length < 1) {\r\n                    return {\r\n                        status: false,\r\n                        error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'\r\n                    }\r\n                } else {\r\n                    if (Number(newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')) < 0) {\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'}\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle)\r\n            if (!title.status) throw title.error\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody)\r\n            if (!body.status) throw body.error\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice)\r\n            if (!price.status) throw price.error\r\n\r\n            let priceList = this.state.priceList\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice.replace(/^0+/, ''))\r\n            })\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''})\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)]\r\n        this.setState({priceList: priceList})\r\n    };\r\n    permMessage = () => {\r\n        bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({statusMessage: result.result})\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target\r\n        const indexCat = target.name\r\n        const indexSubcat = target.id\r\n        let categories = this.state.categories\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active\r\n        this.setState({categories: categories})\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function (item) {\r\n                if (item.active === true) {\r\n                    return item.active\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        )\r\n        return countMass.length\r\n    };\r\n\r\n    handleChange(event) {\r\n        let {name, value} = event.target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Group>\r\n                <Group>\r\n                    <CardGrid>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={this.props.changeCity}\r\n                                indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                            >\r\n                                Ваш город\r\n                            </Cell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                    {\r\n                        this.state.statusMessage === false ?\r\n                            <Cell\r\n                                multiline\r\n                                asideContent={<Button mode=\"outline\" onClick={this.permMessage}>Разрешить</Button>}\r\n                                bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                            >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                            </Cell> :\r\n                            null\r\n                    }\r\n                </Group>\r\n                <FormLayout>\r\n                    <Textarea\r\n                        name={'description'}\r\n                        bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                        top=\"О себе\"\r\n                        status={\r\n                            this.state.description.replace(/ +/g, ' ').trim().length > 0 ?\r\n                                this.state.description.replace(/ +/g, ' ').trim().length > 19 && this.state.description.replace(/ +/g, ' ').trim().length < 201 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        value={this.state.description}\r\n                        onChange={this.handleChange}/>\r\n                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                     bottom=\"Укажите вид работы, в соответствии с тем, что Вы выполняете. Так Вас будет проще найти.\"\r\n                                     id={'category'}>\r\n                        {\r\n                            this.state.categories.map((category, i) => {\r\n                                return (\r\n                                    <Group key={category._id}>\r\n                                        <Cell name={category._id}\r\n                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                              indicator={\r\n                                                  'Выбрано: ' + this.counter(i)\r\n                                              }\r\n                                              asideContent={this.state[category._id] ? <Icon16Up/> : <Icon16Down/>}\r\n                                        >\r\n                                            {category.label}\r\n                                        </Cell>\r\n                                        {this.state[category._id] &&\r\n                                        <Div>\r\n                                            {\r\n                                                category.subcat.map((subcategory, index, category) => {\r\n                                                    return (\r\n                                                        <Cell\r\n                                                            key={index}\r\n                                                            asideContent={\r\n                                                                <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                            }>\r\n                                                            {subcategory.label}\r\n                                                        </Cell>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </Div>\r\n                                        }\r\n                                    </Group>\r\n                                )\r\n                            })\r\n                        }\r\n                    </FormLayoutGroup>\r\n                </FormLayout>\r\n                <Group title={'Прайс-лист'}>\r\n                    {this.state.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут\r\n                        связаться с Вами.</Cell>\r\n                    }\r\n                    <CardGrid>\r\n                        {this.state.priceList.map((item, index) => (\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell\r\n                                    key={item}\r\n                                    multiline\r\n                                >\r\n                                    <Cell\r\n                                        description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                    <Cell description=\"Краткое описание процедуры\"\r\n                                          multiline>{this.state.priceList[index].body}</Cell>\r\n                                    <Cell\r\n                                        description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            this.deleteProcedure(index)\r\n                                        }}\r\n                                        size=\"xl\"\r\n                                        mode=\"destructive\"\r\n                                    >Удалить</Button>\r\n                                </Cell>\r\n                            </Card>\r\n                        ))}\r\n                    </CardGrid>\r\n                    {this.state.add ?\r\n                        <Div>\r\n                            <Cell description=\"Добавления нового элемента\" multiline>\r\n                                <List>\r\n                                    <Cell\r\n                                        description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length + \"/20\"}>\r\n                                        <Input\r\n                                            require\r\n                                            status={\r\n                                                this.state.newProdTitle.length > 0 ?\r\n                                                    this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error' :\r\n                                                    null\r\n                                            }\r\n                                            name=\"newProdTitle\"\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        description={this.state.newProdBody.replace(/ +/g, ' ').trim().length + \"/250\"}>\r\n                                        <Textarea\r\n                                            require\r\n                                            status={\r\n                                                this.state.newProdBody.length > 0 ?\r\n                                                    this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error' :\r\n                                                    null\r\n                                            }\r\n                                            name=\"newProdBody\"\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        description={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').trim().length + \"/5\"}>\r\n                                        <Input\r\n                                            require\r\n                                            status={\r\n                                                this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').length > 0 ?\r\n                                                    this.validateNewProdPrice(this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')).status ? 'valid' : 'error' :\r\n                                                    null\r\n                                            }\r\n                                            name=\"newProdPrice\"\r\n                                            type=\"number\"\r\n                                            value={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                </List>\r\n                            </Cell>\r\n                            <Div style={{display: 'flex'}}>\r\n                                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                        onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                <Button size=\"l\" stretched mode=\"destructive\"\r\n                                        onClick={() => this.addProd(false)}>Отменить</Button>\r\n                            </Div>\r\n                        </Div> :\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    }\r\n                </Group>\r\n                <FormLayout>\r\n                    <Select\r\n                        name={'type'}\r\n                        top=\"Выберите тип оказания услуг\"\r\n                        value={this.state.type}\r\n                        bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <option value=\"Частный мастер\">Частный мастер</option>\r\n                        <option value=\"Организация\">Организация</option>\r\n                    </Select>\r\n                    {\r\n                        this.state.type === 'Организация' &&\r\n                        <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                            <Input\r\n                                name={'brand'}\r\n                                type=\"text\"\r\n                                status={\r\n                                    this.state.brand.length > 0 ?\r\n                                        this.state.brand.length < 26 ? 'valid' : 'error' :\r\n                                        null\r\n                                }\r\n                                value={this.state.brand}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormLayoutGroup>\r\n                    }\r\n                    <Checkbox checked={this.state.checkLicense}\r\n                              onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                        c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                    <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                </FormLayout>\r\n                <Footer/>\r\n            </Group>\r\n        )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params,\r\n        regSet: state.regSet\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        regSetInvite: bindActionCreators(regSetInvite, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite)","import React from 'react'\r\nimport {\r\n    Separator,\r\n    Avatar,\r\n    Cell,\r\n    List,\r\n    Group,\r\n    Banner,\r\n    Button,\r\n    Card,\r\n    CardGrid,\r\n    RichCell,\r\n    Caption, Switch, Spinner\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story'\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like'\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search'\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {connect} from \"react-redux\"\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline'\r\nimport Icon24StoryOutline from '@vkontakte/icons/dist/24/story_outline'\r\nimport {BACKEND} from \"../func/func\"\r\nimport Icon24List from '@vkontakte/icons/dist/24/list'\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            connection: false,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0,\r\n            promo: null,\r\n            notifyStatus: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.vkapi.notyStatus + this.props.params.vk_user_id)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({notifyStatus: res})\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n        bridge.subscribe(e => {\r\n            if (!e.detail) {\r\n                return\r\n            }\r\n\r\n            const {type, data} = e.detail\r\n\r\n            if (type === 'VKWebAppGetAdsResult') {\r\n                this.setState({promo: data})\r\n            }\r\n\r\n            if (type === 'VKWebAppGetAdsFailed') {\r\n                console.log(data.error_data)\r\n            }\r\n\r\n            if (type === 'VKWebAppShowWallPostBoxResult') {\r\n                fetch(BACKEND.vkapi.repost + this.props.master.vkUid)\r\n            }\r\n\r\n            if (type === 'VKWebAppShowStoryBoxLoadFinish') {\r\n                fetch(BACKEND.vkapi.stories + data.story_owner_id)\r\n            }\r\n\r\n            if (type === 'VKWebAppDenyNotificationsResult') {\r\n                this.setState({notifyStatus: false})\r\n            }\r\n\r\n            if (type === 'VKWebAppAllowNotificationsResult') {\r\n                if (data.result === true) this.setState({notifyStatus: true})\r\n            }\r\n        })\r\n        bridge.send(\"VKWebAppGetAds\", {})\r\n            .then(data => console.log('Ads'))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    notifyChange = () => {\r\n        if (this.state.notifyStatus) {\r\n            bridge.send(\"VKWebAppDenyNotifications\")\r\n        } else {\r\n            bridge.send(\"VKWebAppAllowNotifications\")\r\n        }\r\n    }\r\n\r\n    wallPost = () => {\r\n        const link = 'https://vk.com/app7170938'\r\n        let prodsArr = this.props.master.priceList.map(prod => {\r\n            return '&#9989;' + prod.title + '\\n'\r\n        })\r\n        let prods = prodsArr.join('')\r\n        bridge.send(\"VKWebAppShowWallPostBox\", {\r\n            \"attachments\": link + \"#masterid=\" + this.props.master._id,\r\n            \"message\": \"&#128522; Приглашаю записаться на: \\n\" + prods + \"по специальным условиям в приложении Навигатор красоты. \\n\",\r\n            \"owner_id\": this.props.master.vkUid,\r\n            \"copyright\": link\r\n        })\r\n    }\r\n\r\n    storiesPost = () => {\r\n        bridge.send(\"VKWebAppShowStoryBox\", {\r\n            \"background_type\": \"image\",\r\n            \"url\": \"https://sun9-76.userapi.com/9CA7Ap-SWJm-bdeu9OWh1iXJP5BkaSbtx3zfKA/jcRS6sqPaP0.jpg\",\r\n            \"locked\": true,\r\n            \"attachment\": {\r\n                \"text\": \"view\",\r\n                \"type\": \"url\",\r\n                \"url\": \"https://vk.com/app7170938#masterid=\" + this.props.master._id\r\n            },\r\n            \"stickers\": [\r\n                {\r\n                    \"sticker_type\": \"renderable\",\r\n                    \"sticker\": {\r\n                        \"transform\": {\r\n                            \"relation_width\": 0.9,\r\n                            \"translation_y\": 0.25\r\n                        },\r\n                        \"can_delete\": 0,\r\n                        \"content_type\": \"image\",\r\n                        \"url\": \"https://sun9-11.userapi.com/W7ljJxZlpaMD9EPafPeujRRV61xv7evo4P3DrA/f1HJkZgc7W0.jpg\",\r\n                        \"clickable_zones\": [\r\n                            {\r\n                                // \"action_type\": \"app\",\r\n                                \"action_type\": \"link\",\r\n                                \"action\": {\r\n                                    \"link\": \"https://vk.com/app7170938#masterid=\" + this.props.master._id,\r\n                                    \"tooltip_text_key\": \"tooltip_open_page\"\r\n                                },\r\n                                \"clickable_area\": [\r\n                                    {\r\n                                        \"x\": 0,\r\n                                        \"y\": 0\r\n                                    },\r\n                                    {\r\n                                        \"x\": 884,\r\n                                        \"y\": 0\r\n                                    },\r\n                                    {\r\n                                        \"x\": 884,\r\n                                        \"y\": 196\r\n                                    },\r\n                                    {\r\n                                        \"x\": 0,\r\n                                        \"y\": 196\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                }]\r\n        })\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            if (this.props.master.moderation.reasons.length > 0) {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size=\"xl\">\r\n                            <Cell description={'Их необходимо исправить'}>При модерации обнаружены ошибки:</Cell>\r\n                            {\r\n                                this.props.master.moderation.reasons.map((reason, index) => {\r\n                                    return <Cell key={index}>{reason}</Cell>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size=\"xl\">\r\n                            <Cell multiline>Ваш профиль на проверке. В течение суток он будет доступен в поиске.</Cell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => console.log('ok'))\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data => console.log(data))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Group separator={'hide'}>\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar src={this.props.user.avatarLink} size={62}/>}\r\n                                text={\r\n                                    <Caption level=\"2\" weight=\"regular\" style={{marginBottom: 15}}>\r\n                                        {this.props.master ? this.props.master.type : 'Пользователь'}\r\n                                    </Caption>\r\n                                }\r\n                                caption={this.props.master && this.props.master.location.city.title}\r\n                                after={this.props.master !== null && <Icon24Write onClick={this.props.openSetting}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </RichCell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                </Group>\r\n                {this.props.master !== null && this.checkModeration()}\r\n                <Group title=\"Основное\" separator={'hide'}>\r\n                    <List>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Like/>}\r\n                            onClick={this.props.openFavourite}\r\n                        >Избранное</Cell>\r\n                    </List>\r\n                </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={() => this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.props.master !== null &&\r\n                <Group title=\"Меню мастера\">\r\n                    <Separator style={{margin: '12px 0'}}/>\r\n                    <List>\r\n                        <Cell\r\n                            asideContent={\r\n                                this.state.notifyStatus === null ?\r\n                                    <Spinner size=\"small\"/> :\r\n                                    <Switch\r\n                                        name={'notify'}\r\n                                        onChange={this.notifyChange}\r\n                                        checked={this.state.notifyStatus}/>\r\n                            }>\r\n                            Push-уведомления о заявках\r\n                        </Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24List/>}\r\n                            onClick={this.props.openHistory}\r\n                        >История заявок</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Story/>}\r\n                            onClick={this.props.openMasterPhoto}\r\n                        >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search/>}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                        <Cell\r\n                            before={<Icon24ShareOutline/>}\r\n                            onClick={() => this.wallPost()}\r\n                        >Больше просмотров</Cell>\r\n                        <Cell\r\n                            before={<Icon24StoryOutline/>}\r\n                            onClick={() => this.storiesPost()}\r\n                        >Разместить в истории</Cell>\r\n                    </List>\r\n                </Group>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps)(Lk)","import React from 'react'\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Link, Cell, Footer, Group, Div\r\n} from \"@vkontakte/vkui\"\r\nimport '@vkontakte/vkui/dist/vkui.css'\r\nimport {BACKEND} from \"../func/func\"\r\nimport Head from \"../elements/panelHeader\"\r\nimport {connect} from \"react-redux\"\r\n\r\nclass History extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            connectionList: [],\r\n            isLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.history, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify({params: this.props.params}),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => this.setState({connectionList: res, isLoaded: true}))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    getDate(comDate) {\r\n        let date = new Date(comDate)\r\n        let hours = date.getHours()\r\n        if (hours < 10) hours = '0' + hours\r\n        let minutes = date.getMinutes()\r\n        if (minutes < 10) minutes = '0' + minutes\r\n        let date1 = date.getDate()\r\n        if (date1 < 10) date1 = '0' + date1\r\n        let month = date.getMonth()\r\n        if (month < 10) month = '0' + month\r\n        return date1 + '.' + month + '.' + date.getFullYear() + ' в ' + hours + ':' + minutes\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title=\"История заявок\"\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Spinner size=\"large\" style={{marginTop: 20}}/>}\r\n                        header={'Ищем-ищем...'}\r\n                    />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title=\"История\"\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.connectionList.map(connect => {\r\n                                return (\r\n                                    <Div>\r\n                                        <RichCell\r\n                                            before={<Avatar size={72} src={connect.user.avatarLink}/>}\r\n                                            text={connect.prod}\r\n                                            caption={this.getDate(connect.date)}\r\n                                            //bottom={<Button mode=\"destructive\">В черный список</Button>}\r\n                                        >\r\n                                            {connect.user.name}\r\n                                        </RichCell>\r\n                                        <Cell><Link href={\"https://vk.com/id\" + connect.user.vkUid}>Ссылка на страницу\r\n                                            ВКонтакте</Link></Cell>\r\n                                        <Cell>Номер телефона - {connect.user.phone}</Cell>\r\n                                    </Div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <Footer style={{webkitUserSelect: 'none', userSelect: 'none'}}>На этом все. Записей всего\r\n                            - {this.state.connectionList.length}.</Footer>\r\n                    </Group>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps)(History)","import React from 'react'\r\nimport {\r\n    Group,\r\n    Div,\r\n    File,\r\n    FormLayout,\r\n    CardGrid,\r\n    Card,\r\n    Snackbar,\r\n    Cell,\r\n    PanelSpinner,\r\n    Spinner,\r\n    CellButton, Alert\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js'\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera'\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport fetchJsonp from \"fetch-jsonp\"\r\nimport {connect} from \"react-redux\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {setMaster} from \"../store/actions\"\r\nimport Icon28WriteSquareOutline from '@vkontakte/icons/dist/28/write_square_outline'\r\n\r\nclass Portfolio extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: [],\r\n            deleteMode: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({images: this.props.master.photos, isLoad: true})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    openSnack(text) {\r\n        if (this.state.snackbar) return\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log('ok'))\r\n    }\r\n\r\n    deletePhoto = (link) => {\r\n        this.props.setAlert(\r\n            <Alert\r\n                actionsLayout=\"vertical\"\r\n                actions={[{\r\n                    title: 'Удалить фотографию',\r\n                    autoclose: true,\r\n                    mode: 'destructive',\r\n                    action: () => setTimeout(this.delete(link), 500),\r\n                }, {\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    mode: 'cancel'\r\n                }]}\r\n                onClose={() => this.props.setAlert(null)}\r\n            >\r\n                <h2>Подтвердите действие</h2>\r\n                <p>Вы уверены, что хотите удалить выбранную фотографию?</p>\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    delete = (link) => {\r\n        this.setState({loading: true})\r\n        fetch(BACKEND.vkapi.delPhoto, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify({params: this.props.params, photo: link}),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    if (res.master.photos.length === 0) this.setState({deleteMode: false})\r\n                    this.setState({images: res.master.photos, loading: false})\r\n                    this.props.setMaster(res.master)\r\n                    this.props.setAlert(null)\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    async getAlbum() {\r\n        const user_albums = encodeURI('https://api.vk.com/method/photos.getAlbums?owner_id=' + this.props.params.vk_user_id + '&access_token=' + this.state.token + '&v=5.103')\r\n        let album_id = null\r\n        await fetchJsonp(user_albums)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.response) {\r\n                    res.response.items.map(album => {\r\n                        if (album.title === \"Навигатор красоты\") {\r\n                            album_id = album.id\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n        if (album_id === null) {\r\n            return {status: 'none'}\r\n        } else {\r\n            return {status: true, album_id: album_id}\r\n        }\r\n    };\r\n\r\n\r\n    uploadPhoto = async () => {\r\n        try {\r\n            let token = await this.getToken();\r\n            if (token === null) throw 'Ошибка. Не получен токен пользователя.'\r\n            let selectedFile = document.getElementById('input').files[0]\r\n            if (!selectedFile.type.match('image.*')) throw 'Допустимо загружать только изображения.'\r\n            let getAlbum = await this.getAlbum()\r\n            if (getAlbum.status === false) throw 'Не получен альбом для загрузки.'\r\n            let album\r\n            if (getAlbum.status === 'none') {\r\n                const create_album = encodeURI('https://api.vk.com/method/photos.createAlbum?title=Навигатор красоты&access_token=' + this.state.token + '&v=5.103')\r\n                await fetchJsonp(create_album)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        console.log('Создали альбом в ИД ', res.response.id)\r\n                        album = res.response.id\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            } else {\r\n                album = getAlbum.album_id\r\n            }\r\n\r\n            const uploadServer = await this.getUploadServer(this.state.token, album)\r\n\r\n            if (uploadServer.status === false) throw 'Ошибка. Не получена ссылка на загрузку фото.'\r\n\r\n            this.setState({loading: true})\r\n            const formData = new FormData()\r\n            formData.append('master', this.props.master.firstname + ' ' + this.props.master.lastname)\r\n            formData.append('uploadUrl', uploadServer.url)\r\n            formData.append('token', this.state.token)\r\n            formData.append('file1', selectedFile)\r\n            formData.append('masterId', this.props.master._id)\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        this.setState({loading: false})\r\n                        this.openSnack(res.error)\r\n                    } else {\r\n                        fetchJsonp(res.saveUrl, {\r\n                            mode: 'no-cors',\r\n                            method: 'GET'\r\n                        })\r\n                            .then(result => result.json())\r\n                            .then(result => {\r\n                                if (result.error) {\r\n                                    this.setState({loading: false})\r\n                                    this.openSnack('При загрузке фото возникла ошибка.')\r\n                                } else {\r\n                                    let savePh = {\r\n                                        url: result.response[0].sizes[4].url,\r\n                                        params: this.props.params\r\n                                    }\r\n                                    fetch(BACKEND.vkapi.savePhoto, {\r\n                                        method: 'POST',\r\n                                        mode: 'cors',\r\n                                        cache: 'no-cache',\r\n                                        credentials: 'same-origin',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json',\r\n                                        },\r\n                                        redirect: 'follow',\r\n                                        referrer: 'no-referrer',\r\n                                        body: JSON.stringify(savePh)\r\n                                    })\r\n                                        .then(res => res.json())\r\n                                        .then(res => {\r\n                                            if (res.error) {\r\n                                                this.setState({loading: false})\r\n                                                this.openSnack(res.error)\r\n                                            } else {\r\n                                                let imgArr = this.state.images\r\n                                                imgArr.unshift(res.img)\r\n                                                this.openSnack('Фото успешно загружено.')\r\n                                                this.setState({images: imgArr, loading: false})\r\n                                            }\r\n                                        })\r\n                                        .catch(e => {\r\n                                            this.setState({loading: false})\r\n                                            console.log(e)\r\n                                        })\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                this.setState({loading: false})\r\n                                console.log(e)\r\n                            })\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    this.setState({loading: false})\r\n                    this.openSnack('Ошибка при загрузке.')\r\n                })\r\n        } catch (e) {\r\n            console.log(e)\r\n            document.getElementById(\"input\").value = \"\"\r\n            this.openSnack(e || 'Какая-то ошибка. Попробуем еще разок?')\r\n        }\r\n\r\n    };\r\n\r\n    getUploadServer = async (token, album) => {\r\n        return await bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"album_id\": album, \"v\": \"5.103\", \"access_token\": token}\r\n        })\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url})\r\n                return {status: true, url: result.response.upload_url}\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                return {status: false}\r\n            })\r\n\r\n    };\r\n\r\n    getToken = async () => {\r\n        return await bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(result => {\r\n                if (result.access_token) {\r\n                    this.setState({token: result.access_token})\r\n                    return result.access_token\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                return null\r\n            })\r\n    };\r\n\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={\r\n                                        this.state.deleteMode ?\r\n                                            () => this.deletePhoto(image) :\r\n                                            () => this.openShowImages(this.state.images, index)\r\n                                    }\r\n                                >\r\n                                    <div style={{\r\n                                        height: 96,\r\n                                        backgroundImage: 'url(' + image + ')',\r\n                                        backgroundSize: 'cover',\r\n                                        backgroundPosition: 'center 35%',\r\n                                        backgroundRepeat: 'no-repeat',\r\n                                        borderRadius: 13\r\n                                    }}>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.deleteMode ?\r\n                                            <div style={{color: 'red', textAlign: 'center'}}>Удалить</div> :\r\n                                            null\r\n                                    }\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В Вашем портфолио нет фотографий.</Cell>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                    {\r\n                        this.state.loading ?\r\n                            <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}><Cell multiline>Подождите\r\n                                немного...</Cell><PanelSpinner/></Div> : <Group title=\"\">\r\n                                <FormLayout>\r\n                                    <File\r\n                                        accept=\"image/*\"\r\n                                        top=\"Добавьте фото в портфолио\"\r\n                                        before={<Icon24Camera/>}\r\n                                        size=\"l\"\r\n                                        onChange={this.uploadPhoto}\r\n                                        id=\"input\"\r\n                                    >\r\n                                        Открыть галерею\r\n                                    </File>\r\n                                    {\r\n                                        this.state.images.length > 0 ?\r\n                                            this.state.deleteMode === false ?\r\n                                                <CellButton onClick={() => this.setState({deleteMode: true})} before={\r\n                                                    <Icon28WriteSquareOutline/>}>Редактировать</CellButton> :\r\n                                                <CellButton onClick={() => this.setState({deleteMode: false})}\r\n                                                            before={<Icon28WriteSquareOutline/>}>Завершить\r\n                                                    редактирование</CellButton>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </FormLayout>\r\n                                <Group separator=\"hide\">\r\n                                    {this.gridPhoto()}\r\n                                </Group>\r\n                            </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Portfolio)","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react'\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    List,\r\n    Alert,\r\n    platform, withModalRootContext, Snackbar, Placeholder, Spinner, Select\r\n} from \"@vkontakte/vkui\"\r\nimport '@vkontakte/vkui/dist/vkui.css'\r\nimport {BACKEND} from '../func/func'\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add'\r\nimport {connect} from \"react-redux\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {setMaster} from \"../store/actions\"\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss'\r\nimport Head from \"../elements/panelHeader\"\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down'\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up'\r\nimport HeadCity from \"../elements/headCity\"\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline'\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null,\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            editProdTitle: '',\r\n            editProdBody: '',\r\n            editProdPrice: '',\r\n            isChange: false,\r\n            type: 'Частный мастер',\r\n            brand: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user.isMaster === true) {\r\n            if (this.props.master.brand !== null) this.setState({brand: this.props.master.brand})\r\n            this.setState({\r\n                master: this.props.master,\r\n                description: this.props.master.description,\r\n                type: this.props.master.type\r\n            })\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories})\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false})\r\n                    })\r\n                    this.setActive(this.props.master.categories.subcat)\r\n                })\r\n                .catch(e => {\r\n                    this.setState({warnConnection: true})\r\n                })\r\n            if (this.props.master.changed) this.setState({isChange: true})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveChanges()\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity) {\r\n            let master = this.state.master\r\n            master.location.city = this.props.targetCity\r\n            this.setState({master: master})\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        try {\r\n            if (this.state.type === 'Частный мастер') this.setState({brand: ''})\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.'\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.'\r\n            if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.'\r\n            if (this.state.brand !== \"\") {\r\n                if (this.state.brand.length > 25) throw 'Длина названия организации ограничена 25 символами.'\r\n            }\r\n            if (this.state.isChange === true) {\r\n                let master = this.state.master\r\n                master.type = this.state.type\r\n                master.brand = this.state.brand\r\n                master.params = this.props.params\r\n                this.patchData(BACKEND.masters.all + this.state.master._id, master)\r\n                this.props.setMaster(this.state.master)\r\n            }\r\n        } catch (e) {\r\n            this.props.snackbarDismiss(e)\r\n        }\r\n    };\r\n\r\n    setActive(subcat) {\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false})\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true\r\n                    }\r\n                })\r\n            })\r\n            this.setState({isLoad: true})\r\n        }\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.setState({isChange: true})\r\n        this.props.setAlert(\r\n            <Alert\r\n                actionsLayout=\"vertical\"\r\n                actions={[{\r\n                    title: 'Удалить процедуру',\r\n                    autoclose: true,\r\n                    mode: 'destructive',\r\n                    action: () => this.onRemove(index),\r\n                }, {\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    mode: 'cancel'\r\n                }]}\r\n                onClose={() => this.props.setAlert(null)}\r\n            >\r\n                <h2>Подтвердите действие</h2>\r\n                <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n            </Alert>\r\n        )\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n        this.setState({isChange: true})\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        console.log(activeMaster)\r\n        this.state.categories.map(category => {\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length\r\n            category.active = count > 0\r\n        })\r\n        activeMaster.description = this.state.description\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        }\r\n        this.state.categories.map(category => {\r\n            if (category.active === true) {\r\n                activeMaster.categories.category.push({id: category._id, label: category.label})\r\n            }\r\n            category.subcat.map(subcat => {\r\n                if (subcat.active === true) {\r\n                    activeMaster.categories.subcat.push(subcat._id)\r\n                }\r\n            })\r\n        })\r\n        return fetch(url, {\r\n            method: 'PATCH',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(activeMaster),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.props.setMaster(res.master)\r\n            })\r\n            .catch(e => console.log(e.message))\r\n    }\r\n\r\n    saveEdit = (index) => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.editProdTitle)\r\n            if (!title.status) throw title.error\r\n\r\n            let body = this.validateNewProdBody(this.state.editProdBody)\r\n            if (!body.status) throw body.error\r\n\r\n            let price = this.validateNewProdPrice(this.state.editProdPrice)\r\n            if (!price.status) throw price.error\r\n\r\n\r\n            const editProd = {\r\n                title: this.state.editProdTitle,\r\n                body: this.state.editProdBody,\r\n                price: Number(this.state.editProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, ''))\r\n            }\r\n\r\n            let master = this.state.master\r\n            master.priceList.splice(index, 1, editProd)\r\n            this.setState({master: master, editProdTitle: '', editProdBody: '', editProdPrice: '', edit: null})\r\n            this.setState({isChange: true})\r\n        } catch (error) {\r\n            this.props.snackbarDismiss(error)\r\n        }\r\n    };\r\n\r\n    visible = event => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let master = this.state.master\r\n        master[name] = !master[name]\r\n        this.setState({master: master})\r\n        this.props.setMaster(master)\r\n        this.setState({isChange: true})\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)]\r\n        this.setState({master: master})\r\n        this.setState({isChange: true})\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null})\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null})\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    validateNewProdTitle(newProdTitle) {\r\n        if (newProdTitle === undefined) {\r\n            return {status: false, error: 'Не заполнено название процедуры.'}\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20) {\r\n                return {status: false, error: 'Недопустимая длина заголовка.'}\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2) {\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'}\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody) {\r\n        if (newProdBody === undefined) {\r\n            return {status: false, error: 'Не заполнено описание процедуры.'}\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250) {\r\n                return {status: false, error: 'Недопустимая длина описания.'}\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5) {\r\n                    return {status: false, error: 'Недопустимая длина описания.'}\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice) {\r\n        if (newProdPrice === undefined) {\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'}\r\n        } else {\r\n            if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').trim().length > 5) {\r\n                return {\r\n                    status: false,\r\n                    error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'\r\n                }\r\n            } else {\r\n                if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').trim().length < 1) {\r\n                    return {\r\n                        status: false,\r\n                        error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'\r\n                    }\r\n                } else {\r\n                    if (Number(newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')) < 0) {\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'}\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle)\r\n            if (!title.status) throw title.error\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody)\r\n            if (!body.status) throw body.error\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice)\r\n            if (!price.status) throw price.error\r\n\r\n            let master = this.state.master\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, ''))\r\n            })\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''})\r\n            this.setState({isChange: true})\r\n        } catch (error) {\r\n            this.props.snackbarDismiss(error)\r\n        }\r\n    };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(subcat => {\r\n            if (subcat.active === true) {\r\n                return subcat.label\r\n            }\r\n        })\r\n        return countMass.length\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для\r\n                    возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target\r\n        const indexCat = target.name\r\n        const indexSubcat = target.id\r\n        let categories = this.state.categories\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active\r\n        this.setState({categories: categories})\r\n    };\r\n\r\n    statusProfile = () => {\r\n        if (this.state.master.moderation.status === false) {\r\n            return 'На модерации'\r\n        } else if (this.state.master.visible === false) {\r\n            return 'Ваш профиль не выводится в поиске'\r\n        } else {\r\n            return 'Ваш профиль доступен в поиске'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.warnConnection) {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={() => this.props.changeCity()}/>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56WifiOutline/>}\r\n                        header={'Что-то не так!'}\r\n                    >\r\n                        Проверьте интернет-соединение.\r\n                    </Placeholder>\r\n                </React.Fragment>\r\n            )\r\n        } else if (this.state.isLoad === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title=\"Настройки\"\r\n                        goBack={() => this.props.goBack('lk')}\r\n                    />\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Spinner size=\"large\" style={{marginTop: 20}}/>}\r\n                        header={'Загружаю...'}\r\n                    />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title=\"Настройки\"\r\n                        goBack={() => {\r\n                            try {\r\n                                if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.'\r\n                                if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.'\r\n                                if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.'\r\n                                this.props.goBack('lk')\r\n                            } catch (e) {\r\n                                this.props.snackbarDismiss(e)\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={this.statusProfile()}\r\n                        before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                    </Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => {\r\n                            try {\r\n                                if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.'\r\n                                if (this.state.description.replace(/ +/g, ' ').trim().length > 201) throw 'Блок \"О себе\" должен содержать не более 200 символов.'\r\n                                if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.'\r\n                                this.props.changeCity()\r\n                            } catch (e) {\r\n                                this.props.snackbarDismiss(e)\r\n                            }\r\n                        }\r\n                        }\r\n                        indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                    >\r\n                        Ваш город\r\n                    </Cell>\r\n                    <Group>\r\n                        {this.checkBan()}\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                        {this.state.master.priceList.length === 0 &&\r\n                        <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не\r\n                            смогут связаться с Вами.</Cell>\r\n                        }\r\n                        <CardGrid>\r\n                            {this.state.master.priceList.map((item, index) => (\r\n                                <Card size=\"l\" mode=\"shadow\" key={index}>\r\n                                    <Cell multiline>\r\n                                        <Cell\r\n                                            description=\"Название процедуры\">\r\n                                            {\r\n                                                this.state.edit === index ?\r\n                                                    <Input\r\n                                                        name=\"editProdTitle\"\r\n                                                        onChange={this.handleChange}\r\n                                                        defaultValue={this.state.master.priceList[index].title}\r\n                                                        value={this.state.editProdTitle}\r\n                                                        status={this.validateNewProdTitle(this.state.editProdTitle).status === true ? 'valid' : 'error'}\r\n                                                    /> :\r\n                                                    this.state.master.priceList[index].title\r\n                                            }\r\n                                        </Cell>\r\n                                        <Cell description=\"Краткое описание процедуры\"\r\n                                              multiline>\r\n                                            {\r\n                                                this.state.edit === index ?\r\n                                                    <Input\r\n                                                        name=\"editProdBody\"\r\n                                                        onChange={this.handleChange}\r\n                                                        defaultValue={this.state.master.priceList[index].body}\r\n                                                        value={this.state.editProdBody}\r\n                                                        status={this.validateNewProdBody(this.state.editProdBody).status ? 'valid' : 'error'}\r\n                                                    /> :\r\n                                                    this.state.master.priceList[index].body\r\n                                            }\r\n                                        </Cell>\r\n                                        <Cell\r\n                                            description=\"Минимальная цена за работу\">\r\n                                            {\r\n                                                this.state.edit === index ?\r\n                                                    <Input\r\n                                                        name=\"editProdPrice\"\r\n                                                        type=\"number\"\r\n                                                        onChange={this.handleChange}\r\n                                                        defaultValue={this.state.master.priceList[index].price}\r\n                                                        value={this.state.editProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')}\r\n                                                        status={this.validateNewProdPrice(this.state.editProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')).status ? 'valid' : 'error'}\r\n                                                    /> :\r\n                                                    this.state.master.priceList[index].price\r\n                                            }\r\n                                        </Cell>\r\n                                        {\r\n                                            this.state.edit === index ?\r\n                                                <Div style={{display: 'flex'}}>\r\n                                                    <Button\r\n                                                        stretched\r\n                                                        style={{marginRight: 8}}\r\n                                                        onClick={() => this.setState({edit: null})}\r\n                                                        size=\"l\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Отменить</Button>\r\n                                                    <Button\r\n                                                        size=\"l\"\r\n                                                        stretched\r\n                                                        onClick={() => this.saveEdit(index)}\r\n                                                        mode=\"secondary\"\r\n                                                    >Сохранить</Button>\r\n                                                </Div> :\r\n                                                <Div style={{display: 'flex'}}>\r\n                                                    <Button\r\n                                                        stretched\r\n                                                        style={{marginRight: 8}}\r\n                                                        onClick={() => this.deleteProcedure(index)}\r\n                                                        size=\"l\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Удалить</Button>\r\n                                                    <Button\r\n                                                        size=\"l\"\r\n                                                        stretched\r\n                                                        onClick={() => {\r\n                                                            this.setState({\r\n                                                                editProdTitle: this.state.master.priceList[index].title,\r\n                                                                editProdBody: this.state.master.priceList[index].body,\r\n                                                                editProdPrice: String(this.state.master.priceList[index].price),\r\n                                                                edit: index,\r\n                                                                add: false\r\n                                                            })\r\n                                                        }}\r\n                                                        mode=\"secondary\"\r\n                                                    >Редактировать</Button>\r\n                                                </Div>\r\n                                        }\r\n                                    </Cell>\r\n                                </Card>\r\n                            ))}\r\n                        </CardGrid>\r\n                        {this.state.add ?\r\n                            <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                <Cell description=\"Добавления нового элемента\" multiline>\r\n                                    <List>\r\n                                        <Cell\r\n                                            description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length + \"/20\"}>\r\n                                            <Input\r\n                                                require\r\n                                                status={\r\n                                                    this.state.newProdTitle.length > 0 ?\r\n                                                        this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error' :\r\n                                                        null\r\n                                                }\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Cell\r\n                                            description={this.state.newProdBody.replace(/ +/g, ' ').trim().length + \"/250\"}>\r\n                                            <Textarea\r\n                                                require\r\n                                                status={\r\n                                                    this.state.newProdBody.length > 0 ?\r\n                                                        this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error' :\r\n                                                        null\r\n                                                }\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Cell\r\n                                            description={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').trim().length + \"/5\"}>\r\n                                            <Input\r\n                                                require\r\n                                                status={\r\n                                                    this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').length > 0 ?\r\n                                                        this.validateNewProdPrice(this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')).status ? 'valid' : 'error' :\r\n                                                        null\r\n                                                }\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\"\r\n                                                value={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                    </List>\r\n                                </Cell>\r\n                                <Div style={{display: 'flex', webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                    <Button size=\"l\" stretched mode=\"destructive\" style={{marginRight: 8}}\r\n                                            onClick={() => this.setState({add: false})}>Отменить</Button>\r\n                                    <Button size=\"l\" stretched\r\n                                            onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                </Div>\r\n                            </Div> :\r\n                            <CellButton\r\n                                onClick={() => this.setState({add: true, edit: null})}\r\n                                before={<Icon24Add/>}\r\n                            >Добавить процедуру</CellButton>\r\n                        }\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description.replace(/ +/g, ' ').trim().length > 19 && this.state.description.replace(/ +/g, ' ').trim().length < 201 ? 'valid' : 'error'}\r\n                                bottom={this.state.description.replace(/ +/g, ' ').trim().length > 1 ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что Вы выполняете. Так Вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                                {\r\n                                    this.state.categories.map((category, i) => {\r\n                                        return (\r\n                                            <Group key={category._id}>\r\n                                                <Cell name={category._id}\r\n                                                      onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                      indicator={\r\n                                                          'Выбрано: ' + this.counter(i)\r\n                                                      }\r\n                                                      asideContent={this.state[category._id] ? <Icon16Up/> :\r\n                                                          <Icon16Down/>}\r\n                                                >\r\n                                                    {category.label}\r\n                                                </Cell>\r\n                                                {this.state[category._id] &&\r\n                                                <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                                    {\r\n                                                        category.subcat.map((subcategory, index, category) => {\r\n                                                            return (\r\n                                                                <Cell\r\n                                                                    key={index}\r\n                                                                    asideContent={\r\n                                                                        <Switch\r\n                                                                            name={i}\r\n                                                                            id={index}\r\n                                                                            onChange={(event) => {\r\n                                                                                this.setState({isChange: true});\r\n                                                                                this.checkSubcat(event)\r\n                                                                            }}\r\n                                                                            checked={subcategory.active}/>\r\n                                                                    }>\r\n                                                                    {subcategory.label}\r\n                                                                </Cell>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </Div>\r\n                                                }\r\n                                            </Group>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                top=\"Выберите тип оказания услуг\"\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                                <option value=\"Организация\">Организация</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input\r\n                                        name={'brand'}\r\n                                        type=\"text\"\r\n                                        status={\r\n                                            this.state.brand.length > 0 ?\r\n                                                this.state.brand.length < 26 ? 'valid' : 'error' :\r\n                                                null\r\n                                        }\r\n                                        value={this.state.brand}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </FormLayoutGroup>\r\n                            }\r\n                        </FormLayout>\r\n                    </Group>\r\n                    {this.props.snackbarLk}\r\n                </React.Fragment>\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext(Setting))","import React from 'react'\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid, Footer, Group\r\n} from \"@vkontakte/vkui\"\r\nimport '@vkontakte/vkui/dist/vkui.css'\r\nimport {BACKEND} from \"../func/func\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline'\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron'\r\nimport Head from \"../elements/panelHeader\"\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFavsMasters(this.props.user.favs)\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        let ids = {ids: favs}\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(ids),\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true})\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.setState({isLoaded: true})\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title=\"Избранное\"\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Spinner size=\"large\" style={{marginTop: 20}}/>}\r\n                        header={'Ищем-ищем...'}\r\n                    />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            if (this.state.mastersArr.error) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title=\"Избранное\"\r\n                            goBack={() => this.props.goBack()}\r\n                        />\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56LikeOutline/>}\r\n                            header={this.state.mastersArr.message}\r\n                        >Добавить мастера в этот список можно, нажав соответствующую кнопку в его профиле.\r\n                        </Placeholder>\r\n                    </React.Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title=\"Избранное\"\r\n                            goBack={() => this.props.goBack()}\r\n                        />\r\n                        <Group separator=\"hide\">\r\n                            {\r\n                                this.state.mastersArr.map(master => {\r\n                                    if ((master !== null)) { //если мастер не удален\r\n                                        return (\r\n                                            <React.Fragment>\r\n                                                <CardGrid key={master.vkUid}>\r\n                                                    <Card size=\"l\" mode=\"shadow\">\r\n                                                        <RichCell\r\n                                                            key={master._id}\r\n                                                            before={<Avatar size={72} src={master.avatarLink}/>}\r\n                                                            text={master.type}\r\n                                                            caption={master.location.city.title}\r\n                                                            after={<Icon16Chevron/>}\r\n                                                            onClick={() => this.props.openFavMasterOnId(master)}\r\n                                                        >\r\n                                                            {master.firstname} {master.lastname}\r\n                                                        </RichCell>\r\n                                                    </Card>\r\n                                                </CardGrid>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    }\r\n                                })\r\n                            }\r\n                            <Footer style={{webkitUserSelect: 'none', userSelect: 'none'}}>На этом все. Мастеров всего\r\n                                - {this.state.mastersArr.length}.</Footer>\r\n                        </Group>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props) {\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    before={<Avatar size={72} src={props.find.avatarLink}/>}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={() => props.openMasterOnId(props.find.masterId)}>На страницу\r\n                                мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image, i) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{\r\n                                        borderRadius: 13,\r\n                                        height: 96,\r\n                                        backgroundImage: 'url(' + image + ')',\r\n                                        backgroundSize: 'cover'\r\n                                    }}/>\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0' + hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0' + minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0' + date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0' + month;\r\n        return date1 + '.' + month + '.' + date.getFullYear() + ' в ' + hours + ':' + minutes;\r\n    }\r\n}\r\n\r\nexport default function FindList(props) {\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline/>}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу\r\n                мастеров, и скоро предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {BACKEND} from \"../func/func\"\r\nimport FindList from './components/findList'\r\nimport HeadCity from '../elements/headCity'\r\nimport {Footer, Placeholder, Spinner} from '@vkontakte/vkui'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {connect} from \"react-redux\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\"\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline'\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoad: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.findModelsList.length === 0) {\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, () => {\r\n                if (this.props.findModelsListScroll) {\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false}, () => this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset)\r\n    }\r\n\r\n    loadFind = () => {\r\n        fetch(BACKEND.findModel.onCity + this.props.user.location.country.id + '/' + this.props.targetCity.id)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                this.props.changeFindModelsList(find)\r\n                this.setState({findArr: find, isLoad: true})\r\n            })\r\n            .catch(e => this.setState({warnConnection: true}))\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult') {\r\n                    this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.warnConnection) {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={() => this.props.changeCity()}/>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56WifiOutline/>}\r\n                        header={'Что-то не так!'}\r\n                    >\r\n                        Проверьте интернет-соединение.\r\n                    </Placeholder>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n            )\r\n        } else if (this.state.isLoad === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={() => this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={() => this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel)","import React from 'react'\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator, Card, Snackbar, Spinner, Banner, Switch, Div, CardScroll, Footer\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\"\r\nimport FindCard from \"../findmodel/components/findCard\"\r\nimport {connect} from \"react-redux\"\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true,\r\n            targetImg: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.findModel.onMasterId + this.props.master._id)\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                if (find.length > 0) {\r\n                    let targetImg = []\r\n                    find[0].images.map(photo => {\r\n                        if (this.props.master.photos.includes(photo)) targetImg.push(photo)\r\n                    })\r\n                    this.setState({\r\n                        targetImg: targetImg,\r\n                        loadFind: find[0],\r\n                        body: find[0].body,\r\n                        visible: find[0].visible,\r\n                        error: '',\r\n                        isLoaded: true,\r\n                        selectvalue: find[0].sale,\r\n                        isActive: true\r\n                    })\r\n                } else {\r\n                    let error = <Cell multiline>У Вас нет активных постов о поиске</Cell>\r\n                    this.setState({error: error, isLoaded: true})\r\n                }\r\n            })\r\n    }\r\n\r\n    targetImg = (url) => {\r\n        try {\r\n            if (this.state.targetImg.includes(url)) {\r\n                let targetImg = this.state.targetImg\r\n                let index = targetImg.indexOf(url)\r\n                if (index > -1) {\r\n                    targetImg.splice(index, 1)\r\n                } else targetImg.splice(0, index)\r\n                this.setState({targetImg: targetImg})\r\n            } else {\r\n                let targetImg = this.state.targetImg\r\n                if (targetImg.length > 2) throw 'Выделить можно только 3 фотографии.'\r\n                targetImg.push(url)\r\n                this.setState({targetImg: targetImg})\r\n            }\r\n        } catch (e) {\r\n            this.openSnack(e)\r\n        }\r\n    }\r\n\r\n    openSnack(text) {\r\n        if (this.state.snackbar) return\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value})\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target\r\n        this.setState({[name]: value})\r\n    };\r\n    save = () => {\r\n        try {\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length === 0) throw 'Пустое сообщение недопустимо.'\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length > 250) throw 'Максимальная длина сообщения - 250 символов.'\r\n            if (this.state.targetImg.length < 3) throw 'Необходимо выбрать 3 фотографии из портфолио.'\r\n            if (this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.'\r\n            if (this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.'\r\n\r\n            if (this.state.isActive === true) {\r\n                let find = this.state.loadFind\r\n                find.body = this.state.body\r\n                find.images = this.state.targetImg\r\n                find.sale = this.state.selectvalue\r\n                find.visible = this.state.visible\r\n                find.params = this.props.params\r\n                this.patchData(BACKEND.findModel.new + this.state.loadFind._id, find)\r\n            } else {\r\n                let find = this.state.loadFind\r\n                find.body = this.state.body\r\n\r\n                find.images = this.state.targetImg\r\n                find.sale = this.state.selectvalue\r\n                find.visible = this.state.visible\r\n                find.params = this.props.params\r\n                fetch(BACKEND.findModel.new, {\r\n                    method: 'POST',\r\n                    mode: 'cors',\r\n                    cache: 'no-cache',\r\n                    credentials: 'same-origin',\r\n                    headers: {'Content-Type': 'application/json',},\r\n                    redirect: 'follow',\r\n                    referrer: 'no-referrer',\r\n                    body: JSON.stringify(find),\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        this.setState({loadFind: res.find, isActive: true})\r\n                        if (res.mStatus === false) {\r\n                            this.setState({visible: false})\r\n                            this.openSnack('Объявление о поиске модели создано, но пока не показывается. Его можно активировать сразу после прохождения модерации профиля мастера.')\r\n                        } else {\r\n                            this.openSnack('Объявление о поиске модели успешно создано.')\r\n                        }\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            }\r\n        } catch (e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.openSnack('Информация успешно обновлена.')\r\n            })\r\n            .catch(e => {\r\n                this.openSnack('Не удалось обновить данные.')\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate\r\n        } else {\r\n            let date = new Date(comDate)\r\n            let hours = date.getHours()\r\n            if (hours < 10) hours = '0' + hours\r\n            let minutes = date.getMinutes()\r\n            if (minutes < 10) minutes = '0' + minutes\r\n            let date1 = date.getDate()\r\n            if (date1 < 10) date1 = '0' + date1\r\n            let month = date.getMonth()\r\n            if (month < 10) month = '0' + month\r\n            return date1 + '.' + month + '.' + date.getFullYear() + ' в ' + hours + ':' + minutes\r\n        }\r\n    }\r\n\r\n    postData(url = '', data = {}) {\r\n        fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spinner size=\"large\" style={{marginTop: 20}}/>)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Banner\r\n                        header=\"Мастер ищет модель\"\r\n                        subheader=\"Правила размещения\"\r\n                        text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                    />\r\n                    <FormLayout>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            top=\"Основное сообщение\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {\r\n                            this.props.master.photos.length > 0 ?\r\n                                <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.props.master.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.targetImg(photoUrl)}\r\n                                                    >\r\n                                                        {\r\n                                                            this.state.targetImg.includes(photoUrl) ?\r\n                                                                <div style={{\r\n                                                                    width: 144,\r\n                                                                    height: 96,\r\n                                                                    backgroundImage: 'url(' + photoUrl + ')',\r\n                                                                    backgroundSize: 'cover',\r\n                                                                    borderRadius: 13\r\n                                                                }}>\r\n                                                                    <div style={{\r\n                                                                        backgroundColor: 'grey',\r\n                                                                        borderRadius: '13px 13px 0 0',\r\n                                                                        textAlign: 'center'\r\n                                                                    }}>Выбрано\r\n                                                                    </div>\r\n                                                                </div> :\r\n                                                                <div style={{\r\n                                                                    width: 144,\r\n                                                                    height: 96,\r\n                                                                    backgroundImage: 'url(' + photoUrl + ')',\r\n                                                                    backgroundSize: 'cover',\r\n                                                                    borderRadius: 13\r\n                                                                }}/>\r\n                                                        }\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div> :\r\n                                <Cell multiline>У Вас в портфолио нет фото, разместить объявление о поиске можно, имея в\r\n                                    портфолио не менее 3-х фотографий.</Cell>\r\n                        }\r\n\r\n                        <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\"\r\n                                placeholder=\"Выберите тип акции\">\r\n                            <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                            <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                            <option value=\"Бесплатно\">Бесплатно</option>\r\n                        </Select>\r\n                        <Cell\r\n                            asideContent={<Switch\r\n                                onChange={() => {\r\n                                    if (this.props.master.moderation.status === true) {\r\n                                        this.setState({visible: !this.state.visible})\r\n                                    } else {\r\n                                        this.openSnack('Ваш профиль находится на модерации. Вы можете создать объявление уже сейчас, но до завершения проверки пользователи его не увидят.')\r\n                                    }\r\n                                }}\r\n                                checked={this.props.master.moderation.status === true ? this.state.visible : false}/>}>\r\n                            Показывать объявление в поиске\r\n                        </Cell>\r\n                        <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    </FormLayout>\r\n                    <Separator style={{margin: '12px 0'}}/>\r\n                    {\r\n                        this.state.isActive &&\r\n                        <React.Fragment>\r\n                            <Cell description={'Некликабельно'}>Ваш пост будет выглядеть так:</Cell>\r\n                            <FindCard\r\n                                date={this.getDate(this.state.loadFind.date)}\r\n                                key={this.state.loadFind._id}\r\n                                find={this.state.loadFind}\r\n                                openMasterOnId={this.props.openMasterOnId}\r\n                            />\r\n                        </React.Fragment>\r\n                    }\r\n                    <Footer/>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps)(FindModelMaster)","import React from 'react'\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data => console.log(data))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    subheader=\"Если Вы являетесь владельцем сообщества с тематикой, схожей с тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={() => this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Partners","import React from 'react'\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, Select} from '@vkontakte/vkui'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline'\r\nimport {BACKEND} from \"../func/func\"\r\nimport {connect} from \"react-redux\"\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            search: '',\r\n            isLoad: false,\r\n            cities: [],\r\n            countryList: [],\r\n            targetCountry: null\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user.location.country) this.setState({targetCountry: this.props.user.location.country}, ()=>this.getCities(this.state.search, this.state.targetCountry))\r\n        this.getCountries()\r\n    }\r\n\r\n    getCountries(){\r\n        fetch(BACKEND.vkapi.getCountries)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                this.setState({countryList: res.countryList, isLoad: true})\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n    getCities(filter, country) {\r\n        this.setState({loading: true})\r\n        const data = {\r\n            search: filter.toLowerCase(),\r\n            country_id: country.id,\r\n        }\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true, loading: false})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e))\r\n}\r\n\r\n    renderCityList = () => {\r\n        if (this.state.cities.length > 0){\r\n            return (\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeCity({city: city, country: this.state.targetCountry})}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n            )\r\n        } else {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56PlaceOutline />}\r\n                    header=\"Город не найден\"\r\n                >\r\n                    Проверьте опечатки или измените критерии поиска\r\n                </Placeholder>\r\n            )\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value})\r\n        this.getCities(e.target.value, this.state.targetCountry)\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                        <React.Fragment>\r\n                            <Cell>\r\n                                {\r\n                                    this.state.changeCountry ?\r\n                                        <Select\r\n                                            onChange={(e)=>{\r\n                                                const country = this.state.countryList.map(country=>{\r\n                                                    if (country.id === Number(e.target.value)) return country\r\n                                                })\r\n                                                this.setState({targetCountry: country.filter(Boolean)[0], changeCountry: false}, ()=> this.getCities(this.state.search, this.state.targetCountry))\r\n                                            }}\r\n                                            placeholder={'Выберите страну'}\r\n                                        >\r\n                                            {\r\n                                                this.state.countryList.map(country=>{\r\n                                                    if (country.id === this.props.user.location.country.id){\r\n                                                        console.log(country.id === this.props.user.location.country.id)\r\n                                                        return <option value={country.id} selected>{country.title}</option>\r\n                                                    } else {\r\n                                                        return <option value={country.id}>{country.title}</option>\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </Select> :\r\n                                        <Cell indicator={this.state.targetCountry ? this.state.targetCountry.title : this.props.user.location.country.title} onClick={()=>this.setState({changeCountry: true})}>Cтрана</Cell>\r\n                                }\r\n                            </Cell>\r\n                            {\r\n                                this.state.targetCountry !== null ?\r\n                                    <React.Fragment>\r\n                                        <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                                        {\r\n                                            this.state.loading ?\r\n                                                <Spinner size=\"large\" style={{ marginTop: 20 }} /> :\r\n                                            this.renderCityList()\r\n                                        }\r\n                                    </React.Fragment> :\r\n                                <Placeholder\r\n                                icon={<Icon56PlaceOutline />}\r\n                                header=\"Выберите страну\"\r\n                                >\r\n                                Если нужной Вам страны нет в списке - напишите нам!\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps) (CityList)","import React from 'react'\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel, Textarea, Cell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline'\r\n\r\nimport {BACKEND} from \"../func/func\"\r\nimport Head from \"../elements/panelHeader\"\r\nimport {connect} from \"react-redux\"\r\n\r\nclass Moder extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0,\r\n            isLoad: true\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target\r\n        this.setState({[name]: value})\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            })\r\n            .catch(e => console.log(e))\r\n        await fetch(BACKEND.comment.moderation, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                this.setState({comments: comments, isLoad: false})\r\n            })\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1)\r\n        } else mastersList.splice(0, index)\r\n        this.setState({mastersList: mastersList})\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: [],\r\n            params: this.props.params\r\n        }\r\n        fetch(BACKEND.moder + 'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList\r\n        // if (index > -1) {\r\n        //     mastersList.splice(index, 1);\r\n        // } else mastersList.splice(0, index);\r\n        // this.setState({mastersList: mastersList});\r\n        let reasons = []\r\n        reasons.push(this.state.reason)\r\n        mastersList[index].moderation.reasons = reasons\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons,\r\n            params: this.props.params\r\n        }\r\n        fetch(BACKEND.moder + 'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e))\r\n        //this.setState({mastersList: mastersList});\r\n    };\r\n\r\n    goodComment = (id, index) => {\r\n        let comments = this.state.comments\r\n        if (index > -1) {\r\n            comments.splice(index, 1)\r\n        } else comments.splice(0, index)\r\n        this.setState({comments: comments})\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        }\r\n        fetch(BACKEND.moderCom + 'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => console.log(res))\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    badComment = (id, index) => {\r\n        let comments = this.state.comments\r\n        if (index > -1) {\r\n            comments.splice(index, 1)\r\n        } else comments.splice(0, index)\r\n        this.setState({comments: comments})\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        }\r\n        fetch(BACKEND.moderCom + 'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => console.log(res))\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index) => {\r\n            if (comment === null) return null\r\n            console.log(comment)\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={() => this.goodComment(comment._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={() => this.badComment(comment._id, index)}\r\n                                            mode=\"destructive\">Удалить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment.body}\r\n                        </RichCell>\r\n                        <Cell before={<Avatar size={25} src={comment.user.avatarLink}/>}> From\r\n                            - {comment.user.firstname + ' ' + comment.user.lastname}</Cell>\r\n                        <Cell>To - {comment.to.name}</Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if (this.state.isLoad === true) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"Загружаю...\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.mastersList.length === 0) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink}\r\n                                                size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Cell>\r\n                                            <Button onClick={() => this.good(master._id, index)}>Одобрить</Button>\r\n                                            <Button onClick={() => this.setState({[master.vkUid]: true})}\r\n                                                    mode=\"secondary\">Отклонить</Button>\r\n                                        </Cell>\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                            {\r\n                                master.moderation.reasons.length > 0 &&\r\n                                <Cell>\r\n                                    {\r\n                                        master.moderation.reasons.map(reason => {\r\n                                            return reason\r\n                                        })\r\n                                    }\r\n                                </Cell>\r\n                            }\r\n                            {\r\n                                this.state[master.vkUid] === true &&\r\n                                <Cell>\r\n                                    <Textarea name=\"reason\" value={this.state.reason} onChange={(event) => {\r\n                                        console.log(this.state.reason)\r\n                                        this.setState({reason: event.target.value})\r\n                                    }\r\n                                    }/>\r\n                                    <Button onClick={() => {\r\n                                        this.bad(master._id, index)\r\n                                        this.setState({[master.vkUid]: false})\r\n                                    }} mode=\"secondary\">Отклонить</Button>\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.props.params.vk_user_id !== '199500866') {\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Cell>У Вас нет доступа</Cell>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Head\r\n                        title={'Модерация'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({activeTab: 'masters'})}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({activeTab: 'comments'})}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps)(Moder)","import React from 'react'\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardGrid,\r\n    Cell,\r\n    Div,\r\n    Group,\r\n    Header,\r\n    Placeholder,\r\n    Footer,\r\n    PromoBanner,\r\n    MiniInfoCell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport RatingStars from '../elements/items/ratingStars'\r\nimport Icon24Comment from '@vkontakte/icons/dist/24/comment'\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron'\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like'\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            promo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length)\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города'\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли'\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n        bridge.subscribe(e=>{\r\n            if (!e.detail) {\r\n                return\r\n            }\r\n\r\n            const { type, data } = e.detail\r\n\r\n            if (type === 'VKWebAppGetAdsResult') {\r\n                this.setState({promo: data})\r\n            }\r\n\r\n        })\r\n        bridge.send(\"VKWebAppGetAds\", {})\r\n            .then(data=>console.log('ads'))\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null})\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города'\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли'\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'})\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count})\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        let i = 0\r\n        return this.props.mastersList.map(master => {\r\n            if (i === 6) i = 0\r\n            i++\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell\r\n                            style={{borderRadius: '10px 10px 10px 10px'}}\r\n                            expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  <React.Fragment>\r\n                                      {\r\n                                          master.categories.category.map((category, index) => {\r\n                                              if (index < master.categories.category.length-1){\r\n                                                  return <span style={{display: 'inline-flex'}}>{category.label}<Icon16Chevron /></span>\r\n                                              } else {\r\n                                                  return category.label\r\n                                              }\r\n                                          })\r\n                                      }\r\n                                  </React.Fragment>\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(master.meta, master._id)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster(master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    setBottom = (meta, id) => {\r\n        if (meta.comments > 0) {\r\n            return (\r\n                <MiniInfoCell\r\n                    style={{padding: 0, margin: 0}}\r\n                   after={\r\n                       this.props.user.favs.includes(id) ? <div style={{margin: 3}}><Icon16Like width={21} height={21} fill=\"red\"/></div> : null\r\n                   }\r\n                >\r\n                    <div style={{display: 'inline-flex'}}><Icon24Comment/><span style={{margin: 'auto'}}>{meta.comments}</span><span style={{marginLeft: 10}}><RatingStars countStars={meta.rating}/></span></div>\r\n                </MiniInfoCell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\", webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.props.openSnack('Спасибо, что помогаете сервису в развитии.')\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                    <Footer>На этом все. Мастеров всего - {this.props.mastersList.length}.</Footer>\r\n                    {\r\n                        this.state.promo !== null ?\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <PromoBanner bannerData={ this.state.promo } onClose={()=>this.setState({promo: null})} />\r\n                            </Card> :\r\n                            null\r\n                    }\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps)(MastersList)","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react'\r\nimport HeadCity from \"../elements/headCity\"\r\nimport {Div, Panel, PanelHeader, Placeholder, SelectMimicry, Spinner} from \"@vkontakte/vkui\"\r\nimport MastersList from './mastersList'\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\"\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    changeMastersList,\r\n    changeMasterslistScroll,\r\n    changeTargetCategory,\r\n    changeTargetCity,\r\n    setFilter\r\n} from \"../store/actions\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline'\r\n\r\nclass Masters extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoad: false,\r\n            filter: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.mastersListScroll) {\r\n            window.scrollTo(0, this.props.mastersListScroll)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false}, () => this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        this.props.setFilter([])\r\n        if (this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category + 'all/' + this.props.user.location.country.id + '/' + this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList)\r\n                    this.filter()\r\n                })\r\n                .catch(e => this.setState({warnConnection: true}))\r\n        } else {\r\n            fetch(BACKEND.masters.category + this.props.targetCategory._id + '/' + this.props.user.location.country.id + '/' + this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList)\r\n                    this.filter()\r\n                })\r\n                .catch(e => this.setState({warnConnection: true}))\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if (this.props.filter.includes(e.currentTarget.id)) {\r\n            let index = this.props.filter.indexOf(e.currentTarget.id)\r\n            let filter = this.props.filter\r\n            if (index > -1) {\r\n                filter.splice(index, 1)\r\n            } else filter.splice(0, index)\r\n            this.setState({filter: filter}, () => this.filter())\r\n        } else {\r\n            let filter = this.props.filter\r\n            filter.push(e.currentTarget.id)\r\n            this.props.setFilter(filter)\r\n            this.filter()\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if (this.props.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master => {\r\n                let i = 0\r\n                this.props.filter.forEach(filter => {\r\n                    if (master.categories.subcat) {\r\n                        if (master.categories.subcat.includes(filter)) i++\r\n                    } else {\r\n                        return false\r\n                    }\r\n                })\r\n                if (i > 0) return true\r\n            })\r\n            this.setState({filteredList: filteredList, isLoad: true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.warnConnection) {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={() => this.props.changeCity()}/>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56WifiOutline/>}\r\n                        header={'Что-то не так!'}\r\n                    >\r\n                        Проверьте интернет-соединение.\r\n                    </Placeholder>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            const {targetCategory, user} = this.props\r\n            return (\r\n                <Panel id=\"mastersList\">\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                    <HeadCity changeCity={() => this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e) => this.checkSubcat(e)}\r\n                                filter={this.props.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                    }\r\n                    {this.props.snackbar}\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user,\r\n        filter: state.filter\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        setFilter: bindActionCreators(setFilter, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters)","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react'\r\nimport {Div} from \"@vkontakte/vkui\"\r\nimport '@vkontakte/vkui/dist/vkui.css'\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray'}}>\r\n                1. Основные понятия\r\n                <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в\r\n                соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя\r\n                и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о\r\n                разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по\r\n                адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179,\r\n                ИНН 7842349892.\r\n                <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе\r\n                «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий\r\n                Приложение.\r\n                <br/>\r\n                <br/>\r\n                <br/>2. Статус Правил\r\n                <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее\r\n                вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с\r\n                использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                <br/>3. Права и обязанности Сторон\r\n                <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности\r\n                Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями\r\n                указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается\r\n                предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения\r\n                прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных\r\n                средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать\r\n                действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные\r\n                программы, содержащие вредоносные компоненты («вирусы»).\r\n                <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или\r\n                содержание Приложения с уведомлением Пользователей или без такового.\r\n                <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов,\r\n                предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется\r\n                добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего\r\n                использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета\r\n                Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг\r\n                либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях\r\n                предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется\r\n                политикой конфиденциальности Разработчика.\r\n                <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ\r\n                связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в\r\n                разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                <br/>4. Интеллектуальная собственность\r\n                <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не\r\n                ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы,\r\n                музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом,\r\n                товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным\r\n                правообладателям.\r\n                <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения,\r\n                а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных,\r\n                семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи\r\n                данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим\r\n                лицам.\r\n                <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать\r\n                (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать,\r\n                скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом\r\n                пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также\r\n                изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком\r\n                в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования\r\n                Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные\r\n                компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не\r\n                может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                <br/>5. Гарантии и Ответственность\r\n                <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как\r\n                есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения,\r\n                взаимодействия Приложения с другим программным обеспечением.\r\n                <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных\r\n                целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения\r\n                может не соответствовать ожиданиям Пользователя.\r\n                <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за\r\n                любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой\r\n                данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе\r\n                в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик\r\n                предупреждал или указывал на возможность такого ущерба.\r\n                <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию\r\n                Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и\r\n                иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет\r\n                ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил,\r\n                каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения,\r\n                при использовании Приложения.\r\n                <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем\r\n                предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением\r\n                Пользователя или без такового.\r\n                <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям,\r\n                а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                <br/>6. Заключительные положения\r\n                <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления\r\n                Приложения со своей персональной страницы на Сайте.\r\n                <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения\r\n                с уведомлением Пользователей или без такового.\r\n                <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской\r\n                Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством\r\n                Российской Федерации.\r\n                <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил,\r\n                Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между\r\n                ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке,\r\n                установленном действующим законодательством Российской Федерации.\r\n                <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для\r\n                ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином\r\n                языке, применяются положения русскоязычной версии настоящих Правил.\r\n                <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны\r\n                недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или\r\n                применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules","import React from 'react'\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    ConfigProvider,\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Separator,\r\n    Snackbar,\r\n    Spinner,\r\n    Tabbar,\r\n    TabbarItem,\r\n    Tabs,\r\n    TabsItem,\r\n    View\r\n} from '@vkontakte/vkui'\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js'\r\nimport '@vkontakte/vkui/dist/vkui.css'\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline'\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline'\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done'\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search'\r\nimport Head from './js/elements/panelHeader'\r\nimport MasterCard from './js/masters/mastersCard.js'\r\nimport MasterPhoto from './js/masters/mastersPhoto.js'\r\nimport MasterComments from './js/masters/mastersComments.js'\r\nimport News from './js/news/news.js'\r\nimport Invite from './js/lk/invite.js'\r\nimport Lk from './js/lk/lk.js'\r\nimport History from './js/lk/history.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js'\r\nimport Favourite from './js/lk/favourite.js'\r\nimport FindModel from \"./js/findmodel/findModel\"\r\nimport FindModelMaster from \"./js/lk/findModelMaster\"\r\nimport Partners from \"./js/lk/partners\"\r\nimport {BACKEND} from \"./js/func/func\"\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\"\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss'\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport Masters from './js/masters/masters'\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules'\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    changeActiveMasterOnFavs,\r\n    changeActiveMasterOnFindModels,\r\n    changeActiveMasterOnMasters,\r\n    changeActiveViewLk,\r\n    changeFindModelsList,\r\n    changeFindModelsListScroll,\r\n    changeLaunchParams,\r\n    changeMastersList,\r\n    changeMasterslistScroll,\r\n    changeStory,\r\n    changeTargetCategory,\r\n    changeTargetCity,\r\n    goForward,\r\n    goTo,\r\n    loginUser,\r\n    setMaster\r\n} from \"./js/store/actions\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            popoutLk: null,\r\n            popoutInvite: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            warnConnection: false,\r\n            mastersModal: null,\r\n            findModal: null,\r\n            lkModal: null,\r\n            snackbarInvite: null\r\n        }\r\n        this.onStoryChange = this.onStoryChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.subscribe(({detail: {type, data}}) => {\r\n            if (type === 'VKWebAppUpdateConfig') {\r\n                this.setState({scheme: data.scheme})\r\n                if (data.scheme === 'space_gray') bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\"})\r\n                if (data.scheme === 'bright_light') bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"dark\"})\r\n            }\r\n        })\r\n        if (this.props.launchParams.sign !== undefined) {\r\n            this.setState({validLaunchParams: true})\r\n            console.log('Параметры пришли')\r\n            this.props.changeLaunchParams(this.props.launchParams)\r\n            this.auth(this.props.launchParams)\r\n        } else {\r\n            this.setState({validLaunchParams: false})\r\n            this.openSnack('Ошибка. Не переданы параметры запуска.')\r\n        }\r\n\r\n        if (this.props.linkParams.masterid) {\r\n            this.openMasterOnId(this.props.linkParams.masterid)\r\n            this.props.changeStory('masters')\r\n        }\r\n        if (this.props.linkParams.history) {\r\n            this.goTo('lk', 'history')\r\n        }\r\n        window.onpopstate = () => {\r\n            this.goBack(this.props.activeStory)\r\n        }\r\n    }\r\n\r\n    auth = (params) => {\r\n        fetch(BACKEND.users.auth, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (this.state.warnConnection === true) {\r\n                    this.setState({warnConnection: false, snackbar: null})\r\n                }\r\n                this.setState({validLaunchParams: true})\r\n                this.props.loginUser(data.user)\r\n                if (data.master !== null) {\r\n                    this.props.setMaster(data.master)\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.setState({\r\n                    snackbar:\r\n                        <Snackbar\r\n                            duration=\"3000\"\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({snackbar: null})}\r\n                            before={<Icon24Dismiss/>}\r\n                        >\r\n                            Ошибка подключения к серверу. Страшно, очень страшно, мы не знаем что это такое, если бы мы\r\n                            знали что это такое, то мы бы знали, что это такое.\r\n                        </Snackbar>\r\n                })\r\n                this.setState({warnConnection: true})\r\n            })\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        }\r\n        if (this.state.snackbar) this.setState({snackbar: null})\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    openSnackInvite(text) {\r\n        if (this.state.snackbarInvite) this.setState({snackbarInvite: null})\r\n        this.setState({\r\n            snackbarInvite:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarInvite: null})}\r\n                    before={<Icon24Dismiss/>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                if (master.error) master = null\r\n                this.props.changeActiveMasterOnMasters(master)\r\n                this.goTo('masters', 'masterInfo')\r\n            })\r\n    };\r\n\r\n    openFindMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFindModels(master)\r\n                this.goTo('findmodel', 'masterInfo')\r\n            })\r\n    };\r\n\r\n    openSnackLk(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        }\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null})\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    openSnackLkDismiss(text) {\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null})\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Icon24Dismiss/>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                if (newMaster.error) {\r\n                    this.openSnack(newMaster.error)\r\n                } else {\r\n                    this.props.setMaster(newMaster)\r\n                    this.goTo('lk', 'lk')\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.openSnack(e.message)\r\n            })\r\n    };\r\n\r\n    goTo = (story, panel) => {\r\n        window.history.pushState({panel: panel}, panel)\r\n        this.props.goTo(story, panel)\r\n        let hist = this.props[story + 'History']\r\n    };\r\n\r\n    goBack = (story) => {\r\n        if (this.props[story + 'History'].length === 1) {\r\n            bridge.send('VKWebAppClose', {'status': 'sucsess'})\r\n        } else {\r\n            this.props.goForward(story)\r\n            let hist = this.props[story + 'History']\r\n        }\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name})\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(geo) {\r\n        let user = this.props.user\r\n        user.location.city = geo.city\r\n        user.location.country = geo.country\r\n        this.props.changeTargetCity(geo.city)\r\n        user.params = this.props.params\r\n        return fetch(BACKEND.users.changeCity, {\r\n            method: 'PATCH',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(user),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log('ok')\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props\r\n        if (this.state.warnConnection === true) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"loading\" activePanel=\"loading\">\r\n                        <Panel id=\"loading\">\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Icon56WifiOutline/>}\r\n                                header={'Что-то не так!'}\r\n                                action={<Button size=\"l\" onClick={() => this.auth(this.props.launchParams)}>Повторить\r\n                                    авторизацию</Button>}\r\n                            >\r\n                                Проверьте интернет-соединение.\r\n                            </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{marginTop: 40}}/>}\r\n                            >\r\n                                Всё, беда! Вы все сломали :(\r\n                            </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"loading\" activePanel=\"loading\">\r\n                        <Panel id=\"loading\">\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Spinner size=\"large\" style={{marginTop: 40}}/>}\r\n                                header=\"Выполняется вход...\"\r\n                            >Это может занять несколько секунд\r\n                                {this.state.snackbar}\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <Epic activeStory={this.props.activeStory} tabbar={\r\n                        <Tabbar>\r\n                            <TabbarItem\r\n                                onClick={() => {\r\n                                    if (this.props.activeStory === 'news') {\r\n                                        this.goTo('news', 'news')\r\n                                    } else {\r\n                                        this.props.changeStory('news')\r\n                                    }\r\n                                }}\r\n                                selected={this.props.activeStory === 'news'}\r\n                                data-story=\"news\"\r\n                                text=\"Новости\"\r\n                            ><Icon28FireOutline/></TabbarItem>\r\n                            <TabbarItem\r\n                                onClick={() => {\r\n                                    if (this.props.activeStory === 'masters') {\r\n                                        this.goTo('masters', 'mastersList')\r\n                                    } else {\r\n                                        this.props.changeStory('masters')\r\n                                    }\r\n                                }}\r\n                                selected={this.props.activeStory === 'masters'}\r\n                                data-story=\"masters\"\r\n                                text=\"Мастера\"\r\n                            ><Icon28ServicesOutline/></TabbarItem>\r\n                            <TabbarItem\r\n                                onClick={() => {\r\n                                    if (this.props.activeStory === 'findmodel') {\r\n                                        this.goTo('findmodel', 'findmodel')\r\n                                    } else {\r\n                                        this.props.changeStory('findmodel')\r\n                                    }\r\n                                }}\r\n                                selected={this.props.activeStory === 'findmodel'}\r\n                                data-story=\"findmodel\"\r\n                                text=\"Ищу модель\"\r\n                            ><Icon28Search/></TabbarItem>\r\n                            <TabbarItem\r\n                                onClick={() => {\r\n                                    this.setState({snackbarLk: null})\r\n                                    if (this.props.activeStory === 'lk') {\r\n                                        this.goTo('lk', 'lk')\r\n                                    } else {\r\n                                        this.props.changeStory('lk')\r\n                                    }\r\n                                }}\r\n                                selected={this.props.activeStory === 'lk'}\r\n                                data-story=\"lk\"\r\n                                text=\"Кабинет\"\r\n                            ><Icon28More/></TabbarItem>\r\n                        </Tabbar>\r\n                    }>\r\n                        <View id=\"news\" history={this.props.newsHistory} onSwipeBack={() => this.goBack('news')}\r\n                              activePanel={this.props.newsHistory[this.props.newsHistory.length - 1]}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={() => {\r\n                                    this.props.changeStory('lk')\r\n                                    this.goTo('lk', 'registration')\r\n                                }}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                openModer={() => this.goTo('news', 'moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBack('news')}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master})\r\n                                    this.goTo('news', 'masterInfo')\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('news')}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master) => this.setState({activeMaster: master})}\r\n                                    openModal={(content) => {this.setState({mastersModal: content})}}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View id=\"masters\" modal={this.state.mastersModal}\r\n                              activePanel={this.props.mastersHistory[this.props.mastersHistory.length - 1]}\r\n                              history={this.props.mastersHistory} onSwipeBack={() => this.goBack('masters')}>\r\n                            <Masters\r\n                                id=\"mastersList\"\r\n                                changeCity={() => this.goTo('masters', 'changeCity')}\r\n                                openSnack={(title) => this.openSnack(title)}\r\n                                changeCategory={() => this.goTo('masters', 'masterCat')}\r\n                                openPanelMaster={(master) => {\r\n                                    this.props.changeActiveMasterOnMasters(master)\r\n                                    this.goTo('masters', 'masterInfo')\r\n                                }}\r\n                                snackbar={this.state.snackbar}\r\n                            />\r\n                            <Panel id=\"changeCity\">\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('masters')}/>\r\n                                <CityList\r\n                                    id=\"changeCity\"\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    changeCity={(city) => {\r\n                                        this.changeTargetCity(city)\r\n                                        this.goBack('masters')\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    openPhoto={() => this.goTo('masters', 'masterPhoto')}\r\n                                    openComments={() => this.goTo('masters', 'masterComments')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    openModal={(content) => {\r\n                                        this.setState({mastersModal: content})\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <Head\r\n                                    title={'Выбор категории'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category)\r\n                                            this.goBack('masters')\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                        <View\r\n                            id=\"findmodel\"\r\n                            activePanel={this.props.findmodelHistory[this.props.findmodelHistory.length - 1]}\r\n                            history={this.props.findmodelHistory} onSwipeBack={() => this.goBack('findmodel')}\r\n                            modal={this.state.findModal}\r\n                        >\r\n                            <Panel id=\"findmodel\">\r\n                                <PanelHeader>Ищу модель</PanelHeader>\r\n                                <FindModel\r\n                                    openMasterOnId={(masterId) => this.openFindMasterOnId(masterId)}\r\n                                    changeCity={() => this.goTo('findmodel', 'changeCity')}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"changeCity\">\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('findmodel')}/>\r\n                                <CityList\r\n                                    id=\"changeCity\"\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                    changeCity={(city) => {\r\n                                        this.changeTargetCity(city)\r\n                                        this.goBack('findmodel')\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                    openPhoto={() => this.goTo('findmodel', 'masterPhoto')}\r\n                                    activeMaster={this.props.activeMasterOnFindModels}\r\n                                    openComments={() => this.goTo('findmodel', 'masterComments')}\r\n                                    openModal={(content) => {\r\n                                        this.setState({findModal: content})\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                    activeMaster={this.props.activeMasterOnFindModels}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                    activeMaster={this.props.activeMasterOnFindModels}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <Root id=\"lk\" activeView={this.props.activeViewLk} modal={this.state.lkModal}>\r\n                            <View id=\"lk\" popout={this.state.popoutLk}\r\n                                  activePanel={this.props.lkHistory[this.props.lkHistory.length - 1]}\r\n                                  history={this.props.lkHistory} onSwipeBack={() => this.goBack('lk')}>\r\n                                <Panel id=\"lk\">\r\n                                    <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                    <Tabs>\r\n                                        <TabsItem\r\n                                            onClick={() => this.setState({activeTabLk: 'about'})}\r\n                                            selected={this.state.activeTabLk === 'about'}\r\n                                        >\r\n                                            О пользователе\r\n                                        </TabsItem>\r\n                                        <TabsItem\r\n                                            onClick={() => this.setState({activeTabLk: 'partners'})}\r\n                                            selected={this.state.activeTabLk === 'partners'}\r\n                                        >\r\n                                            Партнёрам\r\n                                        </TabsItem>\r\n                                    </Tabs>\r\n                                    <Separator/>\r\n                                    {\r\n                                        this.state.activeTabLk === 'about' ?\r\n                                            <Lk\r\n                                                master={this.props.master}\r\n                                                user={user}\r\n                                                openSetting={() => this.goTo('lk', 'setting')}\r\n                                                openFavourite={() => this.goTo('lk', 'favourite')}\r\n                                                openFindModel={() => this.goTo('lk', 'findModel')}\r\n                                                openMasterPhoto={() => this.goTo('lk', 'portfolio')}\r\n                                                openHistory={() => this.goTo('lk', 'history')}\r\n                                                isFavourite={this.props.params.vk_is_favorite}\r\n                                            /> :\r\n                                            <Partners/>\r\n                                    }\r\n                                    {this.state.snackbarLk}\r\n                                </Panel>\r\n                                <Panel id=\"setting\">\r\n                                    <Setting\r\n                                        setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                        snackbar={(message) => this.openSnackLk(message)}\r\n                                        snackbarDismiss={(message) => this.openSnackLkDismiss(message)}\r\n                                        modalBack={this.modalBack}\r\n                                        activeModal={this.state.activeModal}\r\n                                        changeCity={() => this.goTo('lk', 'changeCity')}\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        snackbarLk={this.state.snackbarLk}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"changeCity\">\r\n                                    <Head title={'Выбор города'}\r\n                                          goBack={() => this.goBack('lk')}/>\r\n                                    <CityList\r\n                                        id=\"changeCity\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        changeCity={(geo) => {\r\n                                            let master = this.props.master\r\n                                            master.location.city = geo.city\r\n                                            master.location.country = geo.country\r\n                                            master.changed = true\r\n                                            this.props.setMaster(master)\r\n                                            this.goBack('lk')\r\n                                        }}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"favourite\">\r\n                                    <Favourite\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        user={user}\r\n                                        openFavMasterOnId={(master) => {\r\n                                            this.props.changeActiveMasterOnFavs(master)\r\n                                            this.goTo('lk', 'masterInfo')\r\n                                        }}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"history\">\r\n                                    <History\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        user={user}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"masterInfo\">\r\n                                    <MasterCard\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        openPhoto={() => this.goTo('lk', 'masterPhoto')}\r\n                                        user={user}\r\n                                        activeMaster={this.props.activeMasterOnFavs}\r\n                                        openComments={() => this.goTo('lk', 'masterComments')}\r\n                                        setActiveMaster={(master) => this.setState({activeMaster: master})}\r\n                                        openModal={(content) => {\r\n                                            this.setState({lkModal: content})\r\n                                        }}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"masterPhoto\">\r\n                                    <Head\r\n                                        title={'Портфолио'}\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <MasterPhoto\r\n                                        goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                        activeMaster={this.props.activeMasterOnFavs}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"portfolio\">\r\n                                    <Head\r\n                                        title={'Портфолио'}\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <Portfolio\r\n                                        setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        user={user}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"masterComments\">\r\n                                    <Head\r\n                                        title=\"Отзывы\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <MasterComments\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        user={user}\r\n                                        activeMaster={this.props.activeMasterOnFavs}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"findModel\">\r\n                                    <Head\r\n                                        title=\"Ищу модель\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <FindModelMaster\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        user={user} popout={this.openAlert}\r\n                                    />\r\n                                </Panel>\r\n\r\n                                {/*reg*/}\r\n                                <Panel id=\"registration\">\r\n                                    <Head\r\n                                        title={'Регистрация'}\r\n                                        goBack={() => {\r\n                                            this.goBack('lk')\r\n                                        }}\r\n                                    />\r\n                                    <Invite\r\n                                        setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                        goBack={() => this.props.changeActiveViewLk('lk')}\r\n                                        closeReg={this.closeReg}\r\n                                        changeCity={() => this.goTo('lk', 'changeCityReg')}\r\n                                        openRules={() => this.goTo('lk', 'rules')}\r\n                                        snackbar={(message) => this.openSnackInvite(message)}\r\n                                    />\r\n                                    {this.state.snackbarInvite}\r\n                                </Panel>\r\n                                <Panel id=\"rules\">\r\n                                    <Head\r\n                                        title=\"Соглашение\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <Rules\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"changeCityReg\">\r\n                                    <Head title={'Выбор города'}\r\n                                          goBack={() => this.goBack('lk')}/>\r\n                                    <CityList\r\n                                        id=\"changeCityReg\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        changeCity={(city) => {\r\n                                            this.changeTargetCity(city)\r\n                                            this.goBack('lk')\r\n                                        }}\r\n                                    />\r\n                                </Panel>\r\n                            </View>\r\n                        </Root>\r\n                    </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs,\r\n        params: state.params,\r\n        activePanelnews: state.activePanelnews,\r\n        activePanelmasters: state.activePanelmasters,\r\n        activePanelfindmodel: state.activePanelfindmodel,\r\n        activePanellk: state.activePanellk,\r\n        activeStory: state.activeStory,\r\n        newsHistory: state.newsHistory,\r\n        mastersHistory: state.mastersHistory,\r\n        findmodelHistory: state.findmodelHistory,\r\n        lkHistory: state.lkHistory,\r\n        activeViewLk: state.activeViewLk,\r\n        activePanelregistration: state.activePanelregistration,\r\n        registrationHistory: state.registrationHistory\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch),\r\n        changeStory: bindActionCreators(changeStory, dispatch),\r\n        goTo: bindActionCreators(goTo, dispatch),\r\n        goForward: bindActionCreators(goForward, dispatch),\r\n        changeActiveViewLk: bindActionCreators(changeActiveViewLk, dispatch)\r\n\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {createStore} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\"\r\n\r\nrequire('dotenv').config()\r\n\r\n\r\nconst store = createStore(rootReducer)\r\nbridge.send(\"VKWebAppInit\", {})\r\n\r\nlet linkParams = window\r\n    .location\r\n    .hash\r\n    .replace('#', '')\r\n    .split('&')\r\n    .reduce(\r\n        function (p, e) {\r\n            let a = e.split('=')\r\n            p[decodeURIComponent(a[0])] = decodeURIComponent(a[1])\r\n            return p\r\n        },\r\n        {}\r\n    )\r\n\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?', '')\r\n    .split('&')\r\n    .reduce(\r\n        function (p, e) {\r\n            let a = e.split('=')\r\n            p[decodeURIComponent(a[0])] = decodeURIComponent(a[1])\r\n            return p\r\n        },\r\n        {}\r\n    )\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <App launchParams={params} linkParams={linkParams}/>\r\n</Provider>, document.getElementById('root'))\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}