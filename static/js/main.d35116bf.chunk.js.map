{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/store/reducers.js","js/store/actions.js","js/masters/mastersCard.js","js/elements/functions.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["Head","props","theme","left","onClick","goBack","title","BACK_LINK","process","BACKEND","users","auth","like","message","masters","all","onID","category","vkuid","subscribers","onarrayid","connect","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getCities","isMember","getAlbum","delPhoto","getAll","logs","params","sendmessage","moder","moderCom","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","activePanelnews","activePanelmasters","activePanelfindmodel","activePanellk","newsHistory","mastersHistory","findmodelHistory","lkHistory","activeStory","activeViewLk","regSet","setMaster","console","log","type","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","goTo","story","panel","goForward","changeStory","changeActiveViewLk","activeView","regSetInvite","data","MastersCard","handleChange","event","setState","target","name","value","changeNumber","openModal","sendMessage","state","sendtitle","phone","fetch","activeMaster","_id","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","error","openSnackAvatar","avatarLink","catch","e","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","enterNumber","share","bridge","send","result","loadFavs","includes","countFavs","length","isLoad","changeVisible","index","push","isChange","indexOf","splice","getPhone","phone_number","a","activeModal","onClose","id","header","caption","className","align","onChange","snackbar","bind","window","scrollTo","this","map","filter","item","url","postData","images","start_index","text","duration","layout","after","src","size","response","icon","marginTop","visible","Fragment","separator","disabled","multiline","level","weight","marginBottom","brand","vkUid","firstname","lastname","expandable","openComments","indicator","meta","comments","description","photos","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","openPhoto","priceList","price","asideContent","React","Component","dispatch","bindActionCreators","imgArr","image","gridPhoto","MastersComments","changeStars","stars","i","rating","validCommentText","replace","sendComment","Number","onModer","ids","isCommended","commentsArr","countComments","prevProps","prevState","snapshot","comDate","date","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","webkitUserSelect","userSelect","star","status","bottom","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","user_id","ingroup","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","photo","openModer","openReg","nowCounter","countUsers","countMasters","countCities","inGroup","vk_is_favorite","cities","sort","Invite","deleteProcedure","setAlert","actionsLayout","autoclose","action","onRemove","getCategories","categories","regMaster","statusMessage","trim","checkLicense","cat","subcat","active","label","location","country","city","closeReg","addProd","add","saveProd","validateNewProdTitle","newProdTitle","validateNewProdBody","newProdBody","validateNewProdPrice","newProdPrice","slice","permMessage","checkSubcat","indexCat","indexSubcat","counter","count","statusPhoto","qapi","undefined","changeCity","subcategory","checked","require","stretched","openRules","Lk","checkModeration","reasons","reason","addToFavApp","connection","tmpUser","isMaster","isUser","favsArr","mastersArr","promo","subscribe","detail","error_data","openSetting","openFavourite","openMasterPhoto","openFindModel","vertical","bannerData","Portfolio","deletePhoto","link","setTimeout","delete","loading","deleteMode","token","selectedFile","document","getElementById","files","match","create_album","encodeURI","fetchJsonp","album","album_id","getUploadServer","uploadServer","formData","FormData","append","openSnack","saveUrl","savePh","sizes","unshift","img","upload_url","uploadUrl","getToken","access_token","photoArr","photoFile","user_albums","vk_user_id","items","textAlign","accept","CityListModal","search","toLowerCase","country_id","cityList","region","withModalRootContext","Setting","platform","saveChanges","patchData","snackbarDismiss","saveEdit","editProdTitle","editProdBody","editProdPrice","editProd","edit","checkBan","banned","statusProfile","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","changed","Array","isArray","String","defaultValue","snackbarLk","Favourite","loadFavsMasters","isLoaded","err","openFavMasterOnId","FindCard","find","sale","openMasterOnId","masterId","FindList","findArr","FindModel","loadFind","warnConnection","self","pageYOffset","FindModelMaster","targetImg","handleChangeSelect","selectvalue","save","isActive","mStatus","Partners","addToCommunity","CityList","Moder","good","bad","goodComment","badComment","activeTab","mastersCount","usersCount","to","openMaster","selected","renderMasters","renderComments","MastersList","setBottom","setTitle","bottomContent","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","App","validLaunchParams","openFindMasterOnId","newMaster","history","pushState","activePanelMasters","openStory","storyName","popoutLk","popoutInvite","activePanelFindModels","activeMasterId","activeViewMasters","activePanelLk","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","scheme","mastersModal","findModal","lkModal","snackbarInvite","onStoryChange","launchParams","sign","linkParams","masterid","onpopstate","dataset","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","modal","content","alert","openSnackLk","openSnackLkDismiss","modalBack","openAlert","openSnackInvite","activePanelregistration","registrationHistory","Boolean","hostname","config","store","createStore","changeIsMaster","newhistory","pop","hash","split","reduce","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d35116bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","const BACK_LINK = process.env.REACT_APP_BACK_LINK;\r\n\r\nexport const BACKEND = {\r\n    users: {\r\n        auth: BACK_LINK+'users/auth/',\r\n        like: BACK_LINK+'users/like/'\r\n    },\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/',\r\n        connect: BACK_LINK+'masters/connect/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/',\r\n        getCities: BACK_LINK+'vkapi/getCities',\r\n        isMember: BACK_LINK+'vkapi/isMember',\r\n        getAlbum: BACK_LINK+'vkapi/getAlbum',\r\n        delPhoto: BACK_LINK+'vkapi/delPhoto/',\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    moder: BACK_LINK+'masters/moderation/',\r\n    moderCom: BACK_LINK+'comment/moderation/',\r\n};","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS';\r\nexport const GO_TO = 'GO_TO';\r\nexport const GO_FORWARD = 'GO_FORWARD';\r\nexport const CHANGE_STORY = 'CHANGE_STORY';\r\nexport const CHANGE_ACTIVE_VIEW_LK = 'CHANGE_ACTIVE_VIEW_LK';\r\nexport const REG_SET = 'REG_SET';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: null,\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null,\r\n    activePanelnews: 'news',\r\n    activePanelmasters: 'mastersList',\r\n    activePanelfindmodel: 'findmodel',\r\n    activePanellk: 'lk',\r\n    //activePanelregistration: 'registration',\r\n    newsHistory: ['news'],\r\n    mastersHistory: ['mastersList'],\r\n    findmodelHistory: ['findmodel'],\r\n    lkHistory: ['lk'],\r\n    //registrationHistory: ['registration'],\r\n    activeStory: 'news',\r\n    activeViewLk: 'lk',\r\n    regSet: null\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity: action.payload.location !== undefined ? action.payload.location.city : {id: 1, title: 'Москва'}};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload};\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload};\r\n        case GO_TO:\r\n            let history = state[action.payload.story+'History'];\r\n            if (history[history.length-1] !== action.payload.panel) history.push(action.payload.panel);\r\n            if (action.payload.panel === history[0]) history = [action.payload.panel];\r\n            return {...state, ['activePanel'+action.payload.story]: action.payload.panel, [action.payload.story+'History']: history, activeStory: action.payload.story};\r\n        case GO_FORWARD:\r\n            let newhistory = state[action.payload.story+'History'];\r\n            newhistory.pop();\r\n            return {...state, [action.payload.story+'History']: newhistory, ['activePanel'+action.payload.story]: newhistory[newhistory.length -1], activeStory: action.payload.story};\r\n        case CHANGE_STORY:\r\n            return {...state, activeStory: action.payload};\r\n        case CHANGE_ACTIVE_VIEW_LK:\r\n            return {...state, activeViewLk: action.payload};\r\n        case REG_SET:\r\n            return {...state, regSet: action.payload}\r\n\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS,\r\n    GO_TO,\r\n    GO_FORWARD,\r\n    CHANGE_STORY,\r\n    CHANGE_ACTIVE_VIEW_LK,\r\n    REG_SET\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER');\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER');\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS');\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    };\r\n};\r\n\r\nexport const goTo = (story, panel) => {\r\n    return {\r\n        type: GO_TO,\r\n        payload: {story: story, panel: panel}\r\n    };\r\n};\r\n\r\nexport const goForward = (story) => {\r\n    return {\r\n        type: GO_FORWARD,\r\n        payload: {story: story}\r\n    };\r\n};\r\n\r\nexport const changeStory = (story) => {\r\n    return {\r\n        type: CHANGE_STORY,\r\n        payload: story\r\n    };\r\n};\r\n\r\nexport const changeActiveViewLk = (activeView) => {\r\n    return {\r\n        type: CHANGE_ACTIVE_VIEW_LK,\r\n        payload: activeView\r\n    };\r\n};\r\n\r\nexport const regSetInvite = (data) => {\r\n    return {\r\n        type: REG_SET,\r\n        payload: data\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner,\r\n    Header,\r\n    Card,\r\n    CardGrid,\r\n    CardScroll,\r\n    Button,\r\n    FormLayout,\r\n    RichCell,\r\n    CellButton,\r\n    Placeholder,\r\n    Panel,\r\n    SimpleCell, Input, ModalCard, ModalRoot, Caption\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData, postData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline';\r\nimport Head from \"../elements/panelHeader\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {loginUser, changeMastersList, changeActiveMasterOnFindModels} from \"../store/actions\";\r\nimport Icon56AccessibilityOutline from '@vkontakte/icons/dist/56/accessibility_outline';\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false,\r\n            activeMaster: {},\r\n            phone: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0,0);\r\n        this.setState({activeMaster: this.props.activeMaster}, ()=> {\r\n           if (this.props.activeMaster !== null){\r\n               this.loadFavs()\r\n           }\r\n       })\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        //this.props.openModal(null);\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            let mastersList = this.props.mastersList;\r\n            let newMastersList = mastersList.map(master=>{\r\n                if (master._id === this.state.activeMaster._id){\r\n                    if (master.subscribers.includes(this.props.user._id)){\r\n                        master.subscribers = master.subscribers.filter(item => item !== this.props.user._id)\r\n                    } else {\r\n                        master.subscribers.push(this.props.user._id)\r\n                    }\r\n                    return master\r\n                } else {\r\n                    return master\r\n                }\r\n            });\r\n            this.props.changeMastersList(newMastersList);\r\n            if (this.props.activeMasterOnFindModels._id === this.state.activeMaster._id){\r\n                let master = this.props.activeMasterOnFindModels;\r\n                if (master.subscribers.includes(this.props.user._id)){\r\n                    master.subscribers = master.subscribers.filter(item => item !== this.props.user._id)\r\n                } else {\r\n                    master.subscribers.push(this.props.user._id)\r\n                }\r\n                this.props.changeActiveMasterOnFindModels(master);\r\n            }\r\n            postData(BACKEND.users.like+this.state.activeMaster._id, this.props.params);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    changeNumber = (event) => {\r\n\r\n        this.setState({[event.target.name]: event.target.value}, this.openModal);\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let data = {\r\n            params: this.props.params,\r\n            title: this.state.sendtitle,\r\n            phone: this.state.phone\r\n        };\r\n        fetch(BACKEND.masters.connect+this.state.activeMaster._id, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar(res.error, this.state.activeMaster.avatarLink)\r\n                } else {\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n            .catch(e=> {\r\n                this.props.openModal(null)\r\n                this.openSnackAvatar(e.message, this.state.activeMaster.avatarLink)\r\n            });\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <CellButton\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.enterNumber(title)}\r\n            >Записаться\r\n            </CellButton>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938#masterid='+this.state.activeMaster._id})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            });\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers.length, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n\r\n    getPhone = () => {\r\n       console.log('Запрашиваю номер');\r\n       bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number}, ()=> this.openModal());\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.openModal();\r\n            })\r\n    };\r\n\r\n    enterNumber = async (title) => {\r\n        this.setState({sendtitle: title});\r\n        this.openModal()\r\n    };\r\n\r\n    openModal = () => {\r\n        console.log('Открываю модалку')\r\n\r\n        this.props.openModal(\r\n            <ModalRoot\r\n                activeModal={'phoneNumber'}\r\n                onClose={()=>this.props.openModal(null)}\r\n            >\r\n                <ModalCard\r\n                    id={'phoneNumber'}\r\n                    onClose={() => this.props.openModal(null)}\r\n                    header=\"Укажите номер телефона\"\r\n                    caption={\r\n                        <FormLayout>\r\n                            <Div className=\"FormField Input Input--center\">\r\n                                <InputMask\r\n                                    className=\"Input__el\"\r\n                                    //mask=\"7 (999) 999-99-99\"\r\n                                    name=\"phone\"\r\n                                    type=\"number\"\r\n                                    //defaultValue={number || ''}\r\n                                    align=\"center\"\r\n                                    value={this.state.phone}\r\n                                    onChange={this.changeNumber}\r\n                                />\r\n                                <Div className=\"FormField__border\"></Div>\r\n                            </Div>\r\n                            {\r\n                                this.state.phone === '' &&\r\n                                <CellButton onClick={()=>{\r\n                                    this.getPhone();\r\n                                }}>Запросить номер</CellButton>\r\n                            }\r\n                            <p>Укажите номер телефона, начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                            <Button onClick={this.sendMessage}>Отправить</Button>\r\n                        </FormLayout>\r\n                    }\r\n                >\r\n\r\n                </ModalCard>\r\n            </ModalRoot>\r\n        )\r\n    }\r\n    // enterNumber = (number) => {\r\n    //     if (number){\r\n    //         this.setState({phone: number})\r\n    //     } else {\r\n    //         this.setState({phone: null})\r\n    //     }\r\n    //     this.setState({ snackbar:\r\n    //             <Snackbar\r\n    //                 duration='99999999999999'\r\n    //                 layout=\"vertical\"\r\n    //                 onClose={() => this.setState({ snackbar: null })}\r\n    //             >\r\n    //                 <h2>Укажите номер телефона</h2>\r\n    //                 <FormLayout>\r\n    //                 <Div className=\"FormField Input Input--center\">\r\n    //                     <InputMask\r\n    //                         className=\"Input__el\"\r\n    //                         //mask=\"7 (999) 999-99-99\"\r\n    //                         name=\"phone\"\r\n    //                         type=\"number\"\r\n    //                         //defaultValue={number || ''}\r\n    //                         align=\"center\"\r\n    //                         value={this.state.phone}\r\n    //                         onChange={this.handleChange}\r\n    //                     />\r\n    //                     <Div className=\"FormField__border\"></Div>\r\n    //                 </Div>\r\n    //                 <p>Укажите номер телефона начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n    //                 <Button onClick={this.sendMessage}>Отправить</Button>\r\n    //                 </FormLayout>\r\n    //             </Snackbar>\r\n    //     });\r\n    // };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log('ok')); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if (this.props.activeMaster === null){\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Мы не знаем таких мастеров.\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else if (this.props.activeMaster.error){\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Тут никого нет :)\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        }\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Тут никого нет :)\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер предпочел скрыть свой профиль.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                <React.Fragment>\r\n                        {/*<RichCell*/}\r\n                        {/*    disabled*/}\r\n                        {/*    multiline*/}\r\n                        {/*    before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}*/}\r\n                        {/*    bottom={*/}\r\n                        {/*            <React.Fragment style={{marginLeft: 10, padding: 0}}>*/}\r\n                        {/*                        <Button onClick={() => this.share()}>Поделиться</Button>*/}\r\n                        {/*                {*/}\r\n                        {/*                    this.props.user.vkUid === this.state.activeMaster.vkUid*/}\r\n                        {/*                        ?*/}\r\n                        {/*                        null*/}\r\n                        {/*                        :*/}\r\n                        {/*                        this.favStatus()*/}\r\n                        {/*                }*/}\r\n                        {/*            </React.Fragment>*/}\r\n                        {/*    }*/}\r\n                        {/*>*/}\r\n                        {/*    <SimpleCell description={this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}>{this.state.activeMaster.firstname} {this.state.activeMaster.lastname}</SimpleCell>*/}\r\n                        {/*</RichCell>*/}\r\n                        <Group separator={'hide'}>\r\n                            <CardGrid>\r\n                                <Card size=\"l\">\r\n                                    <RichCell\r\n                                        disabled\r\n                                        multiline\r\n                                        before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                                        text={\r\n                                            <Caption level=\"2\" weight=\"regular\" style={{ marginBottom: 15 }}>\r\n                                                {this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}\r\n                                            </Caption>\r\n                                        }\r\n                                        caption={\r\n                                            <React.Fragment>\r\n                                                <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                                {\r\n                                                    this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                                        ?\r\n                                                        null\r\n                                                        :\r\n                                                        this.favStatus()\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        //after={this.props.master !== null && <Icon24Write onClick={this.props.openSetting}/>}\r\n                                    >\r\n                                        {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                                    </RichCell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                        </Group>\r\n                        <Separator/>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.props.openComments()} indicator={this.state.activeMaster.meta.comments || 0}\r\n                                description={'Подписчиков: ' + this.state.countFavs}\r\n                            >\r\n                                Отзывы\r\n                            </Cell>\r\n                            {/*{this.subscribers()}*/}\r\n                            {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                        </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Group header={<Header mode=\"secondary\">Выполненые работы мастера</Header>}>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover',\r\n                                                            backgroundPosition: 'center 35%',\r\n                                                            backgroundRepeat: 'no-repeat',\r\n                                                            borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Group> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Запись к мастеру</Header>} description={'Выберите необходимую процедуру и нажмите на кнопку записи к мастеру. Мастер свяжется с Вами.'}>\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    // <Cell\r\n                                    //     style={{borderRadius: '10px 10px 10px 10px'}}\r\n                                    //     key={index}\r\n                                    //     multiline\r\n                                    //     onClick={() => this.changeVisible(index)}\r\n                                    // >\r\n                                        <CardGrid key={index}>\r\n                                            <Card size=\"l\" onClick={() => this.changeVisible(index)}>\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" руб.\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    asideContent={this.state[index] ? <Icon16Up /> : <Icon16Down />}\r\n                                                    indicator=\"\"\r\n                                                >\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <React.Fragment>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                            {this.connectStatus(this.state.activeMaster.priceList[index].title)}\r\n                                                        </React.Fragment>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    // </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params,\r\n        mastersList: state.mastersList,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MastersCard);","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log('ok');\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos, isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            let imgArr = this.state.images;\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        imgArr.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{\r\n                                        height: 96,\r\n                                        backgroundImage: 'url('+image+')',\r\n                                        backgroundSize: 'cover',\r\n                                        backgroundPosition: 'center 35%',\r\n                                        backgroundRepeat: 'no-repeat',\r\n                                        borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport {connect} from \"react-redux\";\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: [],\r\n            onModer: 0\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars();\r\n        // this.props.activeMaster.comments.map(comment => {\r\n        //     if (comment !== null && comment.user === this.props.user._id) {\r\n        //         this.setState({isCommended: true})\r\n        //     }\r\n        // });\r\n        //let count = this.props.activeMaster.comments.length;\r\n        fetch(BACKEND.comment.onMasterId+this.props.activeMaster._id)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ids.includes(this.props.user._id)){\r\n                    this.setState({isCommended: true})\r\n                }\r\n                this.setState({commentsArr: res.comments, countComments: res.comments.length, isLoad: true, onModer: res.onModer});\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = [];\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            }\r\n        }\r\n        this.setState({stars: stars});\r\n    };\r\n\r\n    validCommentText = (text) => {\r\n        return !!(this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length < 101 & this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length > 19);\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера.';\r\n            if (this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите Ваши впечатления подробнее.';\r\n            if (this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body.replace(/(\\r?\\n){2,}/g, '$1'),\r\n                moderation: false,\r\n                params: this.props.params\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                // let arr = this.state.commentsArr;\r\n                // data.date = \"Комментарий отправлен на проверку\";\r\n                // arr.push(data);\r\n                if (data.error){\r\n                    console.log(data.error)\r\n                } else {\r\n                    this.setState({isCommended: true, onModer: this.state.onModer +1, snackbar:\r\n                            <Snackbar\r\n                                layout=\"vertical\"\r\n                                onClose={() => this.setState({ snackbar: null })}\r\n                            >\r\n                                Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                            </Snackbar>});\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                if (this.state.snackbar) this.setState({snackbar: null});\r\n                this.setState({ snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({snackbar: null })}\r\n                        >\r\n                            {e.message}\r\n                        </Snackbar>\r\n                })\r\n                });\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </Div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={comment.rating+` из 5`}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray', webkitUserSelect: 'none', userSelect: 'none'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray', webkitUserSelect: 'none', userSelect: 'none'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            status={\r\n                                this.state.body.length > 0 ?\r\n                                this.validCommentText(this.state.body) === true ? 'valid' : 'error' :\r\n                                    null\r\n                            }\r\n                            value={this.state.body}\r\n                            bottom={'Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <React.Fragment>\r\n                    {\r\n                        this.state.onModer !== 0 ?\r\n                            <Cell indicator={this.state.onModer} before={<Icon24CommentOutline/>}>Отзывов на модерации</Cell> : null\r\n                    }\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel, Footer\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0,0);\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers, countCities: data.countCities, cities: data.cities.sort()})\r\n            });\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранное</Button>}\r\n                />\r\n            )\r\n        } else {\r\n            return <Footer />\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        const data = {\r\n            user_id: this.props.user.vkUid,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.vkapi.isMember,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ingroup === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {this.props.master === null &&\r\n                    <Cell\r\n                        style={{borderRadius: '0 0 10px 10px'}}\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если Вы — мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <React.Fragment>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        <Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>\r\n                        {/*<Cell multiline>*/}\r\n                        {/*    {*/}\r\n                        {/*        this.state.cities &&*/}\r\n                        {/*        this.state.cities.map((city, index)=>{*/}\r\n                        {/*            if (index + 1 !== this.state.cities.length){*/}\r\n                        {/*                return city+', '*/}\r\n                        {/*            } else {*/}\r\n                        {/*                return city*/}\r\n                        {/*            }*/}\r\n                        {/*        })*/}\r\n                        {/*    }*/}\r\n                        {/*</Cell>*/}\r\n                    </React.Fragment>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                    <Group>\r\n                        <Placeholder\r\n                            icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                            header=\"Привет!\"\r\n                        >\r\n                            У нас можно найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                        </Placeholder>\r\n                        {this.userInfo(user)}\r\n                        {this.nowCounter()}\r\n                        {this.isMember()}\r\n                        {this.favApp()}\r\n                        {/*{this.feedList()}*/}\r\n                        {/*<FixedLayout*/}\r\n                        {/*    vertical=\"bottom\"*/}\r\n                        {/*    style={{marginBottom: 5}}*/}\r\n                        {/*>*/}\r\n                        {/*    */}\r\n                        {/*</FixedLayout>*/}\r\n                    </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton, Alert, List, Footer\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity, regSetInvite} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: [],\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            qapi: false,\r\n            type: 'Частный мастер',\r\n            brand: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0,0);\r\n        this.permMessage();\r\n        if (this.props.regSet !== null){\r\n            this.setState({checkLicense: this.props.regSet.checkLicense, description: this.props.regSet.description, priceList: this.props.regSet.priceList, type: this.props.regSet.type, categories: this.props.regSet.categories, brand: this.props.regSet.brand})\r\n        } else {\r\n            this.getCategories();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const data = {};\r\n        data.checkLicense = this.state.checkLicense;\r\n        data.description = this.state.description;\r\n        data.priceList = this.state.priceList;\r\n        data.type = this.state.type;\r\n        data.categories = this.state.categories;\r\n        data.brand = this.state.brand;\r\n        this.props.regSetInvite(data);\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.props.setAlert(\r\n            <Alert\r\n                actionsLayout=\"vertical\"\r\n                actions={[{\r\n                    title: 'Удалить процедуру',\r\n                    autoclose: true,\r\n                    mode: 'destructive',\r\n                    action: () => this.onRemove(index),\r\n                }, {\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    mode: 'cancel'\r\n                }]}\r\n                onClose={()=>this.props.setAlert(null)}\r\n            >\r\n                <h2>Подтвердите действие</h2>\r\n                <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n            </Alert>\r\n        );\r\n    };\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.state.type === 'Частный мастер') this.setState({brand: ''});\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20-ти символов.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать менее 200 символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            if (this.state.brand !== \"\") {\r\n                if (this.state.brand.length > 25) throw 'Длина названия организации ограничена 25 символами.';\r\n            }\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                description: this.state.description,\r\n                type: this.state.type,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                priceList: this.state.priceList,\r\n                params: this.props.params\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    validateNewProdTitle(newProdTitle){\r\n        if (newProdTitle === undefined){\r\n            return {status: false, error: 'Не заполнено название процедуры.'};\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20){\r\n                return {status: false, error: 'Недопустимая длина заголовка.'};\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2){\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody){\r\n        if (newProdBody === undefined){\r\n            return {status: false, error: 'Не заполнено описание процедуры.'};\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250){\r\n                return {status: false, error: 'Недопустимая длина описания.'};\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5){\r\n                    return {status: false, error: 'Недопустимая длина описания.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice){\r\n        if (newProdPrice === undefined){\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'};\r\n        } else {\r\n            if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').trim().length > 5){\r\n                return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n            } else {\r\n                if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').trim().length < 1){\r\n                    return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n                } else {\r\n                    if (Number(newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')) < 0){\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'};\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle);\r\n            if (!title.status) throw title.error;\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody);\r\n            if (!body.status) throw body.error;\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice);\r\n            if (!price.status) throw price.error;\r\n\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice.replace(/^0+/, ''))\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n    };\r\n    permMessage = () => {\r\n                bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                    .then(result => {\r\n                        this.setState({statusMessage: result.result})\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                            <Group>\r\n                                <CardGrid>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell\r\n                                            size=\"l\"\r\n                                            description=\"Регистрация мастера\"\r\n                                            before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                        >\r\n                                            {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                        </Cell>\r\n                                        <Cell\r\n                                            expandable\r\n                                            onClick={this.props.changeCity}\r\n                                            indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                            status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                            bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                        >\r\n                                            Ваш город\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                                {\r\n                                    this.state.statusMessage === false ?\r\n                                    <Cell\r\n                                        multiline\r\n                                        asideContent={<Button mode=\"outline\" onClick={this.permMessage}>Разрешить</Button>}\r\n                                        bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                    >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                    </Cell> :\r\n                                        null\r\n                                        // <Cell\r\n                                        //     multiline\r\n                                        //     asideContent={<Button mode=\"commerce\">Разрешён</Button>}\r\n                                        //     bottom={'Можете продолжить регистрацию'}\r\n                                        // >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                        // </Cell>\r\n                                }\r\n                            </Group>\r\n                        <FormLayout>\r\n                                <Textarea\r\n                                    name={'description'}\r\n                                    bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                    top=\"О себе\"\r\n                                    status={\r\n                                        this.state.description.replace(/ +/g, ' ').trim().length > 0 ?\r\n                                        this.state.description.replace(/ +/g, ' ').trim().length > 19 && this.state.description.replace(/ +/g, ' ').trim().length < 201 ? 'valid' : 'error' :\r\n                                        null\r\n                                    }\r\n                                    value={this.state.description}\r\n                                    onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что Вы выполняете. Так Вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                        </FormLayout>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                // removable\r\n                                                // onRemove={() => {\r\n                                                //     this.onRemove(index)\r\n                                                // }}\r\n                                                >\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            <Button\r\n                                                //before={<Icon24Dismiss/>}\r\n                                                onClick={() => {this.deleteProcedure(index)}}\r\n                                                size=\"xl\"\r\n                                                mode=\"destructive\"\r\n                                            >Удалить</Button>\r\n                                            </Cell>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <List>\r\n                                            <Cell description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length+\"/20\"}>\r\n                                                <Input\r\n                                                    require\r\n                                                    status={\r\n                                                        this.state.newProdTitle.length > 0 ?\r\n                                                        this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error' :\r\n                                                            null\r\n                                                    }\r\n                                                    name=\"newProdTitle\"\r\n                                                    type=\"text\"\r\n                                                    value={this.state.newProdTitle}\r\n                                                    placeholder={'Введите название'}\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Cell>\r\n                                            <Cell description={this.state.newProdBody.replace(/ +/g, ' ').trim().length+\"/250\"}>\r\n                                                <Textarea\r\n                                                    require\r\n                                                    status={\r\n                                                        this.state.newProdBody.length > 0 ?\r\n                                                        this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error' :\r\n                                                            null\r\n                                                    }\r\n                                                    name=\"newProdBody\"\r\n                                                    value={this.state.newProdBody}\r\n                                                    placeholder={'Укажите описание'}\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Cell>\r\n                                            <Cell description={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').trim().length+\"/5\"}>\r\n                                                <Input\r\n                                                    require\r\n                                                    status={\r\n                                                        this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').length > 0 ?\r\n                                                        this.validateNewProdPrice(this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')).status ? 'valid' : 'error' :\r\n                                                            null\r\n                                                    }\r\n                                                    name=\"newProdPrice\"\r\n                                                    type=\"number\" value={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')}\r\n                                                    placeholder={'Укажите цену'}\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Cell>\r\n                                        </List>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                        <FormLayout>\r\n                            <Select\r\n                                name={'type'}\r\n                                top=\"Выберите тип оказания услуг\"\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                                <option value=\"Организация\">Организация</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input\r\n                                        name={'brand'}\r\n                                        type=\"text\"\r\n                                        status={\r\n                                            this.state.brand.length > 0 ?\r\n                                                this.state.brand.length < 26 ? 'valid' : 'error' :\r\n                                                null\r\n                                        }\r\n                                        value={this.state.brand}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox checked={this.state.checkLicense} onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                        <Footer/>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params,\r\n        regSet: state.regSet\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        regSetInvite: bindActionCreators(regSetInvite, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {\r\n    Div,\r\n    Separator,\r\n    CellButton,\r\n    Avatar,\r\n    Cell,\r\n    List,\r\n    Group,\r\n    Banner,\r\n    Button,\r\n    Card,\r\n    CardGrid,\r\n    RichCell,\r\n    Caption, PromoBanner, FixedLayout\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0,\r\n            promo: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.subscribe(e=>{\r\n            if (!e.detail) {\r\n                return;\r\n            }\r\n\r\n            const { type, data } = e.detail;\r\n\r\n            if (type === 'VKWebAppGetAdsResult') {\r\n                this.setState({promo: data})\r\n            }\r\n\r\n            if (type === 'VKWebAppGetAdsFailed') {\r\n                // Reading result of the Code Reader\r\n                console.log(data.error_data);\r\n                //this.setState({promo: data.error_data})\r\n            }\r\n        });\r\n        bridge.send(\"VKWebAppGetAds\", {})\r\n            .then(data=>console.log('Ads'))\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            if (this.props.master.moderation.reasons.length > 0) {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size='xl'>\r\n                            <Cell description={'Их необходимо исправить'}>При модерации обнаружены ошибки:</Cell>\r\n                            {\r\n                                this.props.master.moderation.reasons.map((reason, index)=>{\r\n                                    return <Cell key={index}>{reason}</Cell>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size='xl'>\r\n                            <Cell multiline>Ваш профиль на проверке. В течение суток он будет доступен в поиске.</Cell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log('ok')); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Group separator={'hide'}>\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar src={this.props.user.avatarLink} size={62}/>}\r\n                                text={\r\n                                    <Caption level=\"2\" weight=\"regular\" style={{ marginBottom: 15 }}>\r\n                                        {this.props.master ? this.props.master.type : 'Пользователь'}\r\n                                    </Caption>\r\n                                }\r\n                                caption={this.props.master && this.props.master.location.city.title}\r\n                                after={this.props.master !== null && <Icon24Write onClick={this.props.openSetting}/>}\r\n                            >\r\n                                {this.props.user.firstname+' '+this.props.user.lastname}\r\n                            </RichCell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                </Group>\r\n                {this.props.master !== null && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.props.master !== null &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n                {\r\n                    this.state.promo !== null ?\r\n                        <FixedLayout vertical=\"bottom\">\r\n                            <PromoBanner onClose={() => this.setState({promo: null})} bannerData={ this.state.promo } />\r\n                        </FixedLayout>\r\n                            :\r\n                        null\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Lk);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    File,\r\n    FormLayout,\r\n    CardGrid,\r\n    Card,\r\n    Snackbar,\r\n    Cell,\r\n    PanelSpinner,\r\n    Spinner,\r\n    CellButton, Alert\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24Gallery from '@vkontakte/icons/dist/24/gallery';\r\nimport Icon24Delete from '@vkontakte/icons/dist/24/delete';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon28WriteSquareOutline from '@vkontakte/icons/dist/28/write_square_outline';\r\n\r\nclass Portfolio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: [],\r\n            deleteMode: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.setState({images: this.props.master.photos, isLoad: true});\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(result => {\r\n                if (result.access_token) {\r\n                    this.setState({token: result.access_token, images: this.props.master.photos, isLoad: true})\r\n                } else {\r\n                    this.setState({images: this.props.master.photos, isLoad: true});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.setState({images: this.props.master.photos, isLoad: true});\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    openSnack(text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log('ok'));\r\n    }\r\n\r\n    deletePhoto = (link) => {\r\n        this.props.setAlert(\r\n            <Alert\r\n                actionsLayout=\"vertical\"\r\n                actions={[{\r\n                    title: 'Удалить фотографию',\r\n                    autoclose: true,\r\n                    mode: 'destructive',\r\n                    action: () => setTimeout(this.delete(link), 500),\r\n                }, {\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    mode: 'cancel'\r\n                }]}\r\n                onClose={()=>this.props.setAlert(null)}\r\n            >\r\n                <h2>Подтвердите действие</h2>\r\n                <p>Вы уверены, что хотите удалить выбранную фотографию?</p>\r\n            </Alert>\r\n        );\r\n    }\r\n\r\n    delete = (link) => {\r\n        this.setState({loading: true});\r\n        fetch(BACKEND.vkapi.delPhoto, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify({params: this.props.params, photo: link}), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success'){\r\n                    if (res.master.photos.length === 0) this.setState({deleteMode: false});\r\n                    this.setState({images: res.master.photos, loading: false});\r\n                    this.props.setMaster(res.master)\r\n                    this.props.setAlert(null)\r\n                }\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n     async getAlbum() {\r\n         const user_albums = encodeURI('https://api.vk.com/method/photos.getAlbums?owner_id='+this.props.params.vk_user_id+'&access_token='+this.state.token+'&v=5.103');\r\n         let album_id = null;\r\n         await fetchJsonp(user_albums)\r\n             .then(res=>res.json())\r\n             .then(res=>{\r\n                 if (res.response){\r\n                     res.response.items.map(album=>{\r\n                         if(album.title === \"Навигатор красоты\") {\r\n                             album_id = album.id\r\n                         }\r\n                     })\r\n                 }\r\n             })\r\n             .catch(e=>console.log(e));\r\n         if (album_id === null) {\r\n             console.log('Не получили ИД альбома. Создаем.');\r\n             return {status: 'none'}\r\n         } else {\r\n             console.log('Получили альбом ИД -',album_id);\r\n             return {status: true, album_id: album_id}\r\n         }\r\n    };\r\n\r\n\r\n    uploadPhoto = async () => {\r\n        try {\r\n            if (this.state.token === undefined) throw 'Ошибка. Не получен токен пользователя.';\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            if (!selectedFile.type.match('image.*')) throw 'Допустимо загружать только изображения.';\r\n            let getAlbum = await this.getAlbum();\r\n            if (getAlbum.status === false) throw 'Не получен альбом для загрузки.';\r\n            let album;\r\n            if (getAlbum.status === 'none') {\r\n                //создаем\r\n                const create_album = encodeURI('https://api.vk.com/method/photos.createAlbum?title=Навигатор красоты&access_token=' + this.state.token + '&v=5.103');\r\n                await fetchJsonp(create_album)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        console.log('Создали альбом в ИД ', res.response.id);\r\n                        album = res.response.id;\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            } else {\r\n                album = getAlbum.album_id;\r\n            }\r\n\r\n            const uploadServer = await this.getUploadServer(this.state.token, album);\r\n\r\n            if (uploadServer.status === false) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n            //if (this.state.uploadUrl === undefined) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            formData.append('master', this.props.master.firstname + ' ' + this.props.master.lastname);\r\n            formData.append('uploadUrl', uploadServer.url);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            formData.append('masterId', this.props.master._id);\r\n            console.log('Начинаю отправку фото.');\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        this.setState({loading: false});\r\n                        this.openSnack(res.error);\r\n                    } else {\r\n                        console.log('photo.save', res);\r\n                        fetchJsonp(res.saveUrl, {\r\n                            mode: 'no-cors',\r\n                            method: 'GET'\r\n                        })\r\n                            .then(result => result.json())\r\n                            .then(result => {\r\n                                if (result.error) {\r\n                                    this.setState({loading: false});\r\n                                    this.openSnack('При загрузке фото возникла ошибка.');\r\n                                } else {\r\n                                    console.log('Сохраненное фото: ',result);\r\n                                    let savePh = {\r\n                                        url: result.response[0].sizes[4].url,\r\n                                        params: this.props.params\r\n                                    };\r\n                                    fetch(BACKEND.vkapi.savePhoto, {\r\n                                        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                                        mode: 'cors', // no-cors, cors, *same-origin\r\n                                        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                        credentials: 'same-origin', // include, *same-origin, omit\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json',\r\n                                        },\r\n                                        redirect: 'follow', // manual, *follow, error\r\n                                        referrer: 'no-referrer', // no-referrer, *client\r\n                                        body: JSON.stringify(savePh)\r\n                                    })\r\n                                        .then(res => res.json())\r\n                                        .then(res => {\r\n                                            if (res.error) {\r\n                                                this.setState({loading: false});\r\n                                                this.openSnack(res.error);\r\n                                            } else {\r\n                                                let imgArr = this.state.images;\r\n                                                imgArr.unshift(res.img);\r\n                                                this.openSnack('Фото успешно загружено.');\r\n                                                this.setState({images: imgArr, loading: false});\r\n                                            }\r\n                                        })\r\n                                        .catch(e => {\r\n                                            this.setState({loading: false});\r\n                                            console.log(e)\r\n                                        })\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                this.setState({loading: false});\r\n                                console.log(e)\r\n                            })\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.setState({loading: false});\r\n                    this.openSnack('Ошибка при загрузке.');\r\n                })\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.openSnack('Какая-то ошибка. Попробуем еще разок?');\r\n        }\r\n\r\n    };\r\n\r\n    getUploadServer = async (token, album) => {\r\n        return await bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"album_id\": album, \"v\": \"5.103\", \"access_token\": token}\r\n        })\r\n            .then(result => {\r\n                console.log('Получили сервер для загрузки',result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url});\r\n                return {status: true, url: result.response.upload_url};\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                return {status: false}\r\n            })\r\n\r\n    };\r\n\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(result => {\r\n                if (result.access_token) {\r\n                    this.setState({token: result.access_token})\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={\r\n                                        this.state.deleteMode ?\r\n                                            () => this.deletePhoto(image) :\r\n                                            () => this.openShowImages(this.state.images, index)\r\n                                    }\r\n                                >\r\n                                    <div style={{\r\n                                        height: 96,\r\n                                        backgroundImage: 'url(' + image + ')',\r\n                                        backgroundSize: 'cover',\r\n                                        backgroundPosition: 'center 35%',\r\n                                        backgroundRepeat: 'no-repeat',\r\n                                        borderRadius: 13\r\n                                    }}>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.deleteMode ?\r\n                                            <div style={{color: 'red', textAlign: 'center'}}>Удалить</div> :\r\n                                            null\r\n                                    }\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В Вашем портфолио нет фотографий.</Cell>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                    {\r\n                        this.state.loading ? <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}><Cell multiline>Подождите немного...</Cell><PanelSpinner/></Div> : <Group title=\"\">\r\n                            <FormLayout>\r\n                                {\r\n                                    this.state.token ?\r\n                                        <React.Fragment>\r\n                                            <File\r\n                                                accept=\"image/*\"\r\n                                                top=\"Добавьте фото в портфолио\"\r\n                                                before={<Icon24Camera/>}\r\n                                                size=\"l\"\r\n                                                onChange={this.uploadPhoto}\r\n                                                //onClick={this.getToken}\r\n                                                id=\"input\"\r\n                                            >\r\n                                                Открыть галерею\r\n                                            </File>\r\n                                            {\r\n                                                this.state.images.length > 0 ?\r\n                                                    this.state.deleteMode === false ?\r\n                                                        <CellButton onClick={() => this.setState({deleteMode: true})} before={<Icon28WriteSquareOutline/>}>Редактировать</CellButton> :\r\n                                                        <CellButton onClick={() => this.setState({deleteMode: false})} before={<Icon28WriteSquareOutline/>}>Завершить редактирование</CellButton>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                        </React.Fragment>\r\n                                        :\r\n                                        <React.Fragment>\r\n                                            <CellButton onClick={() => this.getToken()} before={<Icon24Gallery/>}>Разрешить\r\n                                                доступ к фото</CellButton>\r\n                                        </React.Fragment>\r\n\r\n                                }\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Portfolio);","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const data = {\r\n            search: this.state.search.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    List,\r\n    Alert,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar, Placeholder, Spinner, Select\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Head from \"../elements/panelHeader\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null,\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            editProdTitle: '',\r\n            editProdBody: '',\r\n            editProdPrice: '',\r\n            isChange: false,\r\n            type: 'Частный мастер',\r\n            brand: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description, type: this.props.master.type, brand: this.props.master.brand});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n            if (this.props.master.changed)this.setState({isChange: true})\r\n        }\r\n        // window.onpopstate = () => {\r\n        //     try{\r\n        //         if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.';\r\n        //         if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.';\r\n        //         if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.';\r\n        //         this.props.goBack('lk')\r\n        //     }catch(e){\r\n        //         this.props.snackbarDismiss(e)\r\n        //     }\r\n        // };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveChanges()\r\n        this.props.setAlert(null);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        try{\r\n            if (this.state.type === 'Частный мастер') this.setState({brand: ''});\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.';\r\n            if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.';\r\n            if (this.state.brand !== \"\") {\r\n                if (this.state.brand.length > 25) throw 'Длина названия организации ограничена 25 символами.';\r\n            }\r\n              if (this.state.isChange === true){\r\n                  let master = this.state.master;\r\n                  master.type = this.state.type;\r\n                  master.brand = this.state.brand;\r\n                  master.params = this.props.params;\r\n                  this.patchData(BACKEND.masters.all + this.state.master._id, master);\r\n                  this.props.setMaster(this.state.master);\r\n              }\r\n        }catch(e){\r\n            this.props.snackbarDismiss(e);\r\n        }\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n            this.setState({isLoad: true})\r\n        }\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.setState({isChange: true});\r\n        this.props.setAlert(\r\n                    <Alert\r\n                        actionsLayout=\"vertical\"\r\n                        actions={[{\r\n                            title: 'Удалить процедуру',\r\n                            autoclose: true,\r\n                            mode: 'destructive',\r\n                            action: () => this.onRemove(index),\r\n                        }, {\r\n                            title: 'Отмена',\r\n                            autoclose: true,\r\n                            mode: 'cancel'\r\n                        }]}\r\n                        onClose={()=>this.props.setAlert(null)}\r\n                    >\r\n                        <h2>Подтвердите действие</h2>\r\n                        <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n                    </Alert>\r\n        );\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        this.setState({isChange: true});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log('Сохранено')\r\n                //this.props.snackbar('Изменения сохранены.');\r\n            })\r\n            .catch(e=>console.log(e.message))\r\n    }\r\n\r\n    saveEdit = (index) => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.editProdTitle);\r\n            if (!title.status) throw title.error;\r\n\r\n            let body = this.validateNewProdBody(this.state.editProdBody);\r\n            if (!body.status) throw body.error;\r\n\r\n            let price = this.validateNewProdPrice(this.state.editProdPrice);\r\n            if (!price.status) throw price.error;\r\n\r\n\r\n            const editProd = {\r\n                title: this.state.editProdTitle,\r\n                body: this.state.editProdBody,\r\n                price: Number(this.state.editProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, ''))\r\n            };\r\n\r\n            let master = this.state.master;\r\n            master.priceList.splice(index, 1, editProd);\r\n            this.setState({master: master, editProdTitle: '', editProdBody: '', editProdPrice: '', edit: null});\r\n            this.setState({isChange: true});\r\n        } catch (error) {\r\n            this.props.snackbarDismiss(error)\r\n        }\r\n    };\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n        this.props.setMaster(master);\r\n        this.setState({isChange: true});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        this.setState({isChange: true});\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    validateNewProdTitle(newProdTitle){\r\n        if (newProdTitle === undefined){\r\n            return {status: false, error: 'Не заполнено название процедуры.'};\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20){\r\n                return {status: false, error: 'Недопустимая длина заголовка.'};\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2){\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody){\r\n        if (newProdBody === undefined){\r\n            return {status: false, error: 'Не заполнено описание процедуры.'};\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250){\r\n                return {status: false, error: 'Недопустимая длина описания.'};\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5){\r\n                    return {status: false, error: 'Недопустимая длина описания.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice){\r\n        if (newProdPrice === undefined){\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'};\r\n        } else {\r\n            if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').trim().length > 5){\r\n                return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n            } else {\r\n                if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').trim().length < 1){\r\n                    return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n                } else {\r\n                    if (Number(newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')) < 0){\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'};\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle);\r\n            if (!title.status) throw title.error;\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody);\r\n            if (!body.status) throw body.error;\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice);\r\n            if (!price.status) throw price.error;\r\n\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, ''))\r\n            });\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.setState({isChange: true});\r\n        } catch (error) {\r\n            this.props.snackbarDismiss(error)\r\n            //this.openSnackDismiss(error)\r\n        }\r\n    };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(subcat=> {\r\n            if (subcat.active === true) {\r\n                return subcat.label\r\n            }\r\n        });\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.goBack();\r\n        this.setState({isChange: true});\r\n        //this.props.changeModal('setting');\r\n    };\r\n\r\n    statusProfile = () => {\r\n        if (this.state.master.moderation.status === false){\r\n            return 'На модерации'\r\n        } else if (this.state.master.visible === false){\r\n            return 'Ваш профиль не выводится в поиске'\r\n        } else {\r\n            return 'Ваш профиль доступен в поиске'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title='Настройки'\r\n                        goBack={()=>this.props.goBack('lk')}\r\n                    />\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Spinner size=\"large\" style={{ marginTop: 20 }} />}\r\n                        header={'Загружаю...'}\r\n                    ></Placeholder>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title='Настройки'\r\n                            goBack={() => {\r\n                                try{\r\n                                    if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.';\r\n                                    if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.';\r\n                                    if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.';\r\n                                    this.props.goBack('lk')\r\n                                }catch(e){\r\n                                    this.props.snackbarDismiss(e)\r\n                                }\r\n                            }}\r\n                        />\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={this.statusProfile()}\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => {\r\n                                        try{\r\n                                            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.';\r\n                                            if (this.state.description.replace(/ +/g, ' ').trim().length > 201) throw 'Блок \"О себе\" должен содержать не более 200 символов.';\r\n                                            if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.';\r\n                                            this.props.changeCity()\r\n                                        }catch(e){\r\n                                            this.props.snackbarDismiss(e)\r\n                                        }\r\n                                        }\r\n                                    }\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\" key={index}>\r\n                                                <Cell multiline>\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">\r\n                                                        {\r\n                                                            this.state.edit === index ?\r\n                                                                <Input\r\n                                                                    name=\"editProdTitle\"\r\n                                                                    onChange={this.handleChange}\r\n                                                                    defaultValue={this.state.master.priceList[index].title}\r\n                                                                    value={this.state.editProdTitle}\r\n                                                                    status={this.validateNewProdTitle(this.state.editProdTitle).status === true ? 'valid' : 'error'}\r\n                                                                /> :\r\n                                                                this.state.master.priceList[index].title\r\n                                                        }\r\n                                                    </Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>\r\n                                                        {\r\n                                                            this.state.edit === index ?\r\n                                                                <Input\r\n                                                                    name=\"editProdBody\"\r\n                                                                    onChange={this.handleChange}\r\n                                                                    defaultValue={this.state.master.priceList[index].body}\r\n                                                                    value={this.state.editProdBody}\r\n                                                                    status={this.validateNewProdBody(this.state.editProdBody).status ? 'valid' : 'error'}\r\n                                                                /> :\r\n                                                                this.state.master.priceList[index].body\r\n                                                        }\r\n                                                    </Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">\r\n                                                        {\r\n                                                            this.state.edit === index ?\r\n                                                                <Input\r\n                                                                    name=\"editProdPrice\"\r\n                                                                    type=\"number\"\r\n                                                                    onChange={this.handleChange}\r\n                                                                    defaultValue={this.state.master.priceList[index].price}\r\n                                                                    value={this.state.editProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')}\r\n                                                                    status={this.validateNewProdPrice(this.state.editProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')).status ? 'valid' : 'error'}\r\n                                                                /> :\r\n                                                                this.state.master.priceList[index].price\r\n                                                        }\r\n                                                    </Cell>\r\n                                                    {\r\n                                                        this.state.edit === index ?\r\n                                                            <Div style={{display: 'flex'}}>\r\n                                                                <Button\r\n                                                                    stretched\r\n                                                                    //before={<Icon24Dismiss/>}\r\n                                                                    style={{ marginRight: 8 }}\r\n                                                                    onClick={() => this.setState({edit: null})}\r\n                                                                    size=\"l\"\r\n                                                                    mode=\"destructive\"\r\n                                                                >Отменить</Button>\r\n                                                                <Button\r\n                                                                    size=\"l\"\r\n                                                                    stretched\r\n                                                                    onClick={()=>this.saveEdit(index)}\r\n                                                                    mode=\"secondary\"\r\n                                                                    //before={<Icon24Write/>}\r\n                                                                >Сохранить</Button>\r\n                                                            </Div> :\r\n                                                            <Div style={{display: 'flex'}}>\r\n                                                                <Button\r\n                                                                    stretched\r\n                                                                    //before={<Icon24Dismiss/>}\r\n                                                                    style={{ marginRight: 8 }}\r\n                                                                    onClick={() => this.deleteProcedure(index)}\r\n                                                                    size=\"l\"\r\n                                                                    mode=\"destructive\"\r\n                                                                >Удалить</Button>\r\n                                                                <Button\r\n                                                                    size=\"l\"\r\n                                                                    stretched\r\n                                                                    onClick={()=>{\r\n                                                                        this.setState({editProdTitle:this.state.master.priceList[index].title, editProdBody:this.state.master.priceList[index].body, editProdPrice:String(this.state.master.priceList[index].price), edit: index, add: false})\r\n                                                                    }}\r\n                                                                    mode=\"secondary\"\r\n                                                                    //before={<Icon24Write/>}\r\n                                                                >Редактировать</Button>\r\n                                                            </Div>\r\n                                                    }\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add ?\r\n                                    <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <List>\r\n                                                <Cell description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length+\"/20\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={\r\n                                                            this.state.newProdTitle.length > 0 ?\r\n                                                            this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error' :\r\n                                                                null\r\n                                                        }\r\n                                                        name=\"newProdTitle\"\r\n                                                        type=\"text\"\r\n                                                        value={this.state.newProdTitle}\r\n                                                        placeholder={'Введите название'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdBody.replace(/ +/g, ' ').trim().length+\"/250\"}>\r\n                                                    <Textarea\r\n                                                        require\r\n                                                        status={\r\n                                                            this.state.newProdBody.length > 0 ?\r\n                                                            this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error' :\r\n                                                                null\r\n                                                        }\r\n                                                        name=\"newProdBody\"\r\n                                                        value={this.state.newProdBody}\r\n                                                        placeholder={'Укажите описание'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').trim().length+\"/5\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={\r\n                                                            this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').length > 0 ?\r\n                                                            this.validateNewProdPrice(this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')).status ? 'valid' : 'error' :\r\n                                                                null\r\n                                                        }\r\n                                                        name=\"newProdPrice\"\r\n                                                        type=\"number\" value={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')}\r\n                                                        placeholder={'Укажите цену'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                            </List>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex', webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\" style={{marginRight: 8}}\r\n                                                    onClick={() => this.setState({add: false})}>Отменить</Button>\r\n                                            <Button size=\"l\" stretched\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        </Div>\r\n                                    </Div> :\r\n                                        <CellButton\r\n                                        onClick={() => this.setState({add: true, edit: null})}\r\n                                        before={<Icon24Add/>}\r\n                                        >Добавить процедуру</CellButton>\r\n                                    }\r\n                                </Group>\r\n                                {/*<Group>*/}\r\n                                {/*    <CellButton*/}\r\n                                {/*        onClick={() => this.addProd(true)}*/}\r\n                                {/*        before={<Icon24Add/>}*/}\r\n                                {/*    >Добавить процедуру</CellButton>*/}\r\n                                {/*</Group>*/}\r\n                                <Group>\r\n                                    <FormLayout>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description.replace(/ +/g, ' ').trim().length > 19 && this.state.description.replace(/ +/g, ' ').trim().length < 201 ? 'valid' : 'error'}\r\n                                            bottom={this.state.description.replace(/ +/g, ' ').trim().length > 1 ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что Вы выполняете. Так Вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }\r\n                                                              asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                                        >\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={(event)=>{this.setState({isChange: true}); this.checkSubcat(event)}}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                        <Select\r\n                                            name={'type'}\r\n                                            top=\"Выберите тип оказания услуг\"\r\n                                            value={this.state.type}\r\n                                            bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                            onChange={this.handleChange}\r\n                                        >\r\n                                            <option value=\"Частный мастер\">Частный мастер</option>\r\n                                            <option value=\"Организация\">Организация</option>\r\n                                        </Select>\r\n                                        {\r\n                                            this.state.type === 'Организация' &&\r\n                                            <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                                <Input\r\n                                                    name={'brand'}\r\n                                                    type=\"text\"\r\n                                                    status={\r\n                                                        this.state.brand.length > 0 ?\r\n                                                            this.state.brand.length < 26 ? 'valid' : 'error' :\r\n                                                            null\r\n                                                    }\r\n                                                    value={this.state.brand}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </FormLayoutGroup>\r\n                                        }\r\n                                    </FormLayout>\r\n                                </Group>\r\n                        {this.props.snackbarLk}\r\n                    </React.Fragment>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid, Footer, Group\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\nimport Head from \"../elements/panelHeader\";\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title='Избранное'\r\n                        goBack={()=>this.props.goBack()}\r\n                    />\r\n                <Placeholder\r\n                    stretched\r\n                    icon={<Spinner size=\"large\" style={{ marginTop: 20 }} />}\r\n                    header={'Ищем-ищем...'}\r\n                ></Placeholder>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.error) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title='Избранное'\r\n                            goBack={()=>this.props.goBack()}\r\n                        />\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56LikeOutline/>}\r\n                            header={this.state.mastersArr.message}\r\n                        >Добавить мастера в этот список можно, нажав соответствующую кнопку в его профиле.\r\n                        </Placeholder>\r\n                    </React.Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title='Избранное'\r\n                            goBack={()=>this.props.goBack()}\r\n                        />\r\n                        <Group separator=\"hide\">\r\n                            {\r\n                                this.state.mastersArr.map(master => {\r\n                                    if ((master !== null)) { //если мастер не удален\r\n                                        return (\r\n                                            <React.Fragment>\r\n                                                <CardGrid key={master.vkUid}>\r\n                                                    <Card size=\"l\" mode=\"shadow\">\r\n                                                        <RichCell\r\n                                                            key={master._id}\r\n                                                            before={<Avatar size={72} src={master.avatarLink} />}\r\n                                                            text={master.type}\r\n                                                            caption={master.location.city.title}\r\n                                                            after={<Icon16Chevron/>}\r\n                                                            onClick={() => this.props.openFavMasterOnId(master)}\r\n                                                        >\r\n                                                            {master.firstname} {master.lastname}\r\n                                                        </RichCell>\r\n                                                    </Card>\r\n                                                </CardGrid>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    }\r\n                                })\r\n                            }\r\n                        <Footer style={{webkitUserSelect: 'none', userSelect: 'none'}}>На этом все. Мастеров всего - {this.state.mastersArr.length}.</Footer>\r\n                        </Group>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\n// function renderLastPhoto(arr){\r\n//     for (let i =0; i<arr.length; i++){\r\n//         if (!arr[i]) break;\r\n//         return (\r\n//             <Card\r\n//                 size=\"s\"\r\n//                 mode=\"shadow\"\r\n//                 key={i}\r\n//                 //onClick={() => this.openShowImages(this.state.images, index)}\r\n//             >\r\n//                 <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Button, ConfigProvider, Footer, Panel, Placeholder, Spinner, View} from '@vkontakte/vkui';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline';\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    //window.scrollTo(0, this.props.findModelsListScroll)\r\n                    bridge.send(\"VKWebAppScroll\", {\"top\": this.props.findModelsListScroll, \"speed\": 600});\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    this.props.changeFindModelsList(find);\r\n                    this.setState({findArr: find, isLoad: true});\r\n                })\r\n                .catch(e=>this.setState({warnConnection: true}))\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n    };\r\n    render(){\r\n        if (this.state.warnConnection){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Icon56WifiOutline />}\r\n                                header={'Что-то не так!'}\r\n                                //action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить</Button>}\r\n                            >\r\n                                Проверьте интернет-соединение.\r\n                            </Placeholder>\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            )\r\n        } else if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch, Div, CardScroll, Placeholder, Footer\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true,\r\n            targetImg: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.findModel.onMasterId+this.props.master._id)\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                if (find.length > 0) {\r\n                    let targetImg = [];\r\n                    find[0].images.map(photo=>{\r\n                        if (this.props.master.photos.includes(photo)) targetImg.push(photo)\r\n                    });\r\n                    this.setState({targetImg: targetImg, loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                } else {\r\n                    let error = <Cell multiline>У Вас нет активных постов о поиске</Cell>;\r\n                    this.setState({error: error, isLoaded: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    targetImg = (url) => {\r\n        try{\r\n            if (this.state.targetImg.includes(url)){\r\n                let targetImg = this.state.targetImg;\r\n                let index = targetImg.indexOf(url);\r\n                if (index > -1) {\r\n                    targetImg.splice(index, 1);\r\n                } else targetImg.splice(0, index);\r\n                this.setState({targetImg: targetImg});\r\n            } else {\r\n                let targetImg = this.state.targetImg;\r\n                if(targetImg.length >2) throw 'Выделить можно только 3 фотографии.';\r\n                targetImg.push(url);\r\n                this.setState({targetImg: targetImg});\r\n            }\r\n        }catch(e){\r\n            this.openSnack(e)\r\n        }\r\n    }\r\n\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length === 0) throw 'Пустое сообщение недопустимо.';\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length > 250) throw 'Максимальная длина сообщения - 250 символов.';\r\n            if(this.state.targetImg.length < 3) throw 'Необходимо выбрать 3 фотографии из портфолио.';\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            // let images = [];\r\n            // this.props.master.photos.map((image,i)=> {\r\n            //     if (i < 3){\r\n            //         images.push(image)\r\n            //     }\r\n            // });\r\n            if (this.state.isActive === true) {\r\n                let find = this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = this.state.targetImg;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                // find.masterId = this.state.activeMaster._id;\r\n                // find.location = this.state.activeMaster.location;\r\n                // find.firstname = this.state.activeMaster.firstname;\r\n                // find.lastname = this.state.activeMaster.lastname;\r\n                // find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = this.state.targetImg;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                    fetch(BACKEND.findModel.new, {\r\n                        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                        mode: 'cors', // no-cors, cors, *same-origin\r\n                        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                        credentials: 'same-origin', // include, *same-origin, omit\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        redirect: 'follow', // manual, *follow, error\r\n                        referrer: 'no-referrer', // no-referrer, *client\r\n                        body: JSON.stringify(find), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res=>{\r\n                            this.setState({loadFind: res.find, isActive: true});\r\n                            if (res.mStatus === false){\r\n                                this.setState({visible: false});\r\n                                this.openSnack('Объявление о поиске модели создано, но пока не показывается. Его можно активировать сразу после прохождения модерации профиля мастера.')\r\n                            } else {\r\n                                this.openSnack('Объявление о поиске модели успешно создано.')\r\n                            }\r\n                        })\r\n                        .catch(e=>console.log(e));\r\n                //this.postData(BACKEND.findModel.new, find);\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                this.openSnack('Информация успешно обновлена.')\r\n            })\r\n            .catch(e=>{\r\n                this.openSnack('Не удалось обновить данные.');\r\n                console.log(e)\r\n            })\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/*<CardGrid>*/}\r\n                                    {\r\n                                        this.props.master.photos.length > 0 ?\r\n                                            <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                                <Cell>Выполненые работы мастера</Cell>\r\n                                                <CardScroll>\r\n                                                    {\r\n                                                        this.props.master.photos.map((photoUrl, index) => {\r\n                                                            return (\r\n                                                                <Card\r\n                                                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                                    size=\"s\"\r\n                                                                    mode=\"shadow\"\r\n                                                                    key={index}\r\n                                                                    onClick={() => this.targetImg(photoUrl)}\r\n                                                                >\r\n                                                                    {\r\n                                                                        this.state.targetImg.includes(photoUrl) ?\r\n                                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}}><div style={{backgroundColor: 'grey', borderRadius: '13px 13px 0 0', textAlign: 'center'}}>Выбрано</div></div> :\r\n                                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                                    }\r\n                                                                </Card>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </CardScroll>\r\n                                            </Div> :\r\n                                            <Cell multiline>У Вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий.</Cell>\r\n                                    }\r\n                                {/*{*/}\r\n                                {/*    this.props.master.photos.length > 0 ?*/}\r\n                                {/*    this.props.master.photos.map((image,i)=>{*/}\r\n                                {/*        if (i < 3){*/}\r\n                                {/*            return (*/}\r\n                                {/*                <Card size='s' key={i}>*/}\r\n                                {/*                    <div*/}\r\n                                {/*                        style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}*/}\r\n                                {/*                    >*/}\r\n                                {/*                    </div>*/}\r\n                                {/*                </Card>*/}\r\n                                {/*            )*/}\r\n                                {/*        }*/}\r\n                                {/*    }) : 'У вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий'*/}\r\n                                {/*}*/}\r\n                                {/*</CardGrid>*/}\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>{\r\n                                            if (this.props.master.moderation.status === true){\r\n                                                this.setState({visible: !this.state.visible})\r\n                                            } else {\r\n                                                this.openSnack('Ваш профиль находится на модерации. Вы можете создать объявление уже сейчас, но до завершения проверки пользователи его не увидят.')\r\n                                            }\r\n                                        }}\r\n                                        checked={this.props.master.moderation.status === true ? this.state.visible : false}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <React.Fragment>\r\n                                    <Cell description={'Некликабельно'}>Ваш пост будет выглядеть так:</Cell>\r\n                                    <FindCard\r\n                                        date={this.getDate(this.state.loadFind.date)}\r\n                                        key={this.state.loadFind._id}\r\n                                        find={this.state.loadFind}\r\n                                        openMasterOnId={this.props.openMasterOnId}\r\n                                    />\r\n                                </React.Fragment>\r\n                            }\r\n                            <Footer/>\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModelMaster);","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если Вы являетесь владельцем сообщества с тематикой, схожей с тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\nimport Head from \"./panelHeader\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: false,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 49, title: 'Екатеринбург'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities('')\r\n        // window.onpopstate = () => {\r\n        //     this.props.goBack()\r\n        // };\r\n    }\r\n\r\n    getCities(filter) {\r\n        const data = {\r\n            search: filter.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n}\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                        <React.Fragment>\r\n                            <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                            {this.state.cities.length > 0 ?\r\n                            <List>\r\n                                {this.state.cities.map(city =>\r\n                                    <Cell\r\n                                        description={city.region || ''}\r\n                                        onClick={()=>this.props.changeCity(city)}\r\n                                        key={city.id}\r\n                                    >\r\n                                        {city.title}\r\n                                    </Cell>\r\n                                )}\r\n                            </List> :\r\n                                <Placeholder\r\n                                    icon={<Icon56PlaceOutline />}\r\n                                    header=\"Город не найден\"\r\n                                >\r\n                                    Проверьте опечатки или измените критерии поиска\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel, Textarea, Cell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\n\r\nimport {BACKEND} from \"../func/func\";\r\nimport Head from \"../elements/panelHeader\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0,\r\n            isLoad: true\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            })\r\n            .catch(e=>console.log(e))\r\n        await fetch(BACKEND.comment.moderation,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                this.setState({comments: comments, isLoad: false})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: [],\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        // if (index > -1) {\r\n        //     mastersList.splice(index, 1);\r\n        // } else mastersList.splice(0, index);\r\n        // this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        mastersList[index].moderation.reasons = reasons;\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n        //this.setState({mastersList: mastersList});\r\n    };\r\n\r\n    goodComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moderCom+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    badComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moderCom+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null;\r\n            console.log(comment)\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment._id, index)} mode=\"destructive\">Удалить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment.body}\r\n                        </RichCell>\r\n                        <Cell before={ <Avatar size={25} src={comment.user.avatarLink} /> }> From - {comment.user.firstname + ' ' + comment.user.lastname}</Cell>\r\n                        <Cell >To - {comment.to.name}</Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.isLoad === true) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"Загружаю...\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Cell>\r\n                                            <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                            <Button onClick={()=>this.setState({[master.vkUid]: true})} mode=\"secondary\">Отклонить</Button>\r\n                                        </Cell>\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                            {\r\n                                master.moderation.reasons.length > 0 &&\r\n                                <Cell>\r\n                                    {\r\n                                        master.moderation.reasons.map(reason=>{\r\n                                            return reason\r\n                                        })\r\n                                    }\r\n                                </Cell>\r\n                            }\r\n                            {\r\n                                this.state[master.vkUid] === true &&\r\n                                <Cell>\r\n                                    <Textarea name='reason' value={this.state.reason} onChange={(event)=>{\r\n                                        console.log(this.state.reason);\r\n                                        this.setState({reason: event.target.value})\r\n                                    }\r\n                                    }/>\r\n                                    <Button onClick={()=>{\r\n                                        this.bad(master._id, index);\r\n                                        this.setState({[master.vkUid]: false})\r\n                                    }} mode=\"secondary\">Отклонить</Button>\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        if (this.props.params.vk_user_id !== '199500866'){\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Cell>У Вас нет доступа</Cell>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Head\r\n                        title={'Модерация'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'masters' })}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'comments' })}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Moder);","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder, Footer, PromoBanner} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {Ads} from \"../elements/ads\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            promo: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n        bridge.subscribe(e=>{\r\n            if (!e.detail) {\r\n                return;\r\n            }\r\n\r\n            const { type, data } = e.detail;\r\n\r\n            if (type === 'VKWebAppGetAdsResult') {\r\n                // Reading result of the Code Reader\r\n                this.setState({promo: data})\r\n            }\r\n\r\n            if (type === 'VKWebAppGetAdsFailed') {\r\n                // Reading result of the Code Reader\r\n                console.log(data.error_data);\r\n                this.setState({promo: data.error_data})\r\n            }\r\n        });\r\n        bridge.send(\"VKWebAppGetAds\", {})\r\n            .then(data=>console.log('ads'))\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        let i = 0;\r\n        return this.props.mastersList.map(master => {\r\n            if (i === 6) i = 0;\r\n            i++;\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell\r\n                            style={{borderRadius: '10px 10px 10px 10px'}}\r\n                            expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(master.meta)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster(master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                    {/*{*/}\r\n                    {/*    i === 5 && this.state.promo !== null ?*/}\r\n                    {/*        <Card size=\"l\" mode=\"shadow\">*/}\r\n                    {/*            <PromoBanner bannerData={ this.state.promo } />*/}\r\n                    {/*        </Card> :*/}\r\n                    {/*        null*/}\r\n                    {/*}*/}\r\n                </CardGrid>\r\n            );\r\n        });\r\n    }\r\n\r\n    setBottom = (meta) => {\r\n        if (meta.comments > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\", webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                    Рейтинг {meta.rating} из {meta.comments} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\", webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.props.openSnack('Спасибо, что помогаете сервису в развитии.')\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                    <Footer>На этом все. Мастеров всего - {this.props.mastersList.length}.</Footer>\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner, Div, Panel, View, Placeholder} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline';\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true});\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.mastersListScroll){\r\n            //window.scrollTo(0, this.props.mastersListScroll)\r\n            bridge.send(\"VKWebAppScroll\", {\"top\": this.props.mastersListScroll});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                })\r\n                .catch(e=>this.setState({warnConnection: true}))\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                })\r\n                .catch(e=>this.setState({warnConnection: true}))\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.warnConnection){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56WifiOutline />}\r\n                        header={'Что-то не так!'}\r\n                        //action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить</Button>}\r\n                    >\r\n                        Проверьте интернет-соединение.\r\n                    </Placeholder>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            const {targetCategory, user} = this.props;\r\n            return (\r\n                // <React.Fragment>\r\n                <Panel id=\"mastersList\">\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e)=>this.checkSubcat(e)}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                    {this.props.snackbar}\r\n                    {/*</React.Fragment>*/}\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner, Button\r\n} from '@vkontakte/vkui';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster, changeActiveMasterOnMasters, changeActiveMasterOnFindModels, changeActiveMasterOnFavs, changeLaunchParams, changeStory, goTo, goForward, changeActiveViewLk} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport HeadCity from \"./js/elements/headCity\";\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popoutLk: null,\r\n            popoutInvite: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            warnConnection: false,\r\n            mastersModal: null,\r\n            findModal: null,\r\n            lkModal: null,\r\n            snackbarInvite: null\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n                if (data.scheme === 'space_gray') bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\"});\r\n                if (data.scheme === 'bright_light') bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"dark\"});\r\n            }\r\n        });\r\n        if (this.props.launchParams.sign !== undefined) {\r\n            this.setState({validLaunchParams: true});\r\n            console.log('Параметры пришли');\r\n            this.props.changeLaunchParams(this.props.launchParams);\r\n            this.auth(this.props.launchParams);\r\n        } else {\r\n            this.setState({validLaunchParams: false});\r\n            this.openSnack('Ошибка. Не переданы параметры запуска.');\r\n        }\r\n\r\n        if (this.props.linkParams.masterid){\r\n            this.openMasterOnId(this.props.linkParams.masterid);\r\n            this.props.changeStory('masters')\r\n        }\r\n        window.onpopstate = () => {\r\n            this.goBack(this.props.activeStory)\r\n        };\r\n    }\r\n\r\n    auth = (params) => {\r\n        fetch(BACKEND.users.auth, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                if (this.state.warnConnection === true){\r\n                    this.setState({warnConnection: false, snackbar: null});\r\n                }\r\n                this.setState({validLaunchParams: true});\r\n                this.props.loginUser(data.user);\r\n                if (data.master !== null){\r\n                    this.props.setMaster(data.master)\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                this.setState({\r\n                    snackbar:\r\n                        <Snackbar\r\n                            duration='3000'\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({snackbar: null})}\r\n                            before={<Icon24Dismiss/>}\r\n                        >\r\n                            Ошибка подключения к серверу. Страшно, очень страшно, мы не знаем что это такое, если бы мы знали что это такое, то мы бы знали, что это такое.\r\n                        </Snackbar>\r\n                });\r\n                //this.openSnack('Ошибка подключения к серверу. Страшно, очень страшно, мы не знаем что это такое, если бы мы знали что это такое, то мы бы знали, что это такое.');\r\n                this.setState({warnConnection: true});\r\n            })\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openSnackInvite(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbarInvite) this.setState({snackbarInvite: null});\r\n        this.setState({\r\n            snackbarInvite:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarInvite: null})}\r\n                    before={<Icon24Dismiss/>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                if (master.error) master = null;\r\n                this.props.changeActiveMasterOnMasters(master);\r\n                this.goTo('masters', 'masterInfo');\r\n            });\r\n    };\r\n\r\n    openFindMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFindModels(master);\r\n                this.goTo('findmodel', 'masterInfo');\r\n            });\r\n    };\r\n\r\n    openSnackLk(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null});\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnackLkDismiss(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null});\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Icon24Dismiss/>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                if (newMaster.error){\r\n                    this.openSnack(newMaster.error);\r\n                } else {\r\n                    this.props.setMaster(newMaster);\r\n                    this.goTo('lk', 'lk');\r\n                }\r\n                //this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack(e.message);\r\n            //this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    // openMasterOnLink = (masterId) => {\r\n    //     this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n    // };\r\n\r\n    goTo = (story, panel) => {\r\n        window.history.pushState({panel: panel}, panel);\r\n        this.props.goTo(story, panel)\r\n        let hist = this.props[story+'History'];\r\n    };\r\n\r\n    goBack = (story) => {\r\n        console.log('до',this.props[story+'History']);\r\n        if (this.props[story+'History'].length === 1){\r\n            bridge.send('VKWebAppClose', {'status': 'sucsess'});\r\n        } else {\r\n            this.props.goForward(story)\r\n            let hist = this.props[story+'History'];\r\n            console.log('после',this.props[story+'History']);\r\n        }\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        user.params = this.props.params;\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (this.state.warnConnection === true){\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id='loading' activePanel=\"loading\">\r\n                        <Panel id='loading'>\r\n                                      <Placeholder\r\n                                          stretched\r\n                                           icon={<Icon56WifiOutline />}\r\n                                          header={'Что-то не так!'}\r\n                                            action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить авторизацию</Button>}\r\n                                        >\r\n                                            Проверьте интернет-соединение.\r\n                                        </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Всё, беда! Вы все сломали :(\r\n                            </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id='loading' activePanel=\"loading\">\r\n                        <Panel id='loading'>\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                                header=\"Выполняется вход...\"\r\n                            >Это может занять несколько секунд\r\n                                {this.state.snackbar}\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n      } else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.props.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={()=>{\r\n                                if (this.props.activeStory === 'news'){\r\n                                    this.goTo('news', 'news')\r\n                                } else {\r\n                                    this.props.changeStory('news');\r\n                                }\r\n                            }}\r\n                            selected={this.props.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>{\r\n                                if (this.props.activeStory === 'masters'){\r\n                                    this.goTo('masters', 'mastersList')\r\n                                } else {\r\n                                    this.props.changeStory('masters');\r\n                                }\r\n                            }}\r\n                            selected={this.props.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>{\r\n                                if (this.props.activeStory === 'findmodel'){\r\n                                    this.goTo('findmodel', 'findmodel')\r\n                                } else {\r\n                                    this.props.changeStory('findmodel');\r\n                                }\r\n                            }}\r\n                            selected={this.props.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Search /></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>{\r\n                                this.setState({snackbarLk: null});\r\n                                if (this.props.activeStory === 'lk'){\r\n                                    this.goTo('lk', 'lk')\r\n                                } else {\r\n                                    this.props.changeStory('lk');\r\n                                }\r\n                            }}\r\n                            selected={this.props.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" history={this.props.newsHistory} onSwipeBack={() => this.goBack('news')} activePanel={this.props.newsHistory[this.props.newsHistory.length -1]}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={()=>{\r\n                                    this.props.changeStory('lk');\r\n                                    this.goTo('lk', 'registration')\r\n                                    //this.props.changeStory('lk');\r\n                                    //this.props.changeActiveViewLk('registration');\r\n                                }}\r\n                                //openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                // openModer={() => this.goForwardNews('moder')}\r\n                                openModer={() => this.goTo('news', 'moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBack('news')}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master});\r\n                                    this.goTo('news', 'masterInfo');\r\n                                    //this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('news')}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                    </View>\r\n                        <View id=\"masters\" modal={this.state.mastersModal} activePanel={this.props.mastersHistory[this.props.mastersHistory.length-1]} history={this.props.mastersHistory} onSwipeBack={() => this.goBack('masters')}>\r\n                                    <Masters\r\n                                            id=\"mastersList\"\r\n                                            //changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                            changeCity={()=> this.goTo('masters', 'changeCity')}\r\n                                            openSnack={(title)=>this.openSnack(title)}\r\n                                            //changeCategory={()=>this.setState({activePanelMasters: 'masterCat'})}\r\n                                            changeCategory={()=>this.goTo('masters', 'masterCat')}\r\n                                            openPanelMaster={(master)=>{\r\n                                                this.props.changeActiveMasterOnMasters(master);\r\n                                                this.goTo('masters', 'masterInfo');\r\n                                            }}\r\n                                            snackbar={this.state.snackbar}\r\n                                    />\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('masters')}/>\r\n                                    <CityList\r\n                                            id='changeCity'\r\n                                            // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                            goBack={() => this.goBack('masters')}\r\n                                            changeCity={(city) => {\r\n                                            this.changeTargetCity(city);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'})\r\n                                        }}\r\n                                    />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    //onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    //openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openPhoto={() => this.goTo('masters', 'masterPhoto')}\r\n                                    openComments={() => this.goTo('masters', 'masterComments')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    openModal={(content)=>{\r\n                                        this.setState({mastersModal: content})\r\n                                    }}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <Head\r\n                                    title={'Выбор категории'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.props.findmodelHistory[this.props.findmodelHistory.length-1]}\r\n                        history={this.props.findmodelHistory} onSwipeBack={() => this.goBack('findmodel')}\r\n                        modal={this.state.findModal}\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ищу модель</PanelHeader>\r\n                            <FindModel\r\n                                //openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                openMasterOnId={(masterId)=>this.openFindMasterOnId(masterId)}\r\n                                // changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                                changeCity={() => this.goTo('findmodel', 'changeCity')}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='changeCity'>\r\n                            <Head title={'Выбор города'}\r\n                                  goBack={() => this.goBack('findmodel')}/>\r\n                        <CityList\r\n                                id='changeCity'\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.goBack('findmodel')\r\n                            }}\r\n                        />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <MasterCard\r\n                                id=\"masterInfo\"\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                openPhoto={() => this.goTo('findmodel', 'masterPhoto')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                openComments={() => this.goTo('findmodel', 'masterComments')}\r\n                                openModal={(content)=>{\r\n                                    this.setState({findModal: content})\r\n                                }}\r\n                                //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterPhoto\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterComments\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n                    <Root id=\"lk\" activeView={this.props.activeViewLk} modal={this.state.lkModal}>\r\n                            <View id=\"lk\" popout={this.state.popoutLk} activePanel={this.props.lkHistory[this.props.lkHistory.length-1]} history={this.props.lkHistory} onSwipeBack={() => this.goBack('lk')}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнёрам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.goTo('lk', 'setting')}\r\n                                            openFavourite={() => this.goTo('lk', 'favourite')}\r\n                                            openFindModel={() => this.goTo('lk', 'findModel')}\r\n                                            openMasterPhoto={() => this.goTo('lk', 'portfolio')}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbarLk}\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Setting\r\n                                    setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                    snackbar={(message) => this.openSnackLk(message)}\r\n                                    snackbarDismiss={(message) => this.openSnackLkDismiss(message)}\r\n                                    modalBack={this.modalBack}\r\n                                    activeModal={this.state.activeModal}\r\n                                    changeCity={() => this.goTo('lk', 'changeCity')}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    snackbarLk={this.state.snackbarLk}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('lk')}/>\r\n                                <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    changeCity={(city) => {\r\n                                        let master = this.props.master;\r\n                                        master.location.city = city;\r\n                                        master.changed = true;\r\n                                        this.props.setMaster(master);\r\n                                        this.goBack('lk')\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Favourite\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    openFavMasterOnId={(master)=>{\r\n                                        this.props.changeActiveMasterOnFavs(master);\r\n                                        this.goTo('lk', 'masterInfo');\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    openPhoto={() => this.goTo('lk', 'masterPhoto')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    openComments={() => this.goTo('lk', 'masterComments')}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                    openModal={(content)=>{\r\n                                        this.setState({lkModal: content})\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"portfolio\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Portfolio\r\n                                    setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title='Отзывы'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head\r\n                                    title='Ищу модель'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <FindModelMaster\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user} popout={this.openAlert}\r\n                                />\r\n                            </Panel>\r\n\r\n                                {/*reg*/}\r\n                                <Panel id='registration'>\r\n                                    <Head\r\n                                        title={'Регистрация'}\r\n                                        goBack={() => {\r\n                                            this.goBack('lk')\r\n                                            //this.props.changeActiveViewLk('lk')\r\n                                        } }\r\n                                    />\r\n                                    <Invite\r\n                                        setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                        goBack={() => this.props.changeActiveViewLk('lk')}\r\n                                        closeReg={this.closeReg}\r\n                                        changeCity={() => this.goTo('lk', 'changeCityReg')}\r\n                                        openRules={() => this.goTo('lk', 'rules')}\r\n                                        snackbar={(message) => this.openSnackInvite(message)}\r\n                                    />\r\n                                    {this.state.snackbarInvite}\r\n                                </Panel>\r\n                                <Panel id='rules'>\r\n                                    <Head\r\n                                        title='Соглашение'\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <Rules\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id='changeCityReg'>\r\n                                    <Head title={'Выбор города'}\r\n                                          goBack={() => this.goBack('lk')}/>\r\n                                    <CityList\r\n                                        id='changeCityReg'\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        changeCity={(city) => {\r\n                                            this.changeTargetCity(city);\r\n                                            this.goBack('lk')\r\n                                        }}\r\n                                    />\r\n                                </Panel>\r\n                        </View>\r\n\r\n                        {/*<View activePanel={this.props.activePanelregistration} popout={this.state.popoutInvite} id='registration'>*/}\r\n                        {/*    */}\r\n                        {/*</View>*/}\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs,\r\n        params: state.params,\r\n        activePanelnews: state.activePanelnews,\r\n        activePanelmasters: state.activePanelmasters,\r\n        activePanelfindmodel: state.activePanelfindmodel,\r\n        activePanellk: state.activePanellk,\r\n        activeStory: state.activeStory,\r\n        newsHistory: state.newsHistory,\r\n        mastersHistory: state.mastersHistory,\r\n        findmodelHistory: state.findmodelHistory,\r\n        lkHistory: state.lkHistory,\r\n        activeViewLk: state.activeViewLk,\r\n        activePanelregistration: state.activePanelregistration,\r\n        registrationHistory: state.registrationHistory\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch),\r\n        changeStory: bindActionCreators(changeStory, dispatch),\r\n        goTo: bindActionCreators(goTo, dispatch),\r\n        goForward: bindActionCreators(goForward, dispatch),\r\n        changeActiveViewLk: bindActionCreators(changeActiveViewLk, dispatch)\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nrequire('dotenv').config();\r\n\r\n\r\nconst store = createStore(rootReducer);\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App launchParams={params} linkParams={linkParams}/>\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n// import(\"./eruda.js\").then(({ default: eruda }) => {}); //runtime download\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}