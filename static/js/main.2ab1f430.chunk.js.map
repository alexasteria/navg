{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/elements/functions.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/store/reducers.js","js/store/actions.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/elements/modalPage.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["Head","platform","theme","left","onClick","this","props","goBack","title","React","Component","BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","subscribers","onarrayid","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getAll","logs","params","sendmessage","keyGroup","secretKey","moder","patchData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","response","console","log","json","catch","e","MastersCard","handleChange","event","setState","target","name","value","favStatus","state","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","getPhone","share","bridge","send","activeMaster","_id","result","openSnackAvatar","avatarLink","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","sendMessage","firstname","lastname","sendtitle","phone","vkUid","token","Math","random","snackbar","mess","userId","userVkUid","masterId","masterVkUid","postData","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","count","images","start_index","text","after","src","size","marginTop","visible","photo","description","brand","bottomContent","expandable","openComments","indicator","comments","length","photos","map","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","openPhoto","icon","header","separator","priceList","item","multiline","price","connect","reverse","image","gridPhoto","MastersComments","changeStars","stars","i","rating","id","sendComment","Number","isCommended","commentsArr","countComments","prevProps","prevState","snapshot","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","star","bottom","replace","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","isMember","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","isMaster","openModer","openReg","nowCounter","countUsers","countMasters","countCities","cities","city","inGroup","vk_is_favorite","res","sort","dispatch","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","setMaster","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","Invite","getCategories","categories","regMaster","checkLicense","statusMessage","cat","subcat","filter","active","label","sex","location","country","banned","status","closeReg","error","addProd","add","saveProd","undefined","newProdTitle","newProdBody","newProdPrice","onRemove","slice","permMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","asideContent","checked","subcategory","require","stretched","openRules","bindActionCreators","Lk","checkModeration","addToFavApp","connection","tmpUser","isUser","favsArr","mastersArr","openSetting","openFavourite","openMasterPhoto","openFindModel","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","getUploadServer","upload_url","getToken","access_token","activeMasterId","photoArr","photoFile","CityListModal","search","getCities","toLowerCase","items","updateModalHeight","Fragment","region","withModalRootContext","osname","Setting","saveChanges","openSnackDismiss","checkBan","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","Array","isArray","modalBack","activeModal","dynamicContentHeight","ANDROID","right","IOS","String","onSubmit","handleSubmit","Favourite","loadFavsMasters","ids","isLoaded","err","window","history","replaceState","pushState","addEventListener","caption","openFavMasterOnId","FindCard","disabled","find","sale","openMasterOnId","marginBottom","FindList","findArr","action","FindModel","loadFind","scrollTo","self","pageYOffset","FindModelMaster","handleChangeSelect","selectvalue","save","isActive","Partners","addToCommunity","CityList","Moder","good","reasons","bad","reason","goodComment","badComment","activeTab","mastersCount","usersCount","openMaster","selected","renderMasters","renderComments","MastersList","setBottom","setTitle","ratingArr","reduce","a","b","openPanelMaster","countSubcat","ScrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","App","goBackNews","newsHistory","pop","activePanelNews","goForwardNews","verificationUser","vkUser","usersArr","first_name","last_name","photo_200","newUser","openAlert","actionsLayout","autoclose","newMaster","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeStory","activeViewMasters","activePanelLk","openStory","storyName","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","scheme","onStoryChange","setActiveModal","onpopstate","subscribe","detail","validationParams","dataset","story","activePanel","tabbar","data-story","onSwipeBack","moderId","setActiveMaster","activeView","modal","Boolean","hostname","match","store","createStore","changeIsMaster","linkParams","hash","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2ab1f430.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nconst osname = platform();\r\n\r\nclass Head extends React.Component {\r\n    render(){\r\n        return (\r\n            <PanelHeader\r\n                theme=\"light\"\r\n                left={<PanelHeaderBack onClick={this.props.goBack} />}\r\n            >{this.props.title}\r\n            </PanelHeader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head;","//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    keyGroup: 'f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf', //'17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b'\r\n    secretKey: 'eb8wUDGs1LQoSKPsIS9i',\r\n    moder: BACK_LINK+'masters/moderation'\r\n};","import React from \"react\";\r\n\r\nfunction postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, FormLayout, RichCell, CellButton, Placeholder\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline';\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.setState({activeMaster: this.props.activeMaster}, ()=> this.loadFavs())\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            patchData(BACKEND.users+'/'+this.state.user._id, this.state.user);\r\n            if (this.state.isFavourite === true) {\r\n                let count = {count: 1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //прибавляем счетчик мастера\r\n            } else {\r\n                let count = {count: -1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //убавляем счетчик\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.getPhone(title)}\r\n                mode=\"outline\"\r\n            >\r\n                Записаться\r\n            </Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = BACKEND.keyGroup;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number});\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Cell>Мастер скрыт</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                    ?\r\n                                    <Cell before={<Icon20UserOutline />}>Да, это Вы</Cell>\r\n                                    :\r\n                                    <Cell>\r\n                                        {this.favStatus()}\r\n                                        <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                    </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}\r\n                            description={'Подписчиков: ' + this.state.countFavs}\r\n                        >\r\n                            Отзывы\r\n                        </Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Div>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Div> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <div>\r\n                                                            <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                        </div>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersCard);","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout, Snackbar, FormLayoutGroup, Banner\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport {connect} from \"react-redux\";\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars();\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({commentsArr: this.props.activeMaster.comments, countComments: count, isLoad: true});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = [];\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            }\r\n        }\r\n        this.setState({stars: stars});\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера';\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body,\r\n                moderation: false\r\n            };\r\n            console.log(comment);\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n            this.setState({isCommended: true});\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Комментарий отправлен на проверку\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.setState({ snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                        >\r\n                            Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                        </Snackbar>\r\n                });\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={comment.rating+` из 5`}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        {/*<Slider*/}\r\n                        {/*    step={1}*/}\r\n                        {/*    min={1}*/}\r\n                        {/*    max={5}*/}\r\n                        {/*    value={Number(this.state.rating)}*/}\r\n                        {/*    onChange={rating=>this.setState({rating})}*/}\r\n                        {/*    top={\"Моя оценка работы мастера: \"+this.state.rating}*/}\r\n                        {/*    bottom='Перемещайте ползунок влево или вправо для изменения оценки'*/}\r\n                        {/*/>*/}\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/ /g, \"\").length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers, countCities: data.countCities, cities: data.cities.sort()})\r\n            });\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранные</Button>}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"groups.isMember\",\r\n            \"params\": {\"group_id\": \"193179174\",\"user_id\": this.props.user.vkUid, \"v\":\"5.103\", \"access_token\": BACKEND.keyGroup}})\r\n            .then(result => {\r\n                if (result.response === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {user.isMaster === false &&\r\n                    <Cell\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы - мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <div>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        <Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>\r\n                        <Cell multiline>\r\n                            {\r\n                                this.state.cities &&\r\n                                this.state.cities.map(city=>{\r\n                                    return city+' '\r\n                                })\r\n                            }\r\n                        </Cell>\r\n                    </div>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Group>\r\n                <Placeholder\r\n                    icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                    header=\"Привет!\"\r\n                >\r\n                    У нас ты можешь найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                </Placeholder>\r\n                {this.userInfo(user)}\r\n                {this.nowCounter()}\r\n                {this.isMember()}\r\n                {this.favApp()}\r\n                {/*{this.feedList()}*/}\r\n                {/*<FixedLayout*/}\r\n                {/*    vertical=\"bottom\"*/}\r\n                {/*    style={{marginBottom: 5}}*/}\r\n                {/*>*/}\r\n                {/*    */}\r\n                {/*</FixedLayout>*/}\r\n            </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);;","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: {},\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity:action.payload.location.city};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload};\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload};\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER', master);\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER', user);\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST', newMastersList);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY', newTargetCategory);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY', newTargetCity);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL', newScroll);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST', newFindModelsList);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL', newFindModelsListScroll);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS', NewActiveMaster);\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS', NewActiveMaster);\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS', NewActiveMaster);\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS', params);\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                firstname: this.props.user.firstname,\r\n                lastname: this.props.user.lastname,\r\n                description: this.state.description,\r\n                vkUid: this.props.user.vkUid,\r\n                type: this.state.type,\r\n                avatarLink: this.props.user.avatarLink,\r\n                sex: this.props.user.sex,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                banned: {status: false},\r\n                priceList: this.state.priceList,\r\n                visible: true,\r\n                params: this.props.params\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена');\r\n    };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        size=\"l\"\r\n                                        description=\"Регистрация мастера\"\r\n                                        before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                    >\r\n                                        {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={this.props.changeCity}\r\n                                        indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                        status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                        bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                    >\r\n                                        Ваш город\r\n                                    </Cell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        multiline\r\n                                        asideContent={\r\n                                            <Switch\r\n                                                onChange={this.permMessage}\r\n                                                checked={this.state.statusMessage}/>\r\n                                        }\r\n                                        bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                    >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                    </Cell>\r\n                                    {/*<Cell*/}\r\n                                    {/*    expandable*/}\r\n                                    {/*    multiline*/}\r\n                                    {/*    onClick={this.permMessage}*/}\r\n                                    {/*    description=\"Для получения уведомлений о заявках\"*/}\r\n                                    {/*    status={this.state.statusMessage === true ? 'valid' : 'error'}*/}\r\n                                    {/*>Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? <span style={{color: 'green'}}>Разрешен</span> : <span style={{color: 'red'}}>Не разрешен</span>}*/}\r\n                                    {/*</Cell>*/}\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                // removable\r\n                                                // onRemove={() => {\r\n                                                //     this.onRemove(index)\r\n                                                // }}\r\n                                                >\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            </Cell>\r\n                                            <Button\r\n                                                //before={<Icon24Dismiss/>}\r\n                                                onClick={() => {this.onRemove(index)}}\r\n                                                size=\"xl\"\r\n                                                mode=\"destructive\"\r\n                                            >Удалить</Button>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdTitle\"\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Textarea\r\n                                            require\r\n                                            name=\"newProdBody\"\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdPrice\"\r\n                                            type=\"number\" value={this.state.newProdPrice}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button, Switch} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            return (\r\n                <Cell multiline>Ваш профиль на проверке. В течении часа он будет доступен в поиске.</Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    bottomContent={this.state.user.isMaster && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                {this.state.user.isMaster && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Snackbar, Cell, PanelSpinner, Spinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    onClick={this.getToken}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories, isLoad: true});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        this.props.setMaster(this.state.master);\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                this.props.modalBack();\r\n                this.props.snackbar('Изменения сохранены');\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.openSnack('Процедура добавлена');\r\n        } catch (error) {\r\n            this.openSnackDismiss(error)\r\n        }\r\n    };\r\n    // saveProd = () => {\r\n    //     try {\r\n    //         if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n    //         if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n    //         if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n    //         let master = this.state.master;\r\n    //         master.priceList.push({\r\n    //             title: this.state.newProdTitle,\r\n    //             body: this.state.newProdBody,\r\n    //             price: this.state.newProdPrice\r\n    //         });\r\n    //         this.setState({master: master});\r\n    //         this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n    //         this.props.snackbar('Процедура добавлена');\r\n    //     } catch (error) {\r\n    //         this.props.snackbar(error)\r\n    //     }\r\n    // };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <ModalRoot\r\n                        activeModal={this.props.activeModal}\r\n                        onClose={this.saveChanges}\r\n                    >\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'setting'}\r\n                                   onClose={this.saveChanges}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={this.saveChanges}>{'Сохранить'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={this.saveChanges}>{osname === IOS ? 'Сохранить' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Настройки\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.master.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.props.changeModal('changeCity')}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\">\r\n                                                <Cell\r\n                                                    key={item}\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    //removable\r\n                                                    // onRemove={() => {\r\n                                                    //     this.onRemove(index)\r\n                                                    // }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                    <Button\r\n                                                        //before={<Icon24Dismiss/>}\r\n                                                        onClick={() => {this.onRemove(index)}}\r\n                                                        size=\"xl\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Удалить</Button>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Textarea\r\n                                                require\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\" value={this.state.newProdPrice}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={this.checkSubcat}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                            </Div>\r\n                            {this.state.snackbar}\r\n                        </ModalPage>\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'changeCity'}\r\n                                   onClose={() => this.props.changeModal('setting')}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{'Назад'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{osname === IOS ? 'Назад' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Выбор города\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <CityListModal dynamicContentHeight\r\n                                           changeTargetCity={(city) => this.changeCity(city)}\r\n                            />\r\n                        </ModalPage>\r\n                    </ModalRoot>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, Cell, CardGrid\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\nimport Spin from '../elements/spinner'\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.history.replaceState({}, '', '#init');\r\n        window.history.pushState({}, '', '#router');\r\n        window.addEventListener('popstate', event => {\r\n            window.history.pushState({}, '', '#router-back');\r\n            this.props.goBack();\r\n        });\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56LikeOutline/>}\r\n                        header={this.state.mastersArr.message}\r\n                    >Добавить мастера в этот список можно, нажав соответствующую кнопку в профиле мастера.\r\n                    </Placeholder>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master.vkUid}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <RichCell\r\n                                            key={master._id}\r\n                                            before={<Avatar size={72} src={master.avatarLink} />}\r\n                                            text={master.type}\r\n                                            caption={master.location.city.title}\r\n                                            after={<Icon16Chevron/>}\r\n                                            onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >\r\n                                            {master.firstname} {master.lastname}\r\n                                        </RichCell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n\r\n                                // <CardGrid key={master._id}>\r\n                                //     <Card size=\"l\" mode=\"shadow\">\r\n                                //         <Cell expandable\r\n                                //               photo={master.avatarLink}\r\n                                //               description={master.type}\r\n                                //               before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                //               size=\"l\"\r\n                                //               onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                //         >{master.firstname} {master.lastname}\r\n                                //         </Cell>\r\n                                //     </Card>\r\n                                // </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder,Card} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\nfunction renderLastPhoto(arr){\r\n    for (let i =0; i<arr.length; i++){\r\n        if (!arr[i]) break;\r\n        return (\r\n            <Card\r\n                size=\"s\"\r\n                mode=\"shadow\"\r\n                key={i}\r\n                //onClick={() => this.openShowImages(this.state.images, index)}\r\n            >\r\n                <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport Spin from '../elements/spinner'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    console.log(find);\r\n                    this.props.changeFindModelsList(find);\r\n                    this.setState({findArr: find, isLoad: true});\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        \r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0]});\r\n                fetch(BACKEND.findModel.onMasterId+activeMaster[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        if (find.length > 0) {\r\n                            console.log(find);\r\n                            this.setState({loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                        } else {\r\n                            let error = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({error: error, isLoaded: true});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    // getToken = () => {\r\n    //     bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n    //         .then(data => {\r\n    //             this.getUploadServer(data.access_token);\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // };\r\n\r\n    // getUploadServer = (token) => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n    //         .then(result => {\r\n    //             this.setState({uploadUrl: result.response.upload_url, token: token});\r\n    //         })\r\n    //         .catch(e => console.log(e))\r\n    //\r\n    // };\r\n\r\n    // uploadPhoto = () =>{\r\n    //     try {\r\n    //         if (this.state.loadFind){\r\n    //             if (this.state.loadFind.images.length >= 3) throw 'Можно загрузить только 3 фотографии в разделе Мастер ищет модель';\r\n    //         }\r\n    //         this.setState({loading: true});\r\n    //         const formData = new FormData();\r\n    //         let selectedFile = document.getElementById('input').files[0];\r\n    //         formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n    //         formData.append('uploadUrl', this.state.uploadUrl);\r\n    //         formData.append('token', this.state.token);\r\n    //         formData.append('file1', selectedFile);\r\n    //         fetch(BACKEND.vkapi.uploadPhoto, {\r\n    //             method: 'POST',\r\n    //             body: formData\r\n    //         })\r\n    //             .then(res => res.json())\r\n    //             .then(response => {\r\n    //                 fetchJsonp(response.saveUrl, {\r\n    //                     mode: 'no-cors',\r\n    //                     method: 'GET'\r\n    //                 })\r\n    //                     .then(result => result.json())\r\n    //                     .then(result => {\r\n    //                         console.log(result);\r\n    //                         let newImg = result.response[0].sizes[2].url;//адрес фото\r\n    //                         let imgArr = this.state.images;\r\n    //                         let data = {\r\n    //                             findId: this.state.loadFind,\r\n    //                             newImg: newImg\r\n    //                         };\r\n    //                         let loadFind = this.state.loadFind;\r\n    //                         loadFind.images.push(newImg);\r\n    //                         this.setState({loading: false, loadFind: loadFind}, ()=>this.save());\r\n    //                     })\r\n    //                     .catch(error => console.log(error))\r\n    //             })\r\n    //             .catch(error => {\r\n    //                 console.log(error);\r\n    //                 this.openSnack(error);\r\n    //             })\r\n    //     } catch (e) {\r\n    //         this.openSnack(e);\r\n    //     }\r\n    //\r\n    // };\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if (this.state.body.length === 0) throw 'Пустое сообщение недопустимо';\r\n            let images = [];\r\n            this.state.activeMaster.photos.map((image,i)=> {\r\n                if (i < 3){\r\n                    images.push(image)\r\n                }\r\n            });\r\n            if (this.state.isActive === true) {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                console.log('измененный',find);\r\n                this.setState({loadFind: find});\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n                this.openSnack('Информация успешно обновлена.')\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.masterId = this.state.activeMaster._id;\r\n                find.location = this.state.activeMaster.location;\r\n                find.firstname = this.state.activeMaster.firstname;\r\n                find.lastname = this.state.activeMaster.lastname;\r\n                find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                this.postData(BACKEND.findModel.new, find);\r\n                this.openSnack('Информация о поиске успешно размещена.')\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.map((image,i)=>{\r\n                                        return (\r\n                                            <Card size='s' key={i}>\r\n                                                <div\r\n                                                    style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                >\r\n                                                </div>\r\n                                            </Card>\r\n                                        )\r\n                                    }) : 'У вас в портфолио нет фото'\r\n                                }\r\n                                </CardGrid>\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>this.setState({visible: !this.state.visible})}\r\n                                        checked={this.state.visible}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества со схожей тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: true,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 49, title: 'Екатеринбург'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items, isLoad: true}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                    {this.state.cities.length > 0 ?\r\n                    <List>\r\n                        {this.state.cities.map(city =>\r\n                            <Cell\r\n                                description={city.region || ''}\r\n                                onClick={()=>this.props.changeCity(city)}\r\n                                key={city.id}\r\n                            >\r\n                                {city.title}\r\n                            </Cell>\r\n                        )}\r\n                    </List> :\r\n                        <Placeholder\r\n                            icon={<Icon56PlaceOutline />}\r\n                            header=\"Город не найден\"\r\n                        >\r\n                            Проверьте опечатки или измените критерии поиска\r\n                        </Placeholder>\r\n                    }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {ANDROID, IOS, ModalPage, ModalPageHeader, ModalRoot, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nconst osname = platform();\r\n\r\nexport default function Modal(props){\r\n    return(\r\n        <ModalRoot\r\n            activeModal={props.activeModal}\r\n            onClose={props.onClose}\r\n        >\r\n            <ModalPage dynamicContentHeight\r\n                       id={props.pageId}\r\n                       onClose={props.onClose}\r\n                       header={\r\n                           <ModalPageHeader\r\n                               left={osname === ANDROID && props.leftButton &&\r\n                               <PanelHeaderButton onClick={props.onClose}>{'Сохранить'}</PanelHeaderButton>}\r\n                               right={props.rightButton && <PanelHeaderButton onClick={props.onClose}>{osname === IOS  ? 'Сохранить' :\r\n                                   <Icon24Done/>}</PanelHeaderButton>}\r\n                           >\r\n                               {props.header}\r\n                           </ModalPageHeader>\r\n                       }\r\n            >\r\n                {props.content}\r\n            </ModalPage>\r\n        </ModalRoot>\r\n    )\r\n}","import React, {ReactFragment} from 'react';\r\nimport {\r\n    Placeholder,\r\n    Cell,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Textarea, Counter\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.moder)\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            });\r\n        fetch(BACKEND.comment.moderation)\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                console.log(comments);\r\n                this.setState({comments: comments})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: []\r\n        };\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons\r\n        };\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    goodComment = () => {\r\n\r\n    };\r\n\r\n    badComment = () => {\r\n\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment[0]._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment[0]._id, index)} mode=\"secondary\">Отклонить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment[0].body}\r\n                        </RichCell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master._id)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                        {/*<Button onClick={()=>this.bad(master._id, index)} mode=\"secondary\">Отклонить</Button>*/}\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Tabs>\r\n                    <TabsItem\r\n                        onClick={() => this.setState({ activeTab: 'masters' })}\r\n                        selected={this.state.activeTab === 'masters'}\r\n                    >\r\n                        Мастера\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={() => this.setState({ activeTab: 'comments' })}\r\n                        selected={this.state.activeTab === 'comments'}\r\n                    >\r\n                        Комментарии\r\n                    </TabsItem>\r\n                </Tabs>\r\n                {\r\n                    this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Moder;","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.mastersList);\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArr = master.comments.map(comment => {\r\n                return Number(comment.rating)\r\n            });\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster('masterInfo',master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nexport default function ScrollSubcat(props){\r\n    const subcatStyle = {\r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        fontSize: 10\r\n    };\r\n    if(props.targetCategory._id!=='all'){\r\n        return(\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n            // <HorizontalScroll>\r\n            //     <div style={{display: 'flex'}}>\r\n            //         {\r\n            //             props.targetCategory.subcat.map(subcat=>{\r\n            //                 return (\r\n            //                     <div style={{subcatStyle}} key={subcat._id}>\r\n            //                         <Button\r\n            //                             after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n            //                             id={subcat._id}\r\n            //                             onClick={props.checkSubcat}\r\n            //                             style={{margin: '4px 4px 0px 0px'}}\r\n            //                             mode=\"outline\"\r\n            //                         >\r\n            //                             {subcat.label}\r\n            //                         </Button>\r\n            //                     </div>\r\n            //                 )\r\n            //             })\r\n            //         }\r\n            //     </div>\r\n            // </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner, Div} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    window.scrollTo(0, this.props.mastersListScroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <React.Fragment>\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e)=>this.checkSubcat(e)}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Alert,\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport { RouteNode } from 'react-router5'\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Modal from './js/elements/modalPage'\r\nimport Moder from \"./js/news/moder\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {postData, patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport spinner from './js/elements/img/spinner.svg'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster, changeActiveMasterOnMasters, changeActiveMasterOnFindModels, changeActiveMasterOnFavs, changeLaunchParams} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport createRouter from 'router5'\r\nimport browserPlugin from 'router5-plugin-browser'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            activePanelNews: 'news',\r\n            newsHistory: ['news']\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.modalBack = () => {\r\n            this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onpopstate = () => {\r\n            window.history.pushState(null, null);\r\n        };\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data => this.verificationUser(data))\r\n            .catch(e=>this.openSnack(e));\r\n        // if (this.props.linkParams.masterid) {\r\n        //     this.setState({activeMasterId: this.props.linkParams.masterid});\r\n        //     this.openMasterOnLink(this.props.linkParams.masterid);\r\n        //     //bridge.send(\"VKWebAppSetLocation\", {\"location\": \"masterid=\"+this.props.linkParams.masterid});\r\n        // }\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n        });\r\n        if (this.props.params) {\r\n            this.props.changeLaunchParams(this.props.params);\r\n            fetch(BACKEND.logs.params, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {'Content-Type': 'application/json',},\r\n                redirect: 'follow',\r\n                referrer: 'no-referrer',\r\n                body: JSON.stringify(this.props.params)\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.setState({validationParams: res.status})\r\n                })\r\n                .catch(e=>console.log(e));\r\n        }\r\n    }\r\n\r\n    goBackNews = () => {\r\n            const newsHistory = [...this.state.newsHistory];\r\n            newsHistory.pop();\r\n            const activePanelNews = newsHistory[newsHistory.length - 1];\r\n            if (activePanelNews === 'news') {\r\n                bridge.send('VKWebAppDisableSwipeBack');\r\n            }\r\n            this.setState({ newsHistory, activePanelNews });\r\n    };\r\n\r\n    goForwardNews = (activePanelNews) => {\r\n        const newsHistory = [...this.state.newsHistory];\r\n        newsHistory.push(activePanelNews);\r\n        if (this.state.activePanelNews === 'news') {\r\n            bridge.send('VKWebAppEnableSwipeBack');\r\n        }\r\n        this.setState({ newsHistory, activePanelNews });\r\n    };\r\n\r\n    verificationUser = (vkUser) => {\r\n         fetch(BACKEND.users + '/vkuid/' + vkUser.id)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0) {\r\n                    const user = {\r\n                        vkUid: vkUser.id,\r\n                        firstname: vkUser.first_name,\r\n                        lastname: vkUser.last_name,\r\n                        avatarLink: vkUser.photo_200,\r\n                        sex: vkUser.sex,\r\n                        location: {\r\n                            country: vkUser.country || 'Не определен',\r\n                            city: vkUser.city || 'Не определен'\r\n                        },\r\n                        isMaster: false,\r\n                        favs: []\r\n                    };\r\n                    fetch(BACKEND.users, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {'Content-Type': 'application/json',},\r\n                        redirect: 'follow',\r\n                        referrer: 'no-referrer',\r\n                        body: JSON.stringify(user)\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(newUser => {\r\n                            this.props.loginUser(newUser);\r\n                        });\r\n                } else {\r\n                    if (usersArr[0].isMaster === true) {\r\n                        fetch(BACKEND.masters.vkuid + usersArr[0].vkUid)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                if (master.length === 0) {\r\n                                    console.log('Мастер удален');\r\n                                    return null\r\n                                } else {\r\n                                    this.props.setMaster(master[0]);\r\n                                }\r\n                            });\r\n                    }\r\n                    this.props.loginUser(usersArr[0]);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.openSnack('Отсутствует соединение с базой пользователей.');\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n\r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openAlert = (title, body, action) => {\r\n        this.setState({\r\n            popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={() => this.setState({popout: null})}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                this.props.setMaster(newMaster);\r\n                this.setState({activeViewLk: 'lk'});\r\n                this.openSnack('Ваш профиль отправлен на проверку. Не забудьте добавить фотографии в портфолио - так, шансы получить заказ намного выше.');\r\n                this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack(e.message);\r\n            //this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    sendMessage = (message) => {\r\n        let token = BACKEND.keyGroup;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.user.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => console.log(result))\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    openPanelMaster = (panelName, master) => {\r\n        this.props.changeActiveMasterOnMasters(master);\r\n        this.setState({activePanelMasters: panelName});\r\n    };\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFindModels(master);\r\n                this.setState({activePanelFindModels: 'masterInfo'});\r\n            });\r\n    };\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n        console.log(masterId);\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFavs(master);\r\n                this.setState({activePanelLk: 'masterInfo'});\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        patchData(BACKEND.users+'/'+user._id, user);\r\n        this.setActiveModal(null)\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"auth\" activePanel=\"auth\">\r\n                        <Panel id=\"auth\">\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                                header=\"Выполняется вход...\"\r\n                            >Это может занять несколько секунд\r\n                                {this.state.snackbar}\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n      } //if (this.state.validationParams === false) {\r\n        //     return (\r\n        //         <ConfigProvider scheme={this.state.scheme}>\r\n        //             <View id=\"warn\" activePanel=\"warn\">\r\n        //                 <Panel id=\"warn\">\r\n        //                     <Placeholder\r\n        //                         icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n        //                     >\r\n        //                         Все, беда. Кто-то лезет в параметры запуска :(\r\n        //                     </Placeholder>\r\n        //                 </Panel>\r\n        //             </View>\r\n        //         </ConfigProvider>\r\n        //     )\r\n        // }\r\n        else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" history={this.state.newsHistory} activePanel={this.state.activePanelNews} onSwipeBack={() => this.goBackNews()}>\r\n                        <Panel id=\"news\">\r\n                            <PanelHeader>Новости</PanelHeader>\r\n                            <News\r\n                                params={this.props.params}\r\n                                openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                openModer={() => this.goForwardNews('moder')}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"moder\">\r\n                            <Head\r\n                                title={'Модерация'}\r\n                                goBack={() => this.goBackNews()}\r\n                            />\r\n                            <Moder\r\n                                goBack={() => this.goBackNews()}\r\n                                user={this.state.user}\r\n                                openMaster={(id) => {\r\n                                    this.setState({moderId: id});\r\n                                    this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head\r\n                                title={'О мастере'}\r\n                                goBack={() => this.goBackNews()}\r\n                            />\r\n                            <MasterCard\r\n                                goBack={() => this.goBackNews()}\r\n                                openPhoto={() => 'null'}\r\n                                openComments={() => 'null'}\r\n                                activeMasterId={this.state.moderId}\r\n                                setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n                    <Root\r\n                        id=\"masters\"\r\n                        activeView={this.state.activeViewMasters}\r\n                        // modal={\r\n                        //     // <Modal\r\n                        //     //     header={'Выбор города'}\r\n                        //     //     activeModal={this.state.activeModal}\r\n                        //     //     pageId={'cityList'}\r\n                        //     //     onClose={()=>this.setActiveModal(null)}\r\n                        //     //     content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                        //     //     leftButton={false}\r\n                        //     //     rightButton={false}\r\n                        //     // />\r\n                        // }\r\n                    >\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <Masters\r\n                                    changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    changeCategory={()=>this.setState({activeViewMasters: 'masterCat'})}\r\n                                    //openPanelMaster={this.openPanelMaster}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'mastersList'})}/>\r\n                                <CityList changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelMasters: 'mastersList'})\r\n                                }}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head\r\n                                    title={'О мастере'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                />\r\n                                <MasterCard\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openComments={() => this.setState({activePanelMasters: 'masterComments'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.setState({activeViewMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.state.activePanelFindModels}\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ишу модель</PanelHeader>\r\n                            <FindModel\r\n                                openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='changeCity'>\r\n                            <Head title={'Выбор города'}\r\n                                  goBack={() => this.setState({activePanelFindModels: 'findmodel'})}/>\r\n                            <CityList changeCity={(city) => {\r\n                                this.setState({activePanelFindModels: 'findmodel'});\r\n                                this.changeTargetCity(city);\r\n                            }}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head\r\n                                title={'О мастере'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                            />\r\n                            <MasterCard\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                                openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                openComments={() => this.setState({activePanelFindModels: 'masterComments'})}\r\n                                //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterPhoto\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterComments\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout} modal={\r\n                            <Setting\r\n                                snackbar={(message) => this.openSnack(message)}\r\n                                modalBack={this.modalBack}\r\n                                activeModal={this.state.activeModal}\r\n                                changeModal={(name) => this.setActiveModal(name)}\r\n                            />\r\n                        }>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнерам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.setActiveModal('setting')}\r\n                                            openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                            openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                            openMasterPhoto={() => this.setState({activePanelLk: 'portfolio'})}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head\r\n                                    title={'Избранное'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Favourite\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user}\r\n                                    openFavMasterOnId={this.openFavMasterOnId}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head\r\n                                    title={'О мастере'}\r\n                                    goBack={() => this.setState({activePanelLk: 'favourite'})}\r\n                                />\r\n                                <MasterCard\r\n                                    goBack={() => this.setState({activePanelLk: 'favourite'})}\r\n                                    openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    openComments={() => this.setState({activePanelLk: 'masterComments'})}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"portfolio\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Portfolio\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head\r\n                                    title={'Ищу модель'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <FindModelMaster\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user} popout={this.openAlert}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id='registration'>\r\n                            <Panel id='registration'>\r\n                                <Head\r\n                                    title={'Регистрация'}\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                />\r\n                                <Invite\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                    openRules={() => this.setState({activePanelReg: 'rules'})}\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='rules'>\r\n                                <Head\r\n                                    title={'Соглашение'}\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                                <Rules\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelReg: 'registration'})}/>\r\n                                <CityList changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelReg: 'registration'})\r\n                                }}/>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch)\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App linkParams={linkParams} params={params} />\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}