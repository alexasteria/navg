{"version":3,"sources":["js/func/func.js","js/masters/panelMasterList.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/idea/idea.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","App.js","serviceWorker.js","index.js"],"names":["BACK_LINK","BACKEND","users","masters","all","onID","category","vkuid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","getAll","MasterList","props","setBottom","rating","length","style","margin","padding","fontSize","color","state","mastersList","title","isLoad","this","fetch","then","res","json","setState","setTitle","console","log","id","city","count","undefined","Array","isArray","display","alignItems","flexDirection","size","marginTop","icon","header","action","map","ratingArr","comments","reduce","a","b","key","vkUid","mode","expandable","photo","description","categories","active","label","bottomContent","before","src","avatarLink","onClick","openPanelMaster","firstname","lastname","separator","renderMaster","React","Component","MastersCard","favStatus","isFavourite","status","checkFavs","width","height","fill","loadFavs","activeMaster","_id","favsArr","countFavs","fav","userId","changeVisible","index","userVkUid","masterId","masterVkUid","postData","openSnackAvatar","sendMessage","message","bridge","send","Math","random","result","catch","e","activeMasterId","priceList","text","snackbar","layout","onClose","after","url","data","method","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","type","brand","openComments","indicator","photos","slice","photoUrl","backgroundImage","backgroundSize","openPhoto","item","multiline","price","images","reverse","start_index","image","openShowImages","gridPhoto","sendComment","Number","isCommended","alert","handleChange","event","target","name","value","author","date","Date","now","commentsArr","countComments","arr","push","step","min","max","onChange","top","placeholder","commentList","validate","News","isMaster","vertical","openReg","wide","Invite","regMaster","subcat","filter","sex","location","closeReg","checkSubcat","indexCat","indexSubcat","counter","bind","bottom","i","subcategory","asideContent","checked","checkLicense","Lk","connection","tmpUser","isUser","mastersArr","activePanel","openFavourite","openMasterPhoto","openFindModel","openSetting","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","error","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","visible","onRemove","patchData","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","about","tooltip","popout","showProfile","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","hairVisible","manicureVisible","pedicureVisible","eyelashesVisible","eyebrowsVisible","shugaringVisible","cosmeticVisible","backgroundColor","removable","require","stretched","marginRight","onSubmit","handleSubmit","Favourite","loadFavsMasters","isLoaded","align","openFavMasterOnId","FindModel","findList","findArr","find","openMasterOnId","FindModelMaster","save","loadFind","activeFind","osname","platform","App","loadCategories","catArr","regNewUser","first_name","last_name","photo_200","country","verifiedUser","vkUserId","usersArr","openAlert","actionsLayout","actions","autoclose","closeAlert","activeViewLk","change","story","view","panel","panelName","activePanelMasters","openMaster","activeViewMasters","activeStory","activePanelFindModels","activePanelLk","openStory","storyName","targetCategory","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","onStoryChange","currentTarget","dataset","tabbar","selected","data-story","activeView","theme","left","IOS","addon","Boolean","window","hostname","match","params","search","replace","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8de7c3ca.chunk.js","sourcesContent":["//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nconst BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    }\r\n};\r\n\r\nexport {BACKEND};","import React from 'react';\r\nimport {\r\n    Spinner,\r\n    Separator,\r\n    Avatar,\r\n    Button,\r\n    Cell,\r\n    Div,\r\n    Group,\r\n    List,\r\n    Header,\r\n    CardGrid,\r\n    Card,\r\n    Placeholder\r\n} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MasterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: null,\r\n            title: '',\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n            if(this.props.category === '') {\r\n                fetch(BACKEND.masters.all)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                            this.setState({isLoad: true});\r\n                    });\r\n            } else {\r\n                console.log(BACKEND.masters.category+this.props.category.id+'/'+this.props.city.id);\r\n                fetch(BACKEND.masters.category+this.props.category.id+'/'+this.props.city.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList, isLoad: true});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                    });\r\n            }\r\n        }\r\n\r\n    setTitle(count) {\r\n        if (count===undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n    renderMaster() {\r\n        if(Array.isArray(this.state.mastersList)) {\r\n            if(this.state.isLoad === false) {\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (this.state.mastersList.length === 0) {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Не расстраивайтесь\"\r\n                            action={<Button size=\"l\">Поделиться</Button>}\r\n                        >\r\n                            В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                            Поделитесь приложением с мастерами, которых Вы знаете.\r\n                        </Placeholder>\r\n                    );\r\n                } else {\r\n                    return this.state.mastersList.map(master => {\r\n                        let ratingArr = master.comments.map(comment =>{\r\n                            return comment.rating\r\n                        });\r\n                        let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n                        let rating = sum/ratingArr.length;\r\n                        //console.log(rating);\r\n                        return (\r\n                                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                                      description={\r\n                                                          master.categories.map(category => {\r\n                                                              if(category.active === true) {\r\n                                                                  return category.label+\" \"\r\n                                                              }\r\n                                                          })\r\n                                                      }\r\n                                                      bottomContent={\r\n                                                          this.setBottom(rating, ratingArr.length)\r\n                                                      }\r\n                                                      before={<Avatar src={master.avatarLink} size={70}/>}\r\n                                                      size=\"l\"\r\n                                                      onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                                                >{master.firstname} {master.lastname}\r\n                                                </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг - {rating} (На основе {length} отзывов)\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                        {this.renderMaster()}\r\n                        </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MasterList","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button\r\n} from \"@vkontakte/vkui\"\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {\r\n                priceList: []\r\n            },\r\n            favsArr: [\r\n                {vkUid:12523452}\r\n            ],\r\n            isFavourite: {\r\n                status: false\r\n            },\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.setState({activeMaster: this.props.activeMaster});\r\n        this.loadFavs();\r\n    }\r\n    favStatus = () => {\r\n        if(this.state.isFavourite.status === false) {\r\n            return (\r\n                        <Cell\r\n                            onClick={this.checkFavs}\r\n                            before={<Icon16LikeOutline width={20} height={20} fill=\"red\"/>}\r\n                           // description=\"на обновления\"\r\n                        >\r\n                            Подписаться\r\n                        </Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid style={{padding: 0}}>\r\n                    <Card size=\"l\">\r\n                        <Cell\r\n                            before={<Icon16Like width={20} height={20} fill=\"red\"/>}\r\n                        >В избранных</Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        }\r\n    }\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    //action=\"Отменить\"\r\n                    //onActionClick={() => this.setState({ text: 'Сообщение Ивану было отменено.' })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        //console.log(BACKEND.favs.master+this.props.activeMaster._id);\r\n        fetch(BACKEND.favs.master+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                this.setState({favsArr: favsArr});\r\n                let count = favsArr.length;\r\n                this.setState({countFavs: count});\r\n                this.setState({isLoad: true})\r\n                this.state.favsArr.map(fav => {\r\n                    if (fav.userId === this.props.user._id) {\r\n                        this.setState({isFavourite: {status: true, id: fav._id}});\r\n                        //console.log('У тебя в избранном');\r\n                    } else {\r\n                        this.setState({isFavourite: {status: false}})\r\n                        //console.log('Нет в избранном');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    }\r\n    checkFavs = () => {\r\n        console.log('прежний статус '+this.state.isFavourite.status);\r\n        if (this.state.isFavourite.status === false) {\r\n            let fav = {\r\n                userId: this.props.user._id,\r\n                userVkUid: this.props.user.vkUid,\r\n                masterId: this.state.activeMaster._id,\r\n                masterVkUid: this.state.activeMaster.vkUid\r\n            };\r\n            this.postData(BACKEND.favs.new, fav, 'POST');\r\n            this.setState({isFavourite: {status: true}});\r\n            this.setState({countFavs: this.state.countFavs+1});\r\n            this.openSnackAvatar('Вы подписались на обновления мастера. Отменить подписку можно во вкладке Кабинет, в разделе Избранное.', this.state.activeMaster.avatarLink);\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться к тебе! Информация для связи: Телефон - +7-999-999-99-99, страница VK - http://vk.com/'+this.props.user.vkUid;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                this.favStatus()\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Button onClick={this.sendMessage}>Связаться</Button>\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card size=\"s\">\r\n                                                        <div key={index} style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover'}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div>\r\n                        }\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={'От ' + item.price + \" рублей\"}\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: {\r\n                id: '1',\r\n                body: 'ТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТест',\r\n                author: 'Тест Тестович',\r\n                date: Date.now()\r\n            },\r\n            body: '',\r\n            commentsArr: [],\r\n            isLoad: false,\r\n            rating: 3\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({commentsArr: this.props.activeMaster.comments});\r\n        //console.log('comments ',   this.props.activeMaster.comments);\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            try {\r\n                this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n                this.setState({isCommended: true});\r\n            } catch (e) {\r\n                alert(e);\r\n                console.log(e.message);\r\n            }\r\n    }\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={comment.date}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        //console.log(this.props.activeMaster.vkUid, this.props.user.vkUid);\r\n        if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n            )\r\n        }\r\n        else if (this.state.isCommended === true) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Slider\r\n                        step={1}\r\n                        min={1}\r\n                        max={5}\r\n                        value={Number(this.state.rating)}\r\n                        onChange={rating => this.setState({rating})}\r\n                        top=\"Оцените работу мастера\"\r\n                    />\r\n                    <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                    <Textarea\r\n                        name={'body'}\r\n                        value={this.state.body}\r\n                        top=\"Добавление отзыва\"\r\n                        placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {Group, HorizontalScroll, FixedLayout, TabsItem, Tabs, Panel, PanelHeader, Cell} from \"@vkontakte/vkui\"\r\n\r\n\r\nclass Idea extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: 'all',\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Panel id=\"idea\">\r\n                <PanelHeader>Случайная идея</PanelHeader>\r\n                <FixedLayout vertical=\"top\">\r\n                    <Tabs theme=\"header\" type=\"buttons\">\r\n                        <HorizontalScroll>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'all' })}\r\n                                selected={this.state.activeTab === 'all'}\r\n                            >\r\n                                Ногти\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'users' })}\r\n                                selected={this.state.activeTab === 'users'}\r\n                            >\r\n                                Информация о разделе\r\n                            </TabsItem>\r\n                        </HorizontalScroll>\r\n                    </Tabs>\r\n                </FixedLayout>\r\n                <Group>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Этот раздел</Cell>\r\n                </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Idea;","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar, PanelSpinner, Spinner, FixedLayout\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                    <Group>\r\n                        {\r\n                            this.props.user.firstname === '???' ?\r\n                                <Placeholder >\r\n                                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                                </Placeholder> :\r\n                                <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n                                    Привет, {this.props.user.firstname}!\r\n                                </Placeholder>\r\n                        }\r\n                        <Cell multiline>\r\n                            Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по\r\n                            любой области косметологии или предложить свои услуги.\r\n                        </Cell>\r\n                    </Group>\r\n                {this.props.user.isMaster === false &&\r\n                <FixedLayout vertical=\"bottom\">\r\n                    <Cell\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы - мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                </FixedLayout>\r\n                }\r\n                <Separator wide />\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar, Input} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n                console.log('State on load', this.state)\r\n            });\r\n\r\n    }\r\n\r\n    regMaster = () => {\r\n        let categories = this.state.categories;\r\n        categories.map((category, index) => {\r\n            let countCat = category.subcat.filter(\r\n                function(item){\r\n                    if (item.active === true){\r\n                        return item.active;\r\n                    } else {\r\n                        return null\r\n                    }\r\n                }\r\n            );\r\n            if (countCat.length > 0) {\r\n                category.active = true;\r\n            } else {\r\n                category.active = false;\r\n            }\r\n        });\r\n        let master = {\r\n            firstname: this.props.user.firstname,\r\n            lastname: this.props.user.lastname,\r\n            description: this.state.description,\r\n            vkUid: this.props.user.vkUid,\r\n            type: this.state.type,\r\n            avatarLink: this.props.user.avatarLink,\r\n            sex: this.props.user.sex,\r\n            location: this.props.user.location,\r\n            categories: this.state.categories,\r\n            brand: this.state.brand\r\n        };\r\n        this.props.closeReg(master);\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            {this.state.checkLicense && this.state.description && this.state.type &&\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                            }\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.user);\r\n        if (this.state.user.isMaster === true) {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    console.log(result);\r\n\r\n                })\r\n                .catch(e => console.log(e))\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Cell\r\n                            //expandable\r\n                            onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                            user={this.state.user}\r\n                            indicator={this.state.user.location.city.title}\r\n                        >Ваш город</Cell>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Settings />}\r\n                    >Настройки</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    List, Button, CellButton, Input, Spinner,Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            activeMaster: {\r\n                priceList: [],\r\n                showProfile: false\r\n            },\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            hairVisible: false,\r\n            manicureVisible: false,\r\n            pedicureVisible: false,\r\n            eyelashesVisible: false,\r\n            eyebrowsVisible: false,\r\n            shugaringVisible: false,\r\n            cosmeticVisible: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0], description: activeMaster[0].description});\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        //console.log(activeMaster);\r\n        activeMaster.description = this.state.description;\r\n\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.openSnack(\"Изменения сохранены\");\r\n                //this.props.popout();\r\n                console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    };\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        //console.log(this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.activeMaster.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.categories[indexCat].subcat[indexSubcat].active = !this.state.activeMaster.categories[indexCat].subcat[indexSubcat].active;\r\n        if (this.counter(indexCat) > 0) {\r\n            activeMaster.categories[indexCat].active = true;\r\n        } else {\r\n            activeMaster.categories[indexCat].active = false;\r\n        }\r\n        this.setState({activeMaster: activeMaster});\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.activeMaster._id) {\r\n            return (<div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                <Spinner size=\"large\" style={{marginTop: 120}}/>\r\n            </div>)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={\r\n                            this.state.activeMaster.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                        }\r\n                        before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                    </Cell>\r\n                    <Group>\r\n                        <Cell\r\n                            asideContent={<Switch\r\n                                name={'visible'}\r\n                                onChange={this.visible}\r\n                                checked={this.state.activeMaster.visible}/>}>\r\n                            Показывать мой профиль в поиске\r\n                        </Cell>\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                    {this.state.activeMaster.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры</Cell>\r\n                    }\r\n                    {this.state.activeMaster.priceList.map((item, index) => (\r\n                        <List key={index}>\r\n                            <Cell\r\n                                key={item}\r\n                                multiline\r\n                                //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                removable\r\n                                onRemove={() => {\r\n                                    this.onRemove(index)\r\n                                }}>\r\n                                <Cell\r\n                                    description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                <Cell description=\"Краткое описание процедуры\"\r\n                                      multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                <Cell\r\n                                    description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                            </Cell>\r\n                        </List>\r\n                    ))}\r\n                    {this.state.add &&\r\n                    <Div>\r\n                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdTitle\"\r\n                                type=\"text\"\r\n                                value={this.state.newProdTitle}\r\n                                placeholder={'Введите название'}\r\n                                onChange={this.handleChange}/>\r\n                            <Textarea\r\n                                require\r\n                                name=\"newProdBody\"\r\n                                value={this.state.newProdBody}\r\n                                placeholder={'Укажите описание'}\r\n                                onChange={this.handleChange}/>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdPrice\"\r\n                                type=\"number\" value={this.state.newProdPrice}\r\n                                placeholder={'Укажите цену'}\r\n                                onChange={this.handleChange}/>\r\n                        </Cell>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                        </Div>\r\n                    </Div>\r\n                    }\r\n                    </Group>\r\n                    <Group>\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                        </ FormLayout>\r\n                        <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                         bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                         id={'category'}>\r\n                            {\r\n                                this.state.activeMaster.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                        name={i}\r\n                                                                        id={index}\r\n                                                                        onChange={this.checkSubcat}\r\n                                                                        checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </FormLayoutGroup>\r\n                        <Button size=\"xl\"\r\n                                onClick={() => this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)}>Сохранить\r\n                            изменения</Button>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Lk;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div, Separator, Cell, Avatar, Spinner, Card, CardGrid, FixedLayout\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadFavsMasters(this.props.user);\r\n    }\r\n\r\n    loadFavsMasters = (user) => {\r\n        fetch(BACKEND.favs.user + user._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                if(favsArr.length === 0){\r\n                    this.setState({isLoaded: true});\r\n                } else {\r\n                    favsArr.map(fav => {\r\n                        fetch(BACKEND.masters.onID + fav.masterId)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                let mastersArr = this.state.mastersArr;\r\n                                mastersArr.push(master);\r\n                                this.setState({mastersArr: mastersArr});\r\n                            });\r\n                    });\r\n                    this.setState({isLoaded: true});\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.length === 0) {\r\n                return (\r\n                        <CardGrid>\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell multiline align=\"center\">\r\n                                    Список избранного пуст\r\n                                </Cell>\r\n                            </Card>\r\n                        </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if (master._id !== undefined) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master._id}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                              photo={master.avatarLink}\r\n                                              description={master.type}\r\n                                              before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                              onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >{master.firstname} {master.lastname}\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Cell, Div, Group, Separator, Spinner, Placeholder, Button} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: [],\r\n            title: '',\r\n            master: {\r\n                vkUid: 9999999999,\r\n                avatarLink: \"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\",\r\n                firstname: 'Евгения',\r\n                lastname: 'Плюхова'\r\n            },\r\n            findArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.user);\r\n        fetch(BACKEND.findModel.onCity+this.props.user.location.city.id)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                console.log(find);\r\n                this.setState({findArr: find});\r\n                console.log('Найдено '+find.length);\r\n                this.setState({isLoad: true})\r\n            });\r\n    }\r\n\r\n    findList = () => {\r\n        if (this.state.findArr.length === 0) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент в городе {this.props.user.location.city.title} нет поиска моледей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                this.state.findArr.map(find => {\r\n                    return (\r\n                        <Group key={find._id}>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            <Cell expandable\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                // description={'Место под категории'}\r\n                                  before={<Avatar src={find.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openMasterOnId(find.masterId)}\r\n                                  bottom=\"\"\r\n                            >{find.firstname} {find.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>\r\n                                {find.body}\r\n                            </Cell>\r\n                        </Group>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        //expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={this.props.user.location.city.title}>Ваш город</Cell>\r\n                    {this.findList()}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            master: '',\r\n            body: '',\r\n            loadFind: '',\r\n            isLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({master: master[0]});\r\n                fetch(BACKEND.findModel.onMasterId+master[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        this.setState({findArr: find, isLoaded: true});\r\n                        if (find.length > 0) {\r\n                            this.setState({body: find[0].body, loadFind: find[0]});\r\n                            let activeFind =\r\n                                <Group>\r\n                                    <Cell>Ваш активный поиск</Cell>\r\n                                    <Separator style={{ margin: '12px 0' }} />\r\n                                    <Cell expandable\r\n                                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                          description={'desf'}\r\n                                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                          size=\"l\"\r\n                                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                                    </Cell>\r\n                                    <Cell multiline>\r\n                                        {this.state.findArr[0].body}\r\n                                    </Cell>\r\n                                </Group>\r\n                            ;\r\n                            this.setState({activeFind: activeFind});\r\n                        } else {\r\n                            let activeFind = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({activeFind: activeFind});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.master._id,\r\n            body: this.state.body,\r\n            city: this.state.master.city,\r\n            firstname: this.state.master.firstname,\r\n            lastname: this.state.master.lastname,\r\n            avatarLink: this.state.master.avatarLink\r\n        };\r\n        console.log(BACKEND.findModel.new+this.state.loadFind._id);\r\n        if (this.state.loadFind._id) {\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            let activeFind =\r\n                <Group>\r\n                    <Cell>Ваш активный поиск</Cell>\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <Cell expandable\r\n                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                          description={'desf'}\r\n                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                          size=\"l\"\r\n                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                    </Cell>\r\n                    <Cell multiline>\r\n                        {find.body}\r\n                    </Cell>\r\n                </Group>\r\n            ;\r\n            this.setState({activeFind: activeFind});\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.popout();\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Cell>Добавить / изменить</Cell>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                            top=\"О себе\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}/>\r\n                    </FormLayoutGroup>\r\n                    <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    {this.state.activeFind}\r\n                </FormLayout>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {\r\n    View,\r\n    Panel,\r\n    PanelHeader,\r\n    Tabbar,\r\n    TabbarItem,\r\n    Epic,\r\n    SelectMimicry,\r\n    FormLayout,\r\n    Group, List, Cell, Root, PanelHeaderButton, platform, IOS, Alert\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n//import Sale from './js/sale/sale.js';\r\nimport PanelMasterList from './js/masters/panelMasterList.js';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport Idea from './js/idea/idea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {BACKEND} from \"./js/func/func\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nconst osname = platform();\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            mastersList: null,\r\n            user: {\r\n                firstname: '???',\r\n                lastname: '???',\r\n                avatarLink: '???',\r\n                vkUid: '???',\r\n                status: '???',\r\n                location: {\r\n                    city: {id:1, title: '???'}\r\n                },\r\n                isMaster: false\r\n            },\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ]\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data=> {\r\n                console.log(data);\r\n                this.verifiedUser(data.id);\r\n            });\r\n        this.loadCategories();\r\n    }\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                let catArr = categories.map(category=>{\r\n                    return {id: category._id, label: category.label}\r\n                });\r\n                catArr.unshift({id: 'all', label: 'Мастера всех категорий'});\r\n                console.log(catArr);\r\n                this.setState({categories: catArr})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    }\r\n    regNewUser = () => {\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => {\r\n            console.log('Данные с моста',data);\r\n            const user = {\r\n                vkUid: data.id,\r\n                firstname: data.first_name,\r\n                lastname: data.last_name,\r\n                avatarLink: data.photo_200,\r\n                sex: data.sex,\r\n                location: {\r\n                    country: data.country,\r\n                    city: data.city\r\n                },\r\n                isMaster: false\r\n            };\r\n            this.setState({user: user});\r\n            this.postData(BACKEND.users, user); //регитрируем\r\n        });\r\n    }\r\n    verifiedUser = (vkUserId) => {\r\n        //on mock\r\n        //vkUserId = 2314852;\r\n        fetch(BACKEND.users+'/vkuid/'+vkUserId)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0){\r\n                    console.log('Пользователь зашел впервые');\r\n                    this.regNewUser();\r\n                } else {\r\n                    console.log('Пользователь уже заходил в приложение');\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    openAlert = (title, body, action) => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    closeReg = (master) => {\r\n       console.log(master);\r\n        this.postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({ user: user, activeViewLk: 'lk' });\r\n        // //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n    };\r\n    change = (story, view, panel) => {\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n    };\r\n    /*\r\n    *Story (news,masters,findmodel,idea,lk)\r\n    * mastersView -> mastersPanel\r\n    *\r\n    *\r\n    */\r\n\r\n    /*\r\n    *\r\n    *\r\n    *\r\n     */\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({ activePanelMasters: panelName });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMaster = (master) => {\r\n        this.setState({ activeViewMasters: 'mastersList' });\r\n        this.setState({ activeStory: 'masters' });\r\n        this.setState({ activePanelMasters: 'masterInfo' });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelFindModels: 'masterInfo' });\r\n            });\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelLk: 'masterInfo' });\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({ activePanelMasters: name });\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({ activeStory: storyName })\r\n    }\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n    render () {\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    {\r\n                        /*<TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'sale'}\r\n                            data-story=\"sale\"\r\n                            text=\"Акции\"\r\n                        ><Icon28FireOutline /></TabbarItem>*/\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'news'}\r\n                        data-story=\"news\"\r\n                        text=\"News\"\r\n                    ><Icon28FireOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'masters'}\r\n                        data-story=\"masters\"\r\n                        text=\"Мастера\"\r\n                    ><Icon28ServicesOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'findmodel'}\r\n                        data-story=\"findmodel\"\r\n                        text=\"Ищу модель\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'idea'}*/}\r\n                    {/*    data-story=\"idea\"*/}\r\n                    {/*    text=\"Идеи\"*/}\r\n                    {/*><Icon28HelpOutline /></TabbarItem>*/}\r\n                    {\r\n                        /*\r\n                        <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомлен.\"\r\n                        label=\"1\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                        * */\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'lk'}\r\n                        data-story=\"lk\"\r\n                        text=\"Кабинет\"\r\n                    ><Icon28More /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                {\r\n                    /*<View id=\"sale\" activePanel=\"sale\">\r\n                    <Panel id=\"sale\">\r\n                        <PanelHeader>Акции</PanelHeader>\r\n                        <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })} indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                        <Sale />\r\n                    </Panel>\r\n                </View>*/\r\n                }\r\n                <View id=\"news\" activePanel=\"news\">\r\n                    <Panel id=\"news\">\r\n                        <PanelHeader>Горячие новости</PanelHeader>\r\n                        <News openReg={() => this.setState({ activeViewLk: 'masterReg',activeStory:'lk' })} user={this.state.user} openStory={this.openStory}/>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"masters\" activeView={this.state.activeViewMasters}>\r\n                    <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                        <Panel id=\"mastersList\">\r\n                            <FormLayout>\r\n                                <Cell\r\n                                    //expandable\r\n                                    onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                    indicator={this.state.user.location.city.title}>Ваш город</Cell>\r\n                                <SelectMimicry\r\n                                    top=\"Выберите категорию\"\r\n                                    placeholder=\"Показаны мастера всех категорий\"\r\n                                    onClick={() => this.setState({ activeViewMasters: 'masterCat' })}\r\n                                >{this.state.targetCategory.label}</SelectMimicry>\r\n                            </FormLayout>\r\n                            <PanelHeader>Мастера</PanelHeader>\r\n                            <PanelMasterList category={this.state.targetCategory} city={this.state.user.city} openPanelMaster={this.openPanelMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelMasters: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelMasters: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                        <Panel id=\"masterCat\">\r\n                            <PanelHeader>Выбор категории</PanelHeader>\r\n                            <Group>\r\n                                <List>\r\n                                    {\r\n                                        this.state.categories.map(category => {\r\n                                            //console.log(category);\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={category.id}\r\n                                                    onClick={() => this.setState({ targetCategory: category, activeViewMasters: 'mastersList' })}\r\n                                                    asideContent={this.state.targetCategory === category ? <Icon24Done fill=\"var(--accent)\" /> : null}\r\n                                                >\r\n                                                    {category.label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </Group>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n                {/*<View id=\"idea\" activePanel=\"idea\">*/}\r\n                {/*    <Panel id=\"idea\">*/}\r\n                {/*        <Idea />*/}\r\n                {/*    </Panel>*/}\r\n                {/*</View>*/}\r\n                <View id=\"findmodel\" activePanel={this.state.activePanelFindModels}>\r\n                    <Panel id=\"findmodel\">\r\n                        <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                        <FindModel openMasterOnId={this.openMasterOnId} user={this.state.user}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterInfo\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            О мастере\r\n                        </PanelHeader>\r\n                        <MasterCard openPhoto={() => this.setState({ activePanelFindModels: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelFindModels: 'masterComments' })}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterPhoto\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Портфолио\r\n                        </PanelHeader>\r\n                        <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                    </Panel>\r\n                    <Panel id=\"masterComments\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Отзывы\r\n                        </PanelHeader>\r\n                        <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Этот раздел</Cell>\r\n                        </Group>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                    <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout}>\r\n                        <Panel id=\"lk\">\r\n                            <PanelHeader>Личный кабинет</PanelHeader>\r\n                            <Lk\r\n                                user={this.state.user}\r\n                                openSetting={() => this.setState({ activePanelLk: 'setting' })}\r\n                                openFavourite={() => this.setState({ activePanelLk: 'favourite' })}\r\n                                openFindModel={() => this.setState({ activePanelLk: 'findModel' })}\r\n                                openMasterPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='favourite'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Избранное</PanelHeader>\r\n                            <Favourite user={this.state.user} openFavMasterOnId={this.openFavMasterOnId}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelLk: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <Portfolio user={this.state.user}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id='findModel'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Мастер ищет модель</PanelHeader>\r\n                            <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                        <Panel id='setting'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Настройки</PanelHeader>\r\n                            <Setting user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterReg\" id=\"masterReg\">\r\n                        <Panel id=\"masterReg\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Регистрация мастера\r\n                            </PanelHeader>\r\n                            <Invite user={this.state.user} closeReg={this.closeReg}/>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nbridge.send(\"VKWebAppInit\", {})\r\n    .then(data => console.log('Инициализировали апи вк? '+data.result));\r\n\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nconsole.log(params);\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}