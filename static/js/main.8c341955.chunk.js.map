{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/elements/functions.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/news/news.js","js/store/reducers.js","js/store/actions.js","js/lk/invite.js","js/lk/lk.js","js/elements/spinner.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/elements/modalPage.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["osname","platform","Head","theme","left","onClick","this","props","goBack","IOS","addon","title","React","Component","BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","subscribers","onarrayid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getAll","logs","params","patchData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","response","console","log","json","MastersCard","handleChange","event","setState","target","name","value","state","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","getPhone","share","bridge","send","activeMaster","_id","result","openSnackAvatar","avatarLink","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","sendMessage","firstname","lastname","sendtitle","phone","vkUid","Math","random","snackbar","mess","userId","userVkUid","masterId","masterVkUid","postData","catch","e","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","activeMasterId","res","setActiveMaster","count","text","after","src","size","marginTop","photo","description","brand","bottomContent","before","expandable","openComments","indicator","comments","length","photos","slice","map","photoUrl","key","backgroundImage","backgroundSize","openPhoto","separator","priceList","item","multiline","price","header","connect","images","reverse","start_index","image","openShowImages","gridPhoto","MastersComments","sendComment","rating","Number","isCommended","bodyComment","commentsArr","countComments","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","step","min","max","top","status","bottom","replace","placeholder","commentList","validate","News","addFav","group_id","inGroup","feedList","icon","action","feed","vertical","isMaster","openReg","dispatch","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","setMaster","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","Invite","getCategories","categories","regMaster","checkLicense","statusMessage","cat","subcat","filter","active","id","label","sex","location","country","city","banned","visible","closeReg","error","permMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","i","subcategory","asideContent","checked","bindActionCreators","Lk","addToFavApp","connection","tmpUser","isUser","favsArr","mastersArr","openSetting","margin","openFavourite","activePanel","subheader","actions","openMasterPhoto","openFindModel","Spin","spinner","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","CityListModal","search","cities","getCities","toLowerCase","items","updateModalHeight","Fragment","region","withModalRootContext","Setting","saveChanges","onRemove","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","checkBan","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","prevProps","prevState","snapshot","Array","isArray","modalBack","activeModal","dynamicContentHeight","ANDROID","right","String","removable","require","stretched","onSubmit","handleSubmit","Favourite","loadFavsMasters","ids","isLoaded","err","openFavMasterOnId","FindCard","find","openMasterOnId","FindList","findArr","FindModel","loadFind","window","scrollTo","self","pageYOffset","FindModelMaster","save","isActive","activeFind","deleteImage","Partners","asideMode","addToCommunity","CityList","Modal","pageId","leftButton","rightButton","content","MastersList","setBottom","setTitle","undefined","ratingArr","reduce","a","b","openPanelMaster","renderMasters","countSubcat","ScrollSubcat","subcatStyle","flexShrink","Masters","loadList","buttonSubcat","currentTarget","backgroundColor","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","App","verificationUser","vkUser","usersArr","first_name","last_name","photo_200","newUser","openAlert","actionsLayout","autoclose","newMaster","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeStory","activeViewMasters","activePanelLk","openStory","storyName","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","onStoryChange","setActiveModal","linkParams","masterid","dataset","story","tabbar","selected","data-story","activeView","modal","vk_is_favorite","Boolean","hostname","match","store","createStore","changeIsMaster","hash","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.8c341955.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, IOS, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nconst osname = platform();\r\n\r\nclass Head extends React.Component {\r\n    render(){\r\n        return (\r\n            <PanelHeader\r\n                theme=\"light\"\r\n                left={<PanelHeaderButton onClick={this.props.goBack}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                addon={<PanelHeaderButton onClick={this.props.goBack}>Назад</PanelHeaderButton>}\r\n            >{this.props.title}\r\n            </PanelHeader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head;","//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    }\r\n};","import {BACKEND} from \"../func/func\";\r\nimport {Snackbar} from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\n\r\nfunction postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }); // парсит JSON ответ в Javascript объект\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, Alert, Input,FormLayout\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(BACKEND.masters.onID + this.props.activeMasterId);\r\n        fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.setActiveMaster(master);\r\n                this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            patchData(BACKEND.users+'/'+this.state.user._id, this.state.user);\r\n            if (this.state.isFavourite === true) {\r\n                let count = {count: 1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //прибавляем счетчик мастера\r\n            } else {\r\n                let count = {count: -1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //убавляем счетчик\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        console.log(this.state);\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button onClick={() => this.getPhone(title)}>Записаться</Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        console.log(this.state.activeMaster);\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Вы подписались на обновления мастера.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранного.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({phone: result.phone_number});\r\n                //this.sendMessage();\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                <Cell>\r\n                                    {this.favStatus()}\r\n                                    <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card size=\"s\">\r\n                                                        <div key={index} style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover'}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div>\r\n                        }\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={'От ' + item.price + \" рублей\"}\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                    <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                    </Cell>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersCard);","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout, Snackbar\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 3,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({commentsArr: this.props.activeMaster.comments, countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 200) throw 'Длина отзыва ограничена 200 символами.';\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n            this.setState({isCommended: true});\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.sendMessage(data.body);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    sendMessage = (bodyComment) => {\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        let message = \"Привет! У тебя новый отзыв: \"+bodyComment;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={this.getDate(comment.date)}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={1}\r\n                            max={5}\r\n                            value={Number(this.state.rating)}\r\n                            onChange={rating=>this.setState({rating})}\r\n                            top=\"Оцените работу мастера\"\r\n                        />\r\n                        <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            status={this.state.body.length > 20 ? 'valid' : 'error'}\r\n                            bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Символов: '+this.state.body.replace(/ /g, \"\").length+' из 50' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, FixedLayout,CardGrid,Card,Button\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        }).then(result=>this.setState({inGroup: result}));\r\n    }\r\n\r\n    addFav = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        }).then(result=>this.setState({inGroup: result}));\r\n    };\r\n\r\n    feedList = () => {\r\n        if(this.state.inGroup){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                    header=\"Привет!\"\r\n                >\r\n                    Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return(\r\n                <Placeholder\r\n                    icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                    header=\"Привет!\"\r\n                    action={<Button onClick={this.addFav} size=\"l\">Вступить в группу</Button>}\r\n                >\r\n                    Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным. Вступайте в нашу группу Вконтакте, чтобы не пропустить важные обновления!\r\n                </Placeholder>\r\n            )\r\n        }\r\n\r\n\r\n            // this.state.feed.map(feed=>{\r\n            //     return (\r\n            //         <CardGrid>\r\n            //             <Card key={feed} size=\"l\" mode=\"shadow\">\r\n            //                 <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n            //             </Card>\r\n            //         </CardGrid>\r\n            //     )\r\n            // })\r\n    };\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Group>\r\n                <FixedLayout vertical=\"bottom\">\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <Cell\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                  description={\r\n                                      user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                                  }\r\n                                  //bottomContent={}\r\n                                  before={<Avatar src={user.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                            >{user.firstname} {user.lastname}\r\n                            </Cell>\r\n                            {user.isMaster === false &&\r\n                                <Cell\r\n                                    multiline\r\n                                    onClick={this.props.openReg}\r\n                                    before={<Icon24UserOutgoing/>}\r\n                                    expandable\r\n                                >\r\n                                    Если вы - мастер, пройдите простую процедуру регистрации\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                </FixedLayout>\r\n                {this.feedList()}\r\n            </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);;","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: {},\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity:action.payload.location.city};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    LOGIN_USER,\r\n    SET_MASTER\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER', master);\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER', user);\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST', newMastersList);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY', newTargetCategory);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY', newTargetCity);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL', newScroll);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST', newFindModelsList);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL', newFindModelsListScroll);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};","import React from 'react';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar, Input} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    changeFindModelsList, changeFindModelsListScroll,\r\n    changeMastersList,\r\n    changeMasterslistScroll,\r\n    changeTargetCategory,\r\n    changeTargetCity, createUser, loginUser\r\n} from \"../store/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.permMessage();\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                firstname: this.props.user.firstname,\r\n                lastname: this.props.user.lastname,\r\n                description: this.state.description,\r\n                vkUid: this.props.user.vkUid,\r\n                type: this.state.type,\r\n                avatarLink: this.props.user.avatarLink,\r\n                sex: this.props.user.sex,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                banned: {status: false},\r\n                priceList: [],\r\n                visible: true\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    // permPhoto = () => {\r\n    //     bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n    //         .then(data => {\r\n    //             console.log(data);\r\n    //             this.setState({statusPhoto: data.result})\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    console.log(result);\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={this.props.changeCity}\r\n                                indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                            >\r\n                                Ваш город\r\n                            </Cell>\r\n                            <Cell\r\n                                expandable\r\n                                multiline\r\n                                onClick={this.permMessage}\r\n                                description=\"Для получения уведомлений о заявках\"\r\n                                status={this.state.statusMessage === true ? 'valid' : 'error'}\r\n                                bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                            >Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? 'Разрешен' : 'Не разрешен'}</Cell>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    bottomContent={this.state.user.isMaster && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport spinner from \"./img/spinner.svg\";\r\n\r\nexport default function Spin(props){\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n            <img src={spinner}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spin/>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    Spinner,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories, isLoad: true});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        this.props.setMaster(this.state.master);\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n        this.props.snackbar('Изменения сохранены');\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.modalBack();\r\n                this.props.snackbar('Изменения сохранены');\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n        this.openSnack(\"Процедура удалена\");\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        let master = this.state.master;\r\n        master.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({master: master});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n    };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <ModalRoot\r\n                        activeModal={this.props.activeModal}\r\n                        onClose={this.saveChanges}\r\n                    >\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'setting'}\r\n                                   onClose={this.saveChanges}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={this.saveChanges}>{'Сохранить'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={this.saveChanges}>{osname === IOS ? 'Сохранить' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Настройки\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.master.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.props.changeModal('changeCity')}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\">\r\n                                                <Cell\r\n                                                    key={item}\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    removable\r\n                                                    onRemove={() => {\r\n                                                        this.onRemove(index)\r\n                                                    }}>\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Textarea\r\n                                                require\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\" value={this.state.newProdPrice}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={this.checkSubcat}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                            </Div>\r\n                        </ModalPage>\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'changeCity'}\r\n                                   onClose={() => this.props.changeModal('setting')}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{'Назад'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{osname === IOS ? 'Назад' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Выбор города\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <CityListModal dynamicContentHeight\r\n                                           changeTargetCity={(city) => this.changeCity(city)}\r\n                            />\r\n                        </ModalPage>\r\n                    </ModalRoot>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\nCell, Avatar, Card, CardGrid\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                console.log(mastersArr);\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spin/>)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                        <CardGrid>\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell multiline align=\"center\">\r\n                                    {this.state.mastersArr.message}\r\n                                </Cell>\r\n                            </Card>\r\n                        </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master._id}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                              photo={master.avatarLink}\r\n                                              description={master.type}\r\n                                              before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                              onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >{master.firstname} {master.lastname}\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <Cell expandable\r\n                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                      description={props.date}\r\n                      before={<Avatar src={props.find.avatarLink} size={50}/>}\r\n                      size=\"l\"\r\n                      onClick={()=>props.openMasterOnId(props.find.masterId)}\r\n                      bottom=\"\"\r\n                >{props.find.firstname} {props.find.lastname}\r\n                </Cell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card size='s' key={i}>\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Avatar, Button, Cell, Group, Placeholder, Separator,CardGrid,Card} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\nimport {BACKEND} from \"../../func/func\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\nfunction renderLastPhoto(arr){\r\n    for (let i =0; i<arr.length; i++){\r\n        if (!arr[i]) break;\r\n        return (\r\n            <Card\r\n                size=\"s\"\r\n                mode=\"shadow\"\r\n                key={i}\r\n                //onClick={() => this.openShowImages(this.state.images, index)}\r\n            >\r\n                <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function FindList(props){\r\n    console.log(props);\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport Spin from '../elements/spinner'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    this.setState({findArr: find, isLoad: true});\r\n                    this.props.changeFindModelsList(find);\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spin/>)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={()=>this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner, CardGrid, Card, File, Snackbar, Div, PanelSpinner\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0]});\r\n                fetch(BACKEND.findModel.onMasterId+activeMaster[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        if (find.length > 0) {\r\n                            console.log(find);\r\n                            this.setState({loadFind: find[0], body:find[0].body, error: '', isLoaded: true, isActive: true});\r\n                        } else {\r\n                            let error = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({error: error, isLoaded: true});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n\r\n    uploadPhoto = () =>{\r\n        try {\r\n            if (this.state.loadFind.images.length >= 3) throw 'Можно загрузить только 3 фотографии в разделе Мастер ищет модель';\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n            formData.append('uploadUrl', this.state.uploadUrl);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;//адрес фото\r\n                            let imgArr = this.state.images;\r\n                            let data = {\r\n                                findId: this.state.loadFind,\r\n                                newImg: newImg\r\n                            };\r\n                            let loadFind = this.state.loadFind;\r\n                            loadFind.images.push(newImg);\r\n                            this.setState({loading: false, loadFind: loadFind}, ()=>this.save());\r\n                            // fetch(BACKEND.vkapi.savePhotoFindModels, {\r\n                            //     mode: 'cors', // no-cors, cors, *same-origin\r\n                            //     cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                            //     credentials: 'same-origin', // include, *same-origin, omit\r\n                            //     headers: {\r\n                            //         'Content-Type': 'application/json',\r\n                            //         // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                            //     },\r\n                            //     method: 'POST',\r\n                            //     body: JSON.stringify(data),\r\n                            //     redirect: 'follow', // manual, *follow, error\r\n                            //     referrer: 'no-referrer', // no-referrer, *client\r\n                            // })\r\n                            //     .then(result => result.json())\r\n                            //     .then(result => {\r\n                            //         this.openSnack(result.message);\r\n                            //         console.log(result.url);\r\n                            //     })\r\n                            //     .catch(error => this.openSnack(error))\r\n\r\n                        })\r\n                        .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.openSnack(error);\r\n                })\r\n        } catch (e) {\r\n            this.openSnack(e);\r\n        }\r\n\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        if (this.state.isActive === true) {\r\n            let find =this.state.loadFind;\r\n            find.body = this.state.body;\r\n            console.log('измененный',find);\r\n            this.setState({loadFind: find});\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            this.openSnack('Информация успешно обновлена.')\r\n        } else {\r\n            let find =this.state.loadFind;\r\n            find.body = this.state.body;\r\n            find.masterId = this.state.activeMaster._id;\r\n            find.location = this.state.activeMaster.location;\r\n            find.firstname = this.state.activeMaster.firstname;\r\n            find.lastname = this.state.activeMaster.lastname;\r\n            find.avatarLink = this.state.activeMaster.avatarLink;\r\n            this.postData(BACKEND.findModel.new, find);\r\n            this.openSnack('Информация о поиске успешно размещена.')\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    deleteImage(index){\r\n        let find = this.state.loadFind;\r\n        if (index > -1) {\r\n            find.images.splice(index, 1);\r\n        } else find.images.splice(0, index);\r\n        this.setState({activeFind: find}, ()=> this.save())\r\n    }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spin />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                {\r\n                    this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div> :\r\n                        <FormLayout>\r\n                            <FormLayoutGroup>\r\n                                <Cell>Добавить / изменить</Cell>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.state.isActive &&\r\n                                    this.state.loadFind.images.map((image,i)=>{\r\n                                        return (\r\n                                            <Card size='s' key={i}>\r\n                                                <div\r\n                                                    style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                >\r\n                                                    <Icon24DismissSubstract\r\n                                                        onClick={()=>this.deleteImage(i)}\r\n                                                    />\r\n                                                </div>\r\n                                            </Card>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </CardGrid>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Добавить фото\r\n                                </File>\r\n                            </FormLayoutGroup>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                        </FormLayout>\r\n                }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества со схожей тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: true,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 1, title: 'Другой город'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items, isLoad: true}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                    {this.state.cities.length > 0 &&\r\n                    <List>\r\n                        {this.state.cities.map(city =>\r\n                            <Cell\r\n                                description={city.region || ''}\r\n                                onClick={()=>this.props.changeCity(city)}\r\n                                key={city.id}\r\n                            >\r\n                                {city.title}\r\n                            </Cell>\r\n                        )}\r\n                    </List>\r\n                    }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {ANDROID, IOS, ModalPage, ModalPageHeader, ModalRoot, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nconst osname = platform();\r\n\r\nexport default function Modal(props){\r\n    return(\r\n        <ModalRoot\r\n            activeModal={props.activeModal}\r\n            onClose={props.onClose}\r\n        >\r\n            <ModalPage dynamicContentHeight\r\n                       id={props.pageId}\r\n                       onClose={props.onClose}\r\n                       header={\r\n                           <ModalPageHeader\r\n                               left={osname === ANDROID && props.leftButton &&\r\n                               <PanelHeaderButton onClick={props.onClose}>{'Сохранить'}</PanelHeaderButton>}\r\n                               right={props.rightButton && <PanelHeaderButton onClick={props.onClose}>{osname === IOS  ? 'Сохранить' :\r\n                                   <Icon24Done/>}</PanelHeaderButton>}\r\n                           >\r\n                               {props.header}\r\n                           </ModalPageHeader>\r\n                       }\r\n            >\r\n                {props.content}\r\n            </ModalPage>\r\n        </ModalRoot>\r\n    )\r\n}","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArr = master.comments.map(comment => {\r\n                return Number(comment.rating)\r\n            });\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Counter, HorizontalScroll} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nexport default function ScrollSubcat(props){\r\n    console.log(props);\r\n    const subcatStyle = {\r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        fontSize: 10\r\n    };\r\n    if(props.targetCategory._id!=='all'){\r\n        return(\r\n            <HorizontalScroll>\r\n                <div style={{display: 'flex'}}>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <div style={{subcatStyle}} key={subcat._id}>\r\n                                    <Button\r\n                                        after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                        id={subcat._id}\r\n                                        onClick={props.checkSubcat}\r\n                                        style={{margin: '4px 4px 0px 0px'}}\r\n                                        mode=\"outline\"\r\n                                    >\r\n                                        {subcat.label}\r\n                                    </Button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {Group, Header, PanelHeader, SelectMimicry, Cell, Spinner} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    window.scrollTo(0, this.props.mastersListScroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        let buttonSubcat = document.getElementById(e.currentTarget.id);\r\n        if(buttonSubcat.style.backgroundColor==='lavender'){\r\n            buttonSubcat.style.backgroundColor='#fff';\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            buttonSubcat.style.backgroundColor='lavender';\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <React.Fragment>\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <SelectMimicry\r\n                        top=\"Выберите категорию\"\r\n                        placeholder=\"Показаны мастера всех категорий\"\r\n                        onClick={user.location.city === 'Не определено' ?\r\n                            this.props.openSnack('Сначала выберите город') :\r\n                            this.props.changeCategory\r\n                        }\r\n                    >{targetCategory.label}</SelectMimicry>\r\n                    {\r\n                        targetCategory && this.state.isLoad &&\r\n                        <ScrollSubcat\r\n                            targetCategory={targetCategory}\r\n                            mastersList={this.props.mastersList}\r\n                            checkSubcat={(e)=>this.checkSubcat(e)}\r\n                        />\r\n                    }\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spin/>\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {\r\n    Alert,\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './/js/masters/mastersComments.js';\r\n//import Idea from './js/ideaidea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Modal from './js/elements/modalPage'\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport CityListModal from \"./js/elements/cityListModal\";\r\nimport {postData, patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport spinner from './js/elements/img/spinner.svg'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about'\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.modalBack = () => {\r\n            this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data => {this.verificationUser(data)});\r\n        if (this.props.params) {postData(BACKEND.logs.params, this.props.params)}\r\n        if (this.props.linkParams.masterid) {\r\n            console.log('В параметры пришел мастер');\r\n            this.openMasterOnLink(this.props.linkParams.masterid)\r\n        }\r\n    }\r\n\r\n    verificationUser = (vkUser) => {\r\n         fetch(BACKEND.users + '/vkuid/' + vkUser.id)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0) {\r\n                    const user = {\r\n                        vkUid: vkUser.id,\r\n                        firstname: vkUser.first_name,\r\n                        lastname: vkUser.last_name,\r\n                        avatarLink: vkUser.photo_200,\r\n                        sex: vkUser.sex,\r\n                        location: {\r\n                            country: vkUser.country || 'Не определен',\r\n                            city: vkUser.city || 'Не определен'\r\n                        },\r\n                        isMaster: false,\r\n                        favs: []\r\n                    };\r\n                    fetch(BACKEND.users, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {'Content-Type': 'application/json',},\r\n                        redirect: 'follow',\r\n                        referrer: 'no-referrer',\r\n                        body: JSON.stringify(user)\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(newUser => {\r\n                            let message = 'Новый пользователь '+newUser.firstname+\" \"+newUser.lastname;\r\n                            fetch('https://api.telegram.org/bot1197115173:AAH0hnLKgMkJYk9o8cQJgiWwdlDBhTtT_ts/sendMessage?chat_id=410011101&parse_mode=html&text='+message);\r\n                            this.props.loginUser(newUser);\r\n                        });\r\n                } else {\r\n                    if (usersArr[0].isMaster === true) {\r\n                        fetch(BACKEND.masters.vkuid + usersArr[0].vkUid)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                if (master.length === 0) {\r\n                                    console.log('Мастер удален');\r\n                                    return null\r\n                                } else {\r\n                                    this.props.setMaster(master[0]);\r\n                                }\r\n                            });\r\n                    }\r\n                    let message = 'Авторизация '+usersArr[0].firstname+\" \"+usersArr[0].lastname;\r\n                    fetch('https://api.telegram.org/bot1197115173:AAH0hnLKgMkJYk9o8cQJgiWwdlDBhTtT_ts/sendMessage?chat_id=410011101&parse_mode=html&text='+message);\r\n                    this.props.loginUser(usersArr[0]);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.openSnack('Отсутствует соединение с базой пользователей.');\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n\r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openAlert = (title, body, action) => {\r\n        this.setState({\r\n            popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={() => this.setState({popout: null})}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                let message = 'Новый мастер '+newMaster.firstname+\" \"+newMaster.lastname;\r\n                fetch('https://api.telegram.org/bot1197115173:AAH0hnLKgMkJYk9o8cQJgiWwdlDBhTtT_ts/sendMessage?chat_id=410011101&parse_mode=html&text='+message);\r\n                this.props.setMaster(newMaster);\r\n                this.setState({activeViewLk: 'lk'});\r\n            });\r\n    };\r\n\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({activeMaster: master, activeMasterId: master._id, activePanelMasters: panelName});\r\n    };\r\n\r\n    openMasterOnId = (masterId) => {\r\n        this.setState({activePanelFindModels: 'masterInfo', activeMasterId: masterId});\r\n    };\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        this.setState({activeMasterId: masterId, activePanelLk: 'masterInfo'});\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        patchData(BACKEND.users+'/'+user._id, user);\r\n        this.setActiveModal(null)\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (loginStatus === false) {\r\n            return (\r\n                // <Placeholder icon={<Spinner size=\"large\" style={{marginTop: 20}}/>}>\r\n                <Placeholder icon={<img src={spinner}/>}>\r\n                    Выполняется вход...\r\n                    {this.state.snackbar}\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"News\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" activePanel=\"news\">\r\n                        <Panel id=\"news\">\r\n                            <PanelHeader>Навигатор красоты</PanelHeader>\r\n                            <News\r\n                                openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n                    <Root\r\n                        id=\"masters\"\r\n                        activeView={this.state.activeViewMasters}\r\n                        modal={\r\n                            <Modal\r\n                                header={'Выбор города'}\r\n                                activeModal={this.state.activeModal}\r\n                                pageId={'cityList'}\r\n                                onClose={()=>this.setActiveModal(null)}\r\n                                content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                                leftButton={false}\r\n                                rightButton={false}\r\n                            />\r\n                        }\r\n                    >\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <Masters\r\n                                    changeCity={() => this.setActiveModal('cityList')}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    changeCategory={()=>this.setState({activeViewMasters: 'masterCat'})}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head\r\n                                    title={'О мастере'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                />\r\n                                <MasterCard\r\n                                    openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openComments={() => this.setState({activePanelMasters: 'masterComments'})}\r\n                                    activeMasterId={this.state.activeMasterId}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.setState({activeViewMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.state.activePanelFindModels}\r\n                        modal={\r\n                            <Modal\r\n                                header={'Выбор города'}\r\n                                activeModal={this.state.activeModal}\r\n                                pageId={'cityList'}\r\n                                onClose={()=>this.setActiveModal(null)}\r\n                                content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                                leftButton={false}\r\n                                rightButton={false}\r\n                            />\r\n                        }\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                            <FindModel\r\n                                openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                changeCity={() => this.setActiveModal('cityList')}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head\r\n                                title={'О мастере'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                            />\r\n                            <MasterCard\r\n                                openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                activeMasterId={this.state.activeMasterId}\r\n                                openComments={() => this.setState({activePanelFindModels: 'masterComments'})}\r\n                                setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterComments\r\n                                activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout} modal={\r\n                            <Setting\r\n                                snackbar={(message) => this.openSnack(message)}\r\n                                modalBack={this.modalBack}\r\n                                activeModal={this.state.activeModal}\r\n                                changeModal={(name) => this.setActiveModal(name)}\r\n                            />\r\n                        }>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader>Личный кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнерам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            user={user}\r\n                                            openSetting={() => this.setActiveModal('setting')}\r\n                                            //openSetting={() => this.setState({activePanelLk: 'setting'})}\r\n                                            openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                            openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                            openMasterPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head\r\n                                    title={'Избранное'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Favourite\r\n                                    user={user}\r\n                                    openFavMasterOnId={this.openFavMasterOnId}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head\r\n                                    title={'О мастере'}\r\n                                    goBack={() => this.setState({activePanelLk: 'favourite'})}\r\n                                />\r\n                                <MasterCard\r\n                                    openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                    user={user}\r\n                                    activeMasterId={this.state.activeMasterId}\r\n                                    openComments={() => this.setState({activePanelLk: 'masterComments'})}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Portfolio user={user}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <MasterComments user={user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head title={'Мастер ищет модель'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <FindModelMaster user={user} popout={this.openAlert}/>\r\n                            </Panel>\r\n                            {/*<Panel id='setting'>*/}\r\n                            {/*    <Head title={'Настройки'} goBack={() => this.setState({activePanelLk: 'lk'})}/>*/}\r\n                            {/*    <Setting*/}\r\n                            {/*        targetCity={this.props.targetCity}*/}\r\n                            {/*        user={user}*/}\r\n                            {/*        popout={this.openAlert}*/}\r\n                            {/*        changeCity={() => this.setState({activePanelLk: 'changeCity'})}*/}\r\n                            {/*    />*/}\r\n                            {/*</Panel>*/}\r\n                            {/*<Panel id='changeCity'>*/}\r\n                            {/*    <Head title={'Выбор города'}*/}\r\n                            {/*          goBack={() => this.setState({activePanelLk: 'setting'})}/>*/}\r\n                            {/*    <CityList changeCity={(city) => this.setState({*/}\r\n                            {/*        targetCity: city,*/}\r\n                            {/*        activePanelLk: 'setting'*/}\r\n                            {/*    })}/>*/}\r\n                            {/*</Panel>*/}\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id=\"registration\">\r\n                            <Panel id='registration'>\r\n                                <Head title={'Регистрация'} goBack={() => this.setState({activeViewLk: 'lk'})}/>\r\n                                <Invite\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelReg: 'registration'})}/>\r\n                                <CityList changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelReg: 'registration'})\r\n                                }}/>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nbridge.send(\"VKWebAppInit\", {})\r\n    .then(data => console.log('Инициализировали апи вк? '+data.result));\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}><App linkParams={linkParams} params={params} /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}