{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/store/reducers.js","js/store/actions.js","js/masters/mastersCard.js","js/elements/functions.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["Head","props","theme","left","onClick","goBack","title","BACK_LINK","process","BACKEND","users","auth","like","message","masters","all","onID","category","vkuid","subscribers","onarrayid","connect","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getCities","isMember","getAll","logs","params","sendmessage","moder","moderCom","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","activePanelnews","activePanelmasters","activePanelfindmodel","activePanellk","activePanelregistration","newsHistory","mastersHistory","findmodelHistory","lkHistory","registrationHistory","activeStory","activeViewLk","setMaster","console","log","type","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","goTo","story","panel","goForward","changeStory","changeActiveViewLk","activeView","MastersCard","handleChange","event","target","name","value","setState","state","sendMessage","data","sendtitle","phone","fetch","activeMaster","_id","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","error","openModal","openSnackAvatar","avatarLink","catch","e","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","getPhone","share","bridge","send","result","loadFavs","includes","countFavs","length","isLoad","changeVisible","index","push","isChange","indexOf","splice","phone_number","enterNumber","number","activeModal","onClose","id","header","caption","className","align","onChange","snackbar","this","map","filter","item","url","postData","images","start_index","text","layout","after","src","size","response","icon","marginTop","visible","Fragment","separator","disabled","multiline","fontSize","color","brand","marginLeft","vkUid","firstname","lastname","expandable","openComments","indicator","meta","comments","description","photos","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","openPhoto","priceList","price","React","Component","dispatch","bindActionCreators","reverse","image","gridPhoto","MastersComments","changeStars","stars","i","rating","sendComment","replace","Number","onModer","ids","isCommended","commentsArr","countComments","prevProps","prevState","snapshot","comDate","date","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","star","bottom","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","user_id","ingroup","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","photo","openModer","openReg","nowCounter","countUsers","countMasters","countCities","cities","city","inGroup","window","scrollTo","vk_is_favorite","sort","Invite","deleteProcedure","setAlert","actionsLayout","autoclose","action","onRemove","getCategories","categories","regMaster","checkLicense","statusMessage","trim","cat","subcat","active","label","location","country","closeReg","addProd","status","add","saveProd","validateNewProdTitle","newProdTitle","validateNewProdBody","newProdBody","validateNewProdPrice","newProdPrice","slice","permMessage","qapi","checkSubcat","indexCat","indexSubcat","counter","count","statusPhoto","bind","undefined","changeCity","asideContent","checked","subcategory","require","stretched","openRules","Lk","checkModeration","reasons","reason","addToFavApp","connection","tmpUser","isMaster","isUser","favsArr","mastersArr","openSetting","openFavourite","openMasterPhoto","openFindModel","Portfolio","uploadUrl","token","loading","formData","FormData","selectedFile","document","getElementById","files","append","openSnack","fetchJsonp","saveUrl","savePh","sizes","imgArr","img","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","accept","CityListModal","search","toLowerCase","country_id","cityList","region","withModalRootContext","Setting","platform","saveChanges","patchData","openSnackDismiss","checkBan","banned","statusProfile","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","changed","Array","isArray","String","Favourite","loadFavsMasters","isLoaded","err","openFavMasterOnId","FindCard","find","sale","openMasterOnId","masterId","marginBottom","FindList","findArr","FindModel","loadFind","self","pageYOffset","FindModelMaster","handleChangeSelect","selectvalue","save","isActive","mStatus","Partners","addToCommunity","CityList","Moder","good","bad","goodComment","badComment","activeTab","mastersCount","usersCount","to","openMaster","vk_user_id","selected","renderMasters","renderComments","MastersList","setBottom","setTitle","bottomContent","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","unshift","setCategory","Rules","App","warnConnection","validLaunchParams","openFindMasterOnId","newMaster","openMasterOnLink","activeMasterId","activeViewMasters","activePanelMasters","history","pushState","hist","openStory","storyName","popoutLk","popoutInvite","activePanelFindModels","activePanelLk","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","scheme","mastersModal","snackbarInvite","onStoryChange","subscribe","detail","launchParams","sign","linkParams","masterid","onpopstate","snackbarLk","dataset","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","modal","content","alert","openSnackLk","modalBack","openAlert","openSnackInvite","Boolean","hostname","match","config","store","createStore","changeIsMaster","newhistory","pop","hash","split","reduce","p","a","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"2VAaeA,EAVF,SAACC,GACV,OACI,kBAAC,IAAD,CACIC,MAAM,QACNC,KAAM,kBAAC,IAAD,CAAiBC,QAASH,EAAMI,UACxCJ,EAAMK,Q,2DCRVC,EAAYC,iDAELC,EAAU,CACnBC,MAAO,CACHC,KAAMJ,EAAU,cAChBK,KAAML,EAAU,eAEpBM,QAASN,EAAU,iBACnBO,QAAS,CACLC,IAAKR,EAAU,WACfS,KAAMT,EAAU,WAChBU,SAAUV,EAAU,oBACpBW,MAAOX,EAAU,iBACjBY,YAAaZ,EAAU,qBACvBa,UAAWb,EAAU,qBACrBc,QAASd,EAAU,oBAEvBe,KAAM,CACFC,IAAKhB,EAAU,QACfiB,OAAQjB,EAAU,eAClBkB,KAAMlB,EAAU,cAEpBmB,UAAW,CACPH,IAAKhB,EAAU,aACfoB,WAAYpB,EAAU,wBACtBqB,OAAQrB,EAAU,qBAEtBsB,QAAS,CACLN,IAAKhB,EAAU,kBACfoB,WAAYpB,EAAU,kBACtBuB,WAAYvB,EAAU,uBAE1BwB,MAAO,CACHC,YAAazB,EAAU,qBACvB0B,UAAW1B,EAAU,mBACrB2B,oBAAqB3B,EAAU,6BAC/B4B,UAAW5B,EAAU,kBACrB6B,SAAU7B,EAAU,kBAExBU,SAAU,CACNoB,OAAQ9B,EAAU,aAEtB+B,KAAM,CACFC,OAAQhC,EAAU,gBAEtBiC,YAAajC,EAAU,cACvBkC,MAAOlC,EAAU,sBACjBmC,SAAUnC,EAAU,uB,wFC9BlBoC,EAAe,CACjBC,aAAa,EACbnB,KAAM,GACND,OAAQ,KACRqB,YAAa,GACbC,kBAAmB,EACnBC,eAAgB,GAChBC,WAAY,GACZC,eAAgB,GAChBC,qBAAsB,EACtBC,sBAAuB,GACvBC,yBAA0B,GAC1BC,mBAAoB,GACpBd,OAAQ,KACRe,gBAAiB,OACjBC,mBAAoB,cACpBC,qBAAsB,YACtBC,cAAe,KACfC,wBAAyB,eACzBC,YAAa,CAAC,QACdC,eAAgB,CAAC,eACjBC,iBAAkB,CAAC,aACnBC,UAAW,CAAC,MACZC,oBAAqB,CAAC,gBACtBC,YAAa,OACbC,aAAc,MCvBLC,EAAY,SAAA1C,GAErB,OADA2C,QAAQC,IAAI,cACL,CACHC,KDZkB,aCalBC,QAAS9C,IAIJ+C,EAAY,SAAC9C,GAEtB,OADA0C,QAAQC,IAAI,cACL,CACHC,KDrBkB,aCsBlBC,QAAS7C,IAIJ+C,EAAoB,SAACC,GAE9B,OADAN,QAAQC,IAAI,iCACL,CACHC,KDtCkC,6BCuClCC,QAASG,IAIJC,EAAuB,SAACC,GAEjC,OADAR,QAAQC,IAAI,oCACL,CACHC,KD7CqC,gCC8CrCC,QAASK,IAIJC,EAAmB,SAACC,GAE7B,OADAV,QAAQC,IAAI,gCACL,CACHC,KDpDiC,4BCqDjCC,QAASO,IAIJC,EAA0B,SAACC,GAEpC,OADAZ,QAAQC,IAAI,uCACL,CACHC,KD3DwC,mCC4DxCC,QAASS,IAIJC,EAAuB,SAACC,GAEjC,OADAd,QAAQC,IAAI,oCACL,CACHC,KDlEqC,gCCmErCC,QAASW,IAIJC,EAA6B,SAACC,GAEvC,OADAhB,QAAQC,IAAI,sCACL,CACHC,KDzEuC,kCC0EvCC,QAASa,IAIJC,EAA8B,SAACC,GAExC,OADAlB,QAAQC,IAAI,6CACL,CACHC,KDhF8C,yCCiF9CC,QAASe,IAIJC,EAAiC,SAACD,GAE3C,OADAlB,QAAQC,IAAI,gDACL,CACHC,KDvFiD,4CCwFjDC,QAASe,IAIJE,EAA2B,SAACF,GAErC,OADAlB,QAAQC,IAAI,0CACL,CACHC,KD9F2C,sCC+F3CC,QAASe,IAIJG,GAAqB,SAACjD,GAE/B,OADA4B,QAAQC,IAAI,wBACL,CACHC,KDnGyB,oBCoGzBC,QAAS/B,IAIJkD,GAAO,SAACC,EAAOC,GACxB,MAAO,CACHtB,KDzGa,QC0GbC,QAAS,CAACoB,MAAOA,EAAOC,MAAOA,KAI1BC,GAAY,SAACF,GACtB,MAAO,CACHrB,KD/GkB,aCgHlBC,QAAS,CAACoB,MAAOA,KAIZG,GAAc,SAACH,GACxB,MAAO,CACHrB,KDrHoB,eCsHpBC,QAASoB,IAIJI,GAAqB,SAACC,GAC/B,MAAO,CACH1B,KD3H6B,wBC4H7BC,QAASyB,I,oBCtGXC,G,kDACF,WAAY/F,GAAQ,IAAD,8BACf,cAAMA,IAqDVgG,aAAe,SAACC,GACZ/B,QAAQC,IAAI8B,EAAMC,OAAOC,KAAMF,EAAMC,OAAOE,OAC5C,EAAKC,SAAL,eAAgBJ,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,QAAQ,kBAAKlC,QAAQC,IAAI,EAAKmC,WAxDhE,EAkEnBC,YAAc,WACV,IAAIC,EAAO,CACPlE,OAAQ,EAAKtC,MAAMsC,OACnBjC,MAAO,EAAKiG,MAAMG,UAClBC,MAAO,EAAKJ,MAAMI,OAEtBC,MAAMnG,EAAQK,QAAQO,QAAQ,EAAKkF,MAAMM,aAAaC,IAAK,CACvDC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACEA,EAAIE,OACJ,EAAK3H,MAAM4H,UAAU,MACrB,EAAKC,gBAAgBJ,EAAIE,MAAO,EAAKrB,MAAMM,aAAakB,cAExD,EAAK9H,MAAM4H,UAAU,MACrB,EAAKC,gBAAgB,2TAAkE,EAAKvB,MAAMM,aAAakB,gBAGtHC,OAAM,SAAAC,GACH,EAAKhI,MAAM4H,UAAU,MACrB,EAAKC,gBAAgBG,EAAEpH,QAAS,EAAK0F,MAAMM,aAAakB,gBAjGjD,EAqGnBG,UAAY,WACR,OAA8B,IAA3B,EAAK3B,MAAM4B,YAEM,kBAAC,IAAD,CAAKC,MAAO,CAACC,MAAO,QAASC,QAAS,EAAGC,YAAa,IAAKnI,QAAS,EAAKoI,WACrE,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,GAAIC,KAAK,SAK3D,kBAAC,IAAD,CAAKP,MAAO,CAACC,MAAO,QAASC,QAAS,EAAGC,YAAa,IAAKnI,QAAS,EAAKoI,WACrE,kBAAC,IAAD,CAAYC,MAAO,GAAIC,OAAQ,GAAIC,KAAK,UA/GzC,EAoHnBC,cAAgB,SAACtI,GACb,OACI,kBAAC,IAAD,CACIuI,OAAQ,kBAAC,IAAD,MACRzI,QAAS,kBAAM,EAAK0I,SAASxI,IAC7B0G,KAAK,WAHT,iEAtHW,EA+HnB+B,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,wCAAwC,EAAK1C,MAAMM,aAAaC,MACjGW,MAAK,SAAAyB,GACkB,wBAAhBA,EAAO7E,MACP,EAAKyD,gBAAgB,4JAAgC,EAAKvB,MAAMM,aAAakB,gBAnI1E,EAmJnBoB,SAAW,WACH,EAAKlJ,MAAMwB,KAAKH,OACZ,EAAKrB,MAAMwB,KAAKH,KAAK8H,SAAS,EAAK7C,MAAMM,aAAaC,KACtD,EAAKR,SAAS,CAAC6B,aAAa,IAE5B,EAAK7B,SAAS,CAAC6B,aAAa,KAGpC,EAAK7B,SAAS,CAAC+C,UAAW,EAAK9C,MAAMM,aAAa1F,YAAYmI,OAAQC,QAAQ,KA3J/D,EA6JnBC,cAAgB,SAACC,GACb,EAAKnD,SAAL,eAAgBmD,GAAS,EAAKlD,MAAMkD,MA9JrB,EAgKnBjB,UAAY,WACR,IAA+B,IAA3B,EAAKjC,MAAM4B,YAAuB,CAClC,IAAI1G,EAAO,EAAKxB,MAAMwB,KACtBA,EAAKH,KAAKoI,KAAK,EAAKnD,MAAMM,aAAaC,KACvC,EAAK7G,MAAMsE,UAAU9C,GACrB,EAAK6E,SAAS,CAAC6B,aAAa,EAAMkB,UAAW,EAAK9C,MAAM8C,UAAU,EAAGM,UAAW,EAAKpD,MAAMoD,WAAW,kBAClG,EAAK7B,gBAAgB,4LAAuC,EAAKvB,MAAMM,aAAakB,mBACrF,CACH,IAAItG,EAAO,EAAKxB,MAAMwB,KAClBgI,EAAQ,EAAKxJ,MAAMwB,KAAKH,KAAKsI,QAAQ,EAAKrD,MAAMM,aAAaC,KAC7DxF,EAAO,EAAKrB,MAAMwB,KAAKH,KACvBmI,GAAS,EACTnI,EAAKuI,OAAOJ,EAAO,GAChBnI,EAAKuI,OAAO,EAAGJ,GACtB,EAAKxJ,MAAMsE,UAAU9C,GACrB,EAAK6E,SAAS,CAAC6B,aAAa,EAAOkB,UAAW,EAAK9C,MAAM8C,UAAU,EAAGM,UAAW,EAAKpD,MAAMoD,WAAW,kBACnG,EAAK7B,gBAAgB,sLAAsC,EAAKvB,MAAMM,aAAakB,iBAhL5E,EAqLnBe,SAAW,SAACxI,GACR,EAAKgG,SAAS,CAACI,UAAWpG,IAC1B0I,IAAOC,KAAK,yBAA0B,CAAC,SAAY,UAAW,IAAO,oBAChExB,MAAK,SAAAyB,GACkB,iCAAhBA,EAAO7E,OACP,EAAKiC,SAAS,CAACK,MAAOuC,EAAOY,eAC7B,EAAKC,YAAYb,EAAOY,eAER,kCAAhBZ,EAAO7E,MACP,EAAK0F,iBAGZ/B,OAAM,SAAAC,GACH9D,QAAQC,IAAI6D,GACZ,EAAK8B,kBAnME,EAuMnBA,YAAc,SAACC,GACPA,EACA,EAAK1D,SAAS,CAACK,MAAOqD,IAEtB,EAAK1D,SAAS,CAACK,MAAO,OAE1B,EAAK1G,MAAM4H,UACP,kBAAC,IAAD,CACIoC,YAAa,cACbC,QAAS,EAAKjK,MAAM4H,UAAU,OAElC,kBAAC,IAAD,CACIsC,GAAI,cACJD,QAAS,kBAAM,EAAKjK,MAAM4H,UAAU,OACpCuC,OAAO,6HACPC,QACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,UAAU,iCACX,kBAAC,IAAD,CACIA,UAAU,YAEVlE,KAAK,QACL/B,KAAK,SAELkG,MAAM,SACNlE,MAAO,EAAKE,MAAMI,MAClB6D,SAAU,EAAKvE,eAEnB,kBAAC,IAAD,CAAKqE,UAAU,uBAEnB,qoBACA,kBAAC,IAAD,CAAQlK,QAAS,EAAKoG,aAAtB,gEApOhB,EAAKD,MAAQ,CACTgD,QAAQ,EACRkB,SAAU,KACVd,UAAU,EACV9C,aAAc,IANH,E,gEAUE,IAAD,OACjB6D,KAAKpE,SAAS,CAACO,aAAc6D,KAAKzK,MAAM4G,eAAe,WACnB,OAA5B,EAAK5G,MAAM4G,cACX,EAAKsC,gB,6CAqBQ,IAAD,OACnB,GAAIuB,KAAKnE,MAAMoD,SAAS,CACpB,IACIlF,EADciG,KAAKzK,MAAM4C,YACI8H,KAAI,SAAAnJ,GACjC,OAAIA,EAAOsF,MAAQ,EAAKP,MAAMM,aAAaC,KACnCtF,EAAOL,YAAYiI,SAAS,EAAKnJ,MAAMwB,KAAKqF,KAC5CtF,EAAOL,YAAcK,EAAOL,YAAYyJ,QAAO,SAAAC,GAAI,OAAIA,IAAS,EAAK5K,MAAMwB,KAAKqF,OAEhFtF,EAAOL,YAAYuI,KAAK,EAAKzJ,MAAMwB,KAAKqF,KAErCtF,GAEAA,KAGfkJ,KAAKzK,MAAMuE,kBAAkBC,GCvFzC,WAAwC,IAAtBqG,EAAqB,uDAAf,GAAIrE,EAAW,uDAAJ,GAC/BG,MAAMkE,EAAK,CACP/D,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBK,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,MD0ElB8C,CAAStK,EAAQC,MAAME,KAAK8J,KAAKnE,MAAMM,aAAaC,IAAK4D,KAAKzK,MAAMsC,W,qCAS7DyI,EAAQvB,GACnBT,IAAOC,KAAK,qBAAsB,CAC9B+B,OAAQA,EACRC,YAAaxB,IACdhC,MAAK,SAAAhB,GAAI,OAAItC,QAAQC,IAAIqC,Q,sCAwEfyE,EAAMnD,GAAa,IAAD,OAC3B2C,KAAKnE,MAAMkE,UAAUC,KAAKpE,SAAS,CAACmE,SAAU,OAClDC,KAAKpE,SAAS,CAAEmE,SACR,kBAAC,IAAD,CACIU,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAAEmE,SAAU,QACzCW,MAAO,kBAAC,IAAD,CAAQC,IAAKtD,EAAYuD,KAAM,MAErCJ,O,iCAyIsB,IAA9BJ,EAA6B,uDAAvB,GAAIrE,EAAmB,uDAAZ,GAAIM,EAAQ,uCAElC,OAAOH,MAAMkE,EAAK,CACd/D,OAAQA,EACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAA8D,GAAQ,OAAIpH,QAAQC,IAAImH,EAAS5D,a,+BAEtC,IAAD,OACJ,OAAgC,OAA5B+C,KAAKzK,MAAM4G,aAEP,kBAAC,IAAD,CAAOsD,GAAG,cACN,kBAAC,EAAD,CACI7J,MAAO,oDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAE7B,kBAAC,IAAD,CACImL,KAAM,kBAAC,KAAD,MACNpB,OAAO,6IAFX,6NASDM,KAAKzK,MAAM4G,aAAae,MAE3B,kBAAC,IAAD,CAAOuC,GAAG,cACN,kBAAC,EAAD,CACI7J,MAAO,oDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAE7B,kBAAC,IAAD,CACImL,KAAM,kBAAC,KAAD,MACNpB,OAAO,iFAFX,8NAUW,IAApBM,KAAKnE,MAAMgD,OAEN,kBAAC,IAAD,CAAS+B,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,OAER,IAApCf,KAAKnE,MAAMM,aAAa6E,QAEtB,kBAAC,IAAD,CAAOvB,GAAG,cACN,kBAAC,EAAD,CACI7J,MAAO,oDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAE7B,kBAAC,IAAD,CACImL,KAAM,kBAAC,KAAD,MACNpB,OAAO,iFAFX,0MAWJ,kBAAC,IAAD,CAAOD,GAAG,cACN,kBAAC,EAAD,CACI7J,MAAO,oDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAEjC,kBAAC,IAAMsL,SAAP,KAoBQ,kBAAC,IAAD,CAAOC,UAAW,QACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMN,KAAK,KACP,kBAAC,IAAD,CACIO,UAAQ,EACRC,WAAS,EACTjD,OAAQ,kBAAC,IAAD,CAAQwC,IAAKX,KAAKnE,MAAMM,aAAakB,WAAYuD,KAAM,KAC/DJ,KACI,kBAAC,IAAMS,SAAP,CAAgBvD,MAAO,CAAC2D,SAAU,GAAIC,MAAO,aACT,uEAA/BtB,KAAKnE,MAAMM,aAAaxC,KAAuBqG,KAAKnE,MAAMM,aAAaoF,MAAQvB,KAAKnE,MAAMM,aAAaxC,MAGhHgG,QACI,kBAAC,IAAMsB,SAAP,CAAgBvD,MAAO,CAAC8D,WAAY,GAAIT,UAAW,GAAInD,QAAS,IAC5D,kBAAC,IAAD,CAAQlI,QAAS,kBAAM,EAAK2I,UAA5B,gEAEI2B,KAAKzK,MAAMwB,KAAK0K,QAAUzB,KAAKnE,MAAMM,aAAasF,MAE9C,KAEAzB,KAAKxC,cAMpBwC,KAAKnE,MAAMM,aAAauF,UAvB7B,IAuByC1B,KAAKnE,MAAMM,aAAawF,aAK7E,kBAAC,IAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,YAAU,EACVlM,QAAS,kBAAM,EAAKH,MAAMsM,gBAAgBC,UAAW9B,KAAKnE,MAAMM,aAAa4F,KAAKC,UAAY,EAC9FC,YAAa,uEAAkBjC,KAAKnE,MAAM8C,WAH9C,yCAUR,kBAAC,IAAD,CAAO/I,MAAM,0DAELoK,KAAKnE,MAAMM,aAAa+F,OAAOtD,OAAS,EACpC,kBAAC,IAAD,KACI,kBAAC,IAAD,qJACA,kBAAC,IAAD,KAEQoB,KAAKnE,MAAMM,aAAa+F,OAAOjC,KAAI,SAACkC,EAAUpD,GAC1C,OACI,kBAAC,IAAD,CACIrB,MAAO,CAACE,QAAS,EAAGwE,aAAc,GAAIC,OAAQ,GAC9CzB,KAAK,IACLtE,KAAK,SACLgG,IAAKvD,EACLrJ,QAAS,kBAAM,EAAK6M,eAAe,EAAK1G,MAAMM,aAAa+F,OAAQnD,KAEnE,yBAAKrB,MAAO,CAACK,MAAO,IAAKC,OAAQ,GAAIwE,gBAAiB,OAAOL,EAAS,IAAKM,eAAgB,QAASL,aAAc,WAMtI,kBAAC,IAAD,CACIR,YAAU,EACVlM,QAAS,kBAAM,EAAKH,MAAMmN,aAC1BT,YAAajC,KAAKnE,MAAMM,aAAa+F,OAAOtD,OAAO,0FACnDkD,UAAW9B,KAAKnE,MAAMM,aAAa+F,OAAOtD,QAJ9C,sGAOJ,kBAAC,IAAD,CACIkC,KAAM,kBAAC,IAAD,MACNpB,OAAO,qFAIvB,kBAAC,IAAD,CAAOwB,UAAU,QAETlB,KAAKnE,MAAMM,aAAawG,UAAU1C,KAAI,SAACE,EAAMpB,GAAP,OAC9B,kBAAC,IAAD,CACIrB,MAAO,CAAC0E,aAAc,uBACtBE,IAAKvD,EACLqC,WAAS,EACT1L,QAAS,kBAAM,EAAKoJ,cAAcC,KAElC,kBAAC,IAAD,CAAUrB,MAAO,CAACE,QAAS,IACvB,kBAAC,IAAD,CAAMgD,KAAK,KACP,kBAAC,IAAD,CACIqB,YACmB,KAAf9B,EAAKyC,MAAe,gBAAQzC,EAAKyC,MAAQ,wCAAY,iHAEzDhB,YAAU,EACVE,UAAU,IACT,EAAKjG,MAAMM,aAAawG,UAAU5D,GAAOnJ,OAG1C,EAAKiG,MAAMkD,IACP,kBAAC,IAAMkC,SAAP,KACI,kBAAC,IAAD,KAAO,EAAK/C,cAAc,EAAKrC,MAAMM,aAAawG,UAAU5D,GAAOnJ,QACnE,kBAAC,IAAD,CAAMqM,YAAY,qJACZb,WAAS,GAAE,EAAKvF,MAAMM,aAAawG,UAAU5D,GAAOnC,OAItE,kBAAC,IAAD,aAO5B,kBAAC,IAAD,CAAOsE,UAAU,OAAOxB,OAAQ,kBAAC,IAAD,CAAQpD,KAAK,aAAb,mHAC5B,kBAAC,IAAD,CAAM8E,WAAS,GACVpB,KAAKnE,MAAMM,aAAa8F,cAGhCjC,KAAKnE,MAAMkE,e,GAjfN8C,IAAMC,WAwgBjBnM,gBAfS,SAACkF,GACrB,MAAO,CACH9E,KAAM8E,EAAM9E,KACZc,OAAQgE,EAAMhE,OACdM,YAAa0D,EAAM1D,gBAID,SAAC4K,GACvB,MAAO,CACHlJ,UAAWmJ,YAAmBnJ,EAAWkJ,GACzCjJ,kBAAmBkJ,YAAmBlJ,EAAmBiJ,MAIlDpM,CAA4C2E,IE1e5CA,G,kDA9DX,WAAY/F,GAAQ,IAAD,8BACf,cAAMA,IACDsG,MAAQ,CACTM,aAAc,EAAK5G,MAAM4G,aACzB0C,QAAQ,GAJG,E,gEAQfmB,KAAKpE,SAAS,CAAC0E,OAAQN,KAAKzK,MAAM4G,aAAa+F,OAAOe,UAAWpE,QAAQ,M,qCAE9DyB,EAAQvB,GACnBT,IAAOC,KAAK,qBAAsB,CAC9B+B,OAAQA,EACRC,YAAaxB,IACdhC,MAAK,SAAAhB,GAAI,OAAItC,QAAQC,IAAIqC,Q,kCAEnB,IAAD,OACR,OAAiC,IAA7BiE,KAAKnE,MAAMyE,OAAO1B,OAEd,kBAAC,IAAD,CAAMwC,WAAS,GAAf,sNAIA,kBAAC,IAAD,KAEQpB,KAAKnE,MAAMyE,OAAOL,KAAI,SAACiD,EAAOnE,GAC1B,OACI,kBAAC,IAAD,CACIrB,MAAO,CAACE,QAAS,EAAGwE,aAAc,GAAIC,OAAQ,GAC9CzB,KAAK,IACLtE,KAAK,SACLgG,IAAKvD,EACLrJ,QAAS,kBAAM,EAAK6M,eAAe,EAAK1G,MAAMyE,OAAQvB,KAEtD,yBAAKrB,MAAO,CAACM,OAAQ,GAAIwE,gBAAiB,OAAOU,EAAM,IAAKT,eAAgB,QAASL,aAAc,a,+BAU/H,OAAuB,IAApBpC,KAAKnE,MAAMgD,OAEN,kBAAC,IAAD,CAAS+B,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,MAI1C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOnL,MAAM,0DACT,kBAAC,IAAD,CAAOsL,UAAU,QACZlB,KAAKmD,mB,GAtDRN,IAAMC,W,4DCe1BM,G,kDACF,WAAY7N,GAAQ,IAAD,8BACf,cAAMA,IAmCV8N,YAAc,WAEV,IADA,IAAIC,EAAQ,GADI,WAERC,GACAA,GAAK,EAAK1H,MAAM2H,OAChBF,EAAMtE,KAAK,kBAAC,KAAD,CAAgBjB,MAAO,GAAIC,OAAQ,GAAIyB,GAAI8D,EAAG7N,QAAS,kBAAI,EAAKkG,SAAS,CAAC4H,OAAQD,KAAKtF,KAAM,YAExGqF,EAAMtE,KAAK,kBAAC,KAAD,CAAuBjB,MAAO,GAAIC,OAAQ,GAAIyB,GAAI8D,EAAG7N,QAAS,kBAAI,EAAKkG,SAAS,CAAC4H,OAAQD,KAAKtF,KAAM,aAJ/GsF,EAAE,EAAGA,GAAG,EAAGA,IAAK,EAAhBA,GAOR,EAAK3H,SAAS,CAAC0H,MAAOA,KA7CP,EAgDnBG,YAAc,WACV,IACI,GAA0B,IAAtB,EAAK5H,MAAM2H,OAAc,KAAM,kKACnC,GAAI,EAAK3H,MAAMe,KAAK8G,QAAQ,OAAO,KAAKA,QAAQ,eAAgB,MAAM9E,OAAS,GAAI,KAAM,gdACzF,GAAI,EAAK/C,MAAMe,KAAK8G,QAAQ,OAAO,KAAKA,QAAQ,eAAgB,MAAM9E,OAAS,IAAK,KAAM,+LAC1F,IAAIzH,EAAU,CACVqM,OAAQG,OAAO,EAAK9H,MAAM2H,QAC1B5G,KAAM,EAAKf,MAAMe,KAAK8G,QAAQ,eAAgB,MAC9CtM,YAAY,EACZS,OAAQ,EAAKtC,MAAMsC,QAEvB,EAAKwI,SAAStK,EAAQoB,QAAQN,IAAI,EAAKtB,MAAM4G,aAAaC,IAAKjF,EAAS,QAC1E,MAAOoG,GACL9D,QAAQC,IAAI6D,GACZ,EAAK3B,SAAS,CAAEmE,SACR,kBAAC,IAAD,CACIU,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAAEmE,SAAU,SAExCxC,OAnEF,EA+MnBhC,aAAe,SAACC,GAAW,IAAD,EACFA,EAAMC,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAKC,SAAL,eAAgBF,EAAOC,KA/MvB,EAAKE,MAAQ,CACT2H,OAAQ,EACR5G,KAAM,GACNiC,QAAQ,EACRkB,SAAU,KACVuD,MAAO,GACPM,QAAS,GARE,E,gEAWE,IAAD,OAChB5D,KAAKqD,cAOLnH,MAAMnG,EAAQoB,QAAQF,WAAW+I,KAAKzK,MAAM4G,aAAaC,KACpDW,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACEA,EAAI6G,IAAInF,SAAS,EAAKnJ,MAAMwB,KAAKqF,MACjC,EAAKR,SAAS,CAACkI,aAAa,IAEhC,EAAKlI,SAAS,CAACmI,YAAa/G,EAAIgF,SAAUgC,cAAehH,EAAIgF,SAASpD,OAAQC,QAAQ,EAAM+E,QAAS5G,EAAI4G,aAE5GtG,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,Q,yCAGX0G,EAAWC,EAAWC,GACjCD,EAAUV,SAAWxD,KAAKnE,MAAM2H,QAChCxD,KAAKqD,gB,iCAwC0B,IAAD,OAA7BjD,EAA6B,uDAAvB,GAAIrE,EAAmB,uDAAZ,GAAIM,EAAQ,uCAElC,OAAOH,MAAMkE,EAAK,CACd/D,OAAQA,EACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAhB,GAIEA,EAAKmB,MACLzD,QAAQC,IAAIqC,EAAKmB,OAEjB,EAAKtB,SAAS,CAACkI,aAAa,EAAMF,QAAS,EAAK/H,MAAM+H,QAAS,EAAG7D,SAC1D,kBAAC,IAAD,CACIU,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAAEmE,SAAU,SAF7C,mbAQfzC,OAAM,SAAAC,GACC,EAAK1B,MAAMkE,UAAU,EAAKnE,SAAS,CAACmE,SAAU,OAClD,EAAKnE,SAAS,CAAEmE,SACR,kBAAC,IAAD,CACIU,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAACmE,SAAU,SAEvCxC,EAAEpH,gB,8BAKnBiO,GACJ,GAAgB,4LAAZA,EACA,OAAOA,EAEP,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAQF,EAAKG,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUJ,EAAKK,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQN,EAAKO,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQR,EAAKS,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAIR,EAAKU,cAAc,WAAMR,EAAM,IAAIE,I,oCAGvD,IAAD,OACV,OAA0B,IAAtBzE,KAAKnE,MAAMgD,OAEP,kBAAC,IAAD,CAAKnB,MAAO,CAAEsH,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAStE,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,OAI3Cf,KAAKnE,MAAMkI,YAAY9D,KAAI,SAAA9I,GAC1B,OACI,kBAAC,IAAD,CAAOmL,IAAKnL,EAAQiF,IAAK8E,UAAW,QAChC,kBAAC,IAAD,CACIe,YAAa,EAAK2C,QAAQzN,EAAQkN,MAClClG,OAAS,kBAAC,IAAD,CAAQyC,KAAM,GAAID,IAAKxJ,EAAQJ,KAAKsG,cAE5ClG,EAAQJ,KAAK2K,UAAU,IAAIvK,EAAQJ,KAAK4K,UAE7C,kBAAC,IAAD,CAAMP,WAAS,IACY,IAAvBjK,EAAQC,WAAsBD,EAAQyF,KAClC,kBAAC,IAAD,CAAMuB,OAAQ,kBAAC,KAAD,OAAd,8JAGR,kBAAC,IAAD,CAAM2D,UAAW3K,EAAQqM,OAAR,mBAAjB,wCACA,kBAAC,IAAD,Y,iCAMZ,IAAD,OACP,IAA0B,IAAtBxD,KAAKnE,MAAMgD,OACX,OAAImB,KAAKzK,MAAM4G,aAAasF,QAAUzB,KAAKzK,MAAMwB,KAAK0K,MAE9C,kBAAC,IAAD,CAAK/D,MAAO,CAAC2D,SAAU,GAAIC,MAAO,aAAlC,8OAG4B,IAA3BtB,KAAKnE,MAAMiI,YAEZ,kBAAC,IAAD,CAAKpG,MAAO,CAAC2D,SAAU,GAAIC,MAAO,aAAlC,8OAIA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIW,YAAa,0IAET,kBAAC,IAAD,CAAKvE,MAAO,CAACsH,QAAS,gBAEdhF,KAAKnE,MAAMyH,MAAMrD,KAAI,SAAAkF,GACjB,OAAOA,QAM/B,kBAAC,IAAD,CACIzJ,KAAM,OACNC,MAAOqE,KAAKnE,MAAMe,KAClBwI,OAAQ,gPAAuDpF,KAAKnE,MAAMe,KAAK8G,QAAQ,KAAM,IAAIA,QAAQ,eAAgB,MAAM9E,OAAO,qBACtIyG,IAAK,oGACLC,YAAY,iVACZxF,SAAUE,KAAKzE,eAEnB,kBAAC,IAAD,CACIe,KAAK,UACL5G,QAAS,kBAAM,EAAK+N,gBAFxB,sF,+BAgBhB,OACQ,kBAAC,IAAMxC,SAAP,KAE+B,IAAvBjB,KAAKnE,MAAM+H,QACP,kBAAC,IAAD,CAAM9B,UAAW9B,KAAKnE,MAAM+H,QAASzF,OAAQ,kBAAC,KAAD,OAA7C,kHAAoG,KAE3G6B,KAAKuF,cACN,kBAAC,IAAD,KAASvF,KAAKwF,YACbxF,KAAKnE,MAAMkE,c,GA7NF8C,IAAMC,WA0OrBnM,gBAPS,SAACkF,GACrB,MAAO,CACH9E,KAAM8E,EAAM9E,KACZc,OAAQgE,EAAMhE,UAIPlB,CAAyByM,I,oBCjPlCqC,G,kDACF,WAAalQ,GAAQ,IAAD,8BAChB,cAAMA,IAoBVmQ,SAAW,WACPpH,IAAOC,KAAK,yBAA0B,IACjCxB,MAAK,SAAAhB,IACkB,IAAhBA,EAAKyC,QACL,EAAK5C,SAAS,CAAC+J,MAAO,OAG7BrI,OAAM,SAAAC,GAAC,OAAI9D,QAAQC,IAAI6D,OA5BZ,EA+BpBqI,OAAS,WACL,GAAyB,IAArB,EAAK/J,MAAM8J,MACX,OACI,kBAAC,IAAD,CACIE,UAAU,2eACVC,QAAS,kBAAC,IAAD,CAAQpQ,QAAS,kBAAI,EAAKgQ,aAA1B,oEApCL,EA0CpBhO,SAAW,WACP,IAAMqE,EAAO,CACTgK,QAAS,EAAKxQ,MAAMwB,KAAK0K,MACzB5J,OAAQ,EAAKtC,MAAMsC,QAEvBqE,MAAMnG,EAAQsB,MAAMK,SAAS,CACzB2E,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACF,OAAoB,IAAhBA,EAAIgJ,QACG,KAGH,kBAAC,IAAD,CACItG,OAAO,mHACPmG,UAAU,2VACVC,QAAS,kBAAC,IAAD,CAAQpQ,QAAS,kBAAI,EAAKuQ,cAA1B,2EAKxB3I,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,OA1EV,EA6EpB0I,UAAY,WACR3H,IAAOC,KAAK,oBAAqB,CAC7B2H,SAAU,YAETnJ,KAAK,EAAKrF,UACV4F,OAAM,SAAAC,GAAC,OAAI9D,QAAQC,IAAI6D,OAlFZ,EAqFpB4I,SAAW,WACP,OACI,EAAKtK,MAAMuK,KAAKnG,KAAI,SAAAmG,GAChB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM9D,IAAK8D,EAAMxF,KAAK,IAAItE,KAAK,UAC3B,yBAAKoB,MAAO,CAAEM,OAAQ,GAAIqI,gBAAiB,qBA3F/C,EAmGpBC,SAAW,SAACvP,GACR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM6J,KAAK,KACP,kBAAC,IAAD,CACI2F,MAAM,kEACNtE,YAC0B,OAAtB,EAAK1M,MAAMuB,OAAkB,2EAAiB,4HAGlDqH,OAAQ,kBAAC,IAAD,CAAQwC,IAAK5J,EAAKsG,WAAYuD,KAAM,KAC5CA,KAAK,KACP7J,EAAK2K,UARP,IAQmB3K,EAAK4K,UAGL,cAAf5K,EAAK0K,OAEL,kBAAC,IAAD,CAAY/L,QAAS,EAAKH,MAAMiR,WAAhC,0DAEmB,OAAtB,EAAKjR,MAAMuB,QACZ,kBAAC,IAAD,CACI4G,MAAO,CAAC0E,aAAc,iBACtBhB,WAAS,EACT1L,QAAS,EAAKH,MAAMkR,QACpBtI,OAAQ,kBAAC,KAAD,MACRyD,YAAU,GALd,+SAvHI,EAsIpB8E,WAAa,WACT,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM9F,KAAK,IAAItE,KAAK,UAChB,kBAAC,IAAM2E,SAAP,KACI,kBAAC,IAAD,4DACA,kBAAC,IAAD,CAAMa,UAAW,EAAKjG,MAAM8K,WAAa,kBAAC,IAAD,KAAU,EAAK9K,MAAM8K,YAAwB,kBAAC,IAAD,CAAS/F,KAAK,WAApG,kFACA,kBAAC,IAAD,CAAMkB,UAAW,EAAKjG,MAAM+K,aAAe,kBAAC,IAAD,KAAU,EAAK/K,MAAM+K,cAA0B,kBAAC,IAAD,CAAShG,KAAK,WAAxG,oDACA,kBAAC,IAAD,CAAMkB,UAAW,EAAKjG,MAAMgL,YAAc,kBAAC,IAAD,KAAU,EAAKhL,MAAMgL,aAAyB,kBAAC,IAAD,CAASjG,KAAK,WAAtG,8CACA,kBAAC,IAAD,CAAMQ,WAAS,GAEP,EAAKvF,MAAMiL,QACX,EAAKjL,MAAMiL,OAAO7G,KAAI,SAAC8G,EAAMhI,GACzB,OAAIA,EAAQ,IAAM,EAAKlD,MAAMiL,OAAOlI,OACzBmI,EAAK,KAELA,UApJvC,EAAKlL,MAAQ,CACTuK,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvBY,SAAS,EACTrB,MAAO,GALK,E,gEASC,IAAD,OAChBsB,OAAOC,SAAS,EAAE,GACdlH,KAAKzK,MAAMsC,QACXmI,KAAKpE,SAAS,CAAC+J,MAAOhC,OAAO3D,KAAKzK,MAAMsC,OAAOsP,kBAEnDjL,MAAM,8DACDa,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAhB,GACF,EAAKH,SAAS,CAACgL,aAAc7K,EAAK6K,aAAcD,WAAY5K,EAAK4K,WAAYE,YAAa9K,EAAK8K,YAAaC,OAAQ/K,EAAK+K,OAAOM,c,+BAgJnI,IACErQ,EAAQiJ,KAAKzK,MAAbwB,KACP,OACI,kBAAC,IAAD,CAAO0I,GAAG,QACN,kBAAC,IAAD,mDACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIqB,KAAM,kBAAC,IAAD,CAAQH,IAAI,2FAA2FC,KAAM,KACnHlB,OAAO,yCAFX,glBAMCM,KAAKsG,SAASvP,GACdiJ,KAAK0G,aACL1G,KAAKtI,WACLsI,KAAK4F,e,GAjLX/C,IAAMC,WA6MVnM,gBAdS,SAACkF,GACrB,MAAO,CACH9E,KAAM8E,EAAM9E,KACZD,OAAQ+E,EAAM/E,OACde,OAAQgE,EAAMhE,WAII,SAACkL,GACvB,MAAO,KAKIpM,CAA4C8O,I,qEC/LrD4B,G,kDACF,WAAY9R,GAAQ,IAAD,8BACf,cAAMA,IA0BV+R,gBAAkB,SAACvI,GACf,EAAKxJ,MAAMgS,SACP,kBAAC,IAAD,CACIC,cAAc,WACd1B,QAAS,CAAC,CACNlQ,MAAO,oGACP6R,WAAW,EACXnL,KAAM,cACNoL,OAAQ,kBAAM,EAAKC,SAAS5I,KAC7B,CACCnJ,MAAO,uCACP6R,WAAW,EACXnL,KAAM,WAEVkD,QAAS,kBAAI,EAAKjK,MAAMgS,SAAS,QAEjC,mJACA,4SA5CO,EAiDnBK,cAAgB,WACZ1L,MAAMnG,EAAQQ,SAASoB,QAClBoF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA8K,GACF,EAAKjM,SAAS,CAACiM,WAAYA,IAC3BA,EAAW5H,KAAI,SAAA1J,GACX,EAAKqF,SAAL,eAAgBrF,EAAS6F,KAAM,WAvD5B,EA4DnB0L,UAAY,WACR,IACI,GAA6B,4DAAzB,EAAKvS,MAAM+C,WAA4B,KAAM,yLACjD,IAAgC,IAA5B,EAAKuD,MAAMkM,aAAwB,KAAM,+aAC7C,IAAiC,IAA7B,EAAKlM,MAAMmM,cAAyB,KAAM,+YAC9C,GAAI,EAAKnM,MAAMoG,YAAYyB,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,GAAI,KAAM,0PACzE,GAAI,EAAK/C,MAAMoG,YAAYyB,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,IAAK,KAAM,0PAC1E,GAAI,EAAK/C,MAAM8G,UAAU/D,OAAS,EAAG,KAAM,yYAC3C,IAAK,EAAK/C,MAAMlC,KAAM,KAAM,8TAC5B,IAAIuO,EAAM,CACNC,OAAQ,GACR5R,SAAU,IAEG,EAAKsF,MAAMgM,WACjB5H,KAAI,SAAC1J,EAAUwI,GACPxI,EAAS4R,OAAOjI,QAC3B,SAASiI,GACL,OAAsB,IAAlBA,EAAOC,QACPF,EAAIC,OAAOnJ,KAAKmJ,EAAO/L,KAChB+L,EAAOC,QAEP,QAINxJ,OAAS,GAClBsJ,EAAI3R,SAASyI,KAAK,CAACS,GAAIlJ,EAAS6F,IAAKiM,MAAO9R,EAAS8R,QACrD9R,EAAS6R,QAAS,GAElB7R,EAAS6R,QAAS,KAG1B,IAAItR,EAAS,CACTmL,YAAa,EAAKpG,MAAMoG,YACxBtI,KAAM,EAAKkC,MAAMlC,KACjB2O,SAAU,CACNC,QAAS,EAAKhT,MAAMwB,KAAKuR,SAASC,QAClCxB,KAAM,EAAKxR,MAAM+C,YAErBuP,WAAYK,EACZ3G,MAAO,EAAK1F,MAAM0F,MAClBoB,UAAW,EAAK9G,MAAM8G,UACtB9K,OAAQ,EAAKtC,MAAMsC,QAEvB,EAAKtC,MAAMiT,SAAS1R,GACtB,MAAOoG,GACLzD,QAAQC,IAAIwD,GACZ,EAAK3H,MAAMwK,SAAS7C,KA3GT,EA8GnBuL,QAAU,SAACC,GACP,EAAK9M,SAAS,CAAC+M,IAAKD,KA/GL,EAoKnBE,SAAW,WACP,IACI,IAAIhT,EAAQ,EAAKiT,qBAAqB,EAAKhN,MAAMiN,cAEjD,GADArP,QAAQC,IAAI9D,IACPA,EAAM8S,OAAQ,MAAM9S,EAAMsH,MAE/B,IAAIN,EAAO,EAAKmM,oBAAoB,EAAKlN,MAAMmN,aAE/C,GADAvP,QAAQC,IAAIkD,IACPA,EAAK8L,OAAQ,MAAM9L,EAAKM,MAE7B,IAAI0F,EAAQ,EAAKqG,qBAAqB,EAAKpN,MAAMqN,cAEjD,GADAzP,QAAQC,IAAIkJ,IACPA,EAAM8F,OAAQ,MAAM9F,EAAM1F,MAQ/B,IAAIyF,EAAY,EAAK9G,MAAM8G,UAC3BA,EAAU3D,KAAK,CACXpJ,MAAO,EAAKiG,MAAMiN,aAClBlM,KAAM,EAAKf,MAAMmN,YACjBpG,MAAOe,OAAO,EAAK9H,MAAMqN,gBAE7B,EAAKtN,SAAS,CAAC+G,UAAWA,EAAWgG,KAAK,EAAOG,aAAc,GAAIE,YAAa,GAAIE,aAAc,KACpG,MAAOhM,GACL,EAAK3H,MAAMwK,SAAS7C,KAhMT,EAmMnByK,SAAW,SAAC5I,GACR,IAAI4D,EAAY,EAAK9G,MAAM8G,UAC3BA,EAAS,uBAAO,EAAK9G,MAAM8G,UAAUwG,MAAM,EAAGpK,IAArC,aAAgD,EAAKlD,MAAM8G,UAAUwG,MAAMpK,EAAQ,KAC5F,EAAKnD,SAAS,CAAC+G,UAAWA,IAC1B,EAAKpN,MAAMwK,SAAS,uGAvML,EAyMnBqJ,YAAc,WACN,IAAuB,IAApB,EAAKvN,MAAMwN,KAWV,OAAO,KAVP,EAAKzN,SAAS,CAACyN,MAAM,IACrB/K,IAAOC,KAAK,iCAAkC,CAAC,SAAY,UAAW,IAAO,oBACxExB,MAAK,SAAAyB,GACF,EAAK5C,SAAS,CAACoM,cAAexJ,EAAOA,OAAQ6K,MAAM,OAEtD/L,OAAM,SAAAC,GACH,EAAK3B,SAAS,CAACyN,MAAM,IACrB5P,QAAQC,IAAI6D,OAlNb,EAwNnB+L,YAAc,SAAA9N,GACV,IAAMC,EAASD,EAAMC,OACf8N,EAAW9N,EAAOC,KAClB8N,EAAc/N,EAAOgE,GACvBoI,EAAa,EAAKhM,MAAMgM,WAC5BA,EAAW0B,GAAUpB,OAAOqB,GAAapB,QAAU,EAAKvM,MAAMgM,WAAW0B,GAAUpB,OAAOqB,GAAapB,OACvG,EAAKxM,SAAS,CAACiM,WAAYA,KA9NZ,EAgOnB4B,QAAU,SAAC1K,GAUP,OATgB,EAAKlD,MAAMgM,WAAW9I,GAAOoJ,OAAOjI,QAChD,SAASC,GACL,OAAoB,IAAhBA,EAAKiI,OACEjI,EAAKiI,OAEL,QAIFxJ,QAxOjB,EAAK/C,MAAQ,CACT6N,MAAO,GACPvN,aAAc,GACd0L,WAAY,GACZ8B,aAAa,EACb3B,eAAe,EACfD,cAAc,EACd9F,YAAa,GACbU,UAAW,GACXmG,aAAc,GACdE,YAAa,GACbE,aAAc,GACdG,MAAM,GAEV,EAAK9N,aAAe,EAAKA,aAAaqO,KAAlB,gBAhBL,E,gEAmBf3C,OAAOC,SAAS,EAAE,GAClBlH,KAAK4H,kB,6CAIL5H,KAAKzK,MAAMgS,SAAS,Q,2CAyFHuB,GACjB,YAAqBe,IAAjBf,EACO,CAACJ,QAAQ,EAAOxL,MAAO,gLAE1B4L,EAAapF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,IAG7CkK,EAAapF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,EAF9C,CAAC8J,QAAQ,EAAOxL,MAAO,mKAKnB,CAACwL,QAAQ,K,0CAMZM,GAChB,YAAoBa,IAAhBb,EACO,CAACN,QAAQ,EAAOxL,MAAO,gLAE1B8L,EAAYtF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,KAG5CoK,EAAYtF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,EAF7C,CAAC8J,QAAQ,EAAOxL,MAAO,6JAKnB,CAACwL,QAAQ,K,2CAMXQ,GACjB,YAAqBW,IAAjBX,EACO,CAACR,QAAQ,EAAOxL,MAAO,sLAE1BgM,EAAaxF,QAAQ,+BAA+B,IAAIuE,OAAOrJ,OAAS,GAGpEsK,EAAaxF,QAAQ,+BAA+B,IAAIuE,OAAOrJ,OAAS,EAFrE,CAAC8J,QAAQ,EAAOxL,MAAO,8WAKtByG,OAAOuF,GAAgB,EAChB,CAACR,QAAQ,EAAOxL,MAAO,0NAEvB,CAACwL,QAAQ,K,mCA8ExBlN,GAAQ,IAAD,EACKA,EAAMC,OAArBC,EADU,EACVA,KAAMC,EADI,EACJA,MACXqE,KAAKpE,SAAL,eAAgBF,EAAOC,M,+BAGlB,IAAD,OACJ,OACY,kBAAC,IAAD,KACQ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMiF,KAAK,IAAItE,KAAK,UAChB,kBAAC,IAAD,CACIsE,KAAK,IACLqB,YAAY,gHACZ9D,OAAQ,kBAAC,IAAD,CAAQwC,IAAKX,KAAKzK,MAAMwB,KAAKsG,WAAYuD,KAAM,MAEtDZ,KAAKzK,MAAMwB,KAAK2K,UAAY,IAAM1B,KAAKzK,MAAMwB,KAAK4K,UAEvD,kBAAC,IAAD,CACIC,YAAU,EACVlM,QAASsK,KAAKzK,MAAMuU,WACpBhI,UAAW9B,KAAKzK,MAAM+C,WAAW1C,OAAS,oDAC1C8S,OAAQ1I,KAAKzK,MAAM+C,WAAW1C,MAAQ,QAAU,QAChDwP,OAAQpF,KAAKzK,MAAM+C,WAAW1C,MAAQ,GAAK,iQAL/C,uDAWR,kBAAC,IAAD,CACIwL,WAAS,EACT2I,aACI,kBAAC,IAAD,CACIjK,SAAUE,KAAKoJ,YACfY,QAAShK,KAAKnE,MAAMmM,gBAE5B5C,QAAqC,IAA7BpF,KAAKnE,MAAMmM,eAA2B,2LAPlD,kdAUA,kBAAC,IAAD,CACItM,KAAM,cACN0J,OAAQpF,KAAKnE,MAAMoG,YAAc,GAAK,mMACtCoD,IAAI,kCACJ1J,MAAOqE,KAAKnE,MAAMoG,YAClBnC,SAAUE,KAAKzE,gBAEvB,kBAAC,IAAD,CAAiB8J,IAAI,0GACJD,OAAO,mbACP3F,GAAI,YAEjBO,KAAKnE,MAAMgM,WAAW5H,KAAI,SAAC1J,EAAUgN,GACjC,OACI,kBAAC,IAAD,CAAOjB,IAAK/L,EAAS6F,KACjB,kBAAC,IAAD,CAAMV,KAAMnF,EAAS6F,IACf1G,QAAS,kBAAM,EAAKkG,SAAL,eAAgBrF,EAAS6F,KAAO,EAAKP,MAAMtF,EAAS6F,QACnE0F,UACI,+CAAc,EAAK2H,QAAQlG,GAE/BwG,aAAc,EAAKlO,MAAMtF,EAAS6F,KAAO,kBAAC,KAAD,MAAe,kBAAC,KAAD,OAEzD7F,EAAS8R,OAEb,EAAKxM,MAAMtF,EAAS6F,MACrB,kBAAC,IAAD,KAEQ7F,EAAS4R,OAAOlI,KAAI,SAACgK,EAAalL,EAAOxI,GACrC,OACI,kBAAC,IAAD,CACI+L,IAAKvD,EACLgL,aACI,kBAAC,IAAD,CACArO,KAAM6H,EACN9D,GAAIV,EACJe,SAAU,EAAKwJ,YACfU,QAASC,EAAY7B,UAExB6B,EAAY5B,gBAYjD,kBAAC,IAAD,CAAOzS,MAAO,2DACuB,IAAhCoK,KAAKnE,MAAM8G,UAAU/D,QACtB,kBAAC,IAAD,CAAMwC,WAAS,GAAf,ufAEA,kBAAC,IAAD,KACKpB,KAAKnE,MAAM8G,UAAU1C,KAAI,SAACE,EAAMpB,GAAP,OACtB,kBAAC,IAAD,CAAM6B,KAAK,IAAItE,KAAK,UAChB,kBAAC,IAAD,CACIgG,IAAKnC,EACLiB,WAAS,GAMT,kBAAC,IAAD,CACIa,YAAY,2GAAsB,EAAKpG,MAAM8G,UAAU5D,GAAOnJ,OAClE,kBAAC,IAAD,CAAMqM,YAAY,qJACZb,WAAS,GAAE,EAAKvF,MAAM8G,UAAU5D,GAAOnC,MAC7C,kBAAC,IAAD,CACIqF,YAAY,iJAA8B,EAAKpG,MAAM8G,UAAU5D,GAAO6D,OAC9E,kBAAC,IAAD,CAEIlN,QAAS,WAAO,EAAK4R,gBAAgBvI,IACrC6B,KAAK,KACLtE,KAAK,eAJT,oDAUX0D,KAAKnE,MAAM8M,IACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM1G,YAAY,qJAA6Bb,WAAS,GACpD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMa,YAAajC,KAAKnE,MAAMiN,aAAapF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAO,OACzE,kBAAC,IAAD,CACIsL,SAAO,EACPxB,QAAsE,IAA9D1I,KAAK6I,qBAAqB7I,KAAKnE,MAAMiN,cAAcJ,OAAkB,QAAU,QACvFhN,KAAK,eACL/B,KAAK,OACLgC,MAAOqE,KAAKnE,MAAMiN,aAClBxD,YAAa,8FACbxF,SAAUE,KAAKzE,gBAEvB,kBAAC,IAAD,CAAM0G,YAAajC,KAAKnE,MAAMmN,YAAYtF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAO,QACxE,kBAAC,IAAD,CACIsL,SAAO,EACPxB,OAAQ1I,KAAK+I,oBAAoB/I,KAAKnE,MAAMmN,aAAaN,OAAS,QAAU,QAC5EhN,KAAK,cACLC,MAAOqE,KAAKnE,MAAMmN,YAClB1D,YAAa,8FACbxF,SAAUE,KAAKzE,gBAEvB,kBAAC,IAAD,CAAM0G,YAAajC,KAAKnE,MAAMqN,aAAaxF,QAAQ,+BAA+B,IAAIuE,OAAOrJ,OAAO,MAChG,kBAAC,IAAD,CACIsL,SAAO,EACPxB,OAAQ1I,KAAKiJ,qBAAqBjJ,KAAKnE,MAAMqN,aAAaxF,QAAQ,+BAA+B,KAAKgF,OAAS,QAAU,QACzHhN,KAAK,eACL/B,KAAK,SAASgC,MAAOqE,KAAKnE,MAAMqN,aAAaxF,QAAQ,+BAA+B,IACpF4B,YAAa,sEACbxF,SAAUE,KAAKzE,kBAI/B,kBAAC,IAAD,CAAKmC,MAAO,CAACsH,QAAS,SAClB,kBAAC,IAAD,CAAQpE,KAAK,IAAIuJ,WAAS,EAACzM,MAAO,CAACG,YAAa,GACxCnI,QAAS,kBAAM,EAAKkT,aAD5B,0DAEA,kBAAC,IAAD,CAAQhI,KAAK,IAAIuJ,WAAS,EAAC7N,KAAK,cACxB5G,QAAS,kBAAM,EAAK+S,SAAQ,KADpC,sDAIJ,kBAAC,IAAD,CACI/S,QAAS,kBAAM,EAAK+S,SAAQ,IAC5BtK,OAAQ,kBAAC,KAAD,OAFZ,4GAMR,kBAAC,IAAD,CACIzC,KAAM,OACNC,MAAOqE,KAAKnE,MAAMlC,KAClByL,OAAQpF,KAAKnE,MAAMlC,KAAO,GAAK,8MAC/BmG,SAAUE,KAAKzE,aACf+J,YAAY,uJACZ,4BAAQ3J,MAAM,sEAAd,sEACA,4BAAQA,MAAM,mFAAd,oFAGoB,uEAApBqE,KAAKnE,MAAMlC,MACX,kBAAC,IAAD,CAAiB0L,IAAI,gTACjB,kBAAC,IAAD,CAAO3J,KAAM,QAAS/B,KAAK,OAAOgC,MAAOqE,KAAKnE,MAAM0F,MAAOzB,SAAUE,KAAKzE,gBAGlF,kBAAC,IAAD,CAAUuE,SAAU,kBAAM,EAAKlE,SAAS,CAACmM,cAAe,EAAKlM,MAAMkM,iBAAnE,sDACM,kBAAC,IAAD,CAAMrS,QAASsK,KAAKzK,MAAM6U,WAA1B,uMACN,kBAAC,IAAD,CAAQxJ,KAAK,KAAKlL,QAASsK,KAAK8H,WAAhC,6K,GApaPjF,IAAMC,WAwbZnM,gBAdS,SAACkF,GACrB,MAAO,CACHvD,WAAYuD,EAAMvD,WAClBvB,KAAM8E,EAAM9E,KACZc,OAAQgE,EAAMhE,WAII,SAACkL,GACvB,MAAO,CACH7I,iBAAkB8I,YAAmB9I,EAAkB6I,MAIhDpM,CAA4C0Q,I,gFCzcrDgD,G,kDACF,WAAY9U,GAAQ,IAAD,8BACf,cAAMA,IAgBV+U,gBAAkB,WACd,IAA4C,IAAxC,EAAK/U,MAAMuB,OAAOM,WAAWsR,OAC7B,OAAI,EAAKnT,MAAMuB,OAAOM,WAAWmT,QAAQ3L,OAAS,EAE1C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMgC,KAAK,MACP,kBAAC,IAAD,CAAMqB,YAAa,oIAAnB,gLAEI,EAAK1M,MAAMuB,OAAOM,WAAWmT,QAAQtK,KAAI,SAACuK,EAAQzL,GAC9C,OAAO,kBAAC,IAAD,CAAMuD,IAAKvD,GAAQyL,QAQ1C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM5J,KAAK,MACP,kBAAC,IAAD,CAAMQ,WAAS,GAAf,wVApCL,EA+DnBqJ,YAAc,WACVnM,IAAOC,KAAK,yBAA0B,IAAIxB,MAAK,SAAAhB,GAAI,OAAEtC,QAAQC,IAAIqC,OA9DjE,EAAKF,MAAQ,CACT6O,YAAY,EACZC,QAAS,GACTC,UAAU,EACVC,QAAQ,EACRC,QAAS,GACTC,WAAY,GACZpM,UAAW,GATA,E,oGA4CY,IAAtByB,EAAqB,uDAAf,GAAIrE,EAAW,uDAAJ,GAEtB,OAAOG,MAAMkE,EAAK,CACd/D,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAA8D,GAAQ,OAAIpH,QAAQC,IAAImH,EAAS5D,a,+BAQtC,IAAD,OACJ,OACI,kBAAC,IAAMgE,SAAP,KACI,kBAAC,IAAD,CAAOC,UAAW,QACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMN,KAAK,KACP,kBAAC,IAAD,CACIO,UAAQ,EACRC,WAAS,EACTjD,OAAQ,kBAAC,IAAD,CAAQwC,IAAKX,KAAKzK,MAAMwB,KAAKsG,WAAYuD,KAAM,KACvDJ,KAAMR,KAAKzK,MAAMuB,OAASkJ,KAAKzK,MAAMuB,OAAO6C,KAAO,2EACnDgG,QAASK,KAAKzK,MAAMuB,QAAUkJ,KAAKzK,MAAMuB,OAAOwR,SAASvB,KAAKnR,MAC9D8K,MAA6B,OAAtBV,KAAKzK,MAAMuB,QAAmB,kBAAC,KAAD,CAAapB,QAASsK,KAAKzK,MAAMyV,eAErEhL,KAAKzK,MAAMwB,KAAK2K,UAAU,IAAI1B,KAAKzK,MAAMwB,KAAK4K,aAKxC,OAAtB3B,KAAKzK,MAAMuB,QAAmBkJ,KAAKsK,kBAChC,kBAAC,IAAD,CAAO1U,MAAM,mDAAWsL,UAAW,QAC/B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIU,YAAU,EACVzD,OAAQ,kBAAC,KAAD,MACRzI,QAASsK,KAAKzK,MAAM0V,eAHxB,4DAcmB,IAA3BjL,KAAKzK,MAAMkI,YACP,kBAAC,IAAD,CACIiC,OAAO,sEACPmG,UAAU,wcACVC,QAAS,kBAAC,IAAD,CAAQpQ,QAAS,kBAAI,EAAK+U,gBAA1B,sDAEb,KAEe,OAAtBzK,KAAKzK,MAAMuB,QACR,kBAAC,IAAD,CAAOlB,MAAM,uEACb,kBAAC,IAAD,CAAW8H,MAAO,CAAE2E,OAAQ,YAC5B,kBAAC,IAAD,KAaA,kBAAC,IAAD,CACIT,YAAU,EACVzD,OAAQ,kBAAC,KAAD,MACRzI,QAASsK,KAAKzK,MAAM2V,iBAHxB,0DAKI,kBAAC,IAAD,CACItJ,YAAU,EACVzD,OAAQ,kBAAC,KAAD,MACRzI,QAASsK,KAAKzK,MAAM4V,eAHxB,8E,GArIPtI,IAAMC,WA+JRnM,gBAbS,SAACkF,GACrB,MAAO,CACH9E,KAAM8E,EAAM9E,KACZD,OAAQ+E,EAAM/E,WAII,SAACiM,GACvB,MAAO,KAKIpM,CAA4C0T,I,4DCnJrDe,G,kDACF,WAAY7V,GAAQ,IAAD,8BACf,cAAMA,IA8BV+B,YAAc,WACV,IACI,QAA6BuS,IAAzB,EAAKhO,MAAMwP,UAAyB,KAAM,mOAC9C,QAAyBxB,IAArB,EAAKhO,MAAMyP,MAAqB,KAAM,yMAC1C,EAAK1P,SAAS,CAAC2P,SAAS,IACxB,IAAMC,EAAW,IAAIC,SACjBC,EAAeC,SAASC,eAAe,SAASC,MAAM,GAC1DL,EAASM,OAAO,SAAU,EAAKvW,MAAMuB,OAAO4K,UAAU,IAAI,EAAKnM,MAAMuB,OAAO6K,UAC5E6J,EAASM,OAAO,YAAa,EAAKjQ,MAAMwP,WACxCG,EAASM,OAAO,QAAS,EAAKjQ,MAAMyP,OACpCE,EAASM,OAAO,QAASJ,GACzBF,EAASM,OAAO,WAAY,EAAKvW,MAAMuB,OAAOsF,KAC9CF,MAAMnG,EAAQsB,MAAMC,YAAa,CAC7B+E,OAAQ,OACRO,KAAM4O,IAELzO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACEA,EAAIE,OACJ,EAAKtB,SAAS,CAAC2P,SAAS,IACxB,EAAKQ,UAAU/O,EAAIE,QAEnB8O,KAAWhP,EAAIiP,QAAS,CACpB3P,KAAM,UACND,OAAQ,QAEPU,MAAK,SAAAyB,GAAM,OAAIA,EAAOvB,UACtBF,MAAK,SAAAyB,GACF,IAAM0N,EAAS,CACX9L,IAAK5B,EAAOqC,SAAS,GAAGsL,MAAM,GAAG/L,IACjCvI,OAAQ,EAAKtC,MAAMsC,QAEvBqE,MAAMnG,EAAQsB,MAAME,UAAW,CAC3B8E,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUoP,KAEpBnP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,GAAIA,EAAIE,MACJ,EAAKtB,SAAS,CAAC2P,SAAS,IACxB,EAAKQ,UAAU/O,EAAIE,WAChB,CACH,IAAIkP,EAAS,EAAKvQ,MAAMyE,OACxB8L,EAAOpN,KAAKhC,EAAIqP,KAChB,EAAKN,UAAU,+HACf,EAAKnQ,SAAS,CAAC0E,OAAQ8L,EAAQb,SAAS,QAG/CjO,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,SAE7BD,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,SAQjCD,OAAM,SAAAJ,GACH,EAAKtB,SAAS,CAAC2P,SAAS,IACxB,EAAKQ,UAAU7O,MAEzB,MAAMK,GACJ,EAAKwO,UAAUxO,KAtGJ,EA0GnB+O,gBAAkB,SAAChB,GACfhN,IAAOC,KAAK,wBAAyB,CACjC,OAAU,yBACV,OAAU,CAAC,SAAY,YAAY,SAAY,YAAa,EAAI,QAAS,aAAgB+M,KACxFvO,MAAK,SAAAyB,GACF,EAAK5C,SAAS,CAACyP,UAAW7M,EAAOqC,SAAS0L,WAAYjB,MAAOA,OAEhEhO,OAAM,SAAAC,GAAC,OAAI9D,QAAQC,IAAI6D,OAjHb,EAoHnBiP,SAAW,WACPlO,IAAOC,KAAK,uBAAwB,CAAC,OAAU,QAAS,MAAS,WAC5DxB,MAAK,SAAAyB,GACEA,EAAOiO,eACP,EAAK7Q,SAAS,CAAC0P,MAAO9M,EAAOiO,eAC7B,EAAKH,gBAAgB9N,EAAOiO,kBAQnCnP,OAAM,SAAAJ,GAAK,OAAIzD,QAAQC,IAAIwD,OA/HhC,EAAKrB,MAAQ,CACTM,aAAc,GACduQ,SAAU,GACV7N,QAAQ,EACR8N,UAAW,GACXrM,OAAQ,IAPG,E,gEAWfN,KAAKwM,WACLxM,KAAKpE,SAAS,CAAC0E,OAAQN,KAAKzK,MAAMuB,OAAOoL,OAAQrD,QAAQ,M,gCAElD2B,GAAO,IAAD,OACTR,KAAKnE,MAAMkE,UACfC,KAAKpE,SAAS,CAAEmE,SACR,kBAAC,IAAD,CACIU,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAAEmE,SAAU,SAExCS,O,qCAIFF,EAAQvB,GACnBT,IAAOC,KAAK,qBAAsB,CAC9B+B,OAAQA,EACRC,YAAaxB,IACdhC,MAAK,SAAAhB,GAAI,OAAItC,QAAQC,IAAIqC,Q,kCAsGnB,IAAD,OACR,OAAIiE,KAAKnE,MAAMyE,OAAO1B,OAAS,EAEvB,kBAAC,IAAD,KAEQoB,KAAKnE,MAAMyE,OAAOL,KAAI,SAACiD,EAAOnE,GAC1B,OACI,kBAAC,IAAD,CACIrB,MAAO,CAACE,QAAS,EAAGwE,aAAc,GAAIC,OAAQ,GAC9CzB,KAAK,IACLtE,KAAK,SACLgG,IAAKvD,EACLrJ,QAAS,kBAAM,EAAK6M,eAAe,EAAK1G,MAAMyE,OAAQvB,KAEtD,yBAAKrB,MAAO,CAACM,OAAQ,GAAIwE,gBAAiB,OAAOU,EAAM,IAAKT,eAAgB,QAASL,aAAc,WAQnH,kBAAC,IAAD,uL,+BAIP,IAAD,OACJ,OAAuB,IAApBpC,KAAKnE,MAAMgD,OAEN,kBAAC,IAAD,CAAS+B,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,MAI1C,kBAAC,IAAD,KAEQf,KAAKnE,MAAM0P,QAAU,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAMnK,WAAS,GAAf,wOAAkE,kBAAC,IAAD,OAAwB,kBAAC,IAAD,CAAOxL,MAAM,IAC7H,kBAAC,IAAD,KAEQoK,KAAKnE,MAAMyP,MACP,kBAAC,IAAD,CACIsB,OAAO,UACPvH,IAAI,0IACJlH,OAAQ,kBAAC,KAAD,MACRyC,KAAK,IACLd,SAAUE,KAAK1I,YAEfmI,GAAG,SAPP,yFAWA,kBAAC,IAAD,CAAY/J,QAAS,kBAAI,EAAK8W,YAAYrO,OAAQ,kBAAC,KAAD,OAAlD,gIAIZ,kBAAC,IAAD,CAAO+C,UAAU,QACZlB,KAAKmD,cAIjBnD,KAAKnE,MAAMkE,c,GA/LR8C,IAAMC,WAoNfnM,gBAdS,SAACkF,GACrB,MAAO,CACH9E,KAAM8E,EAAM9E,KACZD,OAAQ+E,EAAM/E,OACde,OAAQgE,EAAMhE,WAII,SAACkL,GACvB,MAAO,KAKIpM,CAA4CyU,I,oBCnOrDyB,G,kDAEF,WAAYtX,GAAQ,IAAD,8BACf,cAAMA,IACDsG,MAAQ,CACTiR,OAAQ,GACRhG,OAAQ,CAAC,CAACrH,GAAG,EAAG7J,MAAO,UAE3B,EAAKkK,SAAW,EAAKA,SAAS8J,KAAd,gBAND,E,gEAcf5J,KAAKvI,c,kCAGI,IAAD,OACFsE,EAAO,CACT+Q,OAAQ9M,KAAKnE,MAAMiR,OAAOC,cAC1BC,WAAY,GAEhB9Q,MAAMnG,EAAQsB,MAAMI,UAAU,CAC1B4E,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACEA,EAAIE,MACJzD,QAAQC,IAAIsD,EAAIE,OAEhB,EAAKtB,SAAS,CAACkL,OAAQ9J,EAAIiQ,SAAUpO,QAAQ,OAGpDvB,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,Q,+BAGrBA,GACLyC,KAAKpE,SAAS,CAACkR,OAAQvP,EAAE9B,OAAOE,QAChCqE,KAAKvI,c,+BAGC,IAAD,OACL,OACI,kBAAC,IAAMwJ,SAAP,KACI,kBAAC,IAAD,CAAQtF,MAAOqE,KAAKnE,MAAMiR,OAAQhN,SAAUE,KAAKF,SAAUY,MAAO,OACjEV,KAAKnE,MAAMiL,OAAOlI,OAAS,GAC5B,kBAAC,IAAD,KACKoB,KAAKnE,MAAMiL,OAAO7G,KAAI,SAAA8G,GAAI,OACvB,kBAAC,IAAD,CACI9E,YAAa8E,EAAKmG,QAAU,GAC5BxX,QAAS,kBAAI,EAAKH,MAAM2E,iBAAiB6M,IACzCzE,IAAKyE,EAAKtH,IAETsH,EAAKnR,gB,GAjENiN,IAAMC,W,IA0EnBqK,YAAsBN,I,kBChD/BO,IAFSC,c,kDAGX,WAAY9X,GAAQ,IAAD,8BACf,cAAMA,IAuDV+X,YAAc,WACV,IACI,GAAI,EAAKzR,MAAM/E,OAAOmL,YAAYyB,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,GAAI,KAAM,6OAChF,GAAI,EAAK/C,MAAM/E,OAAOmL,YAAYyB,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,IAAK,KAAM,2PACjF,GAAI,EAAK/C,MAAM/E,OAAO6L,UAAU/D,OAAS,EAAG,KAAM,yYAChD,IAA4B,IAAxB,EAAK/C,MAAMoD,SAAkB,CAC7B,IAAMnI,EAAS,EAAK+E,MAAM/E,OAC1BA,EAAOe,OAAS,EAAKtC,MAAMsC,OAC3B,EAAK0V,UAAUxX,EAAQK,QAAQC,IAAM,EAAKwF,MAAM/E,OAAOsF,IAAKtF,GAC5D,EAAKvB,MAAMiE,UAAU,EAAKqC,MAAM/E,SAEzC,MAAMyG,GACH,EAAKhI,MAAMwK,SAASxC,KApET,EAsFnB+J,gBAAkB,SAACvI,GACf,EAAKnD,SAAS,CAACqD,UAAU,IACzB,EAAK1J,MAAMgS,SACC,kBAAC,IAAD,CACIC,cAAc,WACd1B,QAAS,CAAC,CACNlQ,MAAO,oGACP6R,WAAW,EACXnL,KAAM,cACNoL,OAAQ,kBAAM,EAAKC,SAAS5I,KAC7B,CACCnJ,MAAO,uCACP6R,WAAW,EACXnL,KAAM,WAEVkD,QAAS,kBAAI,EAAKjK,MAAMgS,SAAS,QAEjC,mJACA,4SAxGD,EA6GnBhM,aAAe,SAACC,GACZ,EAAKI,SAAL,eAAgBJ,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,QACjD,EAAKC,SAAS,CAACqD,UAAU,KA/GV,EA2JnB+B,QAAU,SAAAxF,GACN,IACME,EADSF,EAAMC,OACDC,KAChB5E,EAAS,EAAK+E,MAAM/E,OACxBA,EAAO4E,IAAS5E,EAAO4E,GACvB,EAAKE,SAAS,CAAC9E,OAAQA,IACvB,EAAK8E,SAAS,CAACqD,UAAU,KAjKV,EAmKnB0I,SAAW,SAAC5I,GACR,IAAIjI,EAAS,EAAK+E,MAAM/E,OACxBA,EAAO6L,UAAP,uBAAuB,EAAK9G,MAAM/E,OAAO6L,UAAUwG,MAAM,EAAGpK,IAA5D,aAAuE,EAAKlD,MAAM/E,OAAO6L,UAAUwG,MAAMpK,EAAQ,KACjH,EAAKnD,SAAS,CAAC9E,OAAQA,IACvB,EAAK8E,SAAS,CAACqD,UAAU,KAvKV,EA0KnBwJ,QAAU,SAACC,GACP,EAAK9M,SAAS,CAAC+M,IAAKD,KA3KL,EA4PnBE,SAAW,WACP,IACI,IAAIhT,EAAQ,EAAKiT,qBAAqB,EAAKhN,MAAMiN,cACjD,IAAKlT,EAAM8S,OAAQ,MAAM9S,EAAMsH,MAE/B,IAAIN,EAAO,EAAKmM,oBAAoB,EAAKlN,MAAMmN,aAC/C,IAAKpM,EAAK8L,OAAQ,MAAM9L,EAAKM,MAE7B,IAAI0F,EAAQ,EAAKqG,qBAAqB,EAAKpN,MAAMqN,cACjD,IAAKtG,EAAM8F,OAAQ,MAAM9F,EAAM1F,MAQ/B,IAAIpG,EAAS,EAAK+E,MAAM/E,OACxBA,EAAO6L,UAAU3D,KAAK,CAClBpJ,MAAO,EAAKiG,MAAMiN,aAClBlM,KAAM,EAAKf,MAAMmN,YACjBpG,MAAOe,OAAO,EAAK9H,MAAMqN,gBAE7B,EAAKtN,SAAS,CAAC9E,OAAQA,EAAQ6R,KAAK,EAAOG,aAAc,GAAIE,YAAa,GAAIE,aAAc,KAC5F,EAAK6C,UAAU,kHACf,EAAKnQ,SAAS,CAACqD,UAAU,IAC3B,MAAO/B,GACL,EAAKsQ,iBAAiBtQ,KAvRX,EA6SnBuM,QAAU,SAAC1K,GAmBP,OAbgB,EAAKlD,MAAMgM,WAAW9I,GAAOoJ,OAAOjI,QAAO,SAAAiI,GACvD,IAAsB,IAAlBA,EAAOC,OACP,OAAOD,EAAOE,SAWLzJ,QAhUF,EAkUnB6O,SAAW,WACP,OAAwC,IAApC,EAAK5R,MAAM/E,OAAO4W,OAAOhF,OAErB,kBAAC,IAAD,CAAMtH,WAAS,GAAf,oyBAIA,kBAAC,IAAD,CACI2I,aAAc,kBAAC,IAAD,CACVrO,KAAM,UACNoE,SAAU,EAAKkB,QACfgJ,QAAS,EAAKnO,MAAM/E,OAAOkK,WAJnC,wJAzUO,EAoVnBsI,YAAc,SAAA9N,GACV,IAAMC,EAASD,EAAMC,OACf8N,EAAW9N,EAAOC,KAClB8N,EAAc/N,EAAOgE,GACvBoI,EAAa,EAAKhM,MAAMgM,WAC5BA,EAAW0B,GAAUpB,OAAOqB,GAAapB,QAAU,EAAKvM,MAAMgM,WAAW0B,GAAUpB,OAAOqB,GAAapB,OACvG,EAAKxM,SAAS,CAACiM,WAAYA,KA1VZ,EA6VnBiC,WAAa,SAAC/C,GACV,IAAIjQ,EAAS,EAAK+E,MAAM/E,OACxBA,EAAOwR,SAASvB,KAAOA,EACvB,EAAKxR,MAAMiE,UAAU1C,GACrB,EAAKvB,MAAMI,SACX,EAAKiG,SAAS,CAACqD,UAAU,KAlWV,EAsWnB0O,cAAgB,WACZ,OAA4C,IAAxC,EAAK9R,MAAM/E,OAAOM,WAAWsR,OACtB,uEAC8B,IAA9B,EAAK7M,MAAM/E,OAAOkK,QAClB,gLAEA,8JA1WX,EAAKnF,MAAQ,CACT+R,MAAO,WACPC,SAAS,EACTC,OAAQ,KACRtX,MAAO,GACPkT,MAAO,CACHqE,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EACjBC,eAAgB,EAChBC,gBAAiB,EACjBC,WAAY,EACZC,eAAgB,GAEpB9X,SAAU,GACVsI,QAAQ,EACR+L,UAAU,EACV7K,SAAU,KACV+I,aAAc,GACdE,YAAa,GACbE,aAAc,GACdjK,UAAU,GAvBC,E,gEA2BE,IAAD,QACgB,IAA7Be,KAAKzK,MAAMwB,KAAK6T,WACf5K,KAAKpE,SAAS,CAAC9E,OAAQkJ,KAAKzK,MAAMuB,OAAQmL,YAAajC,KAAKzK,MAAMuB,OAAOmL,cACzE/F,MAAMnG,EAAQQ,SAASoB,QAClBoF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA8K,GACF,EAAKjM,SAAS,CAACiM,WAAYA,IAC3BA,EAAW5H,KAAI,SAAA1J,GACX,EAAKqF,SAAL,eAAgBrF,EAAS6F,KAAM,OAEnC,EAAKkS,UAAW,EAAK/Y,MAAMuB,OAAO+Q,WAAWM,WAEjDnI,KAAKzK,MAAMuB,OAAOyX,SAAQvO,KAAKpE,SAAS,CAACqD,UAAU,O,6CAK3De,KAAKzK,MAAMgS,SAAS,MACpBvH,KAAKsN,gB,gCA2BCnF,GAAQ,IAAD,OACTqG,MAAMC,QAAQtG,KACdnI,KAAKnE,MAAMgM,WAAW5H,KAAI,SAAA1J,GACtB,EAAKqF,SAAL,eAAgBrF,EAAS6F,KAAM,IAC/B7F,EAAS4R,OAAOlI,KAAI,SAAAkI,GACZ,EAAKtM,MAAM/E,OAAO+Q,WAAWM,OAAOzJ,SAASyJ,EAAO/L,OACpD+L,EAAOC,QAAS,SAI5BpI,KAAKpE,SAAS,CAACiD,QAAQ,O,kCAgCS,IAAD,OAA7BuB,EAA6B,uDAAvB,GAAIjE,EAAmB,uDAAJ,GAqB/B,OApBA6D,KAAKnE,MAAMgM,WAAW5H,KAAI,SAAA1J,GACtB,IAAImT,EAAQnT,EAAS4R,OAAOjI,QAAO,SAAAiI,GAAM,OAAsB,IAAlBA,EAAOC,UAAiBxJ,OACrErI,EAAS6R,OAASsB,EAAQ,KAE9BvN,EAAa8F,YAAcjC,KAAKnE,MAAMoG,YACtC9F,EAAa0L,WAAa,CACtBM,OAAQ,GACR5R,SAAU,IAEVyJ,KAAKnE,MAAMgM,WAAW5H,KAAI,SAAA1J,IACE,IAApBA,EAAS6R,QACTjM,EAAa0L,WAAWtR,SAASyI,KAAK,CAACS,GAAIlJ,EAAS6F,IAAKiM,MAAO9R,EAAS8R,QAE7E9R,EAAS4R,OAAOlI,KAAI,SAAAkI,IACM,IAAlBA,EAAOC,QACPjM,EAAa0L,WAAWM,OAAOnJ,KAAKmJ,EAAO/L,WAKpDF,MAAMkE,EAAK,CACd/D,OAAQ,QACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKzH,MAAMwK,SAAS,qHAEvBzC,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,EAAEpH,c,uCAsBfqK,GAAO,IAAD,OACfR,KAAKnE,MAAMkE,UAAUC,KAAKpE,SAAS,CAACmE,SAAU,OAClDC,KAAKpE,SAAS,CACVmE,SACI,kBAAC,IAAD,CACI5B,OAAQ,kBAAC,KAAD,MACRsC,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAACmE,SAAU,SAEvCS,O,gCAIPA,GAAO,IAAD,OACRR,KAAKnE,MAAMkE,UAAUC,KAAKpE,SAAS,CAACmE,SAAU,OAClDC,KAAKpE,SAAS,CACVmE,SACI,kBAAC,IAAD,CACIU,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAACmE,SAAU,SAEvCS,O,2CAKIsI,GACjB,YAAqBe,IAAjBf,EACO,CAACJ,QAAQ,EAAOxL,MAAO,gLAE1B4L,EAAapF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,IAG7CkK,EAAapF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,EAF9C,CAAC8J,QAAQ,EAAOxL,MAAO,mKAKnB,CAACwL,QAAQ,K,0CAMZM,GAChB,YAAoBa,IAAhBb,EACO,CAACN,QAAQ,EAAOxL,MAAO,gLAE1B8L,EAAYtF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,KAG5CoK,EAAYtF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,EAF7C,CAAC8J,QAAQ,EAAOxL,MAAO,6JAKnB,CAACwL,QAAQ,K,2CAMXQ,GACjB,YAAqBW,IAAjBX,EACO,CAACR,QAAQ,EAAOxL,MAAO,sLAE1BgM,EAAaxF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,GAG7CsK,EAAaxF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,EAF9C,CAAC8J,QAAQ,EAAOxL,MAAO,8WAKtByG,OAAOuF,GAAgB,EAChB,CAACR,QAAQ,EAAOxL,MAAO,0NAEvB,CAACwL,QAAQ,K,+BA2H1B,IAAD,OACL,OAAyB,IAAtB1I,KAAKnE,MAAMgD,SAGmB,IAA7BmB,KAAKzK,MAAMwB,KAAK6T,SAFT,KAMC,kBAAC,IAAD,KACY,kBAAC,IAAD,CACIhK,KAAK,IACLqB,YAAajC,KAAK2N,gBAClBxP,OAAQ,kBAAC,IAAD,CAAQwC,IAAKX,KAAKnE,MAAM/E,OAAOuG,WAAYuD,KAAM,MAExDZ,KAAKnE,MAAM/E,OAAO4K,UAAY,IAAM1B,KAAKnE,MAAM/E,OAAO6K,UAE3D,kBAAC,IAAD,CACIC,YAAU,EACVlM,QAAS,WAAO,EAAKH,MAAMuU,cAC3BhI,UAAW9B,KAAKnE,MAAM/E,OAAOwR,SAASvB,cAAgB2H,OAAS,0DAAe1O,KAAKnE,MAAM/E,OAAOwR,SAASvB,KAAKnR,OAHlH,qDAOA,kBAAC,IAAD,KACKoK,KAAKyN,YAEV,kBAAC,IAAD,CAAO7X,MAAO,2DAC8B,IAAvCoK,KAAKnE,MAAM/E,OAAO6L,UAAU/D,QAC7B,kBAAC,IAAD,CAAMwC,WAAS,GAAf,ufAEA,kBAAC,IAAD,KACKpB,KAAKnE,MAAM/E,OAAO6L,UAAU1C,KAAI,SAACE,EAAMpB,GAAP,OAC7B,kBAAC,IAAD,CAAM6B,KAAK,IAAItE,KAAK,SAASgG,IAAKvD,GAC9B,kBAAC,IAAD,CACIqC,WAAS,GAOT,kBAAC,IAAD,CACIa,YAAY,2GAAsB,EAAKpG,MAAM/E,OAAO6L,UAAU5D,GAAOnJ,OACzE,kBAAC,IAAD,CAAMqM,YAAY,qJACZb,WAAS,GAAE,EAAKvF,MAAM/E,OAAO6L,UAAU5D,GAAOnC,MACpD,kBAAC,IAAD,CACIqF,YAAY,iJAA8B,EAAKpG,MAAM/E,OAAO6L,UAAU5D,GAAO6D,OACjF,kBAAC,IAAD,CAEIlN,QAAS,kBAAM,EAAK4R,gBAAgBvI,IACpC6B,KAAK,KACLtE,KAAK,eAJT,oDAUf0D,KAAKnE,MAAM8M,IACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM1G,YAAY,qJAA6Bb,WAAS,GACpD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMa,YAAajC,KAAKnE,MAAMiN,aAAapF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAO,OACzE,kBAAC,IAAD,CACIsL,SAAO,EACPxB,QAAsE,IAA9D1I,KAAK6I,qBAAqB7I,KAAKnE,MAAMiN,cAAcJ,OAAkB,QAAU,QACvFhN,KAAK,eACL/B,KAAK,OACLgC,MAAOqE,KAAKnE,MAAMiN,aAClBxD,YAAa,8FACbxF,SAAUE,KAAKzE,gBAEvB,kBAAC,IAAD,CAAM0G,YAAajC,KAAKnE,MAAMmN,YAAYtF,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAO,QACxE,kBAAC,IAAD,CACIsL,SAAO,EACPxB,OAAQ1I,KAAK+I,oBAAoB/I,KAAKnE,MAAMmN,aAAaN,OAAS,QAAU,QAC5EhN,KAAK,cACLC,MAAOqE,KAAKnE,MAAMmN,YAClB1D,YAAa,8FACbxF,SAAUE,KAAKzE,gBAEvB,kBAAC,IAAD,CAAM0G,YAAajC,KAAKnE,MAAMqN,aAAaxF,QAAQ,+BAA+B,IAAIuE,OAAOrJ,OAAO,MAChG,kBAAC,IAAD,CACIsL,SAAO,EACPxB,OAAQ1I,KAAKiJ,qBAAqBjJ,KAAKnE,MAAMqN,aAAaxF,QAAQ,+BAA+B,KAAKgF,OAAS,QAAU,QACzHhN,KAAK,eACL/B,KAAK,SAASgC,MAAOqE,KAAKnE,MAAMqN,aAAaxF,QAAQ,+BAA+B,IACpF4B,YAAa,sEACbxF,SAAUE,KAAKzE,kBAI/B,kBAAC,IAAD,CAAKmC,MAAO,CAACsH,QAAS,SAClB,kBAAC,IAAD,CAAQpE,KAAK,IAAIuJ,WAAS,EAACzM,MAAO,CAACG,YAAa,GACxCnI,QAAS,kBAAM,EAAKkT,aAD5B,0DAEA,kBAAC,IAAD,CAAQhI,KAAK,IAAIuJ,WAAS,EAAC7N,KAAK,cACxB5G,QAAS,kBAAM,EAAK+S,SAAQ,KADpC,sDAIJ,kBAAC,IAAD,CACA/S,QAAS,kBAAM,EAAK+S,SAAQ,IAC5BtK,OAAQ,kBAAC,KAAD,OAFR,4GAYR,kBAAC,IAAD,KACQ,kBAAC,IAAD,CACIzC,KAAM,cACNgN,OAAQ1I,KAAKnE,MAAMoG,YAAc,QAAU,QAC3CmD,OAAQpF,KAAKnE,MAAMoG,YAAc,GAAK,mMACtCoD,IAAI,kCACJ1J,MAAOqE,KAAKnE,MAAMoG,YAClBnC,SAAUE,KAAKzE,eACvB,kBAAC,IAAD,CAAiB8J,IAAI,0GACJD,OAAO,mbACP3F,GAAI,YAEbO,KAAKnE,MAAMgM,WAAW5H,KAAI,SAAC1J,EAAUgN,GACjC,OACI,kBAAC,IAAD,CAAOjB,IAAK/L,EAAS6F,KACjB,kBAAC,IAAD,CAAMwF,YAAU,EAAClG,KAAMnF,EAAS6F,IAC1B1G,QAAS,kBAAM,EAAKkG,SAAL,eAAgBrF,EAAS6F,KAAO,EAAKP,MAAMtF,EAAS6F,QACnE0F,UACI,+CAAc,EAAK2H,QAAQlG,IAEhChN,EAAS8R,OAEb,EAAKxM,MAAMtF,EAAS6F,MACrB,kBAAC,IAAD,KAEQ7F,EAAS4R,OAAOlI,KAAI,SAACgK,EAAalL,EAAOxI,GACrC,OACI,kBAAC,IAAD,CACI+L,IAAKvD,EACLgL,aACI,kBAAC,IAAD,CACIrO,KAAM6H,EACN9D,GAAIV,EACJe,SAAU,SAACtE,GAAS,EAAKI,SAAS,CAACqD,UAAU,IAAQ,EAAKqK,YAAY9N,IACtEwO,QAASC,EAAY7B,UAE5B6B,EAAY5B,iBAahErI,KAAKnE,MAAMkE,c,GAhhBd8C,IAAMC,YAwiBbnM,gBAfS,SAACkF,GACrB,MAAO,CACHvD,WAAYuD,EAAMvD,WAClBvB,KAAM8E,EAAM9E,KACZD,OAAQ+E,EAAM/E,OACde,OAAQgE,EAAMhE,WAII,SAACkL,GACvB,MAAO,CACHvJ,UAAWwJ,YAAmBxJ,EAAWuJ,MAIlCpM,CAA4CwW,YAAsBC,K,wCC9clEuB,G,kDA/GX,WAAYpZ,GAAQ,IAAD,8BACf,cAAMA,IAYVqZ,gBAAkB,SAAChY,GAEf,IAAIiN,EAAM,CAACA,IAAKjN,GAChBsF,MAAMnG,EAAQK,QAAQM,UAAW,CAC7B2F,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU+G,KAEpB9G,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgO,GACF,EAAKnP,SAAS,CAACmP,WAAYA,EAAY8D,UAAU,OAEpDvR,OAAM,SAAAwR,GACHrV,QAAQC,IAAIoV,GACZ,EAAKlT,SAAS,CAACiT,UAAU,QAjCjC,EAAKhT,MAAQ,CACTiP,QAAS,GACTC,WAAY,GACZ8D,UAAU,GALC,E,gEAUf7O,KAAK4O,gBAAgB5O,KAAKzK,MAAMwB,KAAKH,Q,+BA6B/B,IAAD,OACL,OAA4B,IAAxBoJ,KAAKnE,MAAMgT,SAEP,kBAAC,IAAM5N,SAAP,KACI,kBAAC,EAAD,CACIrL,MAAM,yDACND,OAAQ,kBAAI,EAAKJ,MAAMI,YAE/B,kBAAC,IAAD,CACIwU,WAAS,EACTrJ,KAAM,kBAAC,IAAD,CAASF,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,MAChDrB,OAAQ,0DAKbM,KAAKnE,MAAMkP,WAAW7N,MAEjB,kBAAC,IAAM+D,SAAP,KACI,kBAAC,EAAD,CACIrL,MAAM,yDACND,OAAQ,kBAAI,EAAKJ,MAAMI,YAE3B,kBAAC,IAAD,CACIwU,WAAS,EACTrJ,KAAM,kBAAC,KAAD,MACNpB,OAAQM,KAAKnE,MAAMkP,WAAW5U,SAHlC,kcAUJ,kBAAC,IAAM8K,SAAP,KACI,kBAAC,EAAD,CACIrL,MAAM,yDACND,OAAQ,kBAAI,EAAKJ,MAAMI,YAE3B,kBAAC,IAAD,CAAOuL,UAAU,QAETlB,KAAKnE,MAAMkP,WAAW9K,KAAI,SAAAnJ,GACtB,GAAgB,OAAXA,EACD,OACI,kBAAC,IAAMmK,SAAP,KACI,kBAAC,IAAD,CAAUqB,IAAKxL,EAAO2K,OAClB,kBAAC,IAAD,CAAMb,KAAK,IAAItE,KAAK,UAChB,kBAAC,IAAD,CACIgG,IAAKxL,EAAOsF,IACZ+B,OAAQ,kBAAC,IAAD,CAAQyC,KAAM,GAAID,IAAK7J,EAAOuG,aACtCmD,KAAM1J,EAAO6C,KACbgG,QAAS7I,EAAOwR,SAASvB,KAAKnR,MAC9B8K,MAAO,kBAAC,KAAD,MACPhL,QAAS,kBAAM,EAAKH,MAAMwZ,kBAAkBjY,KAE3CA,EAAO4K,UARZ,IAQwB5K,EAAO6K,gBAS/D,kBAAC,IAAD,oJAAuC3B,KAAKnE,MAAMkP,WAAWnM,OAA7D,W,GAvGAiE,IAAMC,W,oBCPf,SAASkM,GAASzZ,GAC7B,OACI,kBAAC,IAAD,CAAU+M,IAAK/M,EAAM+M,KACjB,kBAAC,IAAD,CAAM1B,KAAK,KACP,kBAAC,IAAD,CACIO,UAAQ,EAERhD,OAAQ,kBAAC,IAAD,CAAQyC,KAAM,GAAID,IAAKpL,EAAM0Z,KAAK5R,aAC1CsC,QAASpK,EAAM8O,KACfe,OAAQ,kBAAC,IAAD,KAAU7P,EAAM0Z,KAAKC,MAC7BpJ,QACI,kBAAC,IAAM7E,SAAP,KACI,kBAAC,IAAD,CAAQ3E,KAAK,UAAU5G,QAAS,kBAAIH,EAAM4Z,eAAe5Z,EAAM0Z,KAAKG,YAApE,8GAIP7Z,EAAM0Z,KAAKvN,UAZhB,IAY4BnM,EAAM0Z,KAAKtN,UAEvC,kBAAC,IAAD,CAAMP,WAAS,GACV7L,EAAM0Z,KAAKrS,MAEhB,kBAAC,IAAD,CAAUc,MAAO,CAAC2R,aAAc,KAExB9Z,EAAM0Z,KAAK3O,OAAOL,KAAI,SAACiD,EAAMK,GACzB,OACI,kBAAC,IAAD,CACI7F,MAAO,CAACE,QAAS,EAAGwE,aAAc,GAAIC,OAAQ,GAC9CzB,KAAK,IACLtE,KAAK,SACLgG,IAAKiB,GAEL,yBAAK7F,MAAO,CAAC0E,aAAc,GAAIpE,OAAQ,GAAIwE,gBAAiB,OAAOU,EAAM,IAAKT,eAAgB,kBC7BlI,SAASmC,GAAQR,GACb,GAAgB,4DAAZA,EACA,OAAOA,EAEP,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAQF,EAAKG,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUJ,EAAKK,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQN,EAAKO,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQR,EAAKS,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAIR,EAAKU,cAAc,WAAMR,EAAM,IAAIE,EAoBvD,SAAS6K,GAAS/Z,GAC7B,OAA6B,IAAzBA,EAAMga,QAAQ3Q,OAEV,kBAAC,IAAD,CACIkC,KAAM,kBAAC,KAAD,MACNpB,OAAO,0GACPgI,OAAQ,kBAAC,IAAD,CAAQhS,QAASH,EAAM8I,MAAOuC,KAAK,KAAnC,iEAHZ,gIAK8BrL,EAAMwB,KAAKuR,SAASvB,KAAKnR,MALvD,+qBAWAL,EAAMga,QAAQtP,KAAI,SAAAgP,GACd,OACI,kBAACD,GAAD,CACI3K,KAAMO,GAAQqK,EAAK5K,MACnB/B,IAAK2M,EAAK7S,IACV6S,KAAMA,EACNE,eAAgB5Z,EAAM4Z,oBCtD9C,SAASrN,GAAUiF,GACf,GAAGA,EACC,MAAgB,8EAATA,EAA2BA,EAAOA,EAAKnR,MAgBtD,IAOee,gBAPS,SAACkF,GACrB,MAAO,CACHvD,WAAYuD,EAAMvD,cAKX3B,EAlBf,SAAkBpB,GACd,OACI,kBAAC,IAAD,CACImI,MAAO,CAAC2D,SAAU,GAAIzD,QAAS,GAC/BgE,YAAU,EACVlM,QAASH,EAAMuU,WACfhI,UAAWA,GAAUvM,EAAM+C,aAC9B,0BAAMoF,MAAO,CAAC2D,SAAU,KAAxB,6FCPHmO,G,kDACF,WAAYja,GAAQ,IAAD,8BACf,cAAMA,IA4BVka,SAAW,WACHvT,MAAMnG,EAAQiB,UAAUE,OAAO,EAAK3B,MAAM+C,WAAWmH,IAChD1C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAkS,GACFxV,QAAQC,IAAIuV,GACZ,EAAK1Z,MAAM+E,qBAAqB2U,GAChC,EAAKrT,SAAS,CAAC2T,QAASN,EAAMpQ,QAAQ,QAnCnC,EAuCnBR,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,gCACjCxB,MAAK,SAAAyB,GACkB,wBAAhBA,EAAO7E,MACP,EAAKyD,gBAAgB,+KAAoC,EAAKvB,MAAMM,aAAakB,gBAzC7F,EAAKxB,MAAQ,CACTgD,QAAQ,GAHG,E,gEAME,IAAD,OACwB,IAArCmB,KAAKzK,MAAMgD,eAAeqG,OACzBoB,KAAKyP,WAELzP,KAAKpE,SAAS,CAAC2T,QAASvP,KAAKzK,MAAMgD,eAAgBsG,QAAQ,IAAO,WAC1D,EAAKtJ,MAAMiD,sBAEX8F,IAAOC,KAAK,iBAAkB,CAAC,IAAO,EAAKhJ,MAAMiD,qBAAsB,MAAS,W,yCAM7EyL,EAAWC,EAAWC,GAAW,IAAD,OAC5CF,EAAU3L,aAAe0H,KAAKzK,MAAM+C,YACnC0H,KAAKpE,SAAS,CAACiD,QAAQ,IAAO,kBAAI,EAAK4Q,gB,6CAK3CzP,KAAKzK,MAAMiF,2BAA2ByM,OAAOyI,KAAKC,e,+BAqB7C,IAAD,OACJ,OAA0B,IAAtB3P,KAAKnE,MAAMgD,OAEP,kBAAC,IAAMoC,SAAP,KACI,kBAAC,GAAD,CACI6I,WAAY,kBAAI,EAAKvU,MAAMuU,gBAE/B,kBAAC,IAAD,CAASlJ,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,OAK9C,kBAAC,IAAME,SAAP,KACI,kBAAC,GAAD,CACI6I,WAAY,kBAAI,EAAKvU,MAAMuU,gBAE/B,kBAACwF,GAAD,CACIC,QAASvP,KAAKnE,MAAM0T,QACpBlR,MAAO2B,KAAK3B,MACZtH,KAAMiJ,KAAKzK,MAAMwB,KACjBoY,eAAgBnP,KAAKzK,MAAM4Z,sB,GApE3BtM,IAAMC,WA4FfnM,gBAhBS,SAACkF,GACrB,MAAO,CACHvD,WAAYuD,EAAMvD,WAClBvB,KAAM8E,EAAM9E,KACZyB,qBAAsBqD,EAAMrD,qBAC5BD,eAAgBsD,EAAMtD,mBAIJ,SAACwK,GACvB,MAAO,CACHzI,qBAAsB0I,YAAmB1I,EAAsByI,GAC/DvI,2BAA4BwI,YAAmBxI,EAA4BuI,MAIpEpM,CAA4C6Y,I,gBCnFrDI,G,kDACF,WAAYra,GAAQ,IAAD,8BACf,cAAMA,IA0CVsa,mBAAqB,SAACrU,GAClB,EAAKI,SAAS,CAACkU,YAAatU,EAAMC,OAAOE,SA5C1B,EA+CnBJ,aAAe,SAACC,GAAW,IAAD,EACFA,EAAMC,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAKC,SAAL,eAAgBF,EAAOC,KAjDR,EAmDnBoU,KAAK,WACD,IACI,GAA0D,IAAtD,EAAKlU,MAAMe,KAAK8G,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAc,KAAM,iKACnE,GAAI,EAAK/C,MAAMe,KAAK8G,QAAQ,MAAO,KAAKuE,OAAOrJ,OAAS,IAAK,KAAM,wNACnE,GAAG,EAAKrJ,MAAMuB,OAAOoL,OAAOtD,OAAS,EAAG,KAAM,gPAC9C,GAA8B,iGAA3B,EAAK/C,MAAMiU,YAAqC,KAAM,yWACzD,GAA8B,KAA3B,EAAKjU,MAAMiU,YAAoB,KAAM,yWACxC,IAAIxP,EAAS,GAMb,GALA,EAAK/K,MAAMuB,OAAOoL,OAAOjC,KAAI,SAACiD,EAAMK,GAC5BA,EAAI,GACJjD,EAAOtB,KAAKkE,OAGQ,IAAxB,EAAKrH,MAAMmU,SAAmB,CAC9B,IAAIf,EAAO,EAAKpT,MAAM4T,SACtBR,EAAKrS,KAAO,EAAKf,MAAMe,KACvBqS,EAAK3O,OAASA,EACd2O,EAAKC,KAAO,EAAKrT,MAAMiU,YACvBb,EAAKjO,QAAU,EAAKnF,MAAMmF,QAC1BiO,EAAKpX,OAAS,EAAKtC,MAAMsC,OACzB,EAAK0V,UAAUxX,EAAQiB,UAAUH,IAAI,EAAKgF,MAAM4T,SAASrT,IAAK6S,GAC9D,EAAKlD,UAAU,uKACZ,CACH,IAAIkD,EAAM,EAAKpT,MAAM4T,SACrBR,EAAKrS,KAAO,EAAKf,MAAMe,KAMvBqS,EAAK3O,OAASA,EACd2O,EAAKC,KAAO,EAAKrT,MAAMiU,YACvBb,EAAKjO,QAAU,EAAKnF,MAAMmF,QAC1BiO,EAAKpX,OAAS,EAAKtC,MAAMsC,OACrBqE,MAAMnG,EAAQiB,UAAUH,IAAK,CACzBwF,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUmS,KAEpBlS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKpB,SAAS,CAAC6T,SAAUzS,EAAIiS,KAAMe,UAAU,KACzB,IAAhBhT,EAAIiT,SACJ,EAAKrU,SAAS,CAACoF,SAAS,IACxB,EAAK+K,UAAU,qsBAEf,EAAKA,UAAU,2OAGtBzO,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,OAGpC,MAAMA,GACJ,EAAKwO,UAAUxO,KA7GnB,EAAK1B,MAAQ,CACTM,aAAc,GACdS,KAAM,GACNiS,UAAU,EACVmB,UAAU,EACV9S,MAAO,GACPqO,SAAS,EACTjL,OAAQ,GACRmP,SAAU,CACNnP,OAAQ,IAEZwP,YAAa,+FACb9O,SAAS,GAdE,E,gEAiBE,IAAD,OAChB9E,MAAMnG,EAAQiB,UAAUC,WAAW+I,KAAKzK,MAAMuB,OAAOsF,KAChDW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAkS,GACF,GAAIA,EAAKrQ,OAAS,EACdnF,QAAQC,IAAIuV,GACZ,EAAKrT,SAAS,CAAC6T,SAAUR,EAAK,GAAIrS,KAAKqS,EAAK,GAAGrS,KAAMoE,QAAQiO,EAAK,GAAGjO,QAAU9D,MAAO,GAAI2R,UAAU,EAAMiB,YAAab,EAAK,GAAGC,KAAMc,UAAU,QAC5I,CACH,IAAI9S,EAAQ,kBAAC,IAAD,iJACZ,EAAKtB,SAAS,CAACsB,MAAOA,EAAO2R,UAAU,U,gCAK5CrO,GAAO,IAAD,OACTR,KAAKnE,MAAMkE,UACfC,KAAKpE,SAAS,CAAEmE,SACR,kBAAC,IAAD,CACIU,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAAEmE,SAAU,SAExCS,O,kCA4Ee,IAAtBJ,EAAqB,uDAAf,GAAIrE,EAAW,uDAAJ,GACvB,OAAOG,MAAMkE,EAAK,CACd/D,OAAQ,QACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAA8D,GAAQ,OAAEA,EAAS5D,UACxBF,MAAK,SAAAyB,GACF/E,QAAQC,IAAI8E,MAEflB,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,Q,8BAEtB6G,GACJ,GAAgB,4DAAZA,EACA,OAAOA,EAEP,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAQF,EAAKG,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUJ,EAAKK,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQN,EAAKO,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQR,EAAKS,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAIR,EAAKU,cAAc,WAAMR,EAAM,IAAIE,I,iCAGvC,IAAD,OAArBrE,EAAqB,uDAAf,GAAIrE,EAAW,uDAAJ,GAEtBG,MAAMkE,EAAK,CACP/D,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAA8D,GAAQ,OAAEA,EAAS5D,UACxBF,MAAK,SAAAyB,GACF/E,QAAQC,IAAI8E,GACZ,EAAK5C,SAAS,CAAC6T,SAAUjR,EAAQwR,UAAU,S,+BAa9C,IAAD,OACJ,OAA4B,IAAxBhQ,KAAKnE,MAAMgT,SACH,kBAAC,IAAD,CAASjO,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,MAG9C,kBAAC,IAAME,SAAP,KACY,kBAAC,IAAD,CACIvB,OAAO,qGACPmG,UAAU,0GACVrF,KAAK,sqCAET,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI9E,KAAM,OACN2J,IAAI,0GACJ1J,MAAOqE,KAAKnE,MAAMe,KAClBkD,SAAUE,KAAKzE,eAEnB,kBAAC,IAAD,KAEIyE,KAAKzK,MAAMuB,OAAOoL,OAAOtD,OAAS,EAClCoB,KAAKzK,MAAMuB,OAAOoL,OAAOjC,KAAI,SAACiD,EAAMK,GAChC,GAAIA,EAAI,EACJ,OACI,kBAAC,IAAD,CAAM3C,KAAK,IAAI0B,IAAKiB,GAChB,yBACI7F,MAAO,CAACM,OAAQ,GAAIwE,gBAAiB,OAAOU,EAAM,IAAKT,eAAgB,eAMtF,uhBAGT,kBAAC,IAAD,CAAQ9G,MAAOqE,KAAKnE,MAAMiU,YAAahQ,SAAUE,KAAK6P,mBAAoBxK,IAAI,oDAAYC,YAAY,sGAClG,4BAAQ3J,MAAM,4CAAd,4CACA,4BAAQA,MAAM,4GAAd,4GACA,4BAAQA,MAAM,0DAAd,2DAEJ,kBAAC,IAAD,CACIoO,aAAc,kBAAC,IAAD,CACVjK,SAAU,YACsC,IAAxC,EAAKvK,MAAMuB,OAAOM,WAAWsR,OAC7B,EAAK9M,SAAS,CAACoF,SAAU,EAAKnF,MAAMmF,UAEpC,EAAK+K,UAAU,wqBAGvB/B,SAAiD,IAAxChK,KAAKzK,MAAMuB,OAAOM,WAAWsR,QAAkB1I,KAAKnE,MAAMmF,WAT3E,yKAYJ,kBAAC,IAAD,CAAQJ,KAAK,KAAKlL,QAASsK,KAAK+P,MAAhC,2DAEA,kBAAC,IAAD,CAAWrS,MAAO,CAAE2E,OAAQ,YAExBrC,KAAKnE,MAAMmU,UACX,kBAAChB,GAAD,CACI3K,KAAMrE,KAAK4E,QAAQ5E,KAAKnE,MAAM4T,SAASpL,MACvC/B,IAAKtC,KAAKnE,MAAM4T,SAASrT,IACzB6S,KAAMjP,KAAKnE,MAAM4T,SACjBN,eAAgBnP,KAAKzK,MAAM4Z,iBAGlCnP,KAAKnE,MAAMkE,c,GAtPV8C,IAAMC,WA4QrBnM,gBAdS,SAACkF,GACrB,MAAO,CACH9E,KAAM8E,EAAM9E,KACZD,OAAQ+E,EAAM/E,OACde,OAAQgE,EAAMhE,WAII,SAACkL,GACvB,MAAO,KAKIpM,CAA4CiZ,I,6BCnQ5CM,G,kDAxBX,WAAY3a,GAAQ,IAAD,8BACf,cAAMA,IACDsG,MAAQ,GAFE,E,0LAOTyC,IAAOC,KAAK,yBAA0B,IAAIxB,MAAK,SAAAhB,GAAI,OAAEtC,QAAQC,IAAIqC,M,gIAGlE,IAAD,OACJ,OACI,kBAAC,IAAMkF,SAAP,KACI,kBAAC,IAAD,CACIvB,OAAO,4JAEPmG,UAAU,ikCACVC,QAAS,kBAAC,IAAD,CAAQpQ,QAAS,kBAAI,EAAKya,mBAA1B,2I,GAlBNtN,IAAMC,W,oBCGvBsN,G,kDAEF,WAAY7a,GAAQ,IAAD,8BACf,cAAMA,IACDsG,MAAQ,CACTiR,OAAQ,GACRjO,QAAQ,EACRiI,OAAQ,CACJ,CAACrH,GAAI,IAAK7J,MAAO,0DACjB,CAAC6J,GAAI,GAAI7J,MAAO,8EAGxB,EAAKkK,SAAW,EAAKA,SAAS8J,KAAd,gBAVD,E,gEAkBf5J,KAAKvI,UAAU,M,gCAGTyI,GAAS,IAAD,OACRnE,EAAO,CACT+Q,OAAQ5M,EAAO6M,cACfC,WAAY,GAEhB9Q,MAAMnG,EAAQsB,MAAMI,UAAU,CAC1B4E,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACEA,EAAIE,MACJzD,QAAQC,IAAIsD,EAAIE,OAEhB,EAAKtB,SAAS,CAACkL,OAAQ9J,EAAIiQ,SAAUpO,QAAQ,OAGpDvB,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,Q,+BAGrBA,GACLyC,KAAKpE,SAAS,CAACkR,OAAQvP,EAAE9B,OAAOE,QAChCqE,KAAKvI,UAAU8F,EAAE9B,OAAOE,S,+BAGlB,IAAD,OACL,OAAyB,IAAtBqE,KAAKnE,MAAMgD,OACF,kBAAC,IAAD,CAAS+B,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,MAGtC,kBAAC,IAAME,SAAP,KACI,kBAAC,IAAD,CAAQtF,MAAOqE,KAAKnE,MAAMiR,OAAQhN,SAAUE,KAAKF,SAAUY,MAAO,OACjEV,KAAKnE,MAAMiL,OAAOlI,OAAS,EAC5B,kBAAC,IAAD,KACKoB,KAAKnE,MAAMiL,OAAO7G,KAAI,SAAA8G,GAAI,OACvB,kBAAC,IAAD,CACI9E,YAAa8E,EAAKmG,QAAU,GAC5BxX,QAAS,kBAAI,EAAKH,MAAMuU,WAAW/C,IACnCzE,IAAKyE,EAAKtH,IAETsH,EAAKnR,WAId,kBAAC,IAAD,CACIkL,KAAM,kBAAC,KAAD,MACNpB,OAAO,oFAFX,0Q,GA5ETmD,IAAMC,WAwFdqK,eAAsBiD,ICnF/BC,G,kDACF,WAAa9a,GAAQ,IAAD,8BAChB,cAAMA,IAUVgG,aAAe,SAACC,GAAW,IAAD,EACFA,EAAMC,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAKC,SAAL,eAAgBF,EAAOC,KAbP,EAoDpB2U,KAAO,SAAC7Q,EAAIV,GACR,IAAI5G,EAAc,EAAK0D,MAAM1D,YACzB4G,GAAS,EACT5G,EAAYgH,OAAOJ,EAAO,GACvB5G,EAAYgH,OAAO,EAAGJ,GAC7B,EAAKnD,SAAS,CAACzD,YAAaA,IAC5B,IAAIf,EAAa,CACbqI,GAAIA,EACJiJ,QAAQ,EACR6B,QAAS,GACT1S,OAAQ,EAAKtC,MAAMsC,QAEvBqE,MAAMnG,EAAQgC,MAAM,OAAQ,CACxBsE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU1F,KAEpB2F,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBK,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,OA7EV,EAgFpBgT,IAAM,SAAC9Q,EAAIV,GACP,IAAI5G,EAAc,EAAK0D,MAAM1D,YAKzBoS,EAAU,GACdA,EAAQvL,KAAK,EAAKnD,MAAM2O,QACxBrS,EAAY4G,GAAO3H,WAAWmT,QAAUA,EACxC,IAAInT,EAAa,CACbqI,GAAIA,EACJiJ,QAAQ,EACR6B,QAASA,EACT1S,OAAQ,EAAKtC,MAAMsC,QAEvBqE,MAAMnG,EAAQgC,MAAM,MAAO,CACvBsE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU1F,KAEpB2F,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBK,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,MAC1B,EAAK3B,SAAS,CAACzD,YAAaA,KA7GZ,EAgHpBqY,YAAc,SAAC/Q,EAAIV,GACf,IAAIiD,EAAW,EAAKnG,MAAMmG,SACtBjD,GAAS,EACTiD,EAAS7C,OAAOJ,EAAO,GACpBiD,EAAS7C,OAAO,EAAGJ,GAC1B,EAAKnD,SAAS,CAACoG,SAAUA,IACzB,IAAI5K,EAAa,CACbqI,GAAIA,EACJ5H,OAAQ,EAAKtC,MAAMsC,QAEvB4B,QAAQC,IAAI3D,EAAQiC,SAAS,QAC7BkE,MAAMnG,EAAQiC,SAAS,OAAQ,CAC3BqE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU1F,KAEpB2F,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAEvD,QAAQC,IAAIsD,MACtBM,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,OAzIV,EA4IpBkT,WAAa,SAAChR,EAAIV,GACd,IAAIiD,EAAW,EAAKnG,MAAMmG,SACtBjD,GAAS,EACTiD,EAAS7C,OAAOJ,EAAO,GACpBiD,EAAS7C,OAAO,EAAGJ,GAC1B,EAAKnD,SAAS,CAACoG,SAAUA,IACzB,IAAI5K,EAAa,CACbqI,GAAIA,EACJ5H,OAAQ,EAAKtC,MAAMsC,QAEvB4B,QAAQC,IAAI3D,EAAQiC,SAAS,OAC7BkE,MAAMnG,EAAQiC,SAAS,MAAO,CAC1BqE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU1F,KAEpB2F,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAEvD,QAAQC,IAAIsD,MACtBM,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,OAnK1B,EAAK1B,MAAQ,CACT1D,YAAa,GACbuY,UAAW,UACX1O,SAAU,GACV2O,aAAc,EACdC,WAAY,GAPA,E,gEAgBC,IAAD,OAChB1U,MAAMnG,EAAQgC,MAAO,CACjBsE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUkD,KAAKzK,MAAMsC,UAE/BkF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5E,GACF,EAAKyD,SAAS,CAACzD,YAAaA,OAE/BmF,OAAM,SAAAC,GAAC,OAAE9D,QAAQC,IAAI6D,MAC1BrB,MAAMnG,EAAQoB,QAAQC,WAAW,CAC7BiF,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUkD,KAAKzK,MAAMsC,UAE/BkF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAiF,GACF,EAAKpG,SAAS,CAACoG,SAAUA,S,uCAwHnB,IAAD,OACb,OAAmC,IAA/BhC,KAAKnE,MAAMmG,SAASpD,OAEhB,kBAAC,IAAD,CACIkC,KAAM,kBAAC,KAAD,MACNpB,OAAO,uEAFX,oFAODM,KAAKnE,MAAMmG,SAAS/B,KAAI,SAAC9I,EAAS4H,GACrC,OAAgB,OAAZ5H,EAAyB,MAC7BsC,QAAQC,IAAIvC,GAER,kBAAC,IAAD,CAAUmL,IAAKvD,EAAOrB,MAAO,CAACE,QAAS,IACnC,kBAAC,IAAD,CAAMgD,KAAK,IAAItE,KAAK,UAChB,kBAAC,IAAD,CACI6E,UAAQ,EACRC,WAAS,EACT0E,QACI,kBAAC,IAAM7E,SAAP,KACI,kBAAC,IAAD,CAAQvL,QAAS,kBAAI,EAAK8a,YAAYrZ,EAAQiF,IAAK2C,KAAnD,oDACA,kBAAC,IAAD,CAAQrJ,QAAS,kBAAI,EAAK+a,WAAWtZ,EAAQiF,IAAK2C,IAAQzC,KAAK,eAA/D,gDAIPnF,EAAQyF,MAEb,kBAAC,IAAD,CAAMuB,OAAS,kBAAC,IAAD,CAAQyC,KAAM,GAAID,IAAKxJ,EAAQJ,KAAKsG,cAAnD,WAA6ElG,EAAQJ,KAAK2K,UAAY,IAAMvK,EAAQJ,KAAK4K,UACzH,kBAAC,IAAD,aAAaxK,EAAQ0Z,GAAGnV,c,sCAO3B,IAAD,OACZ,OAAqC,IAAlCsE,KAAKnE,MAAM1D,YAAYyG,OAElB,kBAAC,IAAD,CACIkC,KAAM,kBAAC,KAAD,MACNpB,OAAO,uEAFX,oFAOGM,KAAKnE,MAAM1D,YAAY8H,KAAI,SAACnJ,EAAQiI,GACvC,OACI,kBAAC,IAAD,CAAUuD,IAAKxL,EAAO2K,MAAO/D,MAAO,CAACE,QAAS,IAC1C,kBAAC,IAAD,CAAMgD,KAAK,IAAItE,KAAK,UAChB,kBAAC,IAAD,CACI6E,UAAQ,EACRC,WAAS,EACTjD,OAAQ,kBAAC,IAAD,CAAQzI,QAAS,kBAAM,EAAKH,MAAMub,WAAWha,IAAS6J,IAAK7J,EAAOuG,WAAYuD,KAAM,KAC5FjB,QAAS7I,EAAOwR,SAASvB,KAAKnR,MAC9BkQ,QACI,kBAAC,IAAM7E,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQvL,QAAS,kBAAI,EAAK4a,KAAKxZ,EAAOsF,IAAK2C,KAA3C,oDACA,kBAAC,IAAD,CAAQrJ,QAAS,kBAAI,EAAKkG,SAAL,eAAgB9E,EAAO2K,OAAQ,KAAQnF,KAAK,aAAjE,6DAKXxF,EAAO4K,UAdZ,IAcwB5K,EAAO6K,UAG3B7K,EAAOM,WAAWmT,QAAQ3L,OAAS,GACnC,kBAAC,IAAD,KAEQ9H,EAAOM,WAAWmT,QAAQtK,KAAI,SAAAuK,GAC1B,OAAOA,OAMU,IAA7B,EAAK3O,MAAM/E,EAAO2K,QAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAU/F,KAAK,SAASC,MAAO,EAAKE,MAAM2O,OAAQ1K,SAAU,SAACtE,GACzD/B,QAAQC,IAAI,EAAKmC,MAAM2O,QACvB,EAAK5O,SAAS,CAAC4O,OAAQhP,EAAMC,OAAOE,WAGxC,kBAAC,IAAD,CAAQjG,QAAS,kBAAI,EAAK6a,IAAIzZ,EAAOsF,IAAK2C,IAAQzC,KAAK,aAAvD,kE,+BAUvB,IAAD,OACJ,MAAqC,cAAjC0D,KAAKzK,MAAMsC,OAAOkZ,WAEd,kBAAC,IAAD,CAAOtR,GAAG,SACN,kBAAC,IAAD,iGAKJ,kBAAC,IAAD,CAAOA,GAAG,SACN,kBAAC,EAAD,CACI7J,MAAO,yDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAE7B,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACID,QAAS,kBAAM,EAAKkG,SAAS,CAAE8U,UAAW,aAC1CM,SAAmC,YAAzBhR,KAAKnE,MAAM6U,WAFzB,8CAMA,kBAAC,IAAD,CACIhb,QAAS,kBAAM,EAAKkG,SAAS,CAAE8U,UAAW,cAC1CM,SAAmC,aAAzBhR,KAAKnE,MAAM6U,WAFzB,uEAQyB,YAAzB1Q,KAAKnE,MAAM6U,UAA0B1Q,KAAKiR,gBAAkBjR,KAAKkR,uB,GArSzErO,IAAMC,WA4TXnM,gBAdS,SAACkF,GACrB,MAAO,CACH9E,KAAM8E,EAAM9E,KACZD,OAAQ+E,EAAM/E,OACde,OAAQgE,EAAMhE,WAII,SAACkL,GACvB,MAAO,KAKIpM,CAA4C0Z,ICnUtCc,G,kDACjB,WAAY5b,GAAQ,IAAD,8BACf,cAAMA,IA8DV6b,UAAY,SAACrP,GACT,OAAIA,EAAKC,SAAW,EAEZ,kBAAC,IAAD,CAAKtE,MAAO,CAAC2E,OAAQ,EAAGzE,QAAS,EAAGyD,SAAU,GAAIC,MAAO,YAAzD,8CACaS,EAAKyB,OADlB,iBAC8BzB,EAAKC,SADnC,+CAMA,kBAAC,IAAD,CAAKtE,MAAO,CAAC2E,OAAQ,EAAGzE,QAAS,EAAGyD,SAAU,GAAIC,MAAO,YAAzD,4GAxEO,EA+EnBjD,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,gCACjCxB,MAAK,SAAAyB,GACkB,wBAAhBA,EAAO7E,MACP,EAAKpE,MAAMwW,UAAU,iOAjFjC,EAAKlQ,MAAQ,GAFE,E,gEAMfmE,KAAKqR,SAASrR,KAAKzK,MAAM4C,YAAYyG,QACrC,IACI,GAAwB,4DAApBoB,KAAKzK,MAAMwR,KAAuB,KAAM,0DAC5C,GAAsC,IAAlC/G,KAAKzK,MAAM4C,YAAYyG,OAAc,KAAM,mFACjD,MAAOrB,GACLyC,KAAKpE,SAAS,CAACsB,MAAOK,O,yCAIX0G,EAAWC,EAAWC,GACrC,GAAGF,IAAcjE,KAAKzK,MAAM,CACxByK,KAAKpE,SAAS,CAACsB,MAAO,OACtB,IACI,GAAwB,4DAApB8C,KAAKzK,MAAMwR,KAAuB,KAAM,0DAC5C,GAAsC,IAAlC/G,KAAKzK,MAAM4C,YAAYyG,OAAc,KAAM,mFACjD,MAAOrB,GACLyC,KAAKpE,SAAS,CAACsB,MAAOK,Q,+BAKzBmM,QACSG,IAAVH,EACA1J,KAAKpE,SAAS,CAAChG,MAAO,6KAEtBoK,KAAKpE,SAAS,CAAChG,MAAO,gGAAqB8T,M,sCAIlC,IAAD,OACZ,OAAO1J,KAAKzK,MAAM4C,YAAY8H,KAAI,SAAAnJ,GAC9B,OACI,kBAAC,IAAD,CAAUwL,IAAKxL,EAAO2K,OAClB,kBAAC,IAAD,CAAMb,KAAK,IAAItE,KAAK,UAChB,kBAAC,IAAD,CACIoB,MAAO,CAAC0E,aAAc,uBACtBR,YAAU,EACR2E,MAAM,kEACNtE,YACInL,EAAO+Q,WAAWtR,SAAS0J,KAAI,SAAA1J,GAC3B,OAAOA,EAAS8R,MAAQ,OAGhCiJ,cACI,EAAKF,UAAUta,EAAOiL,MAE1B5D,OAAQ,kBAAC,IAAD,CAAQwC,IAAK7J,EAAOuG,WAAYuD,KAAM,KAC9CA,KAAK,IACLlL,QAAS,kBAAM,EAAKH,MAAMgc,gBAAgBza,KAC9CA,EAAO4K,UAfT,IAeqB5K,EAAO6K,iB,+BAiCtC,IAAD,OACL,MAAyB,4DAArB3B,KAAKnE,MAAMqB,MAEP,kBAAC,IAAD,CACI4D,KAAM,kBAAC,KAAD,MACNpB,OAAO,oCAFX,wSAOwB,qFAArBM,KAAKnE,MAAMqB,MAEd,kBAAC,IAAD,CACI4D,KAAM,kBAAC,KAAD,MACNpB,OAAO,0GACPgI,OAAQ,kBAAC,IAAD,CAAQhS,QAAS,kBAAM,EAAK2I,SAASuC,KAAK,KAA1C,iEAHZ,m9BAYA,kBAAC,IAAD,CAAOM,UAAU,OAAOxB,OAAQ,kBAAC,IAAD,CAAQpD,KAAK,aAAa0D,KAAKnE,MAAMjG,QAChEoK,KAAKiR,gBACN,kBAAC,IAAD,oJAAuCjR,KAAKzK,MAAM4C,YAAYyG,OAA9D,U,GAnHqBiE,IAAMC,WCF/C,SAAS0O,GAAY/R,EAAGlK,GACpB,IAAImU,EAAQ,EAMZ,OALAnU,EAAM4C,YAAY8H,KAAI,SAACnJ,GACfA,EAAO+Q,WAAWM,QACfrR,EAAO+Q,WAAWM,OAAOzJ,SAASe,IAAMiK,OAG5CA,EAGX,IA4Be+H,GA5BM,SAAClc,GAClB,MAA8B,QAA3BA,EAAM8C,eAAe+D,IAEhB,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEQ7G,EAAM8C,eAAe8P,OAAOlI,KAAI,SAAAkI,GAC5B,OACI,kBAAC,IAAD,CACIzH,MAAO,kBAAC,IAAD,CAASE,KAAK,KAAK4Q,GAAYrJ,EAAO/L,IAAK7G,IAClD+M,IAAK6F,EAAO/L,IACZqD,GAAI0I,EAAO/L,IACX1G,QAASH,EAAM+T,YACf0H,SAAUzb,EAAM2K,OAAOxB,SAASyJ,EAAO/L,MAEtC+L,EAAOE,YAS7B,MCzBTqJ,G,kDACF,WAAYnc,GAAQ,IAAD,8BACf,cAAMA,IA8BVoc,SAAW,WAC0B,KAA9B,EAAKpc,MAAM8C,eACV6D,MAAMnG,EAAQK,QAAQG,SAAS,OAAO,EAAKhB,MAAM+C,WAAWmH,IACvD1C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5E,GACF,EAAK5C,MAAMuE,kBAAkB3B,GAC7B,EAAK+H,YAGbhE,MAAMnG,EAAQK,QAAQG,SAAS,EAAKhB,MAAM8C,eAAe+D,IAAI,IAAI,EAAK7G,MAAM+C,WAAWmH,IAClF1C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5E,GACF,EAAK5C,MAAMuE,kBAAkB3B,GAC7B,EAAK+H,aA5CF,EAiDnBoJ,YAAc,SAAC/L,GACX,GAAG,EAAK1B,MAAMqE,OAAOxB,SAASnB,EAAEqU,cAAcnS,IAAI,CAC9C,IAAIV,EAAQ,EAAKlD,MAAMqE,OAAOhB,QAAQ3B,EAAEqU,cAAcnS,IAClDS,EAAS,EAAKrE,MAAMqE,OACpBnB,GAAS,EACTmB,EAAOf,OAAOJ,EAAO,GAClBmB,EAAOf,OAAO,EAAGJ,GACxB,EAAKnD,SAAS,CAACsE,OAAQA,IAAS,kBAAK,EAAKA,gBACvC,CACH,IAAIA,EAAS,EAAKrE,MAAMqE,OACxBA,EAAOlB,KAAKzB,EAAEqU,cAAcnS,IAC5B,EAAK7D,SAAS,CAACsE,OAAQA,IAAS,kBAAK,EAAKA,cA1D9C,EAAKrE,MAAQ,CACTgD,QAAO,EACPqB,OAAQ,IAJG,E,gEAQE,IAAD,OACsB,IAAlCF,KAAKzK,MAAM4C,YAAYyG,OACvBoB,KAAK2R,WAEL3R,KAAKpE,SAAS,CAACiW,aAAc7R,KAAKzK,MAAM4C,YAAa0G,QAAQ,IAAO,WAC5D,EAAKtJ,MAAM6C,mBAEXkG,IAAOC,KAAK,iBAAkB,CAAC,IAAO,EAAKhJ,MAAM6C,kBAAmB,MAAS,W,6CAOzF4H,KAAKzK,MAAM6E,wBAAwB6M,OAAOyI,KAAKC,e,yCAGhC1L,EAAWC,EAAWC,GAAW,IAAD,OAC5CF,EAAU3L,aAAe0H,KAAKzK,MAAM+C,YACnC0H,KAAKpE,SAAS,CAACiD,QAAQ,IAAO,kBAAI,EAAK8S,gB,+BAqCrC,IAAD,OACL,GAAgC,IAA7B3R,KAAKnE,MAAMqE,OAAOtB,OACjBoB,KAAKpE,SAAS,CAACiW,aAAc7R,KAAKzK,MAAM4C,YAAa0G,QAAQ,QAC1D,CACH,IAAIgT,EAAe7R,KAAKzK,MAAM4C,YAAY+H,QAAO,SAAApJ,GAC7C,IAAIyM,EAAI,EAQR,GAPA,EAAK1H,MAAMqE,OAAO4R,SAAQ,SAAA5R,GACtB,IAAGpJ,EAAO+Q,WAAWM,OAGjB,OAAO,EAFJrR,EAAO+Q,WAAWM,OAAOzJ,SAASwB,IAASqD,OAKlDA,EAAE,EAAG,OAAO,KAEpBvD,KAAKpE,SAAS,CAACiW,aAAcA,EAAahT,QAAQ,O,+BAIhD,IAAD,SAC0BmB,KAAKzK,MAA7B8C,EADF,EACEA,eAAgBtB,EADlB,EACkBA,KACnB,OACI,kBAAC,IAAD,CAAO0I,GAAG,eACN,kBAAC,IAAD,mDACJ,kBAAC,IAAMwB,SAAP,KACI,kBAAC,GAAD,CAAU6I,WAAY,kBAAI,EAAKvU,MAAMuU,gBACrC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIzE,IAAI,0GACJC,YAAY,8KACZ5P,QAAgC,8EAAvBqB,EAAKuR,SAASvB,KACnB/G,KAAKzK,MAAMwW,UAAU,8HACrB/L,KAAKzK,MAAMwc,gBAEjB1Z,EAAegQ,OAEbhQ,GAAkB2H,KAAKnE,MAAMgD,QAC7B,kBAAC,GAAD,CACIxG,eAAgBA,EAChBF,YAAa6H,KAAKzK,MAAM4C,YACxBmR,YAAa,SAAC/L,GAAD,OAAK,EAAK+L,YAAY/L,IACnC2C,OAAQF,KAAKnE,MAAMqE,UAK3BF,KAAKnE,MAAMgD,OACP,kBAAC,GAAD,CACIkN,UAAW/L,KAAKzK,MAAMwW,UACtB5T,YAAa6H,KAAKnE,MAAMgW,aACxBtb,SAAU8B,EACV0O,KAAMhQ,EAAKuR,SAASvB,KACpBwK,gBAAiBvR,KAAKzK,MAAMgc,kBAEhC,kBAAC,IAAD,CAAS3Q,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,OAGjDf,KAAKzK,MAAMwK,c,GA1HV8C,IAAMC,WAmJbnM,gBAnBS,SAACkF,GACrB,MAAO,CACH1D,YAAa0D,EAAM1D,YACnBE,eAAgBwD,EAAMxD,eACtBC,WAAYuD,EAAMvD,WAClBF,kBAAmByD,EAAMzD,kBACzBrB,KAAM8E,EAAM9E,SAIM,SAACgM,GACvB,MAAO,CACHjJ,kBAAmBkJ,YAAmBlJ,EAAmBiJ,GACzD/I,qBAAsBgJ,YAAmBhJ,EAAsB+I,GAC/D7I,iBAAkB8I,YAAmB9I,EAAkB6I,GACvD3I,wBAAyB4I,YAAmB5I,EAAyB2I,MAI9DpM,CAA4C+a,ICzJrDM,G,kDACF,WAAYzc,GAAQ,IAAD,8BACf,cAAMA,IAUV0c,eAAiB,WACb/V,MAAMnG,EAAQQ,SAASoB,QAClBoF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA8K,GACFA,EAAWqK,QAAQ,CAAC9V,IAAK,MAAOiM,MAAO,+HACvC,EAAKzM,SAAS,CAACiM,WAAYA,EAAYhJ,QAAQ,OAElDvB,OAAM,SAAAJ,GACHzD,QAAQC,IAAIwD,OAjBpB,EAAKrB,MAAQ,CACTgD,QAAQ,GAHG,E,gEAQfmB,KAAKiS,mB,+BAeC,IAAD,OACL,OAA0B,IAAtBjS,KAAKnE,MAAMgD,OAEP,yBAAKnB,MAAO,CAAEsH,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAStE,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,OAK9C,kBAAC,IAAD,KAEQf,KAAKnE,MAAMgM,WAAW5H,KAAI,SAAA1J,GACtB,OACI,kBAAC,IAAD,CACI+L,IAAK/L,EAAS6F,IACd1G,QAAS,kBAAI,EAAKH,MAAM4c,YAAY5b,IACpCwT,aAAc,EAAKxU,MAAM8C,iBAAmB9B,EACxC,kBAAC,KAAD,CAAY0H,KAAK,kBAAoB,MAExC1H,EAAS8R,e,GA3CjBxF,IAAMC,WA4DpBnM,gBANS,SAACkF,GACrB,MAAO,CACHxD,eAAgBwD,EAAMxD,kBAIf1B,CAAyBqb,ICCzBI,G,kDA7DX,WAAY7c,GAAQ,IAAD,8BACf,cAAMA,IACDsG,MAAQ,GAFE,E,qDAQf,OACI,kBAAC,IAAD,CAAK6B,MAAO,CAAC4D,MAAO,SAApB,iGAEQ,6BAFR,mSAGQ,6BAHR,g2DAIQ,6BAJR,04BAKQ,6BALR,48BAMQ,6BANR,4jBAOI,6BACA,6BACI,6BATR,+EAUQ,6BAVR,woCAWI,6BACA,6BACI,6BAbR,mJAcQ,6BAdR,m/CAeQ,6BAfR,q4FAgBQ,6BAhBR,01BAiBQ,6BAjBR,ygGAkBQ,6BAlBR,yxCAmBQ,6BAnBR,+8CAoBI,6BACA,6BACI,6BAtBR,qLAuBQ,6BAvBR,whEAwBQ,6BAxBR,opEAyBQ,6BAzBR,g/EA0BQ,6BA1BR,u9BA2BQ,6BA3BR,s/CA4BQ,6BA5BR,ygCA6BI,6BACA,6BACI,6BA/BR,wJAgCQ,6BAhCR,6yCAiCQ,6BAjCR,mxCAkCQ,6BAlCR,q3EAmCQ,6BAnCR,wpFAoCQ,6BApCR,mqCAqCQ,6BArCR,i1BAsCI,6BACA,6BACI,6BAxCR,iJAyCQ,6BAzCR,kwBA0CQ,6BA1CR,gwBA2CQ,6BA3CR,gpCA4CQ,6BA5CR,q4DA6CQ,6BA7CR,42CA8CQ,6BA9CR,wrC,GAVQuB,IAAMC,W,oBC0CpBuP,G,kDACF,WAAY9c,GAAQ,IAAD,8BACf,cAAMA,IAwDVU,KAAO,SAAC4B,GACJ,EAAK+D,SAAS,CAAC0W,gBAAgB,IAC/BpW,MAAMnG,EAAQC,MAAMC,KAAM,CACtBoG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CAAC,eAAgB,oBAC1BC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUjF,KAEpBkF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAhB,GACF,EAAKH,SAAS,CAAC2W,mBAAmB,IAClC,EAAKhd,MAAMsE,UAAUkC,EAAKhF,MACN,OAAhBgF,EAAKjF,QACL,EAAKvB,MAAMiE,UAAUuC,EAAKjF,WAGjCwG,OAAM,SAAAC,GACH9D,QAAQC,IAAI6D,GACZ,EAAKwO,UAAU,yrBACf,EAAKnQ,SAAS,CAAC0W,gBAAgB,QAhFxB,EAwHnBnD,eAAiB,SAACC,GACdlT,MAAMnG,EAAQK,QAAQE,KAAO8Y,GACxBrS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAjG,GACF2C,QAAQC,IAAI,UAAW5C,GACvB,EAAKvB,MAAMmF,4BAA4B5D,GACvC,EAAKiE,KAAK,UAAW,kBA9Hd,EAkInByX,mBAAqB,SAACpD,GAClBlT,MAAMnG,EAAQK,QAAQE,KAAO8Y,GACxBrS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAjG,GACF,EAAKvB,MAAMqF,+BAA+B9D,GAC1C,EAAKiE,KAAK,YAAa,kBAvIhB,EA6JnByN,SAAW,SAAC1R,GACRoF,MAAMnG,EAAQK,QAAQC,IAAK,CACvBgG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CAAC,eAAgB,oBAC1BC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUhG,KAEpBiG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA0V,GACF,EAAKld,MAAMiE,UAAUiZ,GACrB,EAAKld,MAAM6F,mBAAmB,MAC9B,EAAK2Q,UAAU,4mBAGtBzO,OAAM,SAAAC,GACH9D,QAAQC,IAAI6D,GACZ,EAAKwO,UAAUxO,EAAEpH,aAjLN,EAsLnBuc,iBAAmB,SAACtD,GAChB,EAAKxT,SAAS,CAAC+W,eAAgBvD,EAAS9V,YAAa,UAAUsZ,kBAAmB,cAAcC,mBAAoB,eACpHpZ,QAAQC,IAAI0V,IAxLG,EA2LnBrU,KAAO,SAACC,EAAOC,GACX,GAAI,EAAK1F,MAAMyF,EAAM,WAAW,EAAKzF,MAAMyF,EAAM,WAAW4D,UAAY3D,EAAM,CAC1EgM,OAAO6L,QAAQC,UAAU,CAAC9X,MAAOA,GAAQA,GACzC,EAAK1F,MAAMwF,KAAKC,EAAOC,GACvB,IAAI+X,EAAO,EAAKzd,MAAMyF,EAAM,WAC5BvB,QAAQC,IAAIsZ,QAEZvZ,QAAQC,IAAI,iBAlMD,EAsMnB/D,OAAS,SAACqF,GACN,GAA2C,IAAvC,EAAKzF,MAAMyF,EAAM,WAAW4D,OAC5BN,IAAOC,KAAK,gBAAiB,CAAC,OAAU,gBACrC,CACH,EAAKhJ,MAAM2F,UAAUF,GACrB,IAAIgY,EAAO,EAAKzd,MAAMyF,EAAM,WAC5BvB,QAAQC,IAAIsZ,KA5MD,EAgNnBH,mBAAqB,SAACnX,GAClB,EAAKE,SAAS,CAACiX,mBAAoBnX,IACnCjC,QAAQC,IAAI,EAAKmC,MAAMgX,qBAlNR,EAqNnBI,UAAY,SAACC,GACT,EAAKtX,SAAS,CAACtC,YAAa4Z,KAnN5B,EAAKrX,MAAQ,CACTsX,SAAU,KACVC,aAAc,KACd9Z,YAAa,OACb+Z,sBAAuB,YACvBR,mBAAoB,cACpBF,eAAgB,GAChBC,kBAAmB,cACnBrZ,aAAc,KACd+Z,cAAe,KACfC,eAAgB,eAChBC,WAAY,GACZC,WAAY,GACZlU,YAAa,KACbmU,aAAc,GACdpb,WAAY,0DACZqb,YAAa,QACbC,OAAQ,eACRtB,gBAAgB,EAChBuB,aAAc,KACdC,eAAgB,MAGpB,EAAKC,cAAgB,EAAKA,cAAcnK,KAAnB,gBA1BN,E,gEA6BE,IAAD,OAChBtL,IAAO0V,WAAU,YAAgC,IAAD,IAA5BC,OAAUta,EAAkB,EAAlBA,KAAMoC,EAAY,EAAZA,KACnB,yBAATpC,GACA,EAAKiC,SAAS,CAACgY,OAAQ7X,EAAK6X,iBAGC/J,IAAjC7J,KAAKzK,MAAM2e,aAAaC,MACxBnU,KAAKpE,SAAS,CAAC2W,mBAAmB,IAClC9Y,QAAQC,IAAI,+FACZsG,KAAKzK,MAAMuF,mBAAmBkF,KAAKzK,MAAM2e,cACzClU,KAAK/J,KAAK+J,KAAKzK,MAAM2e,gBAErBlU,KAAKpE,SAAS,CAAC2W,mBAAmB,IAClCvS,KAAK+L,UAAU,2MAEf/L,KAAKzK,MAAM6e,WAAWC,WACtBrU,KAAKmP,eAAenP,KAAKzK,MAAM6e,WAAWC,UAC1CrU,KAAKzK,MAAM4F,YAAY,YAE3B8L,OAAOqN,WAAa,WACgB,iBAA5B,EAAK/e,MAAMgE,aACX,EAAK5D,OAAO,gBAEZ,EAAKA,OAAO,EAAKJ,MAAM+D,gB,gCAgCzBkH,GAAO,IAAD,OAIRR,KAAKnE,MAAMkE,UAAUC,KAAKpE,SAAS,CAACmE,SAAU,OAClDC,KAAKpE,SAAS,CACVmE,SACI,kBAAC,IAAD,CACIU,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAACmE,SAAU,QACxC5B,OAAQ,kBAAC,IAAD,CAAQyC,KAAM,GAAIlD,MATf,CACnB2I,gBAAiB,kBAQwC,kBAAC,IAAD,CAAYpI,KAAK,OAAOF,MAAO,GACnBC,OAAQ,OAEpEwC,O,sCAKDA,GAAO,IAAD,OAIdR,KAAKnE,MAAMiY,gBAAgB9T,KAAKpE,SAAS,CAACkY,eAAgB,OAC9D9T,KAAKpE,SAAS,CACVkY,eACI,kBAAC,IAAD,CACIrT,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAACkY,eAAgB,QAC9C3V,OAAQ,kBAAC,IAAD,CAAQyC,KAAM,GAAIlD,MATf,CACnB2I,gBAAiB,kBAQwC,kBAAC,IAAD,CAAYpI,KAAK,OAAOF,MAAO,GACnBC,OAAQ,OAEpEwC,O,kCAwBLA,GAAO,IAAD,OAIVR,KAAKnE,MAAM0Y,YAAYvU,KAAKpE,SAAS,CAAC2Y,WAAY,OACtDvU,KAAKpE,SAAS,CACV2Y,WACI,kBAAC,IAAD,CACI9T,OAAO,WACPjB,QAAS,kBAAM,EAAK5D,SAAS,CAAC2Y,WAAY,QAC1CpW,OAAQ,kBAAC,IAAD,CAAQyC,KAAM,GAAIlD,MATf,CACnB2I,gBAAiB,kBAQwC,kBAAC,IAAD,CAAYpI,KAAK,OAAOF,MAAO,GACnBC,OAAQ,OAEpEwC,O,oCAiEHjD,GACVyC,KAAKpE,SAAS,CAACtC,YAAaiE,EAAEqU,cAAc4C,QAAQxZ,U,uCAGvC+L,GACb,IAAIhQ,EAAOiJ,KAAKzK,MAAMwB,KACtBA,EAAKuR,SAASvB,KAAOA,EACrB/G,KAAKzK,MAAM2E,iBAAiB6M,GAC5BhQ,EAAKc,OAASmI,KAAKzK,MAAMsC,S,+BAGnB,IAAD,SACuBmI,KAAKzK,MAA1BwB,EADF,EACEA,KAAMmB,EADR,EACQA,YACb,OAAkC,IAA9B8H,KAAKnE,MAAMyW,eAEP,kBAAC,IAAD,CAAgBsB,OAAQ5T,KAAKnE,MAAM+X,QAC/B,kBAAC,IAAD,CAAMnU,GAAG,UAAUgV,YAAY,WAC3B,kBAAC,IAAD,CAAOhV,GAAG,WACI,kBAAC,IAAD,CACI0K,WAAS,EACRrJ,KAAM,kBAAC,KAAD,MACPpB,OAAQ,mEACNgI,OAAQ,kBAAC,IAAD,CAAQ9G,KAAK,IAAIlL,QAAS,kBAAI,EAAKO,KAAK,EAAKV,MAAM2e,gBAAnD,8HAJd,yKAQTlU,KAAKnE,MAAMkE,aAiBY,IAAjCC,KAAKnE,MAAM0W,kBAEd,kBAAC,IAAD,CAAgBqB,OAAQ5T,KAAKnE,MAAM+X,QAC/B,kBAAC,IAAD,CAAMnU,GAAG,OAAOgV,YAAY,QACxB,kBAAC,IAAD,CAAOhV,GAAG,QACN,kBAAC,IAAD,CACIqB,KAAM,kBAAC,IAAD,CAASF,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,OADpD,+HAKCf,KAAKnE,MAAMkE,aAKL,IAAhB7H,EAEH,kBAAC,IAAD,CAAgB0b,OAAQ5T,KAAKnE,MAAM+X,QAC/B,kBAAC,IAAD,CAAMnU,GAAG,UAAUgV,YAAY,WAC3B,kBAAC,IAAD,CAAOhV,GAAG,WACN,kBAAC,IAAD,CACI0K,WAAS,EACTrJ,KAAM,kBAAC,IAAD,CAASF,KAAK,QAAQlD,MAAO,CAAEqD,UAAW,MAChDrB,OAAO,kGAHX,qLAKKM,KAAKnE,MAAMkE,aAQ5B,kBAAC,IAAD,CAAgB6T,OAAQ5T,KAAKnE,MAAM+X,QACnC,kBAAC,IAAD,CAAMta,YAAa0G,KAAKzK,MAAM+D,YAAaob,OACvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIhf,QAAS,kBAAI,EAAKH,MAAM4F,YAAY,SACpC6V,SAAqC,SAA3BhR,KAAKzK,MAAM+D,YACrBqb,aAAW,OACXnU,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI9K,QAAS,kBAAI,EAAKH,MAAM4F,YAAY,YACpC6V,SAAqC,YAA3BhR,KAAKzK,MAAM+D,YACrBqb,aAAW,UACXnU,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI9K,QAAS,kBAAI,EAAKH,MAAM4F,YAAY,cACpC6V,SAAqC,cAA3BhR,KAAKzK,MAAM+D,YACrBqb,aAAW,YACXnU,KAAK,2DACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI9K,QAAS,WACL,EAAKkG,SAAS,CAAC2Y,WAAY,OAC3B,EAAKhf,MAAM4F,YAAY,OAE3B6V,SAAqC,OAA3BhR,KAAKzK,MAAM+D,YACrBqb,aAAW,KACXnU,KAAK,8CACR,kBAAC,IAAD,SAGL,kBAAC,IAAD,CAAMf,GAAG,OAAOqT,QAAS9S,KAAKzK,MAAM0D,YAAa2b,YAAa,kBAAM,EAAKjf,OAAO,SAAS8e,YAAazU,KAAKzK,MAAMqD,iBACzG,kBAAC,GAAD,CACI6G,GAAG,OACH5H,OAAQmI,KAAKzK,MAAMsC,OACnB4O,QAAS,WACL,EAAKlR,MAAM4F,YAAY,MACvB,EAAK5F,MAAM6F,mBAAmB,iBAGlC6X,UAAWjT,KAAKiT,UAChBlc,KAAMiJ,KAAKzK,MAAMwB,KAEjByP,UAAW,kBAAM,EAAKzL,KAAK,OAAQ,YAEvC,kBAAC,GAAD,CACI0E,GAAG,QACH9J,OAAQ,kBAAM,EAAKA,OAAO,SAC1BoB,KAAMiJ,KAAKnE,MAAM9E,KACjB+Z,WAAY,SAACha,GACT,EAAK8E,SAAS,CAACO,aAAcrF,IAC7B,EAAKiE,KAAK,OAAQ,iBAI1B,kBAAC,IAAD,CAAO0E,GAAG,cACN,kBAAC,GAAD,CACI9J,OAAQ,kBAAM,EAAKA,OAAO,SAC1B+M,UAAW,iBAAM,QACjBb,aAAc,iBAAM,QACpB1F,aAAc6D,KAAKnE,MAAMM,aACzB0Y,gBAAiB,SAAC/d,GAAD,OAAU,EAAK8E,SAAS,CAACO,aAAcrF,SAIpE,kBAAC,IAAD,CAAM2I,GAAG,UAAUqV,MAAO9U,KAAKnE,MAAMgY,aAAcY,YAAazU,KAAKzK,MAAMsD,mBAAoBia,QAAS9S,KAAKzK,MAAM2D,eAAgB0b,YAAa,kBAAM,EAAKjf,OAAO,aAC9J,kBAAC,GAAD,CACI8J,GAAG,cAECqK,WAAY,kBAAK,EAAK/O,KAAK,UAAW,eACtCgR,UAAW,SAACnW,GAAD,OAAS,EAAKmW,UAAUnW,IAEnCmc,eAAgB,kBAAI,EAAKhX,KAAK,UAAW,cACzCwW,gBAAiB,SAACza,GACd,EAAKvB,MAAMmF,4BAA4B5D,GACvC,EAAKiE,KAAK,UAAW,eAEzBgF,SAAUC,KAAKnE,MAAMkE,WAE7B,kBAAC,IAAD,CAAON,GAAG,cACN,kBAAC,EAAD,CAAM7J,MAAO,sEACPD,OAAQ,kBAAM,EAAKA,OAAO,cAC5B,kBAAC,GAAD,CACQ8J,GAAG,aAEH9J,OAAQ,kBAAM,EAAKA,OAAO,YAC1BmU,WAAY,SAAC/C,GACb,EAAK7M,iBAAiB6M,GACtB,EAAKpR,OAAO,eAK5B,kBAAC,IAAD,CAAO8J,GAAG,cACN,kBAAC,GAAD,CACIA,GAAG,aAEH9J,OAAQ,kBAAM,EAAKA,OAAO,YAG1B+M,UAAW,kBAAM,EAAK3H,KAAK,UAAW,gBACtC8G,aAAc,kBAAM,EAAK9G,KAAK,UAAW,mBACzCoB,aAAc6D,KAAKzK,MAAMkD,sBACzB0E,UAAW,SAAC4X,GACRtb,QAAQC,IAAIqb,GACZ,EAAKnZ,SAAS,CAACiY,aAAckB,QAMzC,kBAAC,IAAD,CAAOtV,GAAG,eACN,kBAAC,EAAD,CACI7J,MAAO,yDAEPD,OAAQ,kBAAM,EAAKA,OAAO,cAE9B,kBAAC,GAAD,CAEIA,OAAQ,kBAAM,EAAKA,OAAO,YAC1BwG,aAAc6D,KAAKzK,MAAMkD,yBAIjC,kBAAC,IAAD,CAAOgH,GAAG,kBACN,kBAAC,EAAD,CACI7J,MAAO,uCACPD,OAAQ,kBAAM,EAAKA,OAAO,cAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,YAC1BwG,aAAc6D,KAAKzK,MAAMkD,yBAIjC,kBAAC,IAAD,CAAOgH,GAAG,aACN,kBAAC,EAAD,CACI7J,MAAO,wFACPD,OAAQ,kBAAM,EAAKA,OAAO,cAE9B,kBAAC,IAAD,KACI,kBAAC,GAAD,CACIwc,YAAa,SAAC5b,GACV,EAAKhB,MAAMyE,qBAAqBzD,GAChC,EAAKZ,OAAO,iBAOpC,kBAAC,IAAD,CACI8J,GAAG,YACHgV,YAAazU,KAAKzK,MAAMuD,qBACxBga,QAAS9S,KAAKzK,MAAM4D,iBAAkByb,YAAa,kBAAM,EAAKjf,OAAO,eAErE,kBAAC,IAAD,CAAO8J,GAAG,aACN,kBAAC,IAAD,gEACA,kBAAC,GAAD,CAEI0P,eAAgB,SAACC,GAAD,OAAY,EAAKoD,mBAAmBpD,IAEpDtF,WAAY,kBAAM,EAAK/O,KAAK,YAAa,kBAGjD,kBAAC,IAAD,CAAO0E,GAAG,cACN,kBAAC,EAAD,CAAM7J,MAAO,sEACPD,OAAQ,kBAAM,EAAKA,OAAO,gBACpC,kBAAC,GAAD,CACQ8J,GAAG,aACH9J,OAAQ,kBAAM,EAAKA,OAAO,cAC1BmU,WAAY,SAAC/C,GACT,EAAK7M,iBAAiB6M,GACtB,EAAKpR,OAAO,iBAIxB,kBAAC,IAAD,CAAO8J,GAAG,cACN,kBAAC,GAAD,CACIA,GAAG,aACH9J,OAAQ,kBAAM,EAAKA,OAAO,cAC1B+M,UAAW,kBAAM,EAAK3H,KAAK,YAAa,gBACxCoB,aAAc6D,KAAKzK,MAAMmD,yBACzBmJ,aAAc,kBAAM,EAAK9G,KAAK,YAAa,sBAInD,kBAAC,IAAD,CAAO0E,GAAG,eACN,kBAAC,EAAD,CACI7J,MAAO,yDACPD,OAAQ,kBAAM,EAAKA,OAAO,gBAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,cAC1BwG,aAAc6D,KAAKzK,MAAMmD,4BAIjC,kBAAC,IAAD,CAAO+G,GAAG,kBACN,kBAAC,EAAD,CACI7J,MAAO,uCACPD,OAAQ,kBAAM,EAAKA,OAAO,gBAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,cAC1BwG,aAAc6D,KAAKzK,MAAMmD,6BAKrC,kBAAC,IAAD,CAAM+G,GAAG,KAAKpE,WAAY2E,KAAKzK,MAAMgE,cAC7B,kBAAC,IAAD,CAAMkG,GAAG,KAAKqO,OAAQ9N,KAAKnE,MAAMsX,SAAUsB,YAAazU,KAAKzK,MAAMwD,cAAe+Z,QAAS9S,KAAKzK,MAAM6D,UAAWwb,YAAa,kBAAM,EAAKjf,OAAO,QAChJ,kBAAC,IAAD,CAAO8J,GAAG,MACN,kBAAC,IAAD,CAAayB,WAAW,GAAxB,8CACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIxL,QAAS,kBAAM,EAAKkG,SAAS,CAAE+X,YAAa,WAC5C3C,SAAqC,UAA3BhR,KAAKnE,MAAM8X,aAFzB,mFAMA,kBAAC,IAAD,CACIje,QAAS,kBAAM,EAAKkG,SAAS,CAAE+X,YAAa,cAC5C3C,SAAqC,aAA3BhR,KAAKnE,MAAM8X,aAFzB,2DAOJ,kBAAC,IAAD,MAE+B,UAA3B3T,KAAKnE,MAAM8X,YACP,kBAAC,GAAD,CACI7c,OAAQkJ,KAAKzK,MAAMuB,OACnBC,KAAMA,EACNiU,YAAa,kBAAM,EAAKjQ,KAAK,KAAM,YACnCkQ,cAAe,kBAAM,EAAKlQ,KAAK,KAAM,cACrCoQ,cAAe,kBAAM,EAAKpQ,KAAK,KAAM,cACrCmQ,gBAAiB,kBAAM,EAAKnQ,KAAK,KAAM,cACvC0C,YAAauC,KAAKzK,MAAMsC,OAAOsP,iBAEnC,kBAAC,GAAD,MAEPnH,KAAKnE,MAAM0Y,YAEhB,kBAAC,IAAD,CAAO9U,GAAG,WACN,kBAAC,EAAD,CACI7J,MAAM,yDACND,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACI4R,SAAU,SAACyN,GAAD,OAAW,EAAKpZ,SAAS,CAACuX,SAAU6B,KAC9CjV,SAAU,SAAC5J,GAAD,OAAa,EAAK8e,YAAY9e,IACxC+e,UAAWlV,KAAKkV,UAChB3V,YAAaS,KAAKnE,MAAM0D,YACxBuK,WAAY,kBAAM,EAAK/O,KAAK,KAAM,kBAG1C,kBAAC,IAAD,CAAO0E,GAAG,cACN,kBAAC,EAAD,CAAM7J,MAAO,sEACPD,OAAQ,kBAAM,EAAKA,OAAO,SAChC,kBAAC,GAAD,CACI8J,GAAG,aACH9J,OAAQ,kBAAM,EAAKA,OAAO,OAC1BmU,WAAY,SAAC/C,GACT,IAAIjQ,EAAS,EAAKvB,MAAMuB,OACxBA,EAAOwR,SAASvB,KAAOA,EACvBjQ,EAAOyX,SAAU,EACjB,EAAKhZ,MAAMiE,UAAU1C,GACrB,EAAKnB,OAAO,UAIxB,kBAAC,IAAD,CAAO8J,GAAG,aACN,kBAAC,GAAD,CACI9J,OAAQ,kBAAM,EAAKA,OAAO,OAC1BoB,KAAMA,EACNgY,kBAAmB,SAACjY,GAChB,EAAKvB,MAAMsF,yBAAyB/D,GACpC,EAAKiE,KAAK,KAAM,kBAI5B,kBAAC,IAAD,CAAO0E,GAAG,cACN,kBAAC,GAAD,CACI9J,OAAQ,kBAAM,EAAKA,OAAO,OAC1B+M,UAAW,kBAAM,EAAK3H,KAAK,KAAM,gBACjChE,KAAMA,EACNoF,aAAc6D,KAAKzK,MAAMoD,mBACzBkJ,aAAc,kBAAM,EAAK9G,KAAK,KAAM,mBACpC8Z,gBAAiB,SAAC/d,GAAD,OAAU,EAAK8E,SAAS,CAACO,aAAcrF,QAGhE,kBAAC,IAAD,CAAO2I,GAAG,eACN,kBAAC,EAAD,CACI7J,MAAO,yDACPD,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKiG,SAAS,CAAC0X,cAAe,gBAC5CnX,aAAc6D,KAAKzK,MAAMoD,sBAIjC,kBAAC,IAAD,CAAO8G,GAAG,aACN,kBAAC,EAAD,CACI7J,MAAO,yDACPD,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,OAC1BoB,KAAMA,KAGd,kBAAC,IAAD,CAAO0I,GAAG,kBACN,kBAAC,EAAD,CACI7J,MAAM,uCACND,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,OAC1BoB,KAAMA,EACNoF,aAAc6D,KAAKzK,MAAMoD,sBAIjC,kBAAC,IAAD,CAAO8G,GAAG,aACN,kBAAC,EAAD,CACI7J,MAAM,0DACND,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,OAC1BoB,KAAMA,EAAM+W,OAAQ9N,KAAKmV,cAKrC,kBAAC,IAAD,CAAMV,YAAazU,KAAKzK,MAAMyD,wBAAyB8U,OAAQ9N,KAAKnE,MAAMuX,aAAc3T,GAAG,gBACvF,kBAAC,IAAD,CAAOA,GAAG,gBACN,kBAAC,EAAD,CACI7J,MAAO,qEACPD,OAAQ,kBAAM,EAAKJ,MAAM6F,mBAAmB,SAEhD,kBAAC,GAAD,CACImM,SAAU,SAACyN,GAAD,OAAW,EAAKpZ,SAAS,CAACwX,aAAc4B,KAClDrf,OAAQ,kBAAM,EAAKJ,MAAM6F,mBAAmB,OAC5CoN,SAAUxI,KAAKwI,SACfsB,WAAY,kBAAM,EAAK/O,KAAK,eAAgB,eAC5CqP,UAAW,kBAAM,EAAKrP,KAAK,eAAgB,UAC3CgF,SAAU,SAAC5J,GAAD,OAAa,EAAKif,gBAAgBjf,MAE/C6J,KAAKnE,MAAMiY,gBAEhB,kBAAC,IAAD,CAAOrU,GAAG,SACN,kBAAC,EAAD,CACI7J,MAAM,+DACND,OAAQ,kBAAM,EAAKA,OAAO,mBAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,oBAGlC,kBAAC,IAAD,CAAO8J,GAAG,cACN,kBAAC,EAAD,CAAM7J,MAAO,sEACPD,OAAQ,kBAAM,EAAKA,OAAO,mBACpC,kBAAC,GAAD,CACQ8J,GAAG,aACH9J,OAAQ,kBAAM,EAAKA,OAAO,iBAC1BmU,WAAY,SAAC/C,GACb,EAAK7M,iBAAiB6M,GAClB,EAAKpR,OAAO,4B,GAzpBlCkN,IAAMC,WA0tBTnM,gBApDS,SAACkF,GACrB,MAAO,CACH1D,YAAa0D,EAAM1D,YACnBE,eAAgBwD,EAAMxD,eACtBC,WAAYuD,EAAMvD,WAClBF,kBAAmByD,EAAMzD,kBACzBG,eAAgBsD,EAAMtD,eACtBC,qBAAsBqD,EAAMrD,qBAC5BzB,KAAM8E,EAAM9E,KACZmB,YAAa2D,EAAM3D,YACnBpB,OAAQ+E,EAAM/E,OACd2B,sBAAuBoD,EAAMpD,sBAC7BC,yBAA0BmD,EAAMnD,yBAChCC,mBAAoBkD,EAAMlD,mBAC1Bd,OAAQgE,EAAMhE,OACde,gBAAiBiD,EAAMjD,gBACvBC,mBAAoBgD,EAAMhD,mBAC1BC,qBAAsB+C,EAAM/C,qBAC5BC,cAAe8C,EAAM9C,cACrBO,YAAauC,EAAMvC,YACnBL,YAAa4C,EAAM5C,YACnBC,eAAgB2C,EAAM3C,eACtBC,iBAAkB0C,EAAM1C,iBACxBC,UAAWyC,EAAMzC,UACjBG,aAAcsC,EAAMtC,aACpBP,wBAAyB6C,EAAM7C,wBAC/BK,oBAAqBwC,EAAMxC,wBAIT,SAAC0J,GACvB,MAAO,CACHjJ,kBAAmBkJ,YAAmBlJ,EAAmBiJ,GACzD/I,qBAAsBgJ,YAAmBhJ,EAAsB+I,GAC/D7I,iBAAkB8I,YAAmB9I,EAAkB6I,GACvD3I,wBAAyB4I,YAAmB5I,EAAyB2I,GACrEzI,qBAAsB0I,YAAmB1I,EAAsByI,GAC/DvI,2BAA4BwI,YAAmBxI,EAA4BuI,GAC3ElJ,UAAWmJ,YAAmBnJ,EAAWkJ,GACzCvJ,UAAWwJ,YAAmBxJ,EAAWuJ,GACzCrI,4BAA6BsI,YAAmBtI,EAA6BqI,GAC7EnI,+BAAgCoI,YAAmBpI,EAAgCmI,GACnFlI,yBAA0BmI,YAAmBnI,EAA0BkI,GACvEjI,mBAAoBkI,YAAmBlI,GAAoBiI,GAC3D5H,YAAa6H,YAAmB7H,GAAa4H,GAC7ChI,KAAMiI,YAAmBjI,GAAMgI,GAC/B7H,UAAW8H,YAAmB9H,GAAW6H,GACzC3H,mBAAoB4H,YAAmB5H,GAAoB2H,MAKpDpM,CAA4C0b,IC7vBvCgD,QACW,cAA7BpO,OAAOqB,SAASgN,UAEe,UAA7BrO,OAAOqB,SAASgN,UAEhBrO,OAAOqB,SAASgN,SAASC,MACvB,2DCRNrL,EAAQ,KAAUsL,SAGlB,IAAMC,GAAQC,a5BgCa,WAAmC,IAAD,IAAjC7Z,EAAiC,uDAAzB5D,EAAcyP,EAAW,uCAEzD,OAAQA,EAAO/N,MACX,IAhDkC,6BAiD9B,OAAO,2BAAIkC,GAAX,IAAkB1D,YAAauP,EAAO9N,UAC1C,IAjDqC,gCAkDjC,OAAO,2BAAIiC,GAAX,IAAkBxD,eAAgBqP,EAAO9N,QAASzB,YAAa,KACnE,IAlDiC,4BAmD7B,IAAI2R,EAAajO,EAAM9E,KAEvB,OADA+S,EAAWxB,SAASvB,KAAOW,EAAO9N,QAC3B,2BAAIiC,GAAX,IAAkBvD,WAAYoP,EAAO9N,QAASzB,YAAa,GAAII,eAAgB,GAAIxB,KAAM+S,IAC7F,IArDwC,mCAsDpC,OAAO,2BAAIjO,GAAX,IAAkBzD,kBAAmBsP,EAAO9N,UAChD,IAtDqC,gCAuDjC,OAAO,2BAAIiC,GAAX,IAAkBtD,eAAgBmP,EAAO9N,UAC7C,IAvDuC,kCAwDnC,OAAO,2BAAIiC,GAAX,IAAkBrD,qBAAsBkP,EAAO9N,UACnD,IArDkB,aAsDd,OAAO,2BAAIiC,GAAX,IAAkB3D,aAAa,EAAMnB,KAAM2Q,EAAO9N,QAAStB,gBAAwCuR,IAA5BnC,EAAO9N,QAAQ0O,SAAyBZ,EAAO9N,QAAQ0O,SAASvB,KAAO,CAACtH,GAAI,EAAG7J,MAAO,0CACjK,IAtDkB,aAuDd,IAAI+f,EAAiB9Z,EAAM9E,KAE3B,OADA4e,EAAe/K,UAAW,EACnB,2BAAI/O,GAAX,IAAkB/E,OAAQ4Q,EAAO9N,QAAS7C,KAAM4e,IACpD,IA9D8C,yCA+D1C,OAAO,2BAAI9Z,GAAX,IAAkBpD,sBAAuBiP,EAAO9N,UACpD,IA/DiD,4CAgE7C,OAAO,2BAAIiC,GAAX,IAAkBnD,yBAA0BgP,EAAO9N,UACvD,IAhE2C,sCAiEvC,OAAO,2BAAIiC,GAAX,IAAkBlD,mBAAoB+O,EAAO9N,UACjD,IA/DyB,oBAgErB,OAAO,2BAAIiC,GAAX,IAAkBhE,OAAQ6P,EAAO9N,UACrC,IAhEa,QAiET,IAAMkZ,EAAUjX,EAAM6L,EAAO9N,QAAQoB,MAAM,WAE3C,OADA8X,EAAQ9T,KAAK0I,EAAO9N,QAAQqB,OACrB,2BAAIY,GAAX,uBAAmB,cAAc6L,EAAO9N,QAAQoB,MAAQ0M,EAAO9N,QAAQqB,OAAvE,cAA+EyM,EAAO9N,QAAQoB,MAAM,UAAY8X,GAAhH,IACJ,IAnEkB,aAoEd,IAAI8C,EAAa/Z,EAAM6L,EAAO9N,QAAQoB,MAAM,WAE5C,OADA4a,EAAWC,MACJ,2BAAIha,GAAX,uBAAmB6L,EAAO9N,QAAQoB,MAAM,UAAY4a,GAApD,cAAiE,cAAclO,EAAO9N,QAAQoB,MAAQ4a,EAAWA,EAAWhX,OAAQ,IAApI,IACJ,IAtEoB,eAuEhB,OAAO,2BAAI/C,GAAX,IAAkBvC,YAAaoO,EAAO9N,UAC1C,IAvE6B,wBAwEzB,OAAO,2BAAIiC,GAAX,IAAkBtC,aAAcmO,EAAO9N,UAG/C,OAAOiC,K4B5EXyC,IAAOC,KAAK,eAAgB,IAE5B,IAAI6V,GAAcnN,OACbqB,SACAwN,KACApS,QAAQ,IAAI,IACZqS,MAAM,KACNC,QACG,SAASC,EAAE1Y,GACP,IAAI2Y,EAAI3Y,EAAEwY,MAAM,KAEhB,OADAE,EAAGE,mBAAmBD,EAAE,KAAOC,mBAAmBD,EAAE,IAC7CD,IAEX,IAGJpe,GAASoP,OACRqB,SACAwE,OACApJ,QAAQ,IAAI,IACZqS,MAAM,KACNC,QACG,SAASC,EAAE1Y,GACP,IAAI2Y,EAAI3Y,EAAEwY,MAAM,KAEhB,OADAE,EAAGE,mBAAmBD,EAAE,KAAOC,mBAAmBD,EAAE,IAC7CD,IAEX,IAGRG,IAASC,OAAO,kBAAC,IAAD,CAAUZ,MAAOA,IACb,kBAAC,GAAD,CAAKvB,aAAcrc,GAAQuc,WAAYA,MAC9BzI,SAASC,eAAe,SDmF/C,kBAAmB0K,WACrBA,UAAUC,cAAcC,MAAMzZ,MAAK,SAAA0Z,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.7cae8470.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","const BACK_LINK = process.env.REACT_APP_BACK_LINK;\r\n\r\nexport const BACKEND = {\r\n    users: {\r\n        auth: BACK_LINK+'users/auth/',\r\n        like: BACK_LINK+'users/like/'\r\n    },\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/',\r\n        connect: BACK_LINK+'masters/connect/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/',\r\n        getCities: BACK_LINK+'vkapi/getCities',\r\n        isMember: BACK_LINK+'vkapi/isMember'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    moder: BACK_LINK+'masters/moderation/',\r\n    moderCom: BACK_LINK+'comment/moderation/',\r\n};","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS';\r\nexport const GO_TO = 'GO_TO';\r\nexport const GO_FORWARD = 'GO_FORWARD';\r\nexport const CHANGE_STORY = 'CHANGE_STORY';\r\nexport const CHANGE_ACTIVE_VIEW_LK = 'CHANGE_ACTIVE_VIEW_LK';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: null,\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null,\r\n    activePanelnews: 'news',\r\n    activePanelmasters: 'mastersList',\r\n    activePanelfindmodel: 'findmodel',\r\n    activePanellk: 'lk',\r\n    activePanelregistration: 'registration',\r\n    newsHistory: ['news'],\r\n    mastersHistory: ['mastersList'],\r\n    findmodelHistory: ['findmodel'],\r\n    lkHistory: ['lk'],\r\n    registrationHistory: ['registration'],\r\n    activeStory: 'news',\r\n    activeViewLk: 'lk'\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity: action.payload.location !== undefined ? action.payload.location.city : {id: 1, title: 'Москва'}};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload};\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload};\r\n        case GO_TO:\r\n            const history = state[action.payload.story+'History'];\r\n            history.push(action.payload.panel);\r\n            return {...state, ['activePanel'+action.payload.story]: action.payload.panel, [action.payload.story+'History']: history};\r\n        case GO_FORWARD:\r\n            let newhistory = state[action.payload.story+'History'];\r\n            newhistory.pop();\r\n            return {...state, [action.payload.story+'History']: newhistory, ['activePanel'+action.payload.story]: newhistory[newhistory.length -1]};\r\n        case CHANGE_STORY:\r\n            return {...state, activeStory: action.payload};\r\n        case CHANGE_ACTIVE_VIEW_LK:\r\n            return {...state, activeViewLk: action.payload}\r\n\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS,\r\n    GO_TO,\r\n    GO_FORWARD,\r\n    CHANGE_STORY,\r\n    CHANGE_ACTIVE_VIEW_LK\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER');\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER');\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS');\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    };\r\n};\r\n\r\nexport const goTo = (story, panel) => {\r\n    return {\r\n        type: GO_TO,\r\n        payload: {story: story, panel: panel}\r\n    };\r\n};\r\n\r\nexport const goForward = (story) => {\r\n    return {\r\n        type: GO_FORWARD,\r\n        payload: {story: story}\r\n    };\r\n};\r\n\r\nexport const changeStory = (story) => {\r\n    return {\r\n        type: CHANGE_STORY,\r\n        payload: story\r\n    };\r\n};\r\n\r\nexport const changeActiveViewLk = (activeView) => {\r\n    return {\r\n        type: CHANGE_ACTIVE_VIEW_LK,\r\n        payload: activeView\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner,\r\n    Header,\r\n    Card,\r\n    CardGrid,\r\n    CardScroll,\r\n    Button,\r\n    FormLayout,\r\n    RichCell,\r\n    CellButton,\r\n    Placeholder,\r\n    Panel,\r\n    SimpleCell, Input, ModalCard, ModalRoot\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData, postData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline';\r\nimport Head from \"../elements/panelHeader\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {loginUser, changeMastersList} from \"../store/actions\";\r\nimport Icon56AccessibilityOutline from '@vkontakte/icons/dist/56/accessibility_outline';\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false,\r\n            activeMaster: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.setState({activeMaster: this.props.activeMaster}, ()=> {\r\n           if (this.props.activeMaster !== null){\r\n               this.loadFavs()\r\n           }\r\n       })\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            let mastersList = this.props.mastersList;\r\n            let newMastersList = mastersList.map(master=>{\r\n                if (master._id === this.state.activeMaster._id){\r\n                    if (master.subscribers.includes(this.props.user._id)){\r\n                        master.subscribers = master.subscribers.filter(item => item !== this.props.user._id)\r\n                    } else {\r\n                        master.subscribers.push(this.props.user._id)\r\n                    }\r\n                    return master\r\n                } else {\r\n                    return master\r\n                }\r\n            });\r\n            this.props.changeMastersList(newMastersList);\r\n            postData(BACKEND.users.like+this.state.activeMaster._id, this.props.params);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        console.log(event.target.name, event.target.value)\r\n        this.setState({[event.target.name]: event.target.value}, ()=> console.log(this.state));\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let data = {\r\n            params: this.props.params,\r\n            title: this.state.sendtitle,\r\n            phone: this.state.phone\r\n        };\r\n        fetch(BACKEND.masters.connect+this.state.activeMaster._id, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar(res.error, this.state.activeMaster.avatarLink)\r\n                } else {\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n            .catch(e=> {\r\n                this.props.openModal(null)\r\n                this.openSnackAvatar(e.message, this.state.activeMaster.avatarLink)\r\n            });\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.getPhone(title)}\r\n                mode=\"outline\"\r\n            >\r\n                Записаться\r\n            </Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938#masterid='+this.state.activeMaster._id})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            });\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers.length, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppGetPhoneNumberResult'){\r\n                    this.setState({phone: result.phone_number});\r\n                    this.enterNumber(result.phone_number)\r\n                }\r\n                if (result.type === 'VKWebAppGetPhoneNumberFailed '){\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.enterNumber()\r\n            })\r\n    };\r\n\r\n    enterNumber = (number) => {\r\n        if (number){\r\n            this.setState({phone: number})\r\n        } else {\r\n            this.setState({phone: null})\r\n        }\r\n        this.props.openModal(\r\n            <ModalRoot\r\n                activeModal={'phoneNumber'}\r\n                onClose={this.props.openModal(null)}\r\n            >\r\n            <ModalCard\r\n                id={'phoneNumber'}\r\n                onClose={() => this.props.openModal(null)}\r\n                header=\"Укажите номер телефона\"\r\n                caption={\r\n                    <FormLayout>\r\n                        <Div className=\"FormField Input Input--center\">\r\n                            <InputMask\r\n                                className=\"Input__el\"\r\n                                //mask=\"7 (999) 999-99-99\"\r\n                                name=\"phone\"\r\n                                type=\"number\"\r\n                                //defaultValue={number || ''}\r\n                                align=\"center\"\r\n                                value={this.state.phone}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <Div className=\"FormField__border\"></Div>\r\n                        </Div>\r\n                        <p>Укажите номер телефона начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                        <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                }\r\n                // actions={[{\r\n                //     title: 'Попробовать',\r\n                //     mode: 'primary',\r\n                //     action: () => {\r\n                //         this.setActiveModal(MODAL_CARD_APP_TO_MENU);\r\n                //     }\r\n                // }]}\r\n            >\r\n\r\n            </ModalCard>\r\n            </ModalRoot>\r\n        );\r\n    }\r\n\r\n    // enterNumber = (number) => {\r\n    //     if (number){\r\n    //         this.setState({phone: number})\r\n    //     } else {\r\n    //         this.setState({phone: null})\r\n    //     }\r\n    //     this.setState({ snackbar:\r\n    //             <Snackbar\r\n    //                 duration='99999999999999'\r\n    //                 layout=\"vertical\"\r\n    //                 onClose={() => this.setState({ snackbar: null })}\r\n    //             >\r\n    //                 <h2>Укажите номер телефона</h2>\r\n    //                 <FormLayout>\r\n    //                 <Div className=\"FormField Input Input--center\">\r\n    //                     <InputMask\r\n    //                         className=\"Input__el\"\r\n    //                         //mask=\"7 (999) 999-99-99\"\r\n    //                         name=\"phone\"\r\n    //                         type=\"number\"\r\n    //                         //defaultValue={number || ''}\r\n    //                         align=\"center\"\r\n    //                         value={this.state.phone}\r\n    //                         onChange={this.handleChange}\r\n    //                     />\r\n    //                     <Div className=\"FormField__border\"></Div>\r\n    //                 </Div>\r\n    //                 <p>Укажите номер телефона начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n    //                 <Button onClick={this.sendMessage}>Отправить</Button>\r\n    //                 </FormLayout>\r\n    //             </Snackbar>\r\n    //     });\r\n    // };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if (this.props.activeMaster === null){\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Мы не знаем таких мастеров.\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else if (this.props.activeMaster.error){\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Тут никого нет :)\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        }\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Тут никого нет :)\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер предпочел скрыть свой профиль.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                <React.Fragment>\r\n                        {/*<RichCell*/}\r\n                        {/*    disabled*/}\r\n                        {/*    multiline*/}\r\n                        {/*    before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}*/}\r\n                        {/*    bottom={*/}\r\n                        {/*            <React.Fragment style={{marginLeft: 10, padding: 0}}>*/}\r\n                        {/*                        <Button onClick={() => this.share()}>Поделиться</Button>*/}\r\n                        {/*                {*/}\r\n                        {/*                    this.props.user.vkUid === this.state.activeMaster.vkUid*/}\r\n                        {/*                        ?*/}\r\n                        {/*                        null*/}\r\n                        {/*                        :*/}\r\n                        {/*                        this.favStatus()*/}\r\n                        {/*                }*/}\r\n                        {/*            </React.Fragment>*/}\r\n                        {/*    }*/}\r\n                        {/*>*/}\r\n                        {/*    <SimpleCell description={this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}>{this.state.activeMaster.firstname} {this.state.activeMaster.lastname}</SimpleCell>*/}\r\n                        {/*</RichCell>*/}\r\n                        <Group separator={'hide'}>\r\n                            <CardGrid>\r\n                                <Card size=\"l\">\r\n                                    <RichCell\r\n                                        disabled\r\n                                        multiline\r\n                                        before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                                        text={\r\n                                            <React.Fragment style={{fontSize: 12, color: 'darkgray'}}>\r\n                                                {this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        caption={\r\n                                            <React.Fragment style={{marginLeft: 10, marginTop: 10, padding: 0}}>\r\n                                                <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                                {\r\n                                                    this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                                        ?\r\n                                                        null\r\n                                                        :\r\n                                                        this.favStatus()\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        //after={this.props.master !== null && <Icon24Write onClick={this.props.openSetting}/>}\r\n                                    >\r\n                                        {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                                    </RichCell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                        </Group>\r\n                        <Separator/>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.props.openComments()} indicator={this.state.activeMaster.meta.comments || 0}\r\n                                description={'Подписчиков: ' + this.state.countFavs}\r\n                            >\r\n                                Отзывы\r\n                            </Cell>\r\n                            {/*{this.subscribers()}*/}\r\n                            {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                        </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Div>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Div> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        style={{borderRadius: '10px 10px 10px 10px'}}\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <React.Fragment>\r\n                                                            <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                        </React.Fragment>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params,\r\n        mastersList: state.mastersList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MastersCard);","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport {connect} from \"react-redux\";\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: [],\r\n            onModer: 0\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars();\r\n        // this.props.activeMaster.comments.map(comment => {\r\n        //     if (comment !== null && comment.user === this.props.user._id) {\r\n        //         this.setState({isCommended: true})\r\n        //     }\r\n        // });\r\n        //let count = this.props.activeMaster.comments.length;\r\n        fetch(BACKEND.comment.onMasterId+this.props.activeMaster._id)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ids.includes(this.props.user._id)){\r\n                    this.setState({isCommended: true})\r\n                }\r\n                this.setState({commentsArr: res.comments, countComments: res.comments.length, isLoad: true, onModer: res.onModer});\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = [];\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            }\r\n        }\r\n        this.setState({stars: stars});\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера';\r\n            if (this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body.replace(/(\\r?\\n){2,}/g, '$1'),\r\n                moderation: false,\r\n                params: this.props.params\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                // let arr = this.state.commentsArr;\r\n                // data.date = \"Комментарий отправлен на проверку\";\r\n                // arr.push(data);\r\n                if (data.error){\r\n                    console.log(data.error)\r\n                } else {\r\n                    this.setState({isCommended: true, onModer: this.state.onModer +1, snackbar:\r\n                            <Snackbar\r\n                                layout=\"vertical\"\r\n                                onClose={() => this.setState({ snackbar: null })}\r\n                            >\r\n                                Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                            </Snackbar>});\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                if (this.state.snackbar) this.setState({snackbar: null});\r\n                this.setState({ snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({snackbar: null })}\r\n                        >\r\n                            {e.message}\r\n                        </Snackbar>\r\n                })\r\n                });\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </Div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={comment.rating+` из 5`}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            bottom={'Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/ /g, \"\").replace(/(\\r?\\n){2,}/g, '$1').length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <React.Fragment>\r\n                    {\r\n                        this.state.onModer !== 0 ?\r\n                            <Cell indicator={this.state.onModer} before={<Icon24CommentOutline/>}>Отзывов на модерации</Cell> : null\r\n                    }\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0,0);\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers, countCities: data.countCities, cities: data.cities.sort()})\r\n            });\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранное</Button>}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        const data = {\r\n            user_id: this.props.user.vkUid,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.vkapi.isMember,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ingroup === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {this.props.master === null &&\r\n                    <Cell\r\n                        style={{borderRadius: '0 0 10px 10px'}}\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы — мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <React.Fragment>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        <Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>\r\n                        <Cell multiline>\r\n                            {\r\n                                this.state.cities &&\r\n                                this.state.cities.map((city, index)=>{\r\n                                    if (index + 1 !== this.state.cities.length){\r\n                                        return city+', '\r\n                                    } else {\r\n                                        return city\r\n                                    }\r\n                                })\r\n                            }\r\n                        </Cell>\r\n                    </React.Fragment>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                    <Group>\r\n                        <Placeholder\r\n                            icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                            header=\"Привет!\"\r\n                        >\r\n                            У нас можно найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                        </Placeholder>\r\n                        {this.userInfo(user)}\r\n                        {this.nowCounter()}\r\n                        {this.isMember()}\r\n                        {this.favApp()}\r\n                        {/*{this.feedList()}*/}\r\n                        {/*<FixedLayout*/}\r\n                        {/*    vertical=\"bottom\"*/}\r\n                        {/*    style={{marginBottom: 5}}*/}\r\n                        {/*>*/}\r\n                        {/*    */}\r\n                        {/*</FixedLayout>*/}\r\n                    </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton, Alert, List\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: [],\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            qapi: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0,0);\r\n        this.getCategories();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.props.setAlert(\r\n            <Alert\r\n                actionsLayout=\"vertical\"\r\n                actions={[{\r\n                    title: 'Удалить процедуру',\r\n                    autoclose: true,\r\n                    mode: 'destructive',\r\n                    action: () => this.onRemove(index),\r\n                }, {\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    mode: 'cancel'\r\n                }]}\r\n                onClose={()=>this.props.setAlert(null)}\r\n            >\r\n                <h2>Подтвердите действие</h2>\r\n                <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n            </Alert>\r\n        );\r\n    };\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20-ти символов.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать более 20-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                description: this.state.description,\r\n                type: this.state.type,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                priceList: this.state.priceList,\r\n                params: this.props.params\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    validateNewProdTitle(newProdTitle){\r\n        if (newProdTitle === undefined){\r\n            return {status: false, error: 'Не заполнено название процедуры.'};\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20){\r\n                return {status: false, error: 'Недопустимая длина заголовка.'};\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2){\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody){\r\n        if (newProdBody === undefined){\r\n            return {status: false, error: 'Не заполнено описание процедуры.'};\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250){\r\n                return {status: false, error: 'Недопустимая длина описания.'};\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5){\r\n                    return {status: false, error: 'Недопустимая длина описания.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice){\r\n        if (newProdPrice === undefined){\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'};\r\n        } else {\r\n            if (newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").trim().length > 5){\r\n                return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n            } else {\r\n                if (newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").trim().length < 1){\r\n                    return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n                } else {\r\n                    if (Number(newProdPrice) < 0){\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'};\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle);\r\n            console.log(title)\r\n            if (!title.status) throw title.error;\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody);\r\n            console.log(body)\r\n            if (!body.status) throw body.error;\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice);\r\n            console.log(price);\r\n            if (!price.status) throw price.error;\r\n            //if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры.';\r\n            //if (this.state.newProdTitle.replace(/ +/g, ' ').trim().length > 20 || this.state.newProdTitle.replace(/ +/g, ' ').trim().length < 2) throw 'Недопустимая длина заголовка.';\r\n            //if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры.';\r\n            //if (this.state.newProdBody.replace(/ +/g, ' ').trim().length > 250 || this.state.newProdBody.replace(/ +/g, ' ').trim().length < 5) throw 'Недопустимая длина описания.';\r\n            //if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры.';\r\n            //if (Number(this.state.newProdPrice) < 0) throw 'Нельзя указать отрицательную стоимость.';\r\n            //if (this.state.newProdPrice.replace(/ +/g, ' ').trim().length > 5 || this.state.newProdPrice.replace(/ +/g, ' ').trim().length < 1) throw 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice)\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена.');\r\n    };\r\n    permMessage = () => {\r\n            if(this.state.qapi === false){\r\n                this.setState({qapi: true});\r\n                bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                    .then(result => {\r\n                        this.setState({statusMessage: result.result, qapi: false})\r\n                    })\r\n                    .catch(e => {\r\n                        this.setState({qapi: false});\r\n                        console.log(e)\r\n                    })\r\n            } else {\r\n                return null\r\n            }\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                            <Group>\r\n                                <CardGrid>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell\r\n                                            size=\"l\"\r\n                                            description=\"Регистрация мастера\"\r\n                                            before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                        >\r\n                                            {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                        </Cell>\r\n                                        <Cell\r\n                                            expandable\r\n                                            onClick={this.props.changeCity}\r\n                                            indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                            status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                            bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                        >\r\n                                            Ваш город\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                                <Cell\r\n                                    multiline\r\n                                    asideContent={\r\n                                        <Switch\r\n                                            onChange={this.permMessage}\r\n                                            checked={this.state.statusMessage}/>\r\n                                    }\r\n                                    bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                </Cell>\r\n                                <Textarea\r\n                                    name={'description'}\r\n                                    bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                    top=\"О себе\"\r\n                                    value={this.state.description}\r\n                                    onChange={this.handleChange}/>\r\n                            </Group>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что Вы выполняете. Так Вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                // removable\r\n                                                // onRemove={() => {\r\n                                                //     this.onRemove(index)\r\n                                                // }}\r\n                                                >\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            <Button\r\n                                                //before={<Icon24Dismiss/>}\r\n                                                onClick={() => {this.deleteProcedure(index)}}\r\n                                                size=\"xl\"\r\n                                                mode=\"destructive\"\r\n                                            >Удалить</Button>\r\n                                            </Cell>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <List>\r\n                                            <Cell description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length+\"/20\"}>\r\n                                                <Input\r\n                                                    require\r\n                                                    status={this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error'}\r\n                                                    name=\"newProdTitle\"\r\n                                                    type=\"text\"\r\n                                                    value={this.state.newProdTitle}\r\n                                                    placeholder={'Введите название'}\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Cell>\r\n                                            <Cell description={this.state.newProdBody.replace(/ +/g, ' ').trim().length+\"/250\"}>\r\n                                                <Textarea\r\n                                                    require\r\n                                                    status={this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error'}\r\n                                                    name=\"newProdBody\"\r\n                                                    value={this.state.newProdBody}\r\n                                                    placeholder={'Укажите описание'}\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Cell>\r\n                                            <Cell description={this.state.newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").trim().length+\"/5\"}>\r\n                                                <Input\r\n                                                    require\r\n                                                    status={this.validateNewProdPrice(this.state.newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\")).status ? 'valid' : 'error'}\r\n                                                    name=\"newProdPrice\"\r\n                                                    type=\"number\" value={this.state.newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\")}\r\n                                                    placeholder={'Укажите цену'}\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Cell>\r\n                                        </List>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button, Card, CardGrid, RichCell} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            if (this.props.master.moderation.reasons.length > 0) {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size='xl'>\r\n                            <Cell description={'Их необходимо исправить'}>При модерации обнаружены ошибки:</Cell>\r\n                            {\r\n                                this.props.master.moderation.reasons.map((reason, index)=>{\r\n                                    return <Cell key={index}>{reason}</Cell>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size='xl'>\r\n                            <Cell multiline>Ваш профиль на проверке. В течение часа он будет доступен в поиске.</Cell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Group separator={'hide'}>\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar src={this.props.user.avatarLink} size={62}/>}\r\n                                text={this.props.master ? this.props.master.type : 'Пользователь'}\r\n                                caption={this.props.master && this.props.master.location.city.title}\r\n                                after={this.props.master !== null && <Icon24Write onClick={this.props.openSetting}/>}\r\n                            >\r\n                                {this.props.user.firstname+' '+this.props.user.lastname}\r\n                            </RichCell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                </Group>\r\n                {this.props.master !== null && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.props.master !== null &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Lk);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    File,\r\n    FormLayout,\r\n    CardGrid,\r\n    Card,\r\n    Snackbar,\r\n    Cell,\r\n    PanelSpinner,\r\n    Spinner,\r\n    CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24Gallery from '@vkontakte/icons/dist/24/gallery';\r\n\r\nclass Portfolio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        this.setState({images: this.props.master.photos, isLoad: true});\r\n    }\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        try {\r\n            if (this.state.uploadUrl === undefined) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n            if (this.state.token === undefined) throw 'Ошибка. Не получен токен пользователя.';\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            formData.append('master', this.props.master.firstname+' '+this.props.master.lastname );\r\n            formData.append('uploadUrl', this.state.uploadUrl);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            formData.append('masterId', this.props.master._id);\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error){\r\n                        this.setState({loading: false});\r\n                        this.openSnack(res.error);\r\n                    } else {\r\n                        fetchJsonp(res.saveUrl, {\r\n                            mode: 'no-cors',\r\n                            method: 'GET'\r\n                        })\r\n                            .then(result => result.json())\r\n                            .then(result =>{\r\n                                const savePh = {\r\n                                    url: result.response[0].sizes[2].url,\r\n                                    params: this.props.params\r\n                                };\r\n                                fetch(BACKEND.vkapi.savePhoto, {\r\n                                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                                    mode: 'cors', // no-cors, cors, *same-origin\r\n                                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                    credentials: 'same-origin', // include, *same-origin, omit\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    redirect: 'follow', // manual, *follow, error\r\n                                    referrer: 'no-referrer', // no-referrer, *client\r\n                                    body: JSON.stringify(savePh)\r\n                                })\r\n                                    .then(res => res.json())\r\n                                    .then(res =>{\r\n                                        if (res.error){\r\n                                            this.setState({loading: false});\r\n                                            this.openSnack(res.error);\r\n                                        } else {\r\n                                            let imgArr = this.state.images;\r\n                                            imgArr.push(res.img);\r\n                                            this.openSnack('Фото успешно загружено.');\r\n                                            this.setState({images: imgArr, loading: false});\r\n                                        }\r\n                                    })\r\n                                    .catch(e=>console.log(e))\r\n                            })\r\n                            .catch(e=>console.log(e))\r\n                        // console.log(res);\r\n                        // let imgArr = this.state.images;\r\n                        // imgArr.unshift(res.img);\r\n                        // this.openSnack('Фото успешно загружено');\r\n                        // this.setState({images: imgArr, loading: false});\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    this.setState({loading: false});\r\n                    this.openSnack(error);\r\n                })\r\n        } catch(e){\r\n            this.openSnack(e);\r\n        }\r\n\r\n    };\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(result => {\r\n                if (result.access_token){\r\n                    this.setState({token: result.access_token})\r\n                    this.getUploadServer(result.access_token)\r\n                    //return result.access_token //this.getUploadServer(data.access_token);\r\n                }\r\n                // if (result.type === 'VKWebAppGetAuthTokenResult'){\r\n                //     this.setState({token: result.data.access_token})\r\n                //     return result.data.access_token //this.getUploadServer(data.access_token);\r\n                // }\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                {\r\n                                    this.state.token ?\r\n                                        <File\r\n                                            accept=\"image/*\"\r\n                                            top=\"Добавьте фото в портфолио\"\r\n                                            before={<Icon24Camera />}\r\n                                            size=\"l\"\r\n                                            onChange={this.uploadPhoto}\r\n                                            //onClick={this.getToken}\r\n                                            id=\"input\"\r\n                                        >\r\n                                            Открыть галерею\r\n                                        </File> :\r\n                                        <CellButton onClick={()=>this.getToken()} before={<Icon24Gallery />}>Разрешить доступ к фото</CellButton>\r\n\r\n                                }\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Portfolio);","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const data = {\r\n            search: this.state.search.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    List,\r\n    Alert,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null,\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n            if (this.props.master.changed)this.setState({isChange: true})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAlert(null)\r\n        this.saveChanges()\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps.targetCity !== this.props.targetCity){\r\n    //         let master = this.state.master;\r\n    //         master.location.city = this.props.targetCity;\r\n    //         this.setState({master: master});\r\n    //     }\r\n    // }\r\n\r\n    saveChanges = () => {\r\n        try{\r\n            if (this.state.master.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.';\r\n            if (this.state.master.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.';\r\n            if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.';\r\n              if (this.state.isChange === true){\r\n                  const master = this.state.master;\r\n                  master.params = this.props.params;\r\n                  this.patchData(BACKEND.masters.all + this.state.master._id, master);\r\n                  this.props.setMaster(this.state.master);\r\n              }\r\n        }catch(e){\r\n            this.props.snackbar(e);\r\n        }\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n            this.setState({isLoad: true})\r\n        }\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.setState({isChange: true});\r\n        this.props.setAlert(\r\n                    <Alert\r\n                        actionsLayout=\"vertical\"\r\n                        actions={[{\r\n                            title: 'Удалить процедуру',\r\n                            autoclose: true,\r\n                            mode: 'destructive',\r\n                            action: () => this.onRemove(index),\r\n                        }, {\r\n                            title: 'Отмена',\r\n                            autoclose: true,\r\n                            mode: 'cancel'\r\n                        }]}\r\n                        onClose={()=>this.props.setAlert(null)}\r\n                    >\r\n                        <h2>Подтвердите действие</h2>\r\n                        <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n                    </Alert>\r\n        );\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        this.setState({isChange: true});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.props.snackbar('Изменения сохранены.');\r\n            })\r\n            .catch(e=>console.log(e.message))\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n        this.setState({isChange: true});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        this.setState({isChange: true});\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    validateNewProdTitle(newProdTitle){\r\n        if (newProdTitle === undefined){\r\n            return {status: false, error: 'Не заполнено название процедуры.'};\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20){\r\n                return {status: false, error: 'Недопустимая длина заголовка.'};\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2){\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody){\r\n        if (newProdBody === undefined){\r\n            return {status: false, error: 'Не заполнено описание процедуры.'};\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250){\r\n                return {status: false, error: 'Недопустимая длина описания.'};\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5){\r\n                    return {status: false, error: 'Недопустимая длина описания.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice){\r\n        if (newProdPrice === undefined){\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'};\r\n        } else {\r\n            if (newProdPrice.replace(/ +/g, ' ').trim().length > 5){\r\n                return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n            } else {\r\n                if (newProdPrice.replace(/ +/g, ' ').trim().length < 1){\r\n                    return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n                } else {\r\n                    if (Number(newProdPrice) < 0){\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'};\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle);\r\n            if (!title.status) throw title.error;\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody);\r\n            if (!body.status) throw body.error;\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice);\r\n            if (!price.status) throw price.error;\r\n            //if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры.';\r\n            //if (this.state.newProdTitle.replace(/ +/g, ' ').trim().length > 20 || this.state.newProdTitle.replace(/ +/g, ' ').trim().length < 2) throw 'Недопустимая длина заголовка.';\r\n            //if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры.';\r\n            //if (this.state.newProdBody.replace(/ +/g, ' ').trim().length > 250 || this.state.newProdBody.replace(/ +/g, ' ').trim().length < 5) throw 'Недопустимая длина описания.';\r\n            //if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры.';\r\n            //if (Number(this.state.newProdPrice) < 0) throw 'Нельзя указать отрицательную стоимость.';\r\n            //if (this.state.newProdPrice.replace(/ +/g, ' ').trim().length > 5 || this.state.newProdPrice.replace(/ +/g, ' ').trim().length < 1) throw 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice)\r\n            });\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.openSnack('Процедура добавлена.');\r\n            this.setState({isChange: true});\r\n        } catch (error) {\r\n            this.openSnackDismiss(error)\r\n        }\r\n    };\r\n    // saveProd = () => {\r\n    //     try {\r\n    //         if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n    //         if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n    //         if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n    //         let master = this.state.master;\r\n    //         master.priceList.push({\r\n    //             title: this.state.newProdTitle,\r\n    //             body: this.state.newProdBody,\r\n    //             price: this.state.newProdPrice\r\n    //         });\r\n    //         this.setState({master: master});\r\n    //         this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n    //         this.props.snackbar('Процедура добавлена');\r\n    //     } catch (error) {\r\n    //         this.props.snackbar(error)\r\n    //     }\r\n    // };\r\n\r\n    counter = (index) => {\r\n        // let countMass = this.state.categories[index].subcat.map(subcat=>{\r\n        //     if (subcat.active === true){\r\n        //         return subcat.label\r\n        //     }\r\n        // });\r\n        let countMass = this.state.categories[index].subcat.filter(subcat=> {\r\n            if (subcat.active === true) {\r\n                return subcat.label\r\n            }\r\n\r\n            // function(item){\r\n            //     if (item.active === true){\r\n            //         return item.active;\r\n            //     } else {\r\n            //         return null\r\n            //     }\r\n            // }\r\n        });\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.goBack();\r\n        this.setState({isChange: true});\r\n        //this.props.changeModal('setting');\r\n    };\r\n\r\n    statusProfile = () => {\r\n        if (this.state.master.moderation.status === false){\r\n            return 'На модерации'\r\n        } else if (this.state.master.visible === false){\r\n            return 'Ваш профиль не выводится в поиске'\r\n        } else {\r\n            return 'Ваш профиль доступен в поиске'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={this.statusProfile()}\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => {this.props.changeCity()}}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\" key={index}>\r\n                                                <Cell\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    //removable\r\n                                                    // onRemove={() => {\r\n                                                    //     this.onRemove(index)\r\n                                                    // }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                    <Button\r\n                                                        //before={<Icon24Dismiss/>}\r\n                                                        onClick={() => this.deleteProcedure(index)}\r\n                                                        size=\"xl\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Удалить</Button>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add ?\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <List>\r\n                                                <Cell description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length+\"/20\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error'}\r\n                                                        name=\"newProdTitle\"\r\n                                                        type=\"text\"\r\n                                                        value={this.state.newProdTitle}\r\n                                                        placeholder={'Введите название'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdBody.replace(/ +/g, ' ').trim().length+\"/250\"}>\r\n                                                    <Textarea\r\n                                                        require\r\n                                                        status={this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error'}\r\n                                                        name=\"newProdBody\"\r\n                                                        value={this.state.newProdBody}\r\n                                                        placeholder={'Укажите описание'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").trim().length+\"/5\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={this.validateNewProdPrice(this.state.newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\")).status ? 'valid' : 'error'}\r\n                                                        name=\"newProdPrice\"\r\n                                                        type=\"number\" value={this.state.newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\")}\r\n                                                        placeholder={'Укажите цену'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                            </List>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div> :\r\n                                        <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                        >Добавить процедуру</CellButton>\r\n                                    }\r\n                                </Group>\r\n                                {/*<Group>*/}\r\n                                {/*    <CellButton*/}\r\n                                {/*        onClick={() => this.addProd(true)}*/}\r\n                                {/*        before={<Icon24Add/>}*/}\r\n                                {/*    >Добавить процедуру</CellButton>*/}\r\n                                {/*</Group>*/}\r\n                                <Group>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={(event)=>{this.setState({isChange: true}); this.checkSubcat(event)}}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                        {this.state.snackbar}\r\n                            </Div>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid, Footer, Group\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\nimport Head from \"../elements/panelHeader\";\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title='Избранное'\r\n                        goBack={()=>this.props.goBack()}\r\n                    />\r\n                <Placeholder\r\n                    stretched\r\n                    icon={<Spinner size=\"large\" style={{ marginTop: 20 }} />}\r\n                    header={'Ищем-ищем...'}\r\n                ></Placeholder>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.error) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title='Избранное'\r\n                            goBack={()=>this.props.goBack()}\r\n                        />\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56LikeOutline/>}\r\n                            header={this.state.mastersArr.message}\r\n                        >Добавить мастера в этот список можно, нажав соответствующую кнопку в профиле мастера.\r\n                        </Placeholder>\r\n                    </React.Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title='Избранное'\r\n                            goBack={()=>this.props.goBack()}\r\n                        />\r\n                        <Group separator=\"hide\">\r\n                            {\r\n                                this.state.mastersArr.map(master => {\r\n                                    if ((master !== null)) { //если мастер не удален\r\n                                        return (\r\n                                            <React.Fragment>\r\n                                                <CardGrid key={master.vkUid}>\r\n                                                    <Card size=\"l\" mode=\"shadow\">\r\n                                                        <RichCell\r\n                                                            key={master._id}\r\n                                                            before={<Avatar size={72} src={master.avatarLink} />}\r\n                                                            text={master.type}\r\n                                                            caption={master.location.city.title}\r\n                                                            after={<Icon16Chevron/>}\r\n                                                            onClick={() => this.props.openFavMasterOnId(master)}\r\n                                                        >\r\n                                                            {master.firstname} {master.lastname}\r\n                                                        </RichCell>\r\n                                                    </Card>\r\n                                                </CardGrid>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    }\r\n                                })\r\n                            }\r\n                        <Footer>На этом все. Мастеров всего - {this.state.mastersArr.length}.</Footer>\r\n                        </Group>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\n// function renderLastPhoto(arr){\r\n//     for (let i =0; i<arr.length; i++){\r\n//         if (!arr[i]) break;\r\n//         return (\r\n//             <Card\r\n//                 size=\"s\"\r\n//                 mode=\"shadow\"\r\n//                 key={i}\r\n//                 //onClick={() => this.openShowImages(this.state.images, index)}\r\n//             >\r\n//                 <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    //window.scrollTo(0, this.props.findModelsListScroll)\r\n                    bridge.send(\"VKWebAppScroll\", {\"top\": this.props.findModelsListScroll, \"speed\": 600});\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    console.log(find);\r\n                    this.props.changeFindModelsList(find);\r\n                    this.setState({findArr: find, isLoad: true});\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.findModel.onMasterId+this.props.master._id)\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                if (find.length > 0) {\r\n                    console.log(find);\r\n                    this.setState({loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                } else {\r\n                    let error = <Cell>У вас нет активных поисков</Cell>;\r\n                    this.setState({error: error, isLoaded: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length === 0) throw 'Пустое сообщение недопустимо';\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length > 250) throw 'Максимальная длина сообщения - 250 символов';\r\n            if(this.props.master.photos.length < 3) throw 'В портфолио должно быть не менее 3-х фотографий';\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            let images = [];\r\n            this.props.master.photos.map((image,i)=> {\r\n                if (i < 3){\r\n                    images.push(image)\r\n                }\r\n            });\r\n            if (this.state.isActive === true) {\r\n                let find = this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n                this.openSnack('Информация успешно обновлена.')\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                // find.masterId = this.state.activeMaster._id;\r\n                // find.location = this.state.activeMaster.location;\r\n                // find.firstname = this.state.activeMaster.firstname;\r\n                // find.lastname = this.state.activeMaster.lastname;\r\n                // find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                    fetch(BACKEND.findModel.new, {\r\n                        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                        mode: 'cors', // no-cors, cors, *same-origin\r\n                        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                        credentials: 'same-origin', // include, *same-origin, omit\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        redirect: 'follow', // manual, *follow, error\r\n                        referrer: 'no-referrer', // no-referrer, *client\r\n                        body: JSON.stringify(find), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res=>{\r\n                            this.setState({loadFind: res.find, isActive: true});\r\n                            if (res.mStatus === false){\r\n                                this.setState({visible: false});\r\n                                this.openSnack('Объявление о поиске модели создано, но пока не показывается. Его можно активировать сразу после прохождения модерации профиля мастера.')\r\n                            } else {\r\n                                this.openSnack('Объявление о поиске модели успешно создано.')\r\n                            }\r\n                        })\r\n                        .catch(e=>console.log(e));\r\n                //this.postData(BACKEND.findModel.new, find);\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.props.master.photos.length > 0 ?\r\n                                    this.props.master.photos.map((image,i)=>{\r\n                                        if (i < 3){\r\n                                            return (\r\n                                                <Card size='s' key={i}>\r\n                                                    <div\r\n                                                        style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                    >\r\n                                                    </div>\r\n                                                </Card>\r\n                                            )\r\n                                        }\r\n                                    }) : 'У вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий'\r\n                                }\r\n                                </CardGrid>\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>{\r\n                                            if (this.props.master.moderation.status === true){\r\n                                                this.setState({visible: !this.state.visible})\r\n                                            } else {\r\n                                                this.openSnack('Ваш профиль находится на модерации. Вы можете создать объявление уже сейчас, но до завершения проверки пользователи его не увидят.')\r\n                                            }\r\n                                        }}\r\n                                        checked={this.props.master.moderation.status === true ? this.state.visible : false}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModelMaster);","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если Вы являетесь владельцем сообщества с тематикой, схожей с тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\nimport Head from \"./panelHeader\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: false,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 49, title: 'Екатеринбург'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities('')\r\n    }\r\n\r\n    getCities(filter) {\r\n        const data = {\r\n            search: filter.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n}\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                        <React.Fragment>\r\n                            <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                            {this.state.cities.length > 0 ?\r\n                            <List>\r\n                                {this.state.cities.map(city =>\r\n                                    <Cell\r\n                                        description={city.region || ''}\r\n                                        onClick={()=>this.props.changeCity(city)}\r\n                                        key={city.id}\r\n                                    >\r\n                                        {city.title}\r\n                                    </Cell>\r\n                                )}\r\n                            </List> :\r\n                                <Placeholder\r\n                                    icon={<Icon56PlaceOutline />}\r\n                                    header=\"Город не найден\"\r\n                                >\r\n                                    Проверьте опечатки или измените критерии поиска\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel, Textarea, Cell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\n\r\nimport {BACKEND} from \"../func/func\";\r\nimport Head from \"../elements/panelHeader\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            })\r\n            .catch(e=>console.log(e))\r\n        fetch(BACKEND.comment.moderation,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                this.setState({comments: comments})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: [],\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        // if (index > -1) {\r\n        //     mastersList.splice(index, 1);\r\n        // } else mastersList.splice(0, index);\r\n        // this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        mastersList[index].moderation.reasons = reasons;\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n        this.setState({mastersList: mastersList});\r\n    };\r\n\r\n    goodComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'good');\r\n        fetch(BACKEND.moderCom+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    badComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'bad');\r\n        fetch(BACKEND.moderCom+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null;\r\n            console.log(comment)\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment._id, index)} mode=\"destructive\">Удалить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment.body}\r\n                        </RichCell>\r\n                        <Cell before={ <Avatar size={25} src={comment.user.avatarLink} /> }> From - {comment.user.firstname + ' ' + comment.user.lastname}</Cell>\r\n                        <Cell >To - {comment.to.name}</Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Cell>\r\n                                            <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                            <Button onClick={()=>this.setState({[master.vkUid]: true})} mode=\"secondary\">Отклонить</Button>\r\n                                        </Cell>\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                            {\r\n                                master.moderation.reasons.length > 0 &&\r\n                                <Cell>\r\n                                    {\r\n                                        master.moderation.reasons.map(reason=>{\r\n                                            return reason\r\n                                        })\r\n                                    }\r\n                                </Cell>\r\n                            }\r\n                            {\r\n                                this.state[master.vkUid] === true &&\r\n                                <Cell>\r\n                                    <Textarea name='reason' value={this.state.reason} onChange={(event)=>{\r\n                                        console.log(this.state.reason);\r\n                                        this.setState({reason: event.target.value})\r\n                                    }\r\n                                    }/>\r\n                                    <Button onClick={()=>this.bad(master._id, index)} mode=\"secondary\">Отклонить</Button>\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        if (this.props.params.vk_user_id !== '199500866'){\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Cell>У Вас нет доступа</Cell>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Head\r\n                        title={'Модерация'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'masters' })}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'comments' })}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Moder);","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder, Footer} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell\r\n                            style={{borderRadius: '10px 10px 10px 10px'}}\r\n                            expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(master.meta)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster(master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        });\r\n    }\r\n\r\n    setBottom = (meta) => {\r\n        if (meta.comments > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {meta.rating} из {meta.comments} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.props.openSnack('Спасибо, что помогаете сервису в развитии.')\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                    <Footer>На этом все. Мастеров всего - {this.props.mastersList.length}.</Footer>\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner, Div, Panel, View} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    //window.scrollTo(0, this.props.mastersListScroll)\r\n                    bridge.send(\"VKWebAppScroll\", {\"top\": this.props.mastersListScroll, \"speed\": 600});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <Panel id=\"mastersList\">\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e)=>this.checkSubcat(e)}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n                    {this.props.snackbar}\r\n                </Panel>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner, Button\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster, changeActiveMasterOnMasters, changeActiveMasterOnFindModels, changeActiveMasterOnFavs, changeLaunchParams, changeStory, goTo, goForward, changeActiveViewLk} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport HeadCity from \"./js/elements/headCity\";\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popoutLk: null,\r\n            popoutInvite: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            warnConnection: false,\r\n            mastersModal: null,\r\n            snackbarInvite: null\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n        });\r\n        if (this.props.launchParams.sign !== undefined) {\r\n            this.setState({validLaunchParams: true});\r\n            console.log('Параметры пришли');\r\n            this.props.changeLaunchParams(this.props.launchParams);\r\n            this.auth(this.props.launchParams);\r\n        } else {\r\n            this.setState({validLaunchParams: false});\r\n            this.openSnack('Ошибка. Не переданы параметры запуска.');\r\n        }\r\n        if (this.props.linkParams.masterid){\r\n            this.openMasterOnId(this.props.linkParams.masterid)\r\n            this.props.changeStory('masters')\r\n        }\r\n        window.onpopstate = () => {\r\n            if (this.props.activeViewLk === 'registration'){\r\n                this.goBack('registration')\r\n            } else {\r\n                this.goBack(this.props.activeStory)\r\n            }\r\n        };\r\n    }\r\n\r\n    auth = (params) => {\r\n        this.setState({warnConnection: false});\r\n        fetch(BACKEND.users.auth, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                this.setState({validLaunchParams: true});\r\n                this.props.loginUser(data.user);\r\n                if (data.master !== null){\r\n                    this.props.setMaster(data.master)\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                this.openSnack('Ошибка подключения к серверу. Страшно, очень страшно, мы не знаем что это такое, если бы мы знали что это такое, то мы бы знали, что это такое.');\r\n                this.setState({warnConnection: true});\r\n            })\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openSnackInvite(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbarInvite) this.setState({snackbarInvite: null});\r\n        this.setState({\r\n            snackbarInvite:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarInvite: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log('master-', master)\r\n                this.props.changeActiveMasterOnMasters(master);\r\n                this.goTo('masters', 'masterInfo');\r\n            });\r\n    };\r\n\r\n    openFindMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFindModels(master);\r\n                this.goTo('findmodel', 'masterInfo');\r\n            });\r\n    };\r\n\r\n    openSnackLk(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null});\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                this.props.setMaster(newMaster);\r\n                this.props.changeActiveViewLk('lk')\r\n                this.openSnack('Ваш профиль отправлен на проверку. Не забудьте добавить фотографии в портфолио, так шансы получить заказ намного выше.');\r\n                //this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack(e.message);\r\n            //this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n        console.log(masterId);\r\n    };\r\n\r\n    goTo = (story, panel) => {\r\n        if (this.props[story+'History'][this.props[story+'History'].length] !== panel){\r\n            window.history.pushState({panel: panel}, panel);\r\n            this.props.goTo(story, panel)\r\n            let hist = this.props[story+'History'];\r\n            console.log(hist);\r\n        } else {\r\n            console.log('Double click')\r\n        }\r\n    };\r\n\r\n    goBack = (story) => {\r\n        if (this.props[story+'History'].length === 1){\r\n            bridge.send('VKWebAppClose', {'status': 'sucsess'});\r\n        } else {\r\n            this.props.goForward(story)\r\n            let hist = this.props[story+'History'];\r\n            console.log(hist);\r\n        }\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        user.params = this.props.params;\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (this.state.warnConnection === true){\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id='loading' activePanel=\"loading\">\r\n                        <Panel id='loading'>\r\n                                      <Placeholder\r\n                                          stretched\r\n                                           icon={<Icon56WifiOutline />}\r\n                                          header={'Что-то не так!'}\r\n                                            action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить авторизацию</Button>}\r\n                                        >\r\n                                            Проверьте интернет соединение.\r\n                                        </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n                // <ConfigProvider scheme={this.state.scheme}>\r\n                //     <View id=\"warnConnection\" activePanel=\"warnConnection\">\r\n                //         <Panel id=\"warnConnection\">\r\n                //             <Placeholder\r\n                //                 icon={<Icon56WifiOutline />}\r\n                //                 action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить авторизацию</Button>}\r\n                //             >\r\n                //                 Проверьте интернет соединение.\r\n                //             </Placeholder>\r\n                //         </Panel>\r\n                //     </View>\r\n                // </ConfigProvider>\r\n            )\r\n        } else if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Всё, беда! Вы все сломали :(\r\n                            </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id='loading' activePanel=\"loading\">\r\n                        <Panel id='loading'>\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                                header=\"Выполняется вход...\"\r\n                            >Это может занять несколько секунд\r\n                                {this.state.snackbar}\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n      } else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.props.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('news')}\r\n                            selected={this.props.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('masters')}\r\n                            selected={this.props.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('findmodel')}\r\n                            selected={this.props.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>{\r\n                                this.setState({snackbarLk: null});\r\n                                this.props.changeStory('lk')\r\n                            }}\r\n                            selected={this.props.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" history={this.props.newsHistory} onSwipeBack={() => this.goBack('news')} activePanel={this.props.activePanelnews}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={()=>{\r\n                                    this.props.changeStory('lk');\r\n                                    this.props.changeActiveViewLk('registration');\r\n                                }}\r\n                                //openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                // openModer={() => this.goForwardNews('moder')}\r\n                                openModer={() => this.goTo('news', 'moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBack('news')}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master});\r\n                                    this.goTo('news', 'masterInfo');\r\n                                    //this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('news')}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                    </View>\r\n                        <View id=\"masters\" modal={this.state.mastersModal} activePanel={this.props.activePanelmasters} history={this.props.mastersHistory} onSwipeBack={() => this.goBack('masters')}>\r\n                            <Masters\r\n                                id=\"mastersList\"\r\n                                    //changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                    changeCity={()=> this.goTo('masters', 'changeCity')}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    //changeCategory={()=>this.setState({activePanelMasters: 'masterCat'})}\r\n                                    changeCategory={()=>this.goTo('masters', 'masterCat')}\r\n                                    openPanelMaster={(master)=>{\r\n                                        this.props.changeActiveMasterOnMasters(master);\r\n                                        this.goTo('masters', 'masterInfo');\r\n                                    }}\r\n                                    snackbar={this.state.snackbar}\r\n                            />\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('masters')}/>\r\n                                    <CityList\r\n                                            id='changeCity'\r\n                                            // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                            goBack={() => this.goBack('masters')}\r\n                                            changeCity={(city) => {\r\n                                            this.changeTargetCity(city);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'})\r\n                                        }}\r\n                                    />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    //onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    //openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openPhoto={() => this.goTo('masters', 'masterPhoto')}\r\n                                    openComments={() => this.goTo('masters', 'masterComments')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    openModal={(content)=>{\r\n                                        console.log(content)\r\n                                        this.setState({mastersModal: content})\r\n                                    }}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <Head\r\n                                    title={'Выбор категории'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.props.activePanelfindmodel}\r\n                        history={this.props.findmodelHistory} onSwipeBack={() => this.goBack('findmodel')}\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ищу модель</PanelHeader>\r\n                            <FindModel\r\n                                //openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                openMasterOnId={(masterId)=>this.openFindMasterOnId(masterId)}\r\n                                // changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                                changeCity={() => this.goTo('findmodel', 'changeCity')}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='changeCity'>\r\n                            <Head title={'Выбор города'}\r\n                                  goBack={() => this.goBack('findmodel')}/>\r\n                        <CityList\r\n                                id='changeCity'\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.goBack('findmodel')\r\n                            }}\r\n                        />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <MasterCard\r\n                                id=\"masterInfo\"\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                openPhoto={() => this.goTo('findmodel', 'masterPhoto')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                openComments={() => this.goTo('findmodel', 'masterComments')}\r\n                                //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterPhoto\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterComments\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n                    <Root id=\"lk\" activeView={this.props.activeViewLk}>\r\n                            <View id=\"lk\" popout={this.state.popoutLk} activePanel={this.props.activePanellk} history={this.props.lkHistory} onSwipeBack={() => this.goBack('lk')}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнёрам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.goTo('lk', 'setting')}\r\n                                            openFavourite={() => this.goTo('lk', 'favourite')}\r\n                                            openFindModel={() => this.goTo('lk', 'findModel')}\r\n                                            openMasterPhoto={() => this.goTo('lk', 'portfolio')}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbarLk}\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Head\r\n                                    title='Настройки'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Setting\r\n                                    setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                    snackbar={(message) => this.openSnackLk(message)}\r\n                                    modalBack={this.modalBack}\r\n                                    activeModal={this.state.activeModal}\r\n                                    changeCity={() => this.goTo('lk', 'changeCity')}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('lk')}/>\r\n                                <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    changeCity={(city) => {\r\n                                        let master = this.props.master;\r\n                                        master.location.city = city;\r\n                                        master.changed = true;\r\n                                        this.props.setMaster(master);\r\n                                        this.goBack('lk')\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Favourite\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    openFavMasterOnId={(master)=>{\r\n                                        this.props.changeActiveMasterOnFavs(master);\r\n                                        this.goTo('lk', 'masterInfo');\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    openPhoto={() => this.goTo('lk', 'masterPhoto')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    openComments={() => this.goTo('lk', 'masterComments')}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"portfolio\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Portfolio\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title='Отзывы'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head\r\n                                    title='Ищу модель'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <FindModelMaster\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user} popout={this.openAlert}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n\r\n                        <View activePanel={this.props.activePanelregistration} popout={this.state.popoutInvite} id='registration'>\r\n                            <Panel id='registration'>\r\n                                <Head\r\n                                    title={'Регистрация'}\r\n                                    goBack={() => this.props.changeActiveViewLk('lk')}\r\n                                />\r\n                                <Invite\r\n                                    setAlert={(alert) => this.setState({popoutInvite: alert})}\r\n                                    goBack={() => this.props.changeActiveViewLk('lk')}\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.goTo('registration', 'changeCity')}\r\n                                    openRules={() => this.goTo('registration', 'rules')}\r\n                                    snackbar={(message) => this.openSnackInvite(message)}\r\n                                />\r\n                                {this.state.snackbarInvite}\r\n                            </Panel>\r\n                            <Panel id='rules'>\r\n                                <Head\r\n                                    title='Соглашение'\r\n                                    goBack={() => this.goBack('registration')}\r\n                                />\r\n                                <Rules\r\n                                    goBack={() => this.goBack('registration')}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('registration')}/>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.goBack('registration')}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                        this.goBack('registration')\r\n                                }}\r\n                            />\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs,\r\n        params: state.params,\r\n        activePanelnews: state.activePanelnews,\r\n        activePanelmasters: state.activePanelmasters,\r\n        activePanelfindmodel: state.activePanelfindmodel,\r\n        activePanellk: state.activePanellk,\r\n        activeStory: state.activeStory,\r\n        newsHistory: state.newsHistory,\r\n        mastersHistory: state.mastersHistory,\r\n        findmodelHistory: state.findmodelHistory,\r\n        lkHistory: state.lkHistory,\r\n        activeViewLk: state.activeViewLk,\r\n        activePanelregistration: state.activePanelregistration,\r\n        registrationHistory: state.registrationHistory\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch),\r\n        changeStory: bindActionCreators(changeStory, dispatch),\r\n        goTo: bindActionCreators(goTo, dispatch),\r\n        goForward: bindActionCreators(goForward, dispatch),\r\n        changeActiveViewLk: bindActionCreators(changeActiveViewLk, dispatch)\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nrequire('dotenv').config();\r\n\r\n\r\nconst store = createStore(rootReducer);\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App launchParams={params} linkParams={linkParams}/>\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}