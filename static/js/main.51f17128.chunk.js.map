{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/masters/panelMasterList.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/elements/cityList.js","js/elements/functions.js","App.js","serviceWorker.js","index.js"],"names":["osname","platform","Head","theme","left","onClick","this","props","goBack","IOS","addon","title","React","Component","BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","getAll","logs","params","subcatStyle","flexShrink","display","flexDirection","alignItems","fontSize","MasterList","checkSubcat","e","buttonSubcat","document","getElementById","currentTarget","id","style","backgroundColor","index","state","filter","indexOf","splice","console","log","setState","push","loadList","city","fetch","then","res","json","mastersList","isLoad","setTitle","length","_id","countSubcat","count","map","categories","subcat","includes","share","bridge","send","activeMaster","result","openSnackAvatar","avatarLink","setBottom","rating","margin","padding","color","prevProps","prevState","snapshot","i","forEach","undefined","Array","isArray","size","marginTop","icon","header","action","ratingArr","comments","Number","reduce","a","b","key","vkUid","mode","expandable","photo","description","label","bottomContent","before","src","openPanelMaster","firstname","lastname","Fragment","after","separator","renderMaster","MastersCard","handleChange","event","target","name","value","favStatus","isFavourite","status","float","marginRight","checkFavs","width","height","fill","connectStatus","getPhone","loadFavs","favsArr","countFavs","fav","userId","changeVisible","userVkUid","masterId","masterVkUid","postData","sendMessage","sendtitle","phone","Math","random","snackbar","mess","catch","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","activeMasterId","priceList","text","url","data","method","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","brand","openComments","indicator","photos","slice","photoUrl","backgroundImage","backgroundSize","openPhoto","item","multiline","price","images","reverse","start_index","image","openShowImages","gridPhoto","sendComment","isCommended","bodyComment","author","date","Date","now","commentsArr","countComments","arr","comDate","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","step","min","max","top","bottom","replace","placeholder","commentList","validate","News","addFav","group_id","feedList","feed","vertical","isMaster","openReg","Invite","regMaster","targetCity","checkLicense","statusMessage","cat","active","sex","location","country","closeReg","error","permMessage","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","subcategory","asideContent","checked","Lk","connection","tmpUser","isUser","mastersArr","openSetting","openFavourite","activePanel","openMasterPhoto","openFindModel","loading","formData","FormData","selectedFile","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","CityListModal","search","cities","getCities","toLowerCase","items","updateModalHeight","region","changeTargetCity","withModalRootContext","saveChanges","patchData","visible","onRemove","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","checkBan","banned","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","modalBack","activeModal","dynamicContentHeight","ANDROID","right","String","removable","require","stretched","onSubmit","handleSubmit","Favourite","loadFavsMasters","isLoaded","openFavMasterOnId","FindModel","findList","findArr","find","openMasterOnId","FindModelMaster","save","loadFind","activeFind","CityList","App","verifiedUser","vkUser","usersArr","regNewUser","Object","loadCategories","first_name","last_name","photo_200","openAlert","actionsLayout","actions","autoclose","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeStory","activeViewMasters","activePanelLk","openStory","storyName","targetCategory","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","activePanelReg","baseCities","searchCity","modalHistory","onStoryChange","setActiveModal","linkParams","masterid","dataset","story","setting","searchFilter","tabbar","selected","data-story","activeView","modal","Boolean","window","hostname","match","hash","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51f17128.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, IOS, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nconst osname = platform();\r\n\r\nclass Head extends React.Component {\r\n    render(){\r\n        return (\r\n            <PanelHeader\r\n                theme=\"light\"\r\n                left={<PanelHeaderButton onClick={this.props.goBack}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                addon={<PanelHeaderButton onClick={this.props.goBack}>Назад</PanelHeaderButton>}\r\n            >{this.props.title}\r\n            </PanelHeader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head;","//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    }\r\n};","import React from 'react';\r\nimport {\r\n    Spinner,\r\n    Separator,\r\n    Avatar,\r\n    Button,\r\n    Cell,\r\n    Div,\r\n    Group,\r\n    List,\r\n    Header,\r\n    CardGrid,\r\n    Card,\r\n    Placeholder, Counter, HorizontalScroll\r\n} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nconst subcatStyle = {\r\n    flexShrink: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    fontSize: 10\r\n};\r\n\r\nclass MasterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: null,\r\n            title: '',\r\n            isLoad: false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadList()\r\n        }\r\n\r\n        componentDidUpdate(prevProps, prevState, snapshot) {\r\n            if (prevProps.city !== this.props.city || prevProps.category !== this.props.category) {\r\n                console.log(prevProps, this.props);\r\n                this.loadList()\r\n            }\r\n        }\r\n\r\n    checkSubcat = (e) => {\r\n        let buttonSubcat = document.getElementById(e.currentTarget.id);\r\n        if(buttonSubcat.style.backgroundColor==='lavender'){\r\n            buttonSubcat.style.backgroundColor='#fff';\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            console.log('filter: ', filter);\r\n            this.setState({filter: filter});\r\n        } else {\r\n            buttonSubcat.style.backgroundColor='lavender';\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            console.log('filter: ', filter);\r\n            this.setState({filter: filter});\r\n\r\n        }\r\n    };\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            return this.state.mastersList\r\n        } else {\r\n            return this.state.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            })\r\n        }\r\n    }\r\n    loadList = () => {\r\n            if(this.props.category === '') {\r\n                console.log(BACKEND.masters.category+'all/'+this.props.city.id);\r\n                fetch(BACKEND.masters.category+'all/'+this.props.city.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                        console.log(mastersList);\r\n                        this.setState({mastersList: mastersList, isLoad: true});\r\n                        this.setTitle(this.state.mastersList.length);\r\n                    });\r\n            } else {\r\n                console.log(BACKEND.masters.category+this.props.category._id+'/'+this.props.city.id);\r\n                fetch(BACKEND.masters.category+this.props.category._id+'/'+this.props.city.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                        console.log(mastersList);\r\n                        this.setState({mastersList: mastersList, isLoad: true});\r\n                        this.setTitle(this.state.mastersList.length);\r\n                    });\r\n            }\r\n        }\r\n    countSubcat = (id) => {\r\n        let count = 0;\r\n        this.state.mastersList.map((master)=>{\r\n            //console.log(master.categories.subcat, id);\r\n            if (master.categories.subcat){\r\n                if(master.categories.subcat.includes(id)) {\r\n                    //console.log('совпало');\r\n                    count++\r\n                }\r\n            }\r\n        });\r\n        return count\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    setTitle(count) {\r\n        if (count===undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n    renderMaster() {\r\n        if(Array.isArray(this.state.mastersList)) {\r\n            if(this.state.isLoad === false) {\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                        <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (this.props.city==='Не выбрано') {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Где вы?\"\r\n                        >\r\n                            Нам не удалось определить Ваш город, укажите его вручную.\r\n                        </Placeholder>\r\n                    )\r\n                } else if (this.filter().length === 0) {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Не расстраивайтесь\"\r\n                            action={<Button onClick={this.share} size=\"l\">Поделиться</Button>}\r\n                        >\r\n                            В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                            Поделитесь приложением с мастерами, которых Вы знаете.\r\n                        </Placeholder>\r\n                    );\r\n                } else {\r\n                    return this.filter().map(master => {\r\n                        let ratingArr = master.comments.map(comment =>{\r\n                            return Number(comment.rating)\r\n                        });\r\n                        let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n                        let rating = sum/ratingArr.length;\r\n                        //console.log(rating);\r\n                        return (\r\n                                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                                      description={\r\n                                                          master.categories.category.map(category => {\r\n                                                              return category.label+\" \"\r\n                                                          })\r\n                                                      }\r\n                                                      bottomContent={\r\n                                                          this.setBottom(rating, ratingArr.length)\r\n                                                      }\r\n                                                      before={<Avatar src={master.avatarLink} size={70}/>}\r\n                                                      size=\"l\"\r\n                                                      onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                                                >{master.firstname} {master.lastname}\r\n                                                </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HorizontalScroll>\r\n                        <div style={{display: 'flex'}}>\r\n                            {\r\n                                this.props.category &&\r\n                                this.props.category._id !== 'all' ?\r\n                                    this.props.category.subcat.map(subcat=>{\r\n                                        return (\r\n                                            <div style={{subcatStyle}} key={subcat._id}>\r\n                                                <Button\r\n                                                    after={<Counter size='s'>{this.countSubcat(subcat._id)}</Counter>}\r\n                                                    id={subcat._id}\r\n                                                    onClick={this.checkSubcat}\r\n                                                    style={{margin: '4px 4px 0px 0px'}}\r\n                                                    mode=\"outline\"\r\n                                                >\r\n                                                    {subcat.label}\r\n                                                </Button>\r\n                                            </div>\r\n                                        )\r\n                                    }) : null\r\n                            }\r\n                        </div>\r\n                    </HorizontalScroll>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                        {this.renderMaster()}\r\n                        </Group>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MasterList","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, Alert, Input,FormLayout\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {\r\n                priceList: []\r\n            },\r\n            favsArr: [\r\n                {vkUid:12523452}\r\n            ],\r\n            isFavourite: {\r\n                status: false\r\n            },\r\n            isLoad: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.setState({activeMaster: this.props.activeMaster});\r\n        this.loadFavs();\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        console.log(this.state);\r\n    };\r\n    favStatus = () => {\r\n        if(this.state.isFavourite.status === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button onClick={() => this.getPhone(title)}>Записаться</Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        //console.log(BACKEND.favs.master+this.props.activeMaster._id);\r\n        fetch(BACKEND.favs.master+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                this.setState({favsArr: favsArr});\r\n                let count = favsArr.length;\r\n                this.setState({countFavs: count});\r\n                this.setState({isLoad: true})\r\n                this.state.favsArr.map(fav => {\r\n                    if (fav.userId === this.props.user._id) {\r\n                        this.setState({isFavourite: {status: true, id: fav._id}});\r\n                        //console.log('У тебя в избранном');\r\n                    } else {\r\n                        this.setState({isFavourite: {status: false}})\r\n                        //console.log('Нет в избранном');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    }\r\n    checkFavs = () => {\r\n        console.log('прежний статус '+this.state.isFavourite.status);\r\n        if (this.state.isFavourite.status === false) {\r\n            let fav = {\r\n                userId: this.props.user._id,\r\n                userVkUid: this.props.user.vkUid,\r\n                masterId: this.state.activeMaster._id,\r\n                masterVkUid: this.state.activeMaster.vkUid\r\n            };\r\n            this.postData(BACKEND.favs.new, fav, 'POST');\r\n            this.setState({isFavourite: {status: true}});\r\n            this.setState({countFavs: this.state.countFavs+1});\r\n            this.openSnackAvatar('Вы подписались на обновления мастера. Отменить подписку можно во вкладке Кабинет, в разделе Избранное.', this.state.activeMaster.avatarLink);\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({phone: result.phone_number});\r\n                //this.sendMessage();\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    {/*<Input*/}\r\n                    {/*    mask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    inputmask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    name='phone'*/}\r\n                    {/*    type=\"text\"*/}\r\n                    {/*    defaultValue={number || ''}*/}\r\n                    {/*    align=\"center\"*/}\r\n                    {/*    value={this.state.phone}*/}\r\n                    {/*    onChange={this.handleChange}*/}\r\n                    {/*/>*/}\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                <Cell>\r\n                                    {this.favStatus()}\r\n                                    <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card size=\"s\">\r\n                                                        <div key={index} style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover'}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div>\r\n                        }\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={'От ' + item.price + \" рублей\"}\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                    <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                    </Cell>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout, Snackbar\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: {\r\n                id: '1',\r\n                body: 'ТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТест',\r\n                author: 'Тест Тестович',\r\n                date: Date.now()\r\n            },\r\n            body: '',\r\n            commentsArr: [],\r\n            isLoad: false,\r\n            rating: 3,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({commentsArr: this.props.activeMaster.comments});\r\n        //console.log('comments ',   this.props.activeMaster.comments);\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 200) throw 'Длина отзыва ограничена 200 символами.';\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n            this.setState({isCommended: true});\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n        // if (this.state.body.length < 50) {\r\n        //     this.setState({ snackbar:\r\n        //             <Snackbar\r\n        //                 layout=\"vertical\"\r\n        //                 onClose={() => this.setState({ snackbar: null })}\r\n        //             >\r\n        //                 Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.\r\n        //             </Snackbar>\r\n        //     });\r\n        // } else {\r\n        //     let comment = {\r\n        //         user: {\r\n        //             userId: this.props.user._id,\r\n        //             firstname: this.props.user.firstname,\r\n        //             lastname: this.props.user.lastname,\r\n        //             avatarLink: this.props.user.avatarLink\r\n        //         },\r\n        //         rating: Number(this.state.rating),\r\n        //         body: this.state.body\r\n        //     };\r\n        //         this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n        //         this.setState({isCommended: true});\r\n        // }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.sendMessage(data.body);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    sendMessage = (bodyComment) => {\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        let message = \"Привет! У тебя новый комментарий: \"+bodyComment;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={this.getDate(comment.date)}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        //console.log(this.props.activeMaster.vkUid, this.props.user.vkUid);\r\n        if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n            )\r\n        }\r\n        else if (this.state.isCommended === true) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <Slider\r\n                        step={1}\r\n                        min={1}\r\n                        max={5}\r\n                        value={Number(this.state.rating)}\r\n                        onChange={rating => this.setState({rating})}\r\n                        top=\"Оцените работу мастера\"\r\n                    />\r\n                    <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                    <Textarea\r\n                        name={'body'}\r\n                        value={this.state.body}\r\n                        status={this.state.body.length > 20 ? 'valid' : 'error'}\r\n                        bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Символов: '+this.state.body.replace(/ /g, \"\").length+' из 50' }\r\n                        top={\"Добавление отзыва\"}\r\n                        placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                </FormLayout>\r\n            )\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar, PanelSpinner, Spinner, FixedLayout,CardGrid,Card,Button\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9]\r\n        };\r\n    }\r\n    addFav = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        });\r\n    };\r\n    feedList = () => {\r\n        return(\r\n            <Placeholder\r\n                icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                header=\"Привет!\"\r\n                action={<Button onClick={this.addFav} size=\"l\">Вступить в группу</Button>}\r\n            >\r\n            Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным. Вступайте в нашу группу Вконтакте, чтобы не пропустить важные обновления!\r\n            </Placeholder>\r\n            // this.state.feed.map(feed=>{\r\n            //     return (\r\n            //         <CardGrid>\r\n            //             <Card key={feed} size=\"l\" mode=\"shadow\">\r\n            //                 <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n            //             </Card>\r\n            //         </CardGrid>\r\n            //     )\r\n            // })\r\n        )\r\n    };\r\n    render(){\r\n        return (\r\n            <Group>\r\n                <FixedLayout vertical=\"bottom\">\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <Cell\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                  description={\r\n                                      this.props.user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                                  }\r\n                                  //bottomContent={}\r\n                                  before={<Avatar src={this.props.user.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                            >{this.props.user.firstname} {this.props.user.lastname}\r\n                            </Cell>\r\n                            {this.props.user.isMaster === false &&\r\n                                <Cell\r\n                                    multiline\r\n                                    onClick={this.props.openReg}\r\n                                    before={<Icon24UserOutgoing/>}\r\n                                    expandable\r\n                                >\r\n                                    Если вы - мастер, пройдите простую процедуру регистрации\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                </FixedLayout>\r\n                {this.feedList()}\r\n            </Group>\r\n            // <Div>\r\n            //         <Group>\r\n            //             {\r\n            //                 this.props.user.firstname === '???' ?\r\n            //                     <Placeholder >\r\n            //                         <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            //                     </Placeholder> :\r\n            //                     <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n            //                         Привет, {this.props.user.firstname}!\r\n            //                     </Placeholder>\r\n            //             }\r\n            //             <Cell multiline>\r\n            //                 Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по\r\n            //                 любой области косметологии или предложить свои услуги.\r\n            //             </Cell>\r\n            //         </Group>\r\n            //     {this.props.user.isMaster === false &&\r\n            //     <FixedLayout vertical=\"bottom\">\r\n            //         <Cell\r\n            //             multiline\r\n            //             onClick={this.props.openReg}\r\n            //             before={<Icon24UserOutgoing/>}\r\n            //             expandable\r\n            //         >\r\n            //             Если вы - мастер, пройдите простую процедуру регистрации\r\n            //         </Cell>\r\n            //     </FixedLayout>\r\n            //     }\r\n            //     <Separator wide />\r\n            // </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar, Input} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.permMessage();\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n                console.log('State on load', this.state)\r\n            });\r\n\r\n    }\r\n\r\n    regMaster = () => {\r\n        console.log('click');\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                firstname: this.props.user.firstname,\r\n                lastname: this.props.user.lastname,\r\n                description: this.state.description,\r\n                vkUid: this.props.user.vkUid,\r\n                type: this.state.type,\r\n                avatarLink: this.props.user.avatarLink,\r\n                sex: this.props.user.sex,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                //categories: this.state.categories,\r\n                categories: cat,\r\n                brand: this.state.brand\r\n            };\r\n            master.location.city = this.props.targetCity;\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    // permPhoto = () => {\r\n    //     bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n    //         .then(data => {\r\n    //             console.log(data);\r\n    //             this.setState({statusPhoto: data.result})\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    console.log(result);\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    multiline*/}\r\n                            {/*    onClick={this.permPhoto}*/}\r\n                            {/*    description=\"Для загрузки фото в портфолио\"*/}\r\n                            {/*    bottom={this.state.statusPhoto === false && 'Доступ обязателен для регистрации'}*/}\r\n                            {/*>Доступ к загрузке фотографий в альбом приложения - {this.state.statusPhoto === true ? 'Разрешен' : 'Не разрешен'}</Cell>*/}\r\n                            <Cell\r\n                                expandable\r\n                                onClick={this.props.changeCity}\r\n                                indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                            >\r\n                                Ваш город\r\n                            </Cell>\r\n                            <Cell\r\n                                expandable\r\n                                multiline\r\n                                onClick={this.permMessage}\r\n                                description=\"Для получения уведомлений о заявках\"\r\n                                status={this.state.statusMessage === true ? 'valid' : 'error'}\r\n                                bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                            >Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? 'Разрешен' : 'Не разрешен'}</Cell>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.user);\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    bottomContent={this.state.user.isMaster && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        {/*<Cell*/}\r\n                        {/*    //expandable*/}\r\n                        {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                        {/*    user={this.state.user}*/}\r\n                        {/*    indicator={this.state.user.location.city.title}*/}\r\n                        {/*>Ваш город</Cell>*/}\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    Spinner,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\n\r\nconst osname = platform();\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n                    .then(res => res.json())\r\n                    .then(activeMaster => {\r\n                        console.log(activeMaster);\r\n                        if (activeMaster.length !== 0) {\r\n                            this.setState({\r\n                                activeMaster: activeMaster[0],\r\n                                description: activeMaster[0].description,\r\n                                isMaster: true,\r\n                                isLoad: true\r\n                            }, () =>this.setActive());\r\n                        } else {\r\n                            this.setState({isLoad: true})\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            console.log('город был изменен');\r\n            let activeMaster = this.state.activeMaster;\r\n            activeMaster.location.city = this.props.targetCity\r\n            this.setState({activeMaster: activeMaster})\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        console.log('saving');\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster);\r\n        this.props.snackbar('Изменения сохранены');\r\n    };\r\n\r\n    setActive(){\r\n        this.state.categories.map(category => {\r\n            this.setState({[category._id]: false});\r\n            category.subcat.map(subcat => {\r\n                if (this.state.activeMaster.categories.subcat.includes(subcat._id)){\r\n                    subcat.active = true;\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        //activeMaster.location.city = this.props.targetCity;\r\n        console.log(activeMaster);\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.modalBack();\r\n                this.props.snackbar('Изменения сохранены');\r\n                //this.props.popout();\r\n                //console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    // openSnack (text) {\r\n    //     const blueBackground = {\r\n    //         backgroundColor: 'var(--accent)'\r\n    //     };\r\n    //     if (this.state.snackbar) return;\r\n    //     this.setState({ snackbar:\r\n    //             <Snackbar\r\n    //                 layout=\"vertical\"\r\n    //                 onClose={() => this.setState({ snackbar: null })}\r\n    //                 before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n    //             >\r\n    //                 {text}\r\n    //             </Snackbar>\r\n    //     });\r\n    // }\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    };\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        console.log('Active master ',this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.activeMaster.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.activeMaster.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        // if (this.counter(indexCat) > 0) {\r\n        //     this.state.categories[indexCat].active = true;\r\n        // } else {\r\n        //     this.state.categories[indexCat].active = false;\r\n        // }\r\n        this.setState({categories: categories},()=>console.log(this.state))\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.activeMaster;\r\n        master.location.city = city;\r\n        this.setState({activeMaster: master});\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 120}}/>\r\n                </div>\r\n            )\r\n        } else if (this.isMaster === false) {\r\n            return null\r\n        } else {\r\n            return (\r\n                <ModalRoot\r\n                    activeModal={this.props.activeModal}\r\n                    onClose={this.saveChanges}\r\n                >\r\n                    <ModalPage dynamicContentHeight\r\n                        id={'setting'}\r\n                        onClose={this.saveChanges}\r\n                        header={\r\n                            <ModalPageHeader\r\n                                left={osname === ANDROID &&\r\n                                <PanelHeaderButton onClick={this.saveChanges}>{'Сохранить'}</PanelHeaderButton>}\r\n                                right={<PanelHeaderButton onClick={this.saveChanges}>{osname === IOS ? 'Сохранить' :\r\n                                    <Icon24Done/>}</PanelHeaderButton>}\r\n                            >\r\n                                Настройки\r\n                            </ModalPageHeader>\r\n                        }\r\n                    >\r\n                <Div>\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={\r\n                            this.state.activeMaster.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                        }\r\n                        before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                    </Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.props.changeModal('changeCity')}\r\n                        indicator={this.state.activeMaster.location.city === typeof String ? 'Не выбрано' : this.state.activeMaster.location.city.title}\r\n                    >\r\n                        Ваш город\r\n                    </Cell>\r\n                    <Group>\r\n                        {this.checkBan()}\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                    {this.state.activeMaster.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                    }\r\n                        <CardGrid>\r\n                    {this.state.activeMaster.priceList.map((item, index) => (\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell\r\n                                    key={item}\r\n                                    multiline\r\n                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                    removable\r\n                                    onRemove={() => {\r\n                                        this.onRemove(index)\r\n                                    }}>\r\n                                    <Cell\r\n                                        description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                    <Cell description=\"Краткое описание процедуры\"\r\n                                          multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                    <Cell\r\n                                        description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                                </Cell>\r\n                            </Card>\r\n                    ))}\r\n                        </CardGrid>\r\n                    {this.state.add &&\r\n                    <Div>\r\n                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdTitle\"\r\n                                type=\"text\"\r\n                                value={this.state.newProdTitle}\r\n                                placeholder={'Введите название'}\r\n                                onChange={this.handleChange}/>\r\n                            <Textarea\r\n                                require\r\n                                name=\"newProdBody\"\r\n                                value={this.state.newProdBody}\r\n                                placeholder={'Укажите описание'}\r\n                                onChange={this.handleChange}/>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdPrice\"\r\n                                type=\"number\" value={this.state.newProdPrice}\r\n                                placeholder={'Укажите цену'}\r\n                                onChange={this.handleChange}/>\r\n                        </Cell>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                        </Div>\r\n                    </Div>\r\n                    }\r\n                    </Group>\r\n                    <Group>\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                        </ FormLayout>\r\n                        <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                         bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                         id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                        name={i}\r\n                                                                        id={index}\r\n                                                                        onChange={this.checkSubcat}\r\n                                                                        checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </FormLayoutGroup>\r\n                    </Group>\r\n                </Div>\r\n                    </ModalPage>\r\n                    <ModalPage dynamicContentHeight\r\n                        id={'changeCity'}\r\n                        onClose={() => this.props.changeModal('setting')}\r\n                        header={\r\n                            <ModalPageHeader\r\n                                left={osname === ANDROID &&\r\n                                <PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{'Назад'}</PanelHeaderButton>}\r\n                                right={<PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{osname === IOS ? 'Назад' :\r\n                                    <Icon24Done/>}</PanelHeaderButton>}\r\n                            >\r\n                                Выбор города\r\n                            </ModalPageHeader>\r\n                        }\r\n                    >\r\n                        <CityListModal dynamicContentHeight\r\n                            changeTargetCity={(city) => this.changeCity(city)}\r\n                        />\r\n                    </ModalPage>\r\n                </ModalRoot>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (Lk);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div, Separator, Cell, Avatar, Spinner, Card, CardGrid, FixedLayout\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadFavsMasters(this.props.user);\r\n    }\r\n\r\n    loadFavsMasters = (user) => {\r\n        fetch(BACKEND.favs.user + user._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                if(favsArr.length === 0){\r\n                    this.setState({isLoaded: true});\r\n                } else {\r\n                    favsArr.map(fav => {\r\n                        fetch(BACKEND.masters.onID + fav.masterId)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                let mastersArr = this.state.mastersArr;\r\n                                mastersArr.push(master);\r\n                                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n                            });\r\n                        //this.setState({isLoaded: true});\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.length === 0) {\r\n                return (\r\n                        <CardGrid>\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell multiline align=\"center\">\r\n                                    Список избранного пуст\r\n                                </Cell>\r\n                            </Card>\r\n                        </CardGrid>\r\n                )\r\n            } else {\r\n                console.log(this.state.mastersArr);\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null) && (master.visible === true)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master._id}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                              photo={master.avatarLink}\r\n                                              description={master.type}\r\n                                              before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                              onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >{master.firstname} {master.lastname}\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Cell, Div, Group, Separator, Spinner, Placeholder, Button} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: [],\r\n            title: '',\r\n            master: {\r\n                vkUid: 9999999999,\r\n                avatarLink: \"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\",\r\n                firstname: 'Евгения',\r\n                lastname: 'Плюхова'\r\n            },\r\n            findArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.user);\r\n        fetch(BACKEND.findModel.onCity+this.props.user.location.city.id)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                console.log(find);\r\n                this.setState({findArr: find});\r\n                console.log('Найдено '+find.length);\r\n                this.setState({isLoad: true})\r\n            });\r\n    }\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    findList = () => {\r\n        if (this.state.findArr.length === 0) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={this.share} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент в городе {this.props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                this.state.findArr.map(find => {\r\n                    return (\r\n                        <Group key={find._id}>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            <Cell expandable\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                // description={'Место под категории'}\r\n                                  before={<Avatar src={find.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openMasterOnId(find.masterId)}\r\n                                  bottom=\"\"\r\n                            >{find.firstname} {find.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>\r\n                                {find.body}\r\n                            </Cell>\r\n                        </Group>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        //expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={this.props.user.location.city.title}>Ваш город</Cell>\r\n                    {this.findList()}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            master: '',\r\n            body: '',\r\n            loadFind: '',\r\n            isLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({master: master[0]});\r\n                fetch(BACKEND.findModel.onMasterId+master[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        this.setState({findArr: find, isLoaded: true});\r\n                        if (find.length > 0) {\r\n                            this.setState({body: find[0].body, loadFind: find[0]});\r\n                            let activeFind =\r\n                                <Group>\r\n                                    <Cell>Ваш активный поиск</Cell>\r\n                                    <Separator style={{ margin: '12px 0' }} />\r\n                                    <Cell expandable\r\n                                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                          description={'desf'}\r\n                                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                          size=\"l\"\r\n                                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                                    </Cell>\r\n                                    <Cell multiline>\r\n                                        {this.state.findArr[0].body}\r\n                                    </Cell>\r\n                                </Group>\r\n                            ;\r\n                            this.setState({activeFind: activeFind});\r\n                        } else {\r\n                            let activeFind = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({activeFind: activeFind});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.master._id,\r\n            body: this.state.body,\r\n            location: this.state.master.location,\r\n            firstname: this.state.master.firstname,\r\n            lastname: this.state.master.lastname,\r\n            avatarLink: this.state.master.avatarLink\r\n        };\r\n        console.log(BACKEND.findModel.new+this.state.loadFind._id);\r\n        if (this.state.loadFind._id) {\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            let activeFind =\r\n                <Group>\r\n                    <Cell>Ваш активный поиск</Cell>\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <Cell expandable\r\n                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                          description={'desf'}\r\n                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                          size=\"l\"\r\n                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                    </Cell>\r\n                    <Cell multiline>\r\n                        {find.body}\r\n                    </Cell>\r\n                </Group>\r\n            ;\r\n            this.setState({activeFind: activeFind});\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.popout();\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Cell>Добавить / изменить</Cell>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                            top=\"О себе\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}/>\r\n                    </FormLayoutGroup>\r\n                    <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    {this.state.activeFind}\r\n                </FormLayout>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import {BACKEND} from \"../func/func\";\r\nimport {Snackbar} from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\n\r\nfunction postData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(data)\r\n        .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n}\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }); // парсит JSON ответ в Javascript объект\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {\r\n    Alert,\r\n    Cell,\r\n    Epic,\r\n    FormLayout,\r\n    Group,\r\n    List,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Search,\r\n    SelectMimicry,\r\n    Spinner,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, ModalRoot, ModalPage, ModalPageHeader, PanelHeaderButton, IOS, ANDROID, platform, Snackbar, Avatar,ModalCard,HorizontalScroll,Button,Counter\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\n//import Sale from './js/sale/sale.js';\r\nimport PanelMasterList from './js/masters/panelMasterList.js';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\n//import Idea from './js/idea/idea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport CityListModal from \"./js/elements/cityListModal\";\r\nimport {postData, patchData} from './js/elements/functions'\r\n\r\nconst osname = platform();\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            user: '',\r\n            mastersList: null,\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ],\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано'\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.modalBack = () => {\r\n            this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data => {\r\n                //console.log(data);\r\n                //this.setState({vkuser: data});\r\n                this.verifiedUser(data);\r\n            });\r\n        if (this.props.params) {\r\n            postData(BACKEND.logs.params, this.props.params);\r\n        }\r\n        if (this.props.linkParams.masterid) {\r\n            console.log('В параметры пришел мастер');\r\n            this.openMasterOnLink(this.props.linkParams.masterid)\r\n        }\r\n        this.loadCategories();\r\n    }\r\n\r\n    verifiedUser = (vkUser) => {\r\n        return fetch(BACKEND.users + '/vkuid/' + vkUser.id)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0) {\r\n                    console.log('Пользователь зашел впервые');\r\n                    this.regNewUser();\r\n                } else {\r\n                    console.log('Пользователь уже заходил в приложение');\r\n                    let targetCity = usersArr[0].city !== typeof Object ? 'Не выбрано' : usersArr[0].city;\r\n                    this.setState({user: usersArr[0], targetCity: targetCity});\r\n                    console.log('Таргет город '+this.state.targetCity)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    }\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n\r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                // let catArr = categories.map(category => {\r\n                //     return {id: category._id, label: category.label}\r\n                // });\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                console.log(categories);\r\n                this.setState({categories: categories})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    }\r\n    // changeCity = (e) => {\r\n    //     this.setState({searchCity: e.target.value});\r\n    // };\r\n    regNewUser = () => {\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => {\r\n            console.log('Данные с моста', data);\r\n            const user = {\r\n                vkUid: data.id,\r\n                firstname: data.first_name,\r\n                lastname: data.last_name,\r\n                avatarLink: data.photo_200,\r\n                sex: data.sex,\r\n                location: {\r\n                    country: data.country || 'Не определен',\r\n                    city: data.city || 'Не определен'\r\n                },\r\n                isMaster: false\r\n            };\r\n            this.setState({user: user});\r\n            postData(BACKEND.users, user); //регитрируем\r\n        });\r\n    };\r\n\r\n    openAlert = (title, body, action) => {\r\n        this.setState({\r\n            popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={() => this.setState({popout: null})}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    // closeAlert = () => {\r\n    //     this.setState({ popout: null });\r\n    // };\r\n    closeReg = (master) => {\r\n        console.log(master);\r\n        postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({user: user, activeViewLk: 'lk'});\r\n        // //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n    };\r\n    // change = (story, view, panel) => {\r\n    //     this.setState({ story: story });\r\n    //     this.setState({ story: story });\r\n    //     this.setState({ story: story });\r\n    // };\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({activePanelMasters: panelName});\r\n        this.setState({activeMaster: master});\r\n    };\r\n    // openMaster = (master) => {\r\n    //     this.setState({ activeViewMasters: 'mastersList' });\r\n    //     this.setState({ activeStory: 'masters' });\r\n    //     this.setState({ activePanelMasters: 'masterInfo' });\r\n    //     this.setState({ activeMaster: master });\r\n    // };\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({activeMaster: master});\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({activePanelFindModels: 'masterInfo'});\r\n            });\r\n    };\r\n    openMasterOnLink = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({activeMaster: master});\r\n                this.setState({activeStory: 'masters'});\r\n                this.setState({activeViewMasters: 'mastersList'});\r\n                this.setState({activePanelMasters: 'masterInfo'});\r\n            });\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({activeMaster: master});\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({activePanelLk: 'masterInfo'});\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        this.setState({targetCity: city}, () => this.setActiveModal(null));\r\n        let user = this.state.user;\r\n        user.location.city = city;\r\n        this.setState({user:user});\r\n        patchData(BACKEND.users+'/'+user._id, user).then(result=>console.log(result));\r\n    }\r\n\r\n    render() {\r\n        const setting = (\r\n            <Setting\r\n                snackbar={(message) => this.openSnack(message)}\r\n                modalBack={this.modalBack}\r\n                activeModal={this.state.activeModal}\r\n                //targetCity={this.state.targetCity}\r\n                user={this.state.user}\r\n                //popout={this.openAlert}\r\n                //changeCity={(city) => this.setState({targetCity: city}, () => this.setActiveModal('setting'))}\r\n                changeModal={(name) => this.setActiveModal(name)}\r\n            />\r\n        );\r\n        const searchFilter = (\r\n            <ModalRoot\r\n                activeModal={this.state.activeModal}\r\n                onClose={()=>this.setActiveModal(null)}\r\n            >\r\n                <ModalPage dynamicContentHeight\r\n                           id={'cityChange'}\r\n                           onClose={()=>this.setActiveModal(null)}\r\n                           header={<ModalPageHeader>Выберите город</ModalPageHeader>}\r\n                >\r\n                    <CityListModal changeTargetCity={(city)=>this.changeTargetCity(city)}/>\r\n                </ModalPage>\r\n                <ModalCard\r\n                    id={'filter'}\r\n                    onClose={() => this.setActiveModal(null)}\r\n                    //icon={<Icon56NotificationOutline />}\r\n                    header=\"Фильтры1\"\r\n                    actions={[{\r\n                        title: 'Запретить',\r\n                        mode: 'secondary',\r\n                        action: () => this.setActiveModal(null)\r\n                    }, {\r\n                        title: 'Разрешить',\r\n                        mode: 'primary',\r\n                        action: () => this.setActiveModal(null)\r\n                    }]}\r\n                />\r\n            </ModalRoot>\r\n        );\r\n        if (this.state.user === '') {\r\n            return (\r\n                <Placeholder icon={<Spinner size=\"large\" style={{marginTop: 20}}/>}>\r\n                    Выполняется вход...\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        {\r\n                            /*<TabbarItem\r\n                                onClick={this.onStoryChange}\r\n                                selected={this.state.activeStory === 'sale'}\r\n                                data-story=\"sale\"\r\n                                text=\"Акции\"\r\n                            ><Icon28FireOutline /></TabbarItem>*/\r\n                        }\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"News\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        {/*<TabbarItem*/}\r\n                        {/*    onClick={this.onStoryChange}*/}\r\n                        {/*    selected={this.state.activeStory === 'idea'}*/}\r\n                        {/*    data-story=\"idea\"*/}\r\n                        {/*    text=\"Идеи\"*/}\r\n                        {/*><Icon28HelpOutline /></TabbarItem>*/}\r\n                        {\r\n                            /*\r\n                            <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'notifications'}\r\n                            data-story=\"notifications\"\r\n                            text=\"Уведомлен.\"\r\n                            label=\"1\"\r\n                        ><Icon28Notifications /></TabbarItem>\r\n                            * */\r\n                        }\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    {\r\n                        /*<View id=\"sale\" activePanel=\"sale\">\r\n                        <Panel id=\"sale\">\r\n                            <PanelHeader>Акции</PanelHeader>\r\n                            <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })} indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                            <Sale />\r\n                        </Panel>\r\n                    </View>*/\r\n                    }\r\n                    <View id=\"news\" activePanel=\"news\">\r\n                        <Panel id=\"news\">\r\n                            <PanelHeader>Навигатор красоты</PanelHeader>\r\n                            <News openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                  user={this.state.user} openStory={this.openStory}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <Root id=\"masters\" activeView={this.state.activeViewMasters} modal={searchFilter}>\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                    <Cell\r\n                                        style={{fontSize: 12, padding: 0}}\r\n                                        expandable\r\n                                        onClick={()=>this.setActiveModal('cityChange')}\r\n                                        indicator={this.state.user.location.city === 'Не определено' ? this.state.targetCity : this.state.user.location.city.title}><span style={{fontSize: 12}}>Ваш город</span></Cell>\r\n                                    <SelectMimicry\r\n                                        //disabled={this.state.user.location.city === 'Не определено' ? true : false}\r\n                                        top=\"Выберите категорию\"\r\n                                        placeholder=\"Показаны мастера всех категорий\"\r\n                                        onClick={this.state.user.location.city === 'Не определено' ?\r\n                                            () => this.openSnack('Сначала выберите город') :\r\n                                            () => this.setState({activeViewMasters: 'masterCat'})\r\n                                        }\r\n                                        //after={<Icon24Filter />}\r\n                                    >{this.state.targetCategory.label}</SelectMimicry>\r\n                                <PanelHeader>Мастера</PanelHeader>\r\n                                <PanelMasterList\r\n                                    category={this.state.targetCategory}\r\n                                    city={this.state.user.location.city === 'Не определено' ? this.state.targetCity : this.state.user.location.city}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head title={'О мастере'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'mastersList'})}/>\r\n                                <MasterCard openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                            user={this.state.user} activeMaster={this.state.activeMaster}\r\n                                            openComments={() => this.setState({activePanelMasters: 'masterComments'})}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'masterInfo'})}/>\r\n                                <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'masterInfo'})}/>\r\n                                <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <List>\r\n                                        {\r\n                                            this.state.categories.map(category => {\r\n                                                //console.log(category);\r\n                                                return (\r\n                                                    <Cell\r\n                                                        key={category._id}\r\n                                                        onClick={() => this.setState({\r\n                                                            targetCategory: category,\r\n                                                            activeViewMasters: 'mastersList'\r\n                                                        })}\r\n                                                        asideContent={this.state.targetCategory === category ?\r\n                                                            <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                                    >\r\n                                                        {category.label}\r\n                                                    </Cell>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </List>\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                    {/*<View id=\"idea\" activePanel=\"idea\">*/}\r\n                    {/*    <Panel id=\"idea\">*/}\r\n                    {/*        <Idea />*/}\r\n                    {/*    </Panel>*/}\r\n                    {/*</View>*/}\r\n                    <View id=\"findmodel\" activePanel={this.state.activePanelFindModels}>\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                            <FindModel openMasterOnId={this.openMasterOnId} user={this.state.user}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head title={'О мастере'}\r\n                                  goBack={() => this.setState({activePanelFindModels: 'findmodel'})}/>\r\n                            <MasterCard openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                        user={this.state.user} activeMaster={this.state.activeMaster}\r\n                                        openComments={() => this.setState({activePanelFindModels: 'masterComments'})}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head title={'Портфолио'}\r\n                                  goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}/>\r\n                            <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head title={'Отзывы'} goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}/>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                    </View>\r\n                    {/*<View id=\"notifications\" activePanel=\"notifications\">*/}\r\n                    {/*    <Panel id=\"notifications\">*/}\r\n                    {/*        <PanelHeader>Уведомления</PanelHeader>*/}\r\n                    {/*        <Group>*/}\r\n                    {/*            <Cell*/}\r\n                    {/*                expandable*/}\r\n                    {/*                onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*                indicator={'В разработке'}*/}\r\n                    {/*            >Этот раздел</Cell>*/}\r\n                    {/*        </Group>*/}\r\n                    {/*    </Panel>*/}\r\n                    {/*</View>*/}\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout} modal={setting}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader>Личный кабинет</PanelHeader>\r\n                                <Lk\r\n                                    user={this.state.user}\r\n                                    openSetting={() => this.setActiveModal('setting')}\r\n                                    //openSetting={() => this.setState({activePanelLk: 'setting'})}\r\n                                    openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                    openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                    openMasterPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head title={'Избранное'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Favourite user={this.state.user} openFavMasterOnId={this.openFavMasterOnId}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head title={'О мастере'} goBack={() => this.setState({activePanelLk: 'favourite'})}/>\r\n                                <MasterCard openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                            user={this.state.user} activeMaster={this.state.activeMaster}\r\n                                            openComments={() => this.setState({activePanelLk: 'masterComments'})}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Portfolio user={this.state.user}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head title={'Мастер ищет модель'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Head title={'Настройки'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Setting\r\n                                    targetCity={this.state.targetCity}\r\n                                    user={this.state.user}\r\n                                    popout={this.openAlert}\r\n                                    changeCity={() => this.setState({activePanelLk: 'changeCity'})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelLk: 'setting'})}/>\r\n                                <CityList changeTargetCity={(city) => this.setState({\r\n                                    targetCity: city,\r\n                                    activePanelLk: 'setting'\r\n                                })}/>\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id=\"registration\">\r\n                            <Panel id='registration'>\r\n                                <Head title={'Регистрация'} goBack={() => this.setState({activeViewLk: 'lk'})}/>\r\n                                <Invite targetCity={this.state.targetCity}\r\n                                        user={this.state.user}\r\n                                        closeReg={this.closeReg}\r\n                                        changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                        snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelReg: 'registration'})}/>\r\n                                <CityList changeTargetCity={(city) => this.setState({\r\n                                    targetCity: city,\r\n                                    activePanelReg: 'registration'\r\n                                })}/>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nbridge.send(\"VKWebAppInit\", {})\r\n    .then(data => console.log('Инициализировали апи вк? '+data.result));\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nconsole.log(params);\r\n\r\n\r\nReactDOM.render(<App linkParams={linkParams} params={params} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}