{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/store/reducers.js","js/store/actions.js","js/masters/mastersCard.js","js/elements/functions.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["Head","props","theme","left","onClick","goBack","title","BACK_LINK","process","BACKEND","users","auth","like","message","masters","all","onID","category","vkuid","subscribers","onarrayid","connect","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getCities","isMember","getAll","logs","params","sendmessage","moder","moderCom","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","activePanelnews","activePanelmasters","activePanelfindmodel","activePanellk","activePanelregistration","newsHistory","mastersHistory","findmodelHistory","lkHistory","registrationHistory","activeStory","activeViewLk","setMaster","console","log","type","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","goTo","story","panel","goForward","changeStory","changeActiveViewLk","activeView","MastersCard","handleChange","event","setState","target","name","value","sendMessage","data","state","sendtitle","phone","fetch","activeMaster","_id","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","error","openSnackAvatar","avatarLink","catch","e","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","getPhone","share","bridge","send","result","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","phone_number","enterNumber","error_data","error_reason","number","snackbar","duration","layout","onClose","defaultValue","align","onChange","this","map","url","postData","images","start_index","text","after","src","size","response","marginTop","visible","id","disabled","bottom","marginLeft","vkUid","description","brand","firstname","lastname","expandable","openComments","indicator","comments","filter","Boolean","length","photos","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","openPhoto","icon","header","separator","priceList","item","multiline","price","React","Component","dispatch","bindActionCreators","reverse","image","gridPhoto","MastersComments","changeStars","stars","i","rating","sendComment","replace","Number","onModer","ids","isCommended","commentsArr","countComments","prevProps","prevState","snapshot","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","star","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","user_id","ingroup","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","photo","openModer","openReg","nowCounter","countUsers","countMasters","countCities","cities","city","inGroup","vk_is_favorite","sort","Invite","getCategories","categories","regMaster","checkLicense","statusMessage","trim","cat","subcat","active","label","location","country","closeReg","addProd","status","add","saveProd","undefined","newProdTitle","newProdBody","newProdPrice","onRemove","slice","permMessage","checkSubcat","indexCat","indexSubcat","counter","count","statusPhoto","bind","changeCity","asideContent","checked","subcategory","require","stretched","openRules","Lk","checkModeration","reasons","reason","addToFavApp","connection","tmpUser","isMaster","isUser","favsArr","mastersArr","caption","openSetting","openFavourite","openMasterPhoto","openFindModel","Portfolio","uploadUrl","token","loading","formData","FormData","selectedFile","document","getElementById","files","append","openSnack","fetchJsonp","saveUrl","savePh","sizes","imgArr","unshift","img","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","accept","CityListModal","search","toLowerCase","country_id","cityList","Fragment","region","withModalRootContext","Setting","platform","saveChanges","patchData","deleteProcedure","setAlert","actionsLayout","autoclose","action","openSnackDismiss","checkBan","banned","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","Array","isArray","String","onSubmit","handleSubmit","Favourite","loadFavsMasters","isLoaded","err","openFavMasterOnId","FindCard","find","sale","openMasterOnId","masterId","marginBottom","FindList","findArr","FindModel","loadFind","window","scrollTo","self","pageYOffset","FindModelMaster","handleChangeSelect","selectvalue","save","isActive","mStatus","Partners","addToCommunity","CityList","Moder","good","bad","goodComment","badComment","activeTab","mastersCount","usersCount","to","openMaster","vk_user_id","selected","renderMasters","renderComments","MastersList","setBottom","meta","setTitle","bottomContent","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","App","validLaunchParams","newMaster","openMasterOnLink","activeMasterId","activeViewMasters","activePanelMasters","history","pushState","hist","openStory","storyName","popoutLk","activePanelFindModels","activePanelLk","activePanelReg","baseCities","searchCity","activeModal","modalHistory","activeTabLk","scheme","onStoryChange","subscribe","detail","launchParams","sign","linkParams","masterid","onpopstate","snackbarLk","dataset","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","alert","openSnackLk","modalBack","openAlert","hostname","match","config","store","createStore","changeIsMaster","newhistory","pop","hash","split","reduce","p","a","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ff5ebcb8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","const BACK_LINK = process.env.REACT_APP_BACK_LINK;\r\n\r\nexport const BACKEND = {\r\n    users: {\r\n        auth: BACK_LINK+'users/auth/',\r\n        like: BACK_LINK+'users/like/'\r\n    },\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/',\r\n        connect: BACK_LINK+'masters/connect/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/',\r\n        getCities: BACK_LINK+'vkapi/getCities',\r\n        isMember: BACK_LINK+'vkapi/isMember'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    moder: BACK_LINK+'masters/moderation/',\r\n    moderCom: BACK_LINK+'comment/moderation/',\r\n};","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS';\r\nexport const GO_TO = 'GO_TO';\r\nexport const GO_FORWARD = 'GO_FORWARD';\r\nexport const CHANGE_STORY = 'CHANGE_STORY';\r\nexport const CHANGE_ACTIVE_VIEW_LK = 'CHANGE_ACTIVE_VIEW_LK';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: null,\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null,\r\n    activePanelnews: 'news',\r\n    activePanelmasters: 'mastersList',\r\n    activePanelfindmodel: 'findmodel',\r\n    activePanellk: 'lk',\r\n    activePanelregistration: 'registration',\r\n    newsHistory: ['news'],\r\n    mastersHistory: ['mastersList'],\r\n    findmodelHistory: ['findmodel'],\r\n    lkHistory: ['lk'],\r\n    registrationHistory: ['registration'],\r\n    activeStory: 'news',\r\n    activeViewLk: 'lk'\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity: action.payload.location !== undefined ? action.payload.location.city : {id: 1, title: 'Москва'}};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload};\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload};\r\n        case GO_TO:\r\n            const history = state[action.payload.story+'History'];\r\n            history.push(action.payload.panel);\r\n            return {...state, ['activePanel'+action.payload.story]: action.payload.panel, [action.payload.story+'History']: history};\r\n        case GO_FORWARD:\r\n            let newhistory = state[action.payload.story+'History'];\r\n            newhistory.pop();\r\n            return {...state, [action.payload.story+'History']: newhistory, ['activePanel'+action.payload.story]: newhistory[newhistory.length -1]};\r\n        case CHANGE_STORY:\r\n            return {...state, activeStory: action.payload};\r\n        case CHANGE_ACTIVE_VIEW_LK:\r\n            return {...state, activeViewLk: action.payload}\r\n\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS,\r\n    GO_TO,\r\n    GO_FORWARD,\r\n    CHANGE_STORY,\r\n    CHANGE_ACTIVE_VIEW_LK\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER');\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER');\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS');\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    };\r\n};\r\n\r\nexport const goTo = (story, panel) => {\r\n    return {\r\n        type: GO_TO,\r\n        payload: {story: story, panel: panel}\r\n    };\r\n};\r\n\r\nexport const goForward = (story) => {\r\n    return {\r\n        type: GO_FORWARD,\r\n        payload: {story: story}\r\n    };\r\n};\r\n\r\nexport const changeStory = (story) => {\r\n    return {\r\n        type: CHANGE_STORY,\r\n        payload: story\r\n    };\r\n};\r\n\r\nexport const changeActiveViewLk = (activeView) => {\r\n    return {\r\n        type: CHANGE_ACTIVE_VIEW_LK,\r\n        payload: activeView\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner,\r\n    Header,\r\n    Card,\r\n    CardGrid,\r\n    CardScroll,\r\n    Button,\r\n    FormLayout,\r\n    RichCell,\r\n    CellButton,\r\n    Placeholder,\r\n    Panel,\r\n    SimpleCell, Input\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData, postData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline';\r\nimport Head from \"../elements/panelHeader\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {loginUser, changeMastersList} from \"../store/actions\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props.activeMaster);\r\n       this.setState({activeMaster: this.props.activeMaster}, ()=> this.loadFavs())\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            let mastersList = this.props.mastersList;\r\n            let newMastersList = mastersList.map(master=>{\r\n                if (master._id === this.state.activeMaster._id){\r\n                    master.subscribers = this.state.countFavs;\r\n                    return master\r\n                } else {\r\n                    return master\r\n                }\r\n            });\r\n            this.props.changeMastersList(newMastersList);\r\n            postData(BACKEND.users.like+this.state.activeMaster._id, this.props.params);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let data = {\r\n            params: this.props.params,\r\n            title: this.state.sendtitle,\r\n            phone: this.state.phone\r\n        };\r\n        fetch(BACKEND.masters.connect+this.state.activeMaster._id, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    this.openSnackAvatar(res.error, this.state.activeMaster.avatarLink)\r\n                } else {\r\n                    this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n            .catch(e=>this.openSnackAvatar(e.message, this.state.activeMaster.avatarLink));\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.getPhone(title)}\r\n                mode=\"outline\"\r\n            >\r\n                Записаться\r\n            </Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number});\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                        <Input\r\n                            name='phone'\r\n                            type=\"number\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    {/*<Div className=\"FormField Input Input--center\">*/}\r\n                    {/*    <InputMask*/}\r\n                    {/*        className=\"Input__el\"*/}\r\n                    {/*        mask=\"7 (999) 999-99-99\"*/}\r\n                    {/*        name='phone'*/}\r\n                    {/*        type=\"text\"*/}\r\n                    {/*        defaultValue={number || ''}*/}\r\n                    {/*        align=\"center\"*/}\r\n                    {/*        value={this.state.phone}*/}\r\n                    {/*        onChange={this.handleChange}*/}\r\n                    {/*    />*/}\r\n                    {/*    <Div className=\"FormField__border\"></Div>*/}\r\n                    {/*</Div>*/}\r\n                    <p>Укажите номер телефона начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Cell>Мастер скрыт</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <RichCell\r\n                            disabled\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            bottom={\r\n                                    <Div style={{marginLeft: 10, padding: 0}}>\r\n                                                <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                        {\r\n                                            this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                                ?\r\n                                                null\r\n                                                :\r\n                                                this.favStatus()\r\n                                        }\r\n                                    </Div>\r\n                            }\r\n                        >\r\n                            <SimpleCell description={this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}>{this.state.activeMaster.firstname} {this.state.activeMaster.lastname}</SimpleCell>\r\n                        </RichCell>\r\n\r\n                        {/*<Cell*/}\r\n                        {/*    photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"*/}\r\n                        {/*    description={*/}\r\n                        {/*        this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type*/}\r\n                        {/*    }*/}\r\n                        {/*    bottomContent={*/}\r\n                        {/*        this.props.user.vkUid === this.state.activeMaster.vkUid*/}\r\n                        {/*            ?*/}\r\n                        {/*            {null}*/}\r\n                        {/*            :*/}\r\n                        {/*            <Cell>*/}\r\n                        {/*                {this.favStatus()}*/}\r\n                        {/*                <Button onClick={() => this.share()}>Поделиться</Button>*/}\r\n                        {/*            </Cell>*/}\r\n                        {/*    }*/}\r\n                        {/*    before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}*/}\r\n                        {/*    size=\"l\"*/}\r\n                        {/*>*/}\r\n                        {/*    {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}*/}\r\n                        {/*</Cell>*/}\r\n\r\n                        <Separator/>\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.filter(Boolean).length}\r\n                            description={'Подписчиков: ' + this.state.countFavs}\r\n                        >\r\n                            Отзывы\r\n                        </Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Div>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Div> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <div>\r\n                                                            <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                        </div>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params,\r\n        mastersList: state.mastersList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MastersCard);","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport {connect} from \"react-redux\";\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: [],\r\n            onModer: 0\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars();\r\n        // this.props.activeMaster.comments.map(comment => {\r\n        //     if (comment !== null && comment.user === this.props.user._id) {\r\n        //         this.setState({isCommended: true})\r\n        //     }\r\n        // });\r\n        //let count = this.props.activeMaster.comments.length;\r\n        fetch(BACKEND.comment.onMasterId+this.props.activeMaster._id)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ids.includes(this.props.user._id)){\r\n                    this.setState({isCommended: true})\r\n                }\r\n                this.setState({commentsArr: res.comments, countComments: res.comments.length, isLoad: true, onModer: res.onModer});\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = [];\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            }\r\n        }\r\n        this.setState({stars: stars});\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера';\r\n            if (this.state.body.replace(/ /g, \"\").length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.replace(/ /g, \"\").length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body,\r\n                moderation: false,\r\n                params: this.props.params\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Комментарий отправлен на проверку\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr, isCommended: true, snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                        >\r\n                            Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                        </Snackbar>});\r\n            })\r\n            .catch(e=>this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e.message}\r\n                    </Snackbar>\r\n            }));\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={comment.rating+` из 5`}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            bottom={this.state.body.replace(/ /g, \"\").length > 20 ? '' : 'Опишите подробнее. Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/ /g, \"\").length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {\r\n                        this.state.onModer !== 0 ?\r\n                            <Cell indicator={this.state.onModer} before={<Icon24CommentOutline/>}>Отзывов на модерации</Cell> : null\r\n                    }\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers, countCities: data.countCities, cities: data.cities.sort()})\r\n            });\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранное</Button>}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        const data = {\r\n            user_id: this.props.user.vkUid,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.vkapi.isMember,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ingroup === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {this.props.master === null &&\r\n                    <Cell\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы — мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <div>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        <Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>\r\n                        <Cell multiline>\r\n                            {\r\n                                this.state.cities &&\r\n                                this.state.cities.map((city, index)=>{\r\n                                    if (index + 1 !== this.state.cities.length){\r\n                                        return city+', '\r\n                                    } else {\r\n                                        return city\r\n                                    }\r\n                                })\r\n                            }\r\n                        </Cell>\r\n                    </div>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                    <Group>\r\n                        <Placeholder\r\n                            icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                            header=\"Привет!\"\r\n                        >\r\n                            У нас можно найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                        </Placeholder>\r\n                        {this.userInfo(user)}\r\n                        {this.nowCounter()}\r\n                        {this.isMember()}\r\n                        {this.favApp()}\r\n                        {/*{this.feedList()}*/}\r\n                        {/*<FixedLayout*/}\r\n                        {/*    vertical=\"bottom\"*/}\r\n                        {/*    style={{marginBottom: 5}}*/}\r\n                        {/*>*/}\r\n                        {/*    */}\r\n                        {/*</FixedLayout>*/}\r\n                    </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: [],\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20-ти символов.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать более 20-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                description: this.state.description,\r\n                type: this.state.type,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                priceList: this.state.priceList,\r\n                params: this.props.params\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.replace(/ +/g, ' ').trim().length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.replace(/ +/g, ' ').trim().length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.replace(/ +/g, ' ').trim().length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (Number(this.state.newProdPrice) < 0) throw 'Нельзя указать отрицательную стоимость';\r\n            if (this.state.newProdPrice.replace(/ +/g, ' ').trim().length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice)\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена');\r\n    };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        size=\"l\"\r\n                                        description=\"Регистрация мастера\"\r\n                                        before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                    >\r\n                                        {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={this.props.changeCity}\r\n                                        indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                        status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                        bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                    >\r\n                                        Ваш город\r\n                                    </Cell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <CardGrid>\r\n                                    <Cell\r\n                                        multiline\r\n                                        asideContent={\r\n                                            <Switch\r\n                                                onChange={this.permMessage}\r\n                                                checked={this.state.statusMessage}/>\r\n                                        }\r\n                                        bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                    >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                    </Cell>\r\n                            </CardGrid>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что Вы выполняете. Так Вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                // removable\r\n                                                // onRemove={() => {\r\n                                                //     this.onRemove(index)\r\n                                                // }}\r\n                                                >\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            </Cell>\r\n                                            <Button\r\n                                                //before={<Icon24Dismiss/>}\r\n                                                onClick={() => {this.onRemove(index)}}\r\n                                                size=\"xl\"\r\n                                                mode=\"destructive\"\r\n                                            >Удалить</Button>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                        <Cell description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length+\"/20\"}><Input\r\n                                            require\r\n                                            name=\"newProdTitle\"\r\n                                            status={this.state.newProdTitle.replace(/ +/g, ' ').trim().length <= 20 ? 'valid' : 'error'}\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/></Cell>\r\n                                        <Cell description={this.state.newProdBody.replace(/ +/g, ' ').trim().length+\"/250\"}><Textarea\r\n                                            require\r\n                                            name=\"newProdBody\"\r\n                                            status={this.state.newProdBody.replace(/ +/g, ' ').trim().length <= 250 ? 'valid' : 'error'}\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/></Cell>\r\n                                        <Cell description={this.state.newProdPrice.replace(/ +/g, ' ').trim().length+\"/5\"}><Input\r\n                                            require\r\n                                            name=\"newProdPrice\"\r\n                                            status={this.state.newProdPrice.replace(/ +/g, ' ').trim().length <= 5 ? 'valid' : 'error'}\r\n                                            type=\"number\" value={this.state.newProdPrice}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/></Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button, Card, CardGrid, RichCell} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            if (this.props.master.moderation.reasons.length > 0) {\r\n                return (\r\n                    <Card>\r\n                        <Cell description={'Их необходимо исправить'}>При модерации обнаружены ошибки:</Cell>\r\n                        {\r\n                            this.props.master.moderation.reasons.map((reason, index)=>{\r\n                                return <Cell key={index}>{reason}</Cell>\r\n                            })\r\n                        }\r\n                    </Card>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Card>\r\n                        <Cell multiline>Ваш профиль на проверке. В течении часа он будет доступен в поиске.</Cell>\r\n                    </Card>\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <CardGrid>\r\n                    <Card size=\"l\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            caption={this.props.master !== null && <CellButton\r\n                                onClick={this.props.openSetting}\r\n                                before={<Icon24Write />}\r\n                            >Редактировать</CellButton>}\r\n                            before={<Avatar src={this.props.user.avatarLink} size={72}/>}\r\n                        >{this.props.user.firstname+' '+this.props.user.lastname}\r\n                        </RichCell>\r\n                    </Card>\r\n                </CardGrid>\r\n                {this.props.master !== null && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.props.master !== null &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Lk);","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Snackbar, Cell, PanelSpinner, Spinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Portfolio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.master.photos.reverse(), isLoad: true});\r\n    }\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        try {\r\n            if (this.state.uploadUrl === undefined) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n            if (this.state.token === undefined) throw 'Ошибка. Не получен токен пользователя.';\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            formData.append('master', this.props.master.firstname+' '+this.props.master.lastname );\r\n            formData.append('uploadUrl', this.state.uploadUrl);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            formData.append('masterId', this.props.master._id);\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error){\r\n                        this.setState({loading: false});\r\n                        this.openSnack(res.error);\r\n                    } else {\r\n                        fetchJsonp(res.saveUrl, {\r\n                            mode: 'no-cors',\r\n                            method: 'GET'\r\n                        })\r\n                            .then(result => result.json())\r\n                            .then(result =>{\r\n                                const savePh = {\r\n                                    url: result.response[0].sizes[2].url,\r\n                                    params: this.props.params\r\n                                };\r\n                                fetch(BACKEND.vkapi.savePhoto, {\r\n                                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                                    mode: 'cors', // no-cors, cors, *same-origin\r\n                                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                    credentials: 'same-origin', // include, *same-origin, omit\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    redirect: 'follow', // manual, *follow, error\r\n                                    referrer: 'no-referrer', // no-referrer, *client\r\n                                    body: JSON.stringify(savePh)\r\n                                })\r\n                                    .then(res => res.json())\r\n                                    .then(res =>{\r\n                                        if (res.error){\r\n                                            this.setState({loading: false});\r\n                                            this.openSnack(res.error);\r\n                                        } else {\r\n                                            let imgArr = this.state.images;\r\n                                            imgArr.unshift(res.img);\r\n                                            this.openSnack('Фото успешно загружено');\r\n                                            this.setState({images: imgArr, loading: false});\r\n                                        }\r\n                                    })\r\n                                    .catch(e=>console.log(e))\r\n                            })\r\n                            .catch(e=>console.log(e))\r\n                        // console.log(res);\r\n                        // let imgArr = this.state.images;\r\n                        // imgArr.unshift(res.img);\r\n                        // this.openSnack('Фото успешно загружено');\r\n                        // this.setState({images: imgArr, loading: false});\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    this.setState({loading: false});\r\n                    this.openSnack(error);\r\n                })\r\n        } catch(e){\r\n            this.openSnack(e);\r\n        }\r\n\r\n    };\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    accept=\"image/*\"\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    onClick={this.getToken}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Portfolio);","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const data = {\r\n            search: this.state.search.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    List,\r\n    Alert,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null,\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveChanges()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        try{\r\n            if (this.state.master.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20-ти символов.';\r\n            if (this.state.master.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать более 20-ти символов.';\r\n            if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n              if (this.state.isChange === true){\r\n                  const master = this.state.master;\r\n                  master.params = this.props.params;\r\n                  this.patchData(BACKEND.masters.all + this.state.master._id, master);\r\n                  this.props.setMaster(this.state.master);\r\n              }\r\n        }catch(e){\r\n            this.props.snackbar(e);\r\n        }\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n            this.setState({isLoad: true})\r\n        }\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.setState({isChange: true});\r\n        this.props.setAlert(\r\n                    <Alert\r\n                        actionsLayout=\"vertical\"\r\n                        actions={[{\r\n                            title: 'Удалить процедуру',\r\n                            autoclose: true,\r\n                            mode: 'destructive',\r\n                            action: () => this.onRemove(index),\r\n                        }, {\r\n                            title: 'Отмена',\r\n                            autoclose: true,\r\n                            mode: 'cancel'\r\n                        }]}\r\n                        onClose={()=>this.props.setAlert(null)}\r\n                    >\r\n                        <h2>Подтвердите действие</h2>\r\n                        <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n                    </Alert>\r\n        );\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        this.setState({isChange: true});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.props.snackbar('Изменения сохранены');\r\n            })\r\n            .catch(e=>console.log(e.message))\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n        this.setState({isChange: true});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        this.setState({isChange: true});\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.replace(/ +/g, ' ').trim().length > 20 || this.state.newProdTitle.replace(/ +/g, ' ').trim().length < 2) throw 'Недопустимая длина заголовка';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.replace(/ +/g, ' ').trim().length > 250 || this.state.newProdBody.replace(/ +/g, ' ').trim().length < 5) throw 'Недопустимая длина описания';\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (Number(this.state.newProdPrice) < 0) throw 'Нельзя указать отрицательную стоимость';\r\n            if (this.state.newProdPrice.replace(/ +/g, ' ').trim().length > 5 || this.state.newProdPrice.replace(/ +/g, ' ').trim().length < 1) throw 'Недопустимая длина суммы';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice)\r\n            });\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.openSnack('Процедура добавлена');\r\n            this.setState({isChange: true});\r\n        } catch (error) {\r\n            this.openSnackDismiss(error)\r\n        }\r\n    };\r\n    // saveProd = () => {\r\n    //     try {\r\n    //         if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n    //         if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n    //         if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n    //         let master = this.state.master;\r\n    //         master.priceList.push({\r\n    //             title: this.state.newProdTitle,\r\n    //             body: this.state.newProdBody,\r\n    //             price: this.state.newProdPrice\r\n    //         });\r\n    //         this.setState({master: master});\r\n    //         this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n    //         this.props.snackbar('Процедура добавлена');\r\n    //     } catch (error) {\r\n    //         this.props.snackbar(error)\r\n    //     }\r\n    // };\r\n\r\n    counter = (index) => {\r\n        // let countMass = this.state.categories[index].subcat.map(subcat=>{\r\n        //     if (subcat.active === true){\r\n        //         return subcat.label\r\n        //     }\r\n        // });\r\n        let countMass = this.state.categories[index].subcat.filter(subcat=> {\r\n            if (subcat.active === true) {\r\n                return subcat.label\r\n            }\r\n\r\n            // function(item){\r\n            //     if (item.active === true){\r\n            //         return item.active;\r\n            //     } else {\r\n            //         return null\r\n            //     }\r\n            // }\r\n        });\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.goBack();\r\n        this.setState({isChange: true});\r\n        //this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.master.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => {this.setState({isChange: true}); this.props.changeCity()}}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\" key={index}>\r\n                                                <Cell\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    //removable\r\n                                                    // onRemove={() => {\r\n                                                    //     this.onRemove(index)\r\n                                                    // }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                    <Button\r\n                                                        //before={<Icon24Dismiss/>}\r\n                                                        onClick={() => this.deleteProcedure(index)}\r\n                                                        size=\"xl\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Удалить</Button>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <List>\r\n                                                <Cell description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length+\"/20\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={this.state.newProdTitle.replace(/ +/g, ' ').trim().length <= 20 ? 'valid' : 'error'}\r\n                                                        name=\"newProdTitle\"\r\n                                                        type=\"text\"\r\n                                                        value={this.state.newProdTitle}\r\n                                                        placeholder={'Введите название'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdBody.replace(/ +/g, ' ').trim().length+\"/250\"}>\r\n                                                    <Textarea\r\n                                                        require\r\n                                                        status={this.state.newProdBody.replace(/ +/g, ' ').trim().length <= 250 ? 'valid' : 'error'}\r\n                                                        name=\"newProdBody\"\r\n                                                        value={this.state.newProdBody}\r\n                                                        placeholder={'Укажите описание'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdPrice.replace(/ +/g, ' ').trim().length+\"/5\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={this.state.newProdPrice.replace(/ +/g, ' ').trim().length <= 5 ? 'valid' : 'error'}\r\n                                                        name=\"newProdPrice\"\r\n                                                        type=\"number\" value={this.state.newProdPrice}\r\n                                                        placeholder={'Укажите цену'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                            </List>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={(event)=>{this.setState({isChange: true}); this.checkSubcat(event)}}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                        {this.state.snackbar}\r\n                            </Div>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\nimport Head from \"../elements/panelHeader\";\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56LikeOutline/>}\r\n                        header={this.state.mastersArr.message}\r\n                    >Добавить мастера в этот список можно, нажав соответствующую кнопку в профиле мастера.\r\n                    </Placeholder>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <React.Fragment>\r\n                                    <Head\r\n                                        title='Избранное'\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <CardGrid key={master.vkUid}>\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <RichCell\r\n                                                key={master._id}\r\n                                                before={<Avatar size={72} src={master.avatarLink} />}\r\n                                                text={master.type}\r\n                                                caption={master.location.city.title}\r\n                                                after={<Icon16Chevron/>}\r\n                                                onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                            >\r\n                                                {master.firstname} {master.lastname}\r\n                                            </RichCell>\r\n                                        </Card>\r\n                                    </CardGrid>\r\n                                </React.Fragment>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\n// function renderLastPhoto(arr){\r\n//     for (let i =0; i<arr.length; i++){\r\n//         if (!arr[i]) break;\r\n//         return (\r\n//             <Card\r\n//                 size=\"s\"\r\n//                 mode=\"shadow\"\r\n//                 key={i}\r\n//                 //onClick={() => this.openShowImages(this.state.images, index)}\r\n//             >\r\n//                 <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    console.log(find);\r\n                    this.props.changeFindModelsList(find);\r\n                    this.setState({findArr: find, isLoad: true});\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.findModel.onMasterId+this.props.master._id)\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                if (find.length > 0) {\r\n                    console.log(find);\r\n                    this.setState({loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                } else {\r\n                    let error = <Cell>У вас нет активных поисков</Cell>;\r\n                    this.setState({error: error, isLoaded: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if(this.props.master.photos.length < 3) throw 'В портфолио должно быть не менее 3-х фотографий';\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length === 0) throw 'Пустое сообщение недопустимо';\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length > 250) throw 'Максимальная длина сообщения - 250 символов';\r\n            let images = [];\r\n            this.props.master.photos.map((image,i)=> {\r\n                if (i < 3){\r\n                    images.push(image)\r\n                }\r\n            });\r\n            if (this.state.isActive === true) {\r\n                let find = this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n                this.openSnack('Информация успешно обновлена.')\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                // find.masterId = this.state.activeMaster._id;\r\n                // find.location = this.state.activeMaster.location;\r\n                // find.firstname = this.state.activeMaster.firstname;\r\n                // find.lastname = this.state.activeMaster.lastname;\r\n                // find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                    fetch(BACKEND.findModel.new, {\r\n                        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                        mode: 'cors', // no-cors, cors, *same-origin\r\n                        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                        credentials: 'same-origin', // include, *same-origin, omit\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        redirect: 'follow', // manual, *follow, error\r\n                        referrer: 'no-referrer', // no-referrer, *client\r\n                        body: JSON.stringify(find), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res=>{\r\n                            this.setState({loadFind: res.find, isActive: true});\r\n                            if (res.mStatus === false){\r\n                                this.setState({visible: false});\r\n                                this.openSnack('Объявление о поиске модели создано, но пока не показывается. Его можно активировать сразу после прохождения модерации профиля мастера.')\r\n                            } else {\r\n                                this.openSnack('Объявление о поиске модели успешно создано.')\r\n                            }\r\n                        })\r\n                        .catch(e=>console.log(e));\r\n                //this.postData(BACKEND.findModel.new, find);\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.props.master.photos.length > 0 ?\r\n                                    this.props.master.photos.map((image,i)=>{\r\n                                        if (i < 3){\r\n                                            return (\r\n                                                <Card size='s' key={i}>\r\n                                                    <div\r\n                                                        style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                    >\r\n                                                    </div>\r\n                                                </Card>\r\n                                            )\r\n                                        }\r\n                                    }) : 'У вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий'\r\n                                }\r\n                                </CardGrid>\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>{\r\n                                            if (this.props.master.moderation.status === true){\r\n                                                this.setState({visible: !this.state.visible})\r\n                                            } else {\r\n                                                this.openSnack('Ваш профиль находится на модерации. Вы можете создать объявление уже сейчас, но до завершения проверки пользователи его не увидят.')\r\n                                            }\r\n                                        }}\r\n                                        checked={this.props.master.moderation.status === true ? this.state.visible : false}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModelMaster);","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества с тематикой схожей с тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\nimport Head from \"./panelHeader\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: false,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 49, title: 'Екатеринбург'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const data = {\r\n            search: this.state.search.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n}\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                        <React.Fragment>\r\n                            <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                            {this.state.cities.length > 0 ?\r\n                            <List>\r\n                                {this.state.cities.map(city =>\r\n                                    <Cell\r\n                                        description={city.region || ''}\r\n                                        onClick={()=>this.props.changeCity(city)}\r\n                                        key={city.id}\r\n                                    >\r\n                                        {city.title}\r\n                                    </Cell>\r\n                                )}\r\n                            </List> :\r\n                                <Placeholder\r\n                                    icon={<Icon56PlaceOutline />}\r\n                                    header=\"Город не найден\"\r\n                                >\r\n                                    Проверьте опечатки или измените критерии поиска\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel, Textarea, Cell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\n\r\nimport {BACKEND} from \"../func/func\";\r\nimport Head from \"../elements/panelHeader\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            })\r\n            .catch(e=>console.log(e))\r\n        fetch(BACKEND.comment.moderation,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                this.setState({comments: comments})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: [],\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        // if (index > -1) {\r\n        //     mastersList.splice(index, 1);\r\n        // } else mastersList.splice(0, index);\r\n        // this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        mastersList[index].moderation.reasons = reasons;\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n        this.setState({mastersList: mastersList});\r\n    };\r\n\r\n    goodComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'good');\r\n        fetch(BACKEND.moderCom+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    badComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'bad');\r\n        fetch(BACKEND.moderCom+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null;\r\n            console.log(comment)\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment._id, index)} mode=\"destructive\">Удалить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment.body}\r\n                        </RichCell>\r\n                        <Cell before={ <Avatar size={25} src={comment.user.avatarLink} /> }> From - {comment.user.firstname + ' ' + comment.user.lastname}</Cell>\r\n                        <Cell >To - {comment.to.name}</Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Cell>\r\n                                            <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                            <Button onClick={()=>this.setState({[master.vkUid]: true})} mode=\"secondary\">Отклонить</Button>\r\n                                        </Cell>\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                            {\r\n                                master.moderation.reasons.length > 0 &&\r\n                                <Cell>\r\n                                    {\r\n                                        master.moderation.reasons.map(reason=>{\r\n                                            return reason\r\n                                        })\r\n                                    }\r\n                                </Cell>\r\n                            }\r\n                            {\r\n                                this.state[master.vkUid] === true &&\r\n                                <Cell>\r\n                                    <Textarea name='reason' value={this.state.reason} onChange={(event)=>{\r\n                                        console.log(this.state.reason);\r\n                                        this.setState({reason: event.target.value})\r\n                                    }\r\n                                    }/>\r\n                                    <Button onClick={()=>this.bad(master._id, index)} mode=\"secondary\">Отклонить</Button>\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        if (this.props.params.vk_user_id !== '199500866'){\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Cell>У Вас нет доступа</Cell>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Head\r\n                        title={'Модерация'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'masters' })}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'comments' })}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Moder);","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder, Footer} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(master.meta)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster(master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        });\r\n    }\r\n\r\n    setBottom = (meta) => {\r\n        if (meta.comments > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {meta.rating} из {meta.comments} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                    <Footer>На этом все. Мастеров всего - {this.props.mastersList.length}.</Footer>\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner, Div, Panel, View} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    window.scrollTo(0, this.props.mastersListScroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <Panel id=\"mastersList\">\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e)=>this.checkSubcat(e)}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n                    {this.props.snackbar}\r\n                </Panel>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster, changeActiveMasterOnMasters, changeActiveMasterOnFindModels, changeActiveMasterOnFavs, changeLaunchParams, changeStory, goTo, goForward, changeActiveViewLk} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport HeadCity from \"./js/elements/headCity\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popoutLk: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\"\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n        });\r\n        if (this.props.launchParams.sign !== undefined) {\r\n            this.setState({validLaunchParams: true});\r\n            console.log('Параметры пришли');\r\n            this.props.changeLaunchParams(this.props.launchParams);\r\n            this.auth(this.props.launchParams);\r\n        } else {\r\n            this.setState({validLaunchParams: false});\r\n            this.openSnack('Ошибка. Не переданы параметры запуска.');\r\n        }\r\n        if (this.props.linkParams.masterid){\r\n            this.openMasterOnId(this.props.linkParams.masterid)\r\n            this.props.changeStory('masters')\r\n        }\r\n        window.onpopstate = () => {\r\n            if (this.props.activeViewLk === 'registration'){\r\n                this.goBack('registration')\r\n            } else {\r\n                this.goBack(this.props.activeStory)\r\n            }\r\n        };\r\n    }\r\n\r\n    auth = (params) => {\r\n        fetch(BACKEND.users.auth, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                this.setState({validLaunchParams: true});\r\n                this.props.loginUser(data.user);\r\n                if (data.master !== null){\r\n                    this.props.setMaster(data.master)\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                this.openSnack('Ошибка подключения к серверу.')\r\n                this.setState({validLaunchParams: false});\r\n            })\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnMasters(master);\r\n                this.goTo('masters', 'masterInfo');\r\n            });\r\n    };\r\n\r\n    openSnackLk(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null});\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                this.props.setMaster(newMaster);\r\n                this.props.changeActiveViewLk('lk')\r\n                this.openSnack('Ваш профиль отправлен на проверку. Не забудьте добавить фотографии в портфолио - так, шансы получить заказ намного выше.');\r\n                //this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack(e.message);\r\n            //this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n        console.log(masterId);\r\n    };\r\n\r\n    goTo = (story, panel) => {\r\n        window.history.pushState({panel: panel}, panel);\r\n        this.props.goTo(story, panel)\r\n        let hist = this.props[story+'History'];\r\n        console.log(hist);\r\n    };\r\n\r\n    goBack = (story) => {\r\n        if (this.props[story+'History'].length === 1){\r\n            bridge.send('VKWebAppClose', {'status': 'sucsess'});\r\n        } else {\r\n            this.props.goForward(story)\r\n            let hist = this.props[story+'History'];\r\n            console.log(hist);\r\n        }\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        user.params = this.props.params;\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Всё, беда! Вы все сломали :(\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                        header=\"Выполняется вход...\"\r\n                    >Это может занять несколько секунд\r\n                        {this.state.snackbar}\r\n                    </Placeholder>\r\n                </ConfigProvider>\r\n            )\r\n      } else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.props.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('news')}\r\n                            selected={this.props.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('masters')}\r\n                            selected={this.props.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('findmodel')}\r\n                            selected={this.props.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>{\r\n                                this.setState({snackbarLk: null});\r\n                                this.props.changeStory('lk')\r\n                            }}\r\n                            selected={this.props.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" history={this.props.newsHistory} onSwipeBack={() => this.goBack('news')} activePanel={this.props.activePanelnews}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={()=>{\r\n                                    this.props.changeStory('lk');\r\n                                    this.props.changeActiveViewLk('registration');\r\n                                }}\r\n                                //openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                // openModer={() => this.goForwardNews('moder')}\r\n                                openModer={() => this.goTo('news', 'moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBack('news')}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master});\r\n                                    this.goTo('news', 'masterInfo');\r\n                                    //this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('news')}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                    </View>\r\n                        <View id=\"masters\" activePanel={this.props.activePanelmasters} history={this.props.mastersHistory} onSwipeBack={() => this.goBack('masters')}>\r\n                            <Masters\r\n                                id=\"mastersList\"\r\n                                    //changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                    changeCity={()=> this.goTo('masters', 'changeCity')}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    //changeCategory={()=>this.setState({activePanelMasters: 'masterCat'})}\r\n                                    changeCategory={()=>this.goTo('masters', 'masterCat')}\r\n                                    openPanelMaster={(master)=>{\r\n                                        this.props.changeActiveMasterOnMasters(master);\r\n                                        this.goTo('masters', 'masterInfo');\r\n                                    }}\r\n                                    snackbar={this.state.snackbar}\r\n                            />\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('masters')}/>\r\n                                    <CityList\r\n                                            id='changeCity'\r\n                                            // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                            goBack={() => this.goBack('masters')}\r\n                                            changeCity={(city) => {\r\n                                            this.changeTargetCity(city);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'})\r\n                                        }}\r\n                                    />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    //onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    //openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openPhoto={() => this.goTo('masters', 'masterPhoto')}\r\n                                    openComments={() => this.goTo('masters', 'masterComments')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <Head\r\n                                    title={'Выбор категории'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.props.activePanelfindmodel}\r\n                        history={this.props.findmodelHistory} onSwipeBack={() => this.goBack('findmodel')}\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ищу модель</PanelHeader>\r\n                            <FindModel\r\n                                //openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                // changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                                changeCity={() => this.goTo('findmodel', 'changeCity')}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='changeCity'>\r\n                            <Head title={'Выбор города'}\r\n                                  goBack={() => this.goBack('findmodel')}/>\r\n                        <CityList\r\n                                id='changeCity'\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.goBack('findmodel')\r\n                            }}\r\n                        />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <MasterCard\r\n                                id=\"masterInfo\"\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                openPhoto={() => this.goTo('findmodel', 'masterPhoto')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                openComments={() => this.goTo('findmodel', 'masterComments')}\r\n                                //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterPhoto\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterComments\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n                    <Root id=\"lk\" activeView={this.props.activeViewLk}>\r\n                            <View id=\"lk\" popout={this.state.popoutLk} activePanel={this.props.activePanellk} history={this.props.lkHistory} onSwipeBack={() => this.goBack('lk')}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнёрам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.goTo('lk', 'setting')}\r\n                                            openFavourite={() => this.goTo('lk', 'favourite')}\r\n                                            openFindModel={() => this.goTo('lk', 'findModel')}\r\n                                            openMasterPhoto={() => this.goTo('lk', 'portfolio')}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbarLk}\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Head\r\n                                    title='Настройки'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Setting\r\n                                    setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                    snackbar={(message) => this.openSnackLk(message)}\r\n                                    modalBack={this.modalBack}\r\n                                    activeModal={this.state.activeModal}\r\n                                    changeCity={() => this.goTo('lk', 'changeCity')}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('lk')}/>\r\n                                <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    changeCity={(city) => {\r\n                                        let master = this.props.master;\r\n                                        master.location.city = city;\r\n                                        this.props.setMaster(master);\r\n                                        this.goBack('lk')\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Favourite\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    openFavMasterOnId={(masterId)=>{\r\n                                        fetch(BACKEND.masters.onID + masterId)\r\n                                            .then(res => res.json())\r\n                                            .then(master => {\r\n                                                this.props.changeActiveMasterOnFavs(master);\r\n                                                this.goTo('lk', 'masterInfo');\r\n                                            })\r\n                                            .catch(e=>console.log(e))\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    openPhoto={() => this.goTo('lk', 'masterPhoto')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    openComments={() => this.goTo('lk', 'masterComments')}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"portfolio\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Portfolio\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title='Отзывы'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head\r\n                                    title='Ищу модель'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <FindModelMaster\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user} popout={this.openAlert}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n\r\n                        <View activePanel={this.props.activePanelregistration} id='registration'>\r\n                            <Panel id='registration'>\r\n                                <Head\r\n                                    title={'Регистрация'}\r\n                                    goBack={() => this.props.changeActiveViewLk('lk')}\r\n                                />\r\n                                <Invite\r\n                                    goBack={() => this.props.changeActiveViewLk('lk')}\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.goTo('registration', 'changeCity')}\r\n                                    openRules={() => this.goTo('registration', 'rules')}\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='rules'>\r\n                                <Head\r\n                                    title='Соглашение'\r\n                                    goBack={() => this.goBack('registration')}\r\n                                />\r\n                                <Rules\r\n                                    goBack={() => this.goBack('registration')}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('registration')}/>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.goBack('registration')}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                        this.goBack('registration')\r\n                                }}\r\n                            />\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs,\r\n        params: state.params,\r\n        activePanelnews: state.activePanelnews,\r\n        activePanelmasters: state.activePanelmasters,\r\n        activePanelfindmodel: state.activePanelfindmodel,\r\n        activePanellk: state.activePanellk,\r\n        activeStory: state.activeStory,\r\n        newsHistory: state.newsHistory,\r\n        mastersHistory: state.mastersHistory,\r\n        findmodelHistory: state.findmodelHistory,\r\n        lkHistory: state.lkHistory,\r\n        activeViewLk: state.activeViewLk,\r\n        activePanelregistration: state.activePanelregistration,\r\n        registrationHistory: state.registrationHistory\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch),\r\n        changeStory: bindActionCreators(changeStory, dispatch),\r\n        goTo: bindActionCreators(goTo, dispatch),\r\n        goForward: bindActionCreators(goForward, dispatch),\r\n        changeActiveViewLk: bindActionCreators(changeActiveViewLk, dispatch)\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nrequire('dotenv').config();\r\n\r\n\r\nconst store = createStore(rootReducer);\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App launchParams={params} linkParams={linkParams}/>\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}