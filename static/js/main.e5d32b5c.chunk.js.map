{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/store/reducers.js","js/store/actions.js","js/masters/mastersCard.js","js/elements/functions.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["Head","props","theme","left","onClick","goBack","title","BACK_LINK","process","BACKEND","users","onid","auth","like","message","masters","onID","category","vkuid","subscribers","onarrayid","connect","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getAll","logs","params","sendmessage","moder","moderCom","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","setMaster","console","log","type","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","MastersCard","handleChange","event","setState","target","name","value","sendMessage","data","state","sendtitle","phone","fetch","activeMaster","_id","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","openSnackAvatar","avatarLink","catch","e","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","getPhone","share","bridge","send","result","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","phone_number","enterNumber","error_data","error_reason","number","snackbar","duration","layout","onClose","className","mask","defaultValue","align","onChange","this","url","postData","images","start_index","text","after","src","size","response","marginTop","visible","id","photo","description","brand","bottomContent","vkUid","firstname","lastname","expandable","openComments","indicator","comments","filter","Boolean","length","photos","map","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","openPhoto","icon","header","separator","priceList","item","multiline","price","React","Component","dispatch","bindActionCreators","reverse","image","gridPhoto","MastersComments","changeStars","stars","i","rating","sendComment","Number","isCommended","count","commentsArr","countComments","prevProps","prevState","snapshot","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","star","bottom","replace","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","isMember","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","openModer","openReg","nowCounter","countUsers","countMasters","countCities","cities","city","inGroup","vk_is_favorite","sort","Invite","getCategories","categories","regMaster","checkLicense","cat","subcat","active","label","location","country","closeReg","error","addProd","status","add","saveProd","undefined","newProdTitle","newProdBody","newProdPrice","onRemove","slice","permMessage","statusMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","asideContent","checked","subcategory","require","stretched","openRules","Lk","checkModeration","reasons","reason","addToFavApp","connection","tmpUser","isMaster","isUser","favsArr","mastersArr","openSetting","openFavourite","openMasterPhoto","openFindModel","Portfolio","uploadUrl","token","loading","formData","FormData","selectedFile","document","getElementById","files","append","imgArr","unshift","img","openSnack","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","CityListModal","search","getCities","toLowerCase","items","updateModalHeight","Fragment","region","withModalRootContext","Setting","platform","saveChanges","patchData","all","openSnackDismiss","checkBan","banned","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","Array","isArray","String","onSubmit","handleSubmit","Favourite","loadFavsMasters","ids","isLoaded","err","window","history","replaceState","pushState","addEventListener","caption","openFavMasterOnId","FindCard","disabled","find","sale","openMasterOnId","masterId","marginBottom","FindList","findArr","action","FindModel","loadFind","scrollTo","self","pageYOffset","FindModelMaster","handleChangeSelect","selectvalue","save","isActive","Partners","addToCommunity","CityList","Moder","good","bad","goodComment","badComment","activeTab","mastersCount","usersCount","openMaster","selected","renderMasters","renderComments","MastersList","setBottom","setTitle","ratingArr","reduce","a","b","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","App","validLaunchParams","goBackNews","newsHistory","pop","activePanelNews","goForwardNews","newMaster","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeMasterId","activeStory","activeViewMasters","activePanelLk","openStory","storyName","activePanelReg","baseCities","searchCity","activeModal","modalHistory","activeTabLk","scheme","onStoryChange","launchParams","sign","subscribe","detail","onpopstate","dataset","story","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","activeView","modalBack","setActiveModal","openAlert","hostname","match","config","store","createStore","changeIsMaster","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e5d32b5c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","const BACK_LINK = process.env.REACT_APP_BACK_LINK;\r\n\r\nexport const BACKEND = {\r\n    users: {\r\n        onid: BACK_LINK+'users/',\r\n        auth: BACK_LINK+'users/auth/',\r\n        like: BACK_LINK+'users/like/'\r\n    },\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/',\r\n        connect: BACK_LINK+'masters/connect/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    moder: BACK_LINK+'masters/moderation/',\r\n    moderCom: BACK_LINK+'comment/moderation/',\r\n};","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: null,\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity:action.payload.location.city};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload};\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload};\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER');\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER');\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS');\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, FormLayout, RichCell, CellButton, Placeholder, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData, postData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline';\r\nimport Head from \"../elements/panelHeader\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {loginUser} from \"../store/actions\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props.activeMaster);\r\n       this.setState({activeMaster: this.props.activeMaster}, ()=> this.loadFavs())\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            postData(BACKEND.users.like+this.state.activeMaster._id, this.props.params);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let data = {\r\n            params: this.props.params,\r\n            title: this.state.sendtitle,\r\n            phone: this.state.phone\r\n        };\r\n        fetch(BACKEND.masters.connect+this.state.activeMaster._id, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink)\r\n            })\r\n            .catch(e=>console.log(e));\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.getPhone(title)}\r\n                mode=\"outline\"\r\n            >\r\n                Записаться\r\n            </Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number});\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Cell>Мастер скрыт</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                    ?\r\n                                    <Cell before={<Icon20UserOutline />}>Да, это Вы</Cell>\r\n                                    :\r\n                                    <Cell>\r\n                                        {this.favStatus()}\r\n                                        <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                    </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.filter(Boolean).length}\r\n                            description={'Подписчиков: ' + this.state.countFavs}\r\n                        >\r\n                            Отзывы\r\n                        </Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Div>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Div> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <div>\r\n                                                            <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                        </div>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        loginUser: bindActionCreators(loginUser, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MastersCard);","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport {connect} from \"react-redux\";\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars();\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment !== null && comment.user === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        fetch(BACKEND.comment.onMasterId+this.props.activeMaster._id)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                console.log(res);\r\n                this.setState({commentsArr: res, countComments: count, isLoad: true});\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = [];\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            }\r\n        }\r\n        this.setState({stars: stars});\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера';\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body,\r\n                moderation: false,\r\n                params: this.props.params\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Комментарий отправлен на проверку\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr, isCommended: true, snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                        >\r\n                            Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                        </Snackbar>});\r\n            })\r\n            .catch(e=>this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e.message}\r\n                    </Snackbar>\r\n            }));\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={comment.rating+` из 5`}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        {/*<Slider*/}\r\n                        {/*    step={1}*/}\r\n                        {/*    min={1}*/}\r\n                        {/*    max={5}*/}\r\n                        {/*    value={Number(this.state.rating)}*/}\r\n                        {/*    onChange={rating=>this.setState({rating})}*/}\r\n                        {/*    top={\"Моя оценка работы мастера: \"+this.state.rating}*/}\r\n                        {/*    bottom='Перемещайте ползунок влево или вправо для изменения оценки'*/}\r\n                        {/*/>*/}\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/ /g, \"\").length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers, countCities: data.countCities, cities: data.cities.sort()})\r\n            });\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранные</Button>}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"groups.isMember\",\r\n            \"params\": {\"group_id\": \"193179174\",\"user_id\": this.props.user.vkUid, \"v\":\"5.103\", \"access_token\": process.env.REACT_APP_TOKEN}})\r\n            .then(result => {\r\n                if (result.response === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {this.props.master === null &&\r\n                    <Cell\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы - мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <div>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        <Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>\r\n                        <Cell multiline>\r\n                            {\r\n                                this.state.cities &&\r\n                                this.state.cities.map(city=>{\r\n                                    return city+' '\r\n                                })\r\n                            }\r\n                        </Cell>\r\n                    </div>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                    <Group>\r\n                        <Placeholder\r\n                            icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                            header=\"Привет!\"\r\n                        >\r\n                            У нас ты можешь найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                        </Placeholder>\r\n                        {this.userInfo(user)}\r\n                        {this.nowCounter()}\r\n                        {this.isMember()}\r\n                        {this.favApp()}\r\n                        {/*{this.feedList()}*/}\r\n                        {/*<FixedLayout*/}\r\n                        {/*    vertical=\"bottom\"*/}\r\n                        {/*    style={{marginBottom: 5}}*/}\r\n                        {/*>*/}\r\n                        {/*    */}\r\n                        {/*</FixedLayout>*/}\r\n                    </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            //if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                description: this.state.description,\r\n                type: this.state.type,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                priceList: this.state.priceList,\r\n                params: this.props.params\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена');\r\n    };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        size=\"l\"\r\n                                        description=\"Регистрация мастера\"\r\n                                        before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                    >\r\n                                        {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={this.props.changeCity}\r\n                                        indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                        status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                        bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                    >\r\n                                        Ваш город\r\n                                    </Cell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        multiline\r\n                                        asideContent={\r\n                                            <Switch\r\n                                                onChange={this.permMessage}\r\n                                                checked={this.state.statusMessage}/>\r\n                                        }\r\n                                        bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                    >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                    </Cell>\r\n                                    {/*<Cell*/}\r\n                                    {/*    expandable*/}\r\n                                    {/*    multiline*/}\r\n                                    {/*    onClick={this.permMessage}*/}\r\n                                    {/*    description=\"Для получения уведомлений о заявках\"*/}\r\n                                    {/*    status={this.state.statusMessage === true ? 'valid' : 'error'}*/}\r\n                                    {/*>Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? <span style={{color: 'green'}}>Разрешен</span> : <span style={{color: 'red'}}>Не разрешен</span>}*/}\r\n                                    {/*</Cell>*/}\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                // removable\r\n                                                // onRemove={() => {\r\n                                                //     this.onRemove(index)\r\n                                                // }}\r\n                                                >\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            </Cell>\r\n                                            <Button\r\n                                                //before={<Icon24Dismiss/>}\r\n                                                onClick={() => {this.onRemove(index)}}\r\n                                                size=\"xl\"\r\n                                                mode=\"destructive\"\r\n                                            >Удалить</Button>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdTitle\"\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Textarea\r\n                                            require\r\n                                            name=\"newProdBody\"\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdPrice\"\r\n                                            type=\"number\" value={this.state.newProdPrice}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button, Card} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            if (this.props.master.moderation.reasons.length > 0) {\r\n                return (\r\n                    <Card>\r\n                        <Cell description={'Их необходимо исправить'}>При модерации обнаружены ошибки:</Cell>\r\n                        {\r\n                            this.props.master.moderation.reasons.map((reason, index)=>{\r\n                                return <Cell key={index}>{reason}</Cell>\r\n                            })\r\n                        }\r\n                    </Card>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Card>\r\n                        <Cell multiline>Ваш профиль на проверке. В течении часа он будет доступен в поиске.</Cell>\r\n                    </Card>\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'}\r\n                    bottomContent={this.props.master !== null && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.props.user.firstname+' '+this.props.user.lastname}\r\n                </Cell>\r\n                {this.props.master !== null && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.props.master !== null &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Lk);","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Snackbar, Cell, PanelSpinner, Spinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Portfolio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.master.photos.reverse(), isLoad: true});\r\n    }\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        try {\r\n            if (this.state.uploadUrl === undefined) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n            if (this.state.token === undefined) throw 'Ошибка. Не получен токен пользователя.';\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            formData.append('master', this.props.master.firstname+' '+this.props.master.lastname );\r\n            formData.append('uploadUrl', this.state.uploadUrl);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            formData.append('masterId', this.props.master._id);\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n                    let imgArr = this.state.images;\r\n                    imgArr.unshift(res.img);\r\n                    this.openSnack('Фото успешно загружено');\r\n                    this.setState({images: imgArr, loading: false});\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n        } catch(e){\r\n            this.openSnack(e);\r\n        }\r\n\r\n    };\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    onClick={this.getToken}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Portfolio);","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories, isLoad: true});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveChanges()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        const master = this.state.master;\r\n        master.params = this.props.params;\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, master);\r\n        this.props.setMaster(this.state.master);\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.props.snackbar('Изменения сохранены');\r\n            })\r\n            .catch(e=>console.log(e.message))\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.openSnack('Процедура добавлена');\r\n        } catch (error) {\r\n            this.openSnackDismiss(error)\r\n        }\r\n    };\r\n    // saveProd = () => {\r\n    //     try {\r\n    //         if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n    //         if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n    //         if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n    //         let master = this.state.master;\r\n    //         master.priceList.push({\r\n    //             title: this.state.newProdTitle,\r\n    //             body: this.state.newProdBody,\r\n    //             price: this.state.newProdPrice\r\n    //         });\r\n    //         this.setState({master: master});\r\n    //         this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n    //         this.props.snackbar('Процедура добавлена');\r\n    //     } catch (error) {\r\n    //         this.props.snackbar(error)\r\n    //     }\r\n    // };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.master.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.props.changeModal('changeCity')}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\" key={index}>\r\n                                                <Cell\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    //removable\r\n                                                    // onRemove={() => {\r\n                                                    //     this.onRemove(index)\r\n                                                    // }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                    <Button\r\n                                                        //before={<Icon24Dismiss/>}\r\n                                                        onClick={() => {this.onRemove(index)}}\r\n                                                        size=\"xl\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Удалить</Button>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Textarea\r\n                                                require\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\" value={this.state.newProdPrice}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={this.checkSubcat}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                        {this.state.snackbar}\r\n                            </Div>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.history.replaceState({}, '', '#init');\r\n        window.history.pushState({}, '', '#router');\r\n        window.addEventListener('popstate', event => {\r\n            window.history.pushState({}, '', '#router-back');\r\n            this.props.goBack();\r\n        });\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56LikeOutline/>}\r\n                        header={this.state.mastersArr.message}\r\n                    >Добавить мастера в этот список можно, нажав соответствующую кнопку в профиле мастера.\r\n                    </Placeholder>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master.vkUid}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <RichCell\r\n                                            key={master._id}\r\n                                            before={<Avatar size={72} src={master.avatarLink} />}\r\n                                            text={master.type}\r\n                                            caption={master.location.city.title}\r\n                                            after={<Icon16Chevron/>}\r\n                                            onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >\r\n                                            {master.firstname} {master.lastname}\r\n                                        </RichCell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n\r\n                                // <CardGrid key={master._id}>\r\n                                //     <Card size=\"l\" mode=\"shadow\">\r\n                                //         <Cell expandable\r\n                                //               photo={master.avatarLink}\r\n                                //               description={master.type}\r\n                                //               before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                //               size=\"l\"\r\n                                //               onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                //         >{master.firstname} {master.lastname}\r\n                                //         </Cell>\r\n                                //     </Card>\r\n                                // </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\n// function renderLastPhoto(arr){\r\n//     for (let i =0; i<arr.length; i++){\r\n//         if (!arr[i]) break;\r\n//         return (\r\n//             <Card\r\n//                 size=\"s\"\r\n//                 mode=\"shadow\"\r\n//                 key={i}\r\n//                 //onClick={() => this.openShowImages(this.state.images, index)}\r\n//             >\r\n//                 <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    console.log(find);\r\n                    this.props.changeFindModelsList(find);\r\n                    this.setState({findArr: find, isLoad: true});\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.findModel.onMasterId+this.props.master._id)\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                if (find.length > 0) {\r\n                    console.log(find);\r\n                    this.setState({loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                } else {\r\n                    let error = <Cell>У вас нет активных поисков</Cell>;\r\n                    this.setState({error: error, isLoaded: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if(this.props.master.photos.length < 3) throw 'В портфолио должно быть не менее 3-х фотографий';\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if (this.state.body.length === 0) throw 'Пустое сообщение недопустимо';\r\n            let images = [];\r\n            this.props.master.photos.map((image,i)=> {\r\n                if (i < 3){\r\n                    images.push(image)\r\n                }\r\n            });\r\n            if (this.state.isActive === true) {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                console.log('измененный',find);\r\n                this.setState({loadFind: find});\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n                this.openSnack('Информация успешно обновлена.')\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                // find.masterId = this.state.activeMaster._id;\r\n                // find.location = this.state.activeMaster.location;\r\n                // find.firstname = this.state.activeMaster.firstname;\r\n                // find.lastname = this.state.activeMaster.lastname;\r\n                // find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                this.postData(BACKEND.findModel.new, find);\r\n                this.openSnack('Информация о поиске успешно размещена.')\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.props.master.photos.length > 0 ?\r\n                                    this.props.master.photos.map((image,i)=>{\r\n                                        return (\r\n                                            <Card size='s' key={i}>\r\n                                                <div\r\n                                                    style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                >\r\n                                                </div>\r\n                                            </Card>\r\n                                        )\r\n                                    }) : 'У вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий'\r\n                                }\r\n                                </CardGrid>\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>this.setState({visible: !this.state.visible})}\r\n                                        checked={this.state.visible}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModelMaster);","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества со схожей тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\nimport Head from \"./panelHeader\";\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: true,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 49, title: 'Екатеринбург'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": process.env.REACT_APP_TOKEN\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items, isLoad: true}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Panel id='changeCity'>\r\n                    <Head title={'Выбор города'}\r\n                          goBack={() => this.props.goBack()}/>\r\n                        <React.Fragment>\r\n                            <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                            {this.state.cities.length > 0 ?\r\n                            <List>\r\n                                {this.state.cities.map(city =>\r\n                                    <Cell\r\n                                        description={city.region || ''}\r\n                                        onClick={()=>this.props.changeCity(city)}\r\n                                        key={city.id}\r\n                                    >\r\n                                        {city.title}\r\n                                    </Cell>\r\n                                )}\r\n                            </List> :\r\n                                <Placeholder\r\n                                    icon={<Icon56PlaceOutline />}\r\n                                    header=\"Город не найден\"\r\n                                >\r\n                                    Проверьте опечатки или измените критерии поиска\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n                </Panel>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel, Textarea, Cell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\n\r\nimport {BACKEND} from \"../func/func\";\r\nimport Head from \"../elements/panelHeader\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            })\r\n            .catch(e=>console.log(e))\r\n        fetch(BACKEND.comment.moderation,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                this.setState({comments: comments})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: [],\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        // if (index > -1) {\r\n        //     mastersList.splice(index, 1);\r\n        // } else mastersList.splice(0, index);\r\n        // this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        mastersList[index].moderation.reasons = reasons;\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n        this.setState({mastersList: mastersList});\r\n    };\r\n\r\n    goodComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'good');\r\n        fetch(BACKEND.moderCom+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    badComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'bad');\r\n        fetch(BACKEND.moderCom+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null;\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment._id, index)} mode=\"destructive\">Удалить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment.body}\r\n                        </RichCell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Cell>\r\n                                            <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                            <Button onClick={()=>this.setState({[master.vkUid]: true})} mode=\"secondary\">Отклонить</Button>\r\n                                        </Cell>\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                            {\r\n                                master.moderation.reasons.length > 0 &&\r\n                                <Cell>\r\n                                    {\r\n                                        master.moderation.reasons.map(reason=>{\r\n                                            return reason\r\n                                        })\r\n                                    }\r\n                                </Cell>\r\n                            }\r\n                            {\r\n                                this.state[master.vkUid] === true &&\r\n                                <Cell>\r\n                                    <Textarea name='reason' value={this.state.reason} onChange={(event)=>{\r\n                                        console.log(this.state.reason);\r\n                                        this.setState({reason: event.target.value})\r\n                                    }\r\n                                    }/>\r\n                                    <Button onClick={()=>this.bad(master._id, index)} mode=\"secondary\">Отклонить</Button>\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Panel id=\"moder\">\r\n                <Head\r\n                    title={'Модерация'}\r\n                    goBack={() => this.props.goBack()}\r\n                />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'masters' })}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'comments' })}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Moder);","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArrNew = master.comments.map(comment => {\r\n                if (comment !== null) return Number(comment.rating)\r\n            });\r\n            let ratingArr = ratingArrNew.filter(Boolean);\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster('masterInfo',master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner, Div} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    window.scrollTo(0, this.props.mastersListScroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e)=>this.checkSubcat(e)}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster, changeActiveMasterOnMasters, changeActiveMasterOnFindModels, changeActiveMasterOnFavs, changeLaunchParams} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport HeadCity from \"./js/elements/headCity\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            activePanelNews: 'news',\r\n            newsHistory: ['news']\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.launchParams.sign !== undefined) {\r\n            this.setState({validLaunchParams: true});\r\n            console.log('Параметры пришли');\r\n            this.props.changeLaunchParams(this.props.launchParams);\r\n            this.auth(this.props.launchParams);\r\n        } else {\r\n            this.setState({validLaunchParams: false});\r\n            this.openSnack('Ошибка. Не переданы параметры запуска.');\r\n        }\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n        });\r\n        window.onpopstate = () => {\r\n            window.history.pushState(null, null);\r\n        };\r\n    }\r\n\r\n    auth = (params) => {\r\n        fetch(BACKEND.users.auth, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                this.setState({validLaunchParams: true});\r\n                this.props.loginUser(data.user);\r\n                if (data.master !== null){\r\n                    this.props.setMaster(data.master)\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                this.openSnack('Ошибка подключения к серверу.')\r\n                this.setState({validLaunchParams: false});\r\n            })\r\n    };\r\n\r\n    goBackNews = () => {\r\n            const newsHistory = [...this.state.newsHistory];\r\n            newsHistory.pop();\r\n            const activePanelNews = newsHistory[newsHistory.length - 1];\r\n            if (activePanelNews === 'news') {\r\n                bridge.send('VKWebAppDisableSwipeBack');\r\n            }\r\n            this.setState({ newsHistory, activePanelNews });\r\n    };\r\n\r\n    goForwardNews = (activePanelNews) => {\r\n        const newsHistory = [...this.state.newsHistory];\r\n        newsHistory.push(activePanelNews);\r\n        if (this.state.activePanelNews === 'news') {\r\n            bridge.send('VKWebAppEnableSwipeBack');\r\n        }\r\n        this.setState({ newsHistory, activePanelNews });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                this.props.setMaster(newMaster);\r\n                this.setState({activeViewLk: 'lk'});\r\n                this.openSnack('Ваш профиль отправлен на проверку. Не забудьте добавить фотографии в портфолио - так, шансы получить заказ намного выше.');\r\n                //this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack(e.message);\r\n            //this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    openPanelMaster = (panelName, master) => {\r\n        this.props.changeActiveMasterOnMasters(master);\r\n        this.setState({activePanelMasters: panelName});\r\n    };\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFindModels(master);\r\n                this.setState({activePanelFindModels: 'masterInfo'});\r\n            });\r\n    };\r\n\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n        console.log(masterId);\r\n    };\r\n\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFavs(master);\r\n                this.setState({activePanelLk: 'masterInfo'});\r\n            });\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        user.params = this.props.params;\r\n        patchData(BACKEND.users.onid+user._id, user);\r\n        //this.setActiveModal(null)\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Все, беда. Кто-то лезет в параметры запуска :(\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                        header=\"Выполняется вход...\"\r\n                    >Это может занять несколько секунд\r\n                        {this.state.snackbar}\r\n                    </Placeholder>\r\n                </ConfigProvider>\r\n            )\r\n      } else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" history={this.state.newsHistory} activePanel={this.state.activePanelNews} onSwipeBack={() => this.goBackNews()}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                openModer={() => this.goForwardNews('moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBackNews()}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master});\r\n                                    this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBackNews()}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                    </View>\r\n                    <Root id=\"masters\" activeView={this.state.activeViewMasters}>\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <PanelHeader>Мастера</PanelHeader>\r\n                                <Masters\r\n                                    changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    changeCategory={()=>this.setState({activePanelMasters: 'masterCat'})}\r\n                                    //openPanelMaster={this.openPanelMaster}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelMasters: 'mastersList'})\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    //onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openComments={() => this.setState({activePanelMasters: 'masterComments'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.setState({activePanelMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                        {/*<View activePanel=\"masterCat\" id=\"masterCat\">*/}\r\n                        {/*    /!*<Panel id=\"masterCat\">*!/*/}\r\n                        {/*    /!*    <PanelHeader>Выбор категории</PanelHeader>*!/*/}\r\n                        {/*    /!*    <Group>*!/*/}\r\n                        {/*    /!*        <CategoriesList*!/*/}\r\n                        {/*    /!*            setCategory={(category) => {*!/*/}\r\n                        {/*    /!*                this.props.changeTargetCategory(category);*!/*/}\r\n                        {/*    /!*                this.setState({activeViewMasters: 'mastersList'});*!/*/}\r\n                        {/*    /!*            }}*!/*/}\r\n                        {/*    /!*        />*!/*/}\r\n                        {/*    /!*    </Group>*!/*/}\r\n                        {/*    /!*</Panel>*!/*/}\r\n                        {/*</View>*/}\r\n                    </Root>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.state.activePanelFindModels}\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ишу модель</PanelHeader>\r\n                            <FindModel\r\n                                openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                            />\r\n                        </Panel>\r\n                        <CityList\r\n                                id='changeCity'\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                                changeCity={(city) => {\r\n                                this.setState({activePanelFindModels: 'findmodel'});\r\n                                this.changeTargetCity(city);\r\n                            }}\r\n                        />\r\n                        <Panel id=\"masterInfo\">\r\n                            <MasterCard\r\n                                id=\"masterInfo\"\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                                openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                openComments={() => this.setState({activePanelFindModels: 'masterComments'})}\r\n                                //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterPhoto\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterComments\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнерам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.setState({activePanelLk: 'setting'})}\r\n                                            openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                            openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                            openMasterPhoto={() => this.setState({activePanelLk: 'portfolio'})}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Head\r\n                                    title='Настройки'\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Setting\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                    modalBack={this.modalBack}\r\n                                    activeModal={this.state.activeModal}\r\n                                    changeModal={(name) => this.setActiveModal(name)}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head\r\n                                    title='Избранное'\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Favourite\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user}\r\n                                    openFavMasterOnId={this.openFavMasterOnId}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.setState({activePanelLk: 'favourite'})}\r\n                                    openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    openComments={() => this.setState({activePanelLk: 'masterComments'})}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"portfolio\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Portfolio\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title='Отзывы'\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head\r\n                                    title='Ищу модель'\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <FindModelMaster\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user} popout={this.openAlert}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id='registration'>\r\n                            <Panel id='registration'>\r\n                                <Head\r\n                                    title={'Регистрация'}\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                />\r\n                                <Invite\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                    openRules={() => this.setState({activePanelReg: 'rules'})}\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='rules'>\r\n                                <Head\r\n                                    title='Соглашение'\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                                <Rules\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                            </Panel>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelReg: 'registration'})\r\n                                }}\r\n                            />\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch)\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nrequire('dotenv').config();\r\n\r\n\r\nconst store = createStore(rootReducer);\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\n// let linkParams =  window\r\n//     .location\r\n//     .hash\r\n//     .replace('#','')\r\n//     .split('&')\r\n//     .reduce(\r\n//         function(p,e){\r\n//             let a = e.split('=');\r\n//             p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n//             return p;\r\n//         },\r\n//         {}\r\n//     );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App launchParams={params} />\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}