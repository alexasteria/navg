{"version":3,"sources":["js/elements/img/spinner.svg","js/elements/panelHeader.js","js/func/func.js","js/elements/functions.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/store/reducers.js","js/store/actions.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Head","props","theme","left","onClick","goBack","title","BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","subscribers","onarrayid","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getAll","logs","params","sendmessage","keyGroup","secretKey","moder","patchData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","response","console","log","json","catch","e","MastersCard","handleChange","event","setState","target","name","value","favStatus","state","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","getPhone","share","bridge","send","activeMaster","_id","result","openSnackAvatar","avatarLink","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","sendMessage","firstname","lastname","sendtitle","phone","vkUid","token","Math","random","snackbar","mess","userId","userVkUid","masterId","masterVkUid","postData","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","this","count","images","start_index","text","after","src","size","marginTop","visible","id","photo","description","brand","bottomContent","expandable","openComments","indicator","comments","length","photos","map","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","openPhoto","icon","header","separator","priceList","item","multiline","price","React","Component","connect","reverse","image","gridPhoto","MastersComments","changeStars","stars","i","rating","sendComment","Number","isCommended","commentsArr","countComments","prevProps","prevState","snapshot","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","star","bottom","replace","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","isMember","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","isMaster","openModer","openReg","nowCounter","countUsers","countMasters","countCities","cities","city","inGroup","vk_is_favorite","res","sort","dispatch","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","setMaster","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","Invite","getCategories","categories","regMaster","checkLicense","statusMessage","cat","subcat","filter","active","label","sex","location","country","banned","status","closeReg","error","addProd","add","saveProd","undefined","newProdTitle","newProdBody","newProdPrice","onRemove","slice","permMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","asideContent","checked","subcategory","require","stretched","openRules","bindActionCreators","Lk","checkModeration","addToFavApp","connection","tmpUser","isUser","favsArr","mastersArr","openSetting","openFavourite","openMasterPhoto","openFindModel","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","getUploadServer","upload_url","getToken","access_token","activeMasterId","photoArr","photoFile","CityListModal","search","getCities","toLowerCase","items","updateModalHeight","Fragment","region","withModalRootContext","osname","platform","Setting","saveChanges","openSnackDismiss","checkBan","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","Array","isArray","modalBack","activeModal","dynamicContentHeight","ANDROID","right","IOS","String","onSubmit","handleSubmit","Favourite","loadFavsMasters","ids","isLoaded","err","window","history","replaceState","pushState","addEventListener","caption","openFavMasterOnId","FindCard","disabled","find","sale","openMasterOnId","marginBottom","FindList","findArr","action","FindModel","loadFind","scrollTo","self","pageYOffset","FindModelMaster","handleChangeSelect","selectvalue","save","isActive","Partners","addToCommunity","CityList","Moder","good","reasons","bad","reason","goodComment","badComment","activeTab","mastersCount","usersCount","openMaster","selected","renderMasters","renderComments","MastersList","setBottom","setTitle","Error","ratingArr","reduce","a","b","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","qs","crypto","App","goBackNews","newsHistory","pop","activePanelNews","goForwardNews","launchParams","urlParams","ordered","Object","keys","stringParams","paramsHash","createHmac","update","digest","toString","sign","validLaunchParams","verificationUser","vkUser","usersArr","first_name","last_name","photo_200","newUser","newMaster","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeStory","activeViewMasters","activePanelLk","openStory","storyName","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","scheme","onStoryChange","setActiveModal","subscribe","detail","onpopstate","dataset","story","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","activeView","modal","openAlert","Boolean","hostname","match","store","createStore","changeIsMaster","linkParams","hash","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,qC,8iBCa5BC,EAVF,SAACC,GACV,OACI,kBAAC,IAAD,CACIC,MAAM,QACNC,KAAM,kBAAC,IAAD,CAAiBC,QAASH,EAAMI,UACxCJ,EAAMK,Q,8DCPVC,EAAY,iDAELC,EAAU,CACnBC,MAAOF,EAAU,QACjBG,QAASH,EAAU,iBACnBI,QAAS,CACLC,IAAKL,EAAU,WACfM,KAAMN,EAAU,WAChBO,SAAUP,EAAU,oBACpBQ,MAAOR,EAAU,iBACjBS,YAAaT,EAAU,qBACvBU,UAAWV,EAAU,sBAEzBW,KAAM,CACFC,IAAKZ,EAAU,QACfa,OAAQb,EAAU,eAClBc,KAAMd,EAAU,cAEpBe,UAAW,CACPH,IAAKZ,EAAU,aACfgB,WAAYhB,EAAU,wBACtBiB,OAAQjB,EAAU,qBAEtBkB,QAAS,CACLN,IAAKZ,EAAU,kBACfgB,WAAYhB,EAAU,kBACtBmB,WAAYnB,EAAU,uBAE1BoB,MAAO,CACHC,YAAarB,EAAU,qBACvBsB,UAAWtB,EAAU,mBACrBuB,oBAAqBvB,EAAU,8BAEnCO,SAAU,CACNiB,OAAQxB,EAAU,aAEtByB,KAAM,CACFC,OAAQ1B,EAAU,gBAEtB2B,YAAa3B,EAAU,cACvB4B,SAAU,wFACVC,UAAW,uBACXC,MAAO9B,EAAU,sB,gBC3BrB,SAAS+B,IAAgC,IAAtBC,EAAqB,uDAAf,GAAIC,EAAW,uDAAJ,GAEhC,OAAOC,MAAMF,EAAK,CACdG,OAAQ,QACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,WAExBC,OAAM,SAAAC,GAAC,OAAEJ,QAAQC,IAAIG,M,kECXxBC,E,kDACF,WAAY1D,GAAQ,IAAD,8BACf,cAAMA,IA4CV2D,aAAe,SAACC,GACZ,EAAKC,SAAL,eAAgBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SA9ClC,EAwDnBC,UAAY,WACR,OAA8B,IAA3B,EAAKC,MAAMC,YAEM,kBAAC,IAAD,CAAKC,MAAO,CAACC,MAAO,OAAQC,QAAS,EAAGC,YAAa,IAAKpE,QAAS,EAAKqE,WACpE,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,GAAIC,KAAK,SAK3D,kBAAC,IAAD,CAAKP,MAAO,CAACC,MAAO,OAAQC,QAAS,EAAGC,YAAa,IAAKpE,QAAS,EAAKqE,WACpE,kBAAC,IAAD,CAAYC,MAAO,GAAIC,OAAQ,GAAIC,KAAK,UAlEzC,EAuEnBC,cAAgB,SAACvE,GACb,OACI,kBAAC,IAAD,CACIwE,OAAQ,kBAAC,IAAD,MACR1E,QAAS,kBAAM,EAAK2E,SAASzE,IAC7BqC,KAAK,WAHT,iEAzEW,EAkFnBqC,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,kDAAkD,EAAKf,MAAMgB,aAAaC,MAC3GhC,MAAK,SAAAiC,GAAM,OAAI,EAAKC,gBAAgB,4JAAgC,EAAKnB,MAAMgB,aAAaI,gBApFlF,EAkGnBC,SAAW,WACH,EAAKvF,MAAMoB,KAAKH,OACZ,EAAKjB,MAAMoB,KAAKH,KAAKuE,SAAS,EAAKtB,MAAMgB,aAAaC,KACtD,EAAKtB,SAAS,CAACM,aAAa,IAE5B,EAAKN,SAAS,CAACM,aAAa,KAGpC,EAAKN,SAAS,CAAC4B,UAAW,EAAKvB,MAAMgB,aAAanE,YAAa2E,QAAQ,KA1GxD,EA4GnBC,cAAgB,SAACC,GACb,EAAK/B,SAAL,eAAgB+B,GAAS,EAAK1B,MAAM0B,MA7GrB,EA+GnBpB,UAAY,WACR,IAA+B,IAA3B,EAAKN,MAAMC,YAAuB,CAClC,IAAI/C,EAAO,EAAKpB,MAAMoB,KACtBA,EAAKH,KAAK4E,KAAK,EAAK3B,MAAMgB,aAAaC,KACvC,EAAKtB,SAAS,CAACM,aAAa,EAAMsB,UAAW,EAAKvB,MAAMuB,UAAU,EAAGK,UAAW,EAAK5B,MAAM4B,SAAU1E,KAAMA,IAAO,kBAC9G,EAAKiE,gBAAgB,4LAAuC,EAAKnB,MAAMgB,aAAaI,mBACrF,CACH,IAAIlE,EAAO,EAAKpB,MAAMoB,KAClBwE,EAAQ,EAAK5F,MAAMoB,KAAKH,KAAK8E,QAAQ,EAAK7B,MAAMgB,aAAaC,KAC7DlE,EAAO,EAAKjB,MAAMoB,KAAKH,KACvB2E,GAAS,EACT3E,EAAK+E,OAAOJ,EAAO,GAChB3E,EAAK+E,OAAO,EAAGJ,GACtB,EAAK/B,SAAS,CAACM,aAAa,EAAOsB,UAAW,EAAKvB,MAAMuB,UAAU,EAAGK,UAAW,EAAK5B,MAAM4B,SAAU1E,KAAMA,IAAO,kBAC/G,EAAKiE,gBAAgB,sLAAsC,EAAKnB,MAAMgB,aAAaI,iBA7H5E,EAiInBW,YAAc,WACV,IAAIxF,EAAU,yCAAW,EAAKT,MAAMoB,KAAK8E,UAAU,IAAI,EAAKlG,MAAMoB,KAAK+E,SAAS,6GAAwB,EAAKjC,MAAMkC,UAAU,mKAAsC,EAAKlC,MAAMmC,MAAM,2EAAmC,EAAKrG,MAAMoB,KAAKkF,MACnOC,EAAQhG,EAAQ2B,SACpB8C,IAAOC,KAAK,wBAAyB,CACjC,OAAU,gBACV,OAAU,CAAC,UAAauB,KAAKC,SAAU,QAAW,aAAc,QAAW,EAAKvC,MAAMgB,aAAaoB,MAAM,QAAW7F,EAAS,EAAI,QAAS,aAAgB8F,KACzJpD,MAAK,SAAAiC,GACF,EAAKvB,SAAS,CAAE6C,SAAU,OAC1B,IAAIC,EAAO,CACPC,OAAQ,EAAK5G,MAAMoB,KAAK+D,IACxB0B,UAAW,EAAK7G,MAAMoB,KAAKkF,MAC3BQ,SAAU,EAAK5C,MAAMgB,aAAaC,IAClC4B,YAAa,EAAK7C,MAAMgB,aAAaoB,OAEzC,EAAKU,SAASzG,EAAQE,QAASkG,EAAM,QACrC,EAAKtB,gBAAgB,2TAAkE,EAAKnB,MAAMgB,aAAaI,eAElH9B,OAAM,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,OAlJb,EAoJnBqB,SAAW,SAACzE,GACR,EAAKwD,SAAS,CAACuC,UAAW/F,IAC1B2E,IAAOC,KAAK,yBAA0B,CAAC,SAAY,UAAW,IAAO,oBAChE9B,MAAK,SAAAiC,GACF,EAAKvB,SAAS,CAACwC,MAAOjB,EAAO6B,eAC7B,EAAKC,YAAY9B,EAAO6B,iBAE3BzD,OAAM,SAAAC,GACHJ,QAAQC,IAAIG,GACoB,gBAA5BA,EAAE0D,WAAWC,cACb,EAAKF,kBA9JF,EAkKnBA,YAAc,SAACG,GACP,EAAKnD,MAAMwC,UACf,EAAK7C,SAAS,CAAE6C,SACR,kBAAC,IAAD,CACIY,SAAS,iBACTC,OAAO,WACPC,QAAS,kBAAM,EAAK3D,SAAS,CAAE6C,SAAU,SAEzC,0JACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKe,UAAU,iCACX,kBAAC,IAAD,CACIA,UAAU,YACVC,KAAK,oBACL3D,KAAK,QACL4D,KAAK,OACLC,aAAcP,GAAU,GACxBQ,MAAM,SACN7D,MAAO,EAAKE,MAAMmC,MAClByB,SAAU,EAAKnE,eAEnB,kBAAC,IAAD,CAAK8D,UAAU,uBAEnB,+dACA,kBAAC,IAAD,CAAQtH,QAAS,EAAK8F,aAAtB,+DAxLZ,EAAK/B,MAAQ,CACTwB,QAAQ,EACRgB,SAAU,KACVZ,UAAU,GALC,E,gEASE,IAAD,OAEjBiC,KAAKlE,SAAS,CAACqB,aAAc6C,KAAK/H,MAAMkF,eAAe,kBAAK,EAAKK,gB,6CAoBhE,GAAIwC,KAAK7D,MAAM4B,SAEX,GADAzD,EAAU9B,EAAQC,MAAM,IAAIuH,KAAK7D,MAAM9C,KAAK+D,IAAK4C,KAAK7D,MAAM9C,OAC7B,IAA3B2G,KAAK7D,MAAMC,YAAsB,CAEjC9B,EAAU9B,EAAQG,QAAQK,YAAYgH,KAAK7D,MAAMgB,aAAaC,IADlD,CAAC6C,MAAO,QAGjB,CAEH3F,EAAU9B,EAAQG,QAAQK,YAAYgH,KAAK7D,MAAMgB,aAAaC,IADlD,CAAC6C,OAAQ,O,qCAWlBC,EAAQrC,GACnBZ,IAAOC,KAAK,qBAAsB,CAC9BgD,OAAQA,EACRC,YAAatC,IACdzC,MAAK,SAAAZ,GAAI,OAAIc,QAAQC,IAAIf,Q,sCAiCf4F,EAAM7C,GAAa,IAAD,OAC3ByC,KAAK7D,MAAMwC,UAAUqB,KAAKlE,SAAS,CAAC6C,SAAU,OAClDqB,KAAKlE,SAAS,CAAE6C,SACR,kBAAC,IAAD,CACIa,OAAO,WACPC,QAAS,kBAAM,EAAK3D,SAAS,CAAE6C,SAAU,QACzC0B,MAAO,kBAAC,IAAD,CAAQC,IAAK/C,EAAYgD,KAAM,MAErCH,O,iCAiGsB,IAA9B7F,EAA6B,uDAAvB,GAAIC,EAAmB,uDAAZ,GAAIE,EAAQ,uCAElC,OAAOD,MAAMF,EAAK,CACdG,OAAQA,EACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAAAC,GAAQ,OAAIC,QAAQC,IAAIF,EAASG,a,+BAEtC,IAAD,OACJ,OAAuB,IAApBwE,KAAK7D,MAAMwB,OAEN,kBAAC,IAAD,CAAS4C,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,OAER,IAApCR,KAAK7D,MAAMgB,aAAasD,QAEtB,kBAAC,IAAD,4EAIA,kBAAC,IAAD,CAAOC,GAAG,cACN,kBAAC,EAAD,CACIpI,MAAO,oDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAEjC,kBAAC,IAAD,CAAKgE,MAAO,CAACE,QAAS,IAClB,kBAAC,IAAD,CAAOjE,MAAM,IACT,kBAAC,IAAD,CACIqI,MAAM,kEACNC,YACmC,uEAA/BZ,KAAK7D,MAAMgB,aAAayC,KAAuBI,KAAK7D,MAAMgB,aAAa0D,MAAQb,KAAK7D,MAAMgB,aAAayC,KAE3GkB,cACId,KAAK/H,MAAMoB,KAAKkF,QAAUyB,KAAK7D,MAAMgB,aAAaoB,MAE9C,kBAAC,IAAD,CAAMzB,OAAQ,kBAAC,IAAD,OAAd,iDAEA,kBAAC,IAAD,KACKkD,KAAK9D,YACN,kBAAC,IAAD,CAAQ9D,QAAS,kBAAM,EAAK4E,UAA5B,iEAGZF,OAAQ,kBAAC,IAAD,CAAQwD,IAAKN,KAAK7D,MAAMgB,aAAaI,WAAYgD,KAAM,KAC/DA,KAAK,KAEJP,KAAK7D,MAAMgB,aAAagB,UAlB7B,IAkByC6B,KAAK7D,MAAMgB,aAAaiB,UAEjE,kBAAC,IAAD,MACA,kBAAC,IAAD,CACI2C,YAAU,EACV3I,QAAS,kBAAM,EAAKH,MAAM+I,gBAAgBC,UAAWjB,KAAK7D,MAAMgB,aAAa+D,SAASC,OACtFP,YAAa,uEAAkBZ,KAAK7D,MAAMuB,WAH9C,yCAUJ,kBAAC,IAAD,CAAOpF,MAAM,0DAEL0H,KAAK7D,MAAMgB,aAAaiE,OAAOD,OAAS,EACpC,kBAAC,IAAD,KACI,kBAAC,IAAD,qJACA,kBAAC,IAAD,KAEQnB,KAAK7D,MAAMgB,aAAaiE,OAAOC,KAAI,SAACC,EAAUzD,GAC1C,OACI,kBAAC,IAAD,CACIxB,MAAO,CAACE,QAAS,EAAGgF,aAAc,GAAIC,OAAQ,GAC9CjB,KAAK,IACL5F,KAAK,SACL8G,IAAK5D,EACLzF,QAAS,kBAAM,EAAKsJ,eAAe,EAAKvF,MAAMgB,aAAaiE,OAAQvD,KAEnE,yBAAKxB,MAAO,CAACK,MAAO,IAAKC,OAAQ,GAAIgF,gBAAiB,OAAOL,EAAS,IAAKM,eAAgB,QAASL,aAAc,WAMtI,kBAAC,IAAD,CACIR,YAAU,EACV3I,QAAS,kBAAM,EAAKH,MAAM4J,aAC1BjB,YAAaZ,KAAK7D,MAAMgB,aAAaiE,OAAOD,OAAO,0FACnDF,UAAWjB,KAAK7D,MAAMgB,aAAaiE,OAAOD,QAJ9C,sGAOJ,kBAAC,IAAD,CACIW,KAAM,kBAAC,IAAD,MACNC,OAAO,qFAIvB,kBAAC,IAAD,CAAOC,UAAU,QAEThC,KAAK7D,MAAMgB,aAAa8E,UAAUZ,KAAI,SAACa,EAAMrE,GAAP,OAC9B,kBAAC,IAAD,CACI4D,IAAK5D,EACLsE,WAAS,EACT/J,QAAS,kBAAM,EAAKwF,cAAcC,KAElC,kBAAC,IAAD,CAAUxB,MAAO,CAACE,QAAS,IACvB,kBAAC,IAAD,CAAMgE,KAAK,KACP,kBAAC,IAAD,CACIK,YACmB,KAAfsB,EAAKE,MAAe,gBAAQF,EAAKE,MAAQ,wCAAY,iHAEzDrB,YAAU,EACVE,UAAU,IACT,EAAK9E,MAAMgB,aAAa8E,UAAUpE,GAAOvF,OAG1C,EAAK6D,MAAM0B,IACP,6BACI,kBAAC,IAAD,KAAO,EAAKhB,cAAc,EAAKV,MAAMgB,aAAa8E,UAAUpE,GAAOvF,QACnE,kBAAC,IAAD,CAAMsI,YAAY,qJACZuB,WAAS,GAAE,EAAKhG,MAAMgB,aAAa8E,UAAUpE,GAAO5C,OAItE,kBAAC,IAAD,aAO5B,kBAAC,IAAD,CAAO+G,UAAU,OAAOD,OAAQ,kBAAC,IAAD,CAAQpH,KAAK,aAAb,mHAC5B,kBAAC,IAAD,CAAMwH,WAAS,GACVnC,KAAK7D,MAAMgB,aAAayD,cAGhCZ,KAAK7D,MAAMwC,e,GA5UN0D,IAAMC,WA0VjBC,eANS,SAACpG,GACrB,MAAO,CACH9C,KAAM8C,EAAM9C,QAILkJ,CAAyB5G,GC9SzBA,E,kDA9DX,WAAY1D,GAAQ,IAAD,8BACf,cAAMA,IACDkE,MAAQ,CACTgB,aAAc,EAAKlF,MAAMkF,aACzBQ,QAAQ,GAJG,E,gEAQfqC,KAAKlE,SAAS,CAACoE,OAAQF,KAAK/H,MAAMkF,aAAaiE,OAAOoB,UAAW7E,QAAQ,M,qCAE9DuC,EAAQrC,GACnBZ,IAAOC,KAAK,qBAAsB,CAC9BgD,OAAQA,EACRC,YAAatC,IACdzC,MAAK,SAAAZ,GAAI,OAAIc,QAAQC,IAAIf,Q,kCAEnB,IAAD,OACR,OAAiC,IAA7BwF,KAAK7D,MAAM+D,OAAOiB,OAEd,kBAAC,IAAD,CAAMgB,WAAS,GAAf,sNAIA,kBAAC,IAAD,KAEQnC,KAAK7D,MAAM+D,OAAOmB,KAAI,SAACoB,EAAO5E,GAC1B,OACI,kBAAC,IAAD,CACIxB,MAAO,CAACE,QAAS,EAAGgF,aAAc,GAAIC,OAAQ,GAC9CjB,KAAK,IACL5F,KAAK,SACL8G,IAAK5D,EACLzF,QAAS,kBAAM,EAAKsJ,eAAe,EAAKvF,MAAM+D,OAAQrC,KAEtD,yBAAKxB,MAAO,CAACM,OAAQ,GAAIgF,gBAAiB,OAAOc,EAAM,IAAKb,eAAgB,QAASL,aAAc,a,+BAU/H,OAAuB,IAApBvB,KAAK7D,MAAMwB,OAEN,kBAAC,IAAD,CAAS4C,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,MAI1C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOlI,MAAM,0DACT,kBAAC,IAAD,CAAO0J,UAAU,QACZhC,KAAK0C,mB,GAtDRL,IAAMC,W,sDCe1BK,E,kDACF,WAAY1K,GAAQ,IAAD,8BACf,cAAMA,IA0BV2K,YAAc,WAEV,IADA,IAAIC,EAAQ,GADI,WAERC,GACAA,GAAK,EAAK3G,MAAM4G,OAChBF,EAAM/E,KAAK,kBAAC,IAAD,CAAgBpB,MAAO,GAAIC,OAAQ,GAAI+D,GAAIoC,EAAG1K,QAAS,kBAAI,EAAK0D,SAAS,CAACiH,OAAQD,KAAKlG,KAAM,YAExGiG,EAAM/E,KAAK,kBAAC,IAAD,CAAuBpB,MAAO,GAAIC,OAAQ,GAAI+D,GAAIoC,EAAG1K,QAAS,kBAAI,EAAK0D,SAAS,CAACiH,OAAQD,KAAKlG,KAAM,aAJ/GkG,EAAE,EAAGA,GAAG,EAAGA,IAAK,EAAhBA,GAOR,EAAKhH,SAAS,CAAC+G,MAAOA,KApCP,EAuCnBG,YAAc,WACV,IACI,GAA0B,IAAtB,EAAK7G,MAAM4G,OAAc,KAAM,kKACnC,GAAI,EAAK5G,MAAMlB,KAAKkG,OAAS,GAAI,KAAM,gdACvC,GAAI,EAAKhF,MAAMlB,KAAKkG,OAAS,IAAK,KAAM,+LACxC,IAAI1H,EAAU,CACVJ,KAAM,CACFwF,OAAQ,EAAK5G,MAAMoB,KAAK+D,IACxBe,UAAW,EAAKlG,MAAMoB,KAAK8E,UAC3BC,SAAU,EAAKnG,MAAMoB,KAAK+E,SAC1Bb,WAAY,EAAKtF,MAAMoB,KAAKkE,YAEhCwF,OAAQE,OAAO,EAAK9G,MAAM4G,QAC1B9H,KAAM,EAAKkB,MAAMlB,KACjBvB,YAAY,EACZO,OAAQ,EAAKhC,MAAMgC,QAEvB,EAAKgF,SAASzG,EAAQiB,QAAQN,IAAI,EAAKlB,MAAMkF,aAAaC,IAAK3D,EAAS,QACxE,EAAKqC,SAAS,CAACoH,aAAa,IAC9B,MAAOxH,GACLJ,QAAQC,IAAIG,GACZ,EAAKI,SAAS,CAAE6C,SACR,kBAAC,IAAD,CACIa,OAAO,WACPC,QAAS,kBAAM,EAAK3D,SAAS,CAAE6C,SAAU,SAExCjD,OAjEF,EAyMnBE,aAAe,SAACC,GAAW,IAAD,EACFA,EAAME,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAKH,SAAL,eAAgBE,EAAOC,KAzMvB,EAAKE,MAAQ,CACT4G,OAAQ,EACR9H,KAAM,GACN0C,QAAQ,EACRgB,SAAU,KACVkE,MAAO,IAPI,E,gEAUE,IAAD,OAChB7C,KAAK4C,cACL5C,KAAK/H,MAAMkF,aAAa+D,SAASG,KAAI,SAAA5H,GAC7BA,EAAQJ,KAAKwF,SAAW,EAAK5G,MAAMoB,KAAK+D,KACxC,EAAKtB,SAAS,CAACoH,aAAa,OAGpC,IAAIjD,EAAQD,KAAK/H,MAAMkF,aAAa+D,SAASC,OAC7CnB,KAAKlE,SAAS,CAACqH,YAAanD,KAAK/H,MAAMkF,aAAa+D,SAAUkC,cAAenD,EAAOtC,QAAQ,M,yCAG7E0F,EAAWC,EAAWC,GACjCD,EAAUP,SAAW/C,KAAK7D,MAAM4G,QAChC/C,KAAK4C,gB,iCA+C0B,IAAD,OAA7BrI,EAA6B,uDAAvB,GAAIC,EAAmB,uDAAZ,GAAIE,EAAQ,uCAElC,OAAOD,MAAMF,EAAK,CACdG,OAAQA,EACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,QACrB,IAAIgI,EAAM,EAAKrH,MAAMgH,YACrB3I,EAAKiJ,KAAO,0LACZD,EAAI1F,KAAKtD,GACT,EAAKsB,SAAS,CAACqH,YAAaK,IAC5B,EAAK1H,SAAS,CAAE6C,SACR,kBAAC,IAAD,CACIa,OAAO,WACPC,QAAS,kBAAM,EAAK3D,SAAS,CAAE6C,SAAU,SAF7C,qb,8BASZ+E,GACJ,GAAgB,4LAAZA,EACA,OAAOA,EAEP,IAAID,EAAO,IAAIE,KAAKD,GAChBE,EAAQH,EAAKI,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUL,EAAKM,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQP,EAAKQ,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQT,EAAKU,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAIT,EAAKW,cAAc,WAAMR,EAAM,IAAIE,I,oCAGvD,IAAD,OACV,OAA0B,IAAtB9D,KAAK7D,MAAMwB,OAEP,yBAAKtB,MAAO,CAAEgI,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAShE,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,OAI3CR,KAAK7D,MAAMgH,YAAY9B,KAAI,SAAA5H,GAC1B,OACI,kBAAC,IAAD,CAAOgI,IAAKhI,EAAQ2D,IAAK4E,UAAW,QAChC,kBAAC,IAAD,CACIpB,YAAa,EAAKqD,QAAQxK,EAAQgK,MAClC3G,OAAS,kBAAC,IAAD,CAAQyD,KAAM,GAAID,IAAK7G,EAAQJ,KAAKkE,cAE5C9D,EAAQJ,KAAK8E,UAAU,IAAI1E,EAAQJ,KAAK+E,UAE7C,kBAAC,IAAD,CAAM+D,WAAS,IACY,IAAvB1I,EAAQC,WAAsBD,EAAQwB,KAClC,kBAAC,IAAD,CAAM6B,OAAQ,kBAAC,IAAD,OAAd,8JAGR,kBAAC,IAAD,CAAMmE,UAAWxH,EAAQsJ,OAAR,mBAAjB,wCACA,kBAAC,IAAD,Y,iCAMZ,IAAD,OACP,IAA0B,IAAtB/C,KAAK7D,MAAMwB,OACX,OAAIqC,KAAK/H,MAAMkF,aAAaoB,QAAUyB,KAAK/H,MAAMoB,KAAKkF,MAE9C,kBAAC,IAAD,CAAKlC,MAAO,CAACmI,SAAU,GAAIC,MAAO,aAAlC,8OAG4B,IAA3BzE,KAAK7D,MAAM+G,YAEZ,kBAAC,IAAD,CAAK7G,MAAO,CAACmI,SAAU,GAAIC,MAAO,aAAlC,8OAIA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI7D,YAAa,0IAET,kBAAC,IAAD,CAAKvE,MAAO,CAACgI,QAAS,gBAEdrE,KAAK7D,MAAM0G,MAAMxB,KAAI,SAAAqD,GACjB,OAAOA,QAe/B,kBAAC,IAAD,CACI1I,KAAM,OACNC,MAAO+D,KAAK7D,MAAMlB,KAClB0J,OAAQ3E,KAAK7D,MAAMlB,KAAKkG,OAAS,GAAK,GAAK,mVAA0EnB,KAAK7D,MAAMlB,KAAK2J,QAAQ,KAAM,IAAIzD,OAAO,qBAC9J0D,IAAK,oGACLC,YAAY,iVACZ/E,SAAUC,KAAKpE,eAEnB,kBAAC,IAAD,CACIjB,KAAK,UACLvC,QAAS,kBAAM,EAAK4K,gBAFxB,sF,+BAgBhB,OACQ,kBAAC,IAAD,KACKhD,KAAK+E,cACN,kBAAC,IAAD,KAAS/E,KAAKgF,YACbhF,KAAK7D,MAAMwC,c,GAnNF0D,IAAMC,WAgOrBC,gBAPS,SAACpG,GACrB,MAAO,CACH9C,KAAM8C,EAAM9C,KACZY,OAAQkC,EAAMlC,UAIPsI,CAAyBI,G,qBCvOlCsC,G,kDACF,WAAahN,GAAQ,IAAD,8BAChB,cAAMA,IAmBViN,SAAW,WACPjI,IAAOC,KAAK,yBAA0B,IACjC9B,MAAK,SAAAZ,IACkB,IAAhBA,EAAK6C,QACL,EAAKvB,SAAS,CAACqJ,MAAO,OAG7B1J,OAAM,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,OA3BZ,EA8BpB0J,OAAS,WACL,GAAyB,IAArB,EAAKjJ,MAAMgJ,MACX,OACI,kBAAC,IAAD,CACIE,UAAU,2eACVC,QAAS,kBAAC,IAAD,CAAQlN,QAAS,kBAAI,EAAK8M,aAA1B,oEAnCL,EAyCpBK,SAAW,WACPtI,IAAOC,KAAK,wBAAyB,CACjC,OAAU,kBACV,OAAU,CAAC,SAAY,YAAY,QAAW,EAAKjF,MAAMoB,KAAKkF,MAAO,EAAI,QAAS,aAAgB/F,EAAQ2B,YACzGiB,MAAK,SAAAiC,GACF,OAAwB,IAApBA,EAAOhC,SACA,KAGH,kBAAC,IAAD,CACI0G,OAAO,mHACPsD,UAAU,2VACVC,QAAS,kBAAC,IAAD,CAAQlN,QAAS,kBAAI,EAAKoN,cAA1B,2EAKxB/J,OAAM,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,OA1DZ,EA6DpB8J,UAAY,WACRvI,IAAOC,KAAK,oBAAqB,CAC7BuI,SAAU,YAETrK,KAAK,EAAKmK,UACV9J,OAAM,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,OAlEZ,EAqEpBgK,SAAW,WACP,OACI,EAAKvJ,MAAMwJ,KAAKtE,KAAI,SAAAsE,GAChB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMlE,IAAKkE,EAAMpF,KAAK,IAAI5F,KAAK,UAC3B,yBAAK0B,MAAO,CAAEM,OAAQ,GAAIiJ,gBAAiB,qBA3E/C,EAmFpBC,SAAW,SAACxM,GACR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMkH,KAAK,KACP,kBAAC,IAAD,CACII,MAAM,kEACNC,aACsB,IAAlBvH,EAAKyM,SAAqB,2EAAiB,4HAG/ChJ,OAAQ,kBAAC,IAAD,CAAQwD,IAAKjH,EAAKkE,WAAYgD,KAAM,KAC5CA,KAAK,KACPlH,EAAK8E,UARP,IAQmB9E,EAAK+E,UAGL,cAAf/E,EAAKkF,OAEL,kBAAC,IAAD,CAAYnG,QAAS,EAAKH,MAAM8N,WAAhC,2DAEe,IAAlB1M,EAAKyM,UACN,kBAAC,IAAD,CACI3D,WAAS,EACT/J,QAAS,EAAKH,MAAM+N,QACpBlJ,OAAQ,kBAAC,KAAD,MACRiE,YAAU,GAJd,0SAvGI,EAqHpBkF,WAAa,WACT,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM1F,KAAK,IAAI5F,KAAK,UAChB,6BACI,kBAAC,IAAD,4DACA,kBAAC,IAAD,CAAMsG,UAAW,EAAK9E,MAAM+J,WAAa,kBAAC,IAAD,KAAU,EAAK/J,MAAM+J,YAAwB,kBAAC,IAAD,CAAS3F,KAAK,WAApG,kFACA,kBAAC,IAAD,CAAMU,UAAW,EAAK9E,MAAMgK,aAAe,kBAAC,IAAD,KAAU,EAAKhK,MAAMgK,cAA0B,kBAAC,IAAD,CAAS5F,KAAK,WAAxG,oDACA,kBAAC,IAAD,CAAMU,UAAW,EAAK9E,MAAMiK,YAAc,kBAAC,IAAD,KAAU,EAAKjK,MAAMiK,aAAyB,kBAAC,IAAD,CAAS7F,KAAK,WAAtG,8CACA,kBAAC,IAAD,CAAM4B,WAAS,GAEP,EAAKhG,MAAMkK,QACX,EAAKlK,MAAMkK,OAAOhF,KAAI,SAAAiF,GAClB,OAAOA,EAAK,YAhIxC,EAAKnK,MAAQ,CACTwJ,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvBY,SAAS,EACTpB,MAAO,GALK,E,gEASC,IAAD,OACZnF,KAAK/H,MAAMgC,QACX+F,KAAKlE,SAAS,CAACqJ,MAAOlC,OAAOjD,KAAK/H,MAAMgC,OAAOuM,kBAEnD/L,MAAM,8DACDW,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAZ,GACF,EAAKsB,SAAS,CAACqK,aAAc3L,EAAK2L,aAAcD,WAAY1L,EAAK0L,WAAYE,YAAa5L,EAAK4L,YAAaC,OAAQ7L,EAAK6L,OAAOK,c,+BA4HnI,IACErN,EAAQ2G,KAAK/H,MAAboB,KACP,OACI,kBAAC,IAAD,CAAOqH,GAAG,QACN,kBAAC,IAAD,mDACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIoB,KAAM,kBAAC,IAAD,CAAQxB,IAAI,2FAA2FC,KAAM,KACnHwB,OAAO,yCAFX,mmBAMC/B,KAAK6F,SAASxM,GACd2G,KAAKiG,aACLjG,KAAKuF,WACLvF,KAAKoF,e,GA5JX/C,IAAMC,WAsLVC,gBAZS,SAACpG,GACrB,MAAO,CACH9C,KAAM8C,EAAM9C,SAIM,SAACsN,GACvB,MAAO,KAKIpE,CAA4C0C,I,kBCrLrD2B,GAAe,CACjBC,aAAa,EACbxN,KAAM,GACND,OAAQ,GACR0N,YAAa,GACbC,kBAAmB,EACnBC,eAAgB,GAChBC,WAAY,GACZC,eAAgB,GAChBC,qBAAsB,EACtBC,sBAAuB,GACvBC,yBAA0B,GAC1BC,mBAAoB,GACpBrN,OAAQ,MCXCsN,GAAY,SAAAnO,GAErB,OADAkC,QAAQC,IAAI,aAAcnC,GACnB,CACHwG,KDRkB,aCSlB4H,QAASpO,IAIJqO,GAAY,SAACpO,GAEtB,OADAiC,QAAQC,IAAI,aAAclC,GACnB,CACHuG,KDjBkB,aCkBlB4H,QAASnO,IAIJqO,GAAoB,SAACC,GAE9B,OADArM,QAAQC,IAAI,gCAAiCoM,GACtC,CACH/H,KDlCkC,6BCmClC4H,QAASG,IAIJC,GAAuB,SAACC,GAEjC,OADAvM,QAAQC,IAAI,mCAAoCsM,GACzC,CACHjI,KDzCqC,gCC0CrC4H,QAASK,IAIJC,GAAmB,SAACC,GAE7B,OADAzM,QAAQC,IAAI,+BAAgCwM,GACrC,CACHnI,KDhDiC,4BCiDjC4H,QAASO,IAIJC,GAA0B,SAACC,GAEpC,OADA3M,QAAQC,IAAI,sCAAuC0M,GAC5C,CACHrI,KDvDwC,mCCwDxC4H,QAASS,IAIJC,GAAuB,SAACC,GAEjC,OADA7M,QAAQC,IAAI,mCAAoC4M,GACzC,CACHvI,KD9DqC,gCC+DrC4H,QAASW,IAIJC,GAA6B,SAACC,GAEvC,OADA/M,QAAQC,IAAI,qCAAsC8M,GAC3C,CACHzI,KDrEuC,kCCsEvC4H,QAASa,IAIJC,GAA8B,SAACC,GAExC,OADAjN,QAAQC,IAAI,4CAA6CgN,GAClD,CACH3I,KD5E8C,yCC6E9C4H,QAASe,IAIJC,GAAiC,SAACD,GAE3C,OADAjN,QAAQC,IAAI,+CAAgDgN,GACrD,CACH3I,KDnFiD,4CCoFjD4H,QAASe,IAIJE,GAA2B,SAACF,GAErC,OADAjN,QAAQC,IAAI,yCAA0CgN,GAC/C,CACH3I,KD1F2C,sCC2F3C4H,QAASe,IAIJG,GAAqB,SAACzO,GAE/B,OADAqB,QAAQC,IAAI,uBAAwBtB,GAC7B,CACH2F,KD/FyB,oBCgGzB4H,QAASvN,I,8DCjFX0O,G,kDACF,WAAY1Q,GAAQ,IAAD,8BACf,cAAMA,IAiBV2Q,cAAgB,WACZnO,MAAMjC,EAAQM,SAASiB,QAClBqB,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAyN,GACF,EAAK/M,SAAS,CAAC+M,WAAYA,IAC3BA,EAAWxH,KAAI,SAAAvI,GACX,EAAKgD,SAAL,eAAgBhD,EAASsE,KAAM,WAxB5B,EA6BnB0L,UAAY,WACR,IACI,GAA6B,4DAAzB,EAAK7Q,MAAMgP,WAA4B,KAAM,yLACjD,IAAgC,IAA5B,EAAK9K,MAAM4M,aAAwB,KAAM,+aAC7C,IAAiC,IAA7B,EAAK5M,MAAM6M,cAAyB,KAAM,+YAC9C,GAAI,EAAK7M,MAAMyE,YAAYO,OAAS,GAAI,KAAM,0PAC9C,GAAI,EAAKhF,MAAM8F,UAAUd,OAAS,EAAG,KAAM,yYAC3C,IAAK,EAAKhF,MAAMyD,KAAM,KAAM,8TAC5B,IAAIqJ,EAAM,CACNC,OAAQ,GACRpQ,SAAU,IAEG,EAAKqD,MAAM0M,WACjBxH,KAAI,SAACvI,EAAU+E,GACP/E,EAASoQ,OAAOC,QAC3B,SAASD,GACL,OAAsB,IAAlBA,EAAOE,QACPH,EAAIC,OAAOpL,KAAKoL,EAAO9L,KAChB8L,EAAOE,QAEP,QAINjI,OAAS,GAClB8H,EAAInQ,SAASgF,KAAK,CAAC4C,GAAI5H,EAASsE,IAAKiM,MAAOvQ,EAASuQ,QACrDvQ,EAASsQ,QAAS,GAElBtQ,EAASsQ,QAAS,KAG1B,IAAIhQ,EAAS,CACT+E,UAAW,EAAKlG,MAAMoB,KAAK8E,UAC3BC,SAAU,EAAKnG,MAAMoB,KAAK+E,SAC1BwC,YAAa,EAAKzE,MAAMyE,YACxBrC,MAAO,EAAKtG,MAAMoB,KAAKkF,MACvBqB,KAAM,EAAKzD,MAAMyD,KACjBrC,WAAY,EAAKtF,MAAMoB,KAAKkE,WAC5B+L,IAAK,EAAKrR,MAAMoB,KAAKiQ,IACrBC,SAAU,CACNC,QAAS,EAAKvR,MAAMoB,KAAKkQ,SAASC,QAClClD,KAAM,EAAKrO,MAAMgP,YAErB4B,WAAYI,EACZpI,MAAO,EAAK1E,MAAM0E,MAClB4I,OAAQ,CAACC,QAAQ,GACjBzH,UAAW,EAAK9F,MAAM8F,UACtBxB,SAAS,EACTxG,OAAQ,EAAKhC,MAAMgC,QAEvB,EAAKhC,MAAM0R,SAASvQ,GACtB,MAAOwQ,GACLtO,QAAQC,IAAIqO,GACZ,EAAK3R,MAAM0G,SAASiL,KAlFT,EAqFnBC,QAAU,SAACH,GACP,EAAK5N,SAAS,CAACgO,IAAKJ,KAtFL,EAwFnBK,SAAW,WACP,IACI,QAAgCC,IAA5B,EAAK7N,MAAM8N,aAA4B,KAAM,8KACjD,GAAI,EAAK9N,MAAM8N,aAAa9I,OAAS,GAAI,KAAM,6QAC/C,QAA+B6I,IAA3B,EAAK7N,MAAM+N,YAA2B,KAAM,8KAChD,GAAI,EAAK/N,MAAM+N,YAAY/I,OAAS,IAAK,KAAM,gSAA0D,EAAKhF,MAAM+N,YAAY/I,OAAjF,oBAC/C,QAAgC6I,IAA5B,EAAK7N,MAAMgO,aAA4B,KAAM,oLACjD,GAAI,EAAKhO,MAAMgO,aAAahJ,OAAS,EAAG,KAAM,qNAC9C,IAAIc,EAAY,EAAK9F,MAAM8F,UAC3BA,EAAUnE,KAAK,CACXxF,MAAO,EAAK6D,MAAM8N,aAClBhP,KAAM,EAAKkB,MAAM+N,YACjB9H,MAAO,EAAKjG,MAAMgO,eAEtB,EAAKrO,SAAS,CAACmG,UAAWA,EAAW6H,KAAK,EAAOG,aAAc,GAAIC,YAAa,GAAIC,aAAc,KACpG,MAAOP,GACL,EAAK3R,MAAM0G,SAASiL,KAxGT,EA2GnBQ,SAAW,SAACvM,GACR,IAAIoE,EAAY,EAAK9F,MAAM8F,UAC3BA,EAAS,sBAAO,EAAK9F,MAAM8F,UAAUoI,MAAM,EAAGxM,IAArC,YAAgD,EAAK1B,MAAM8F,UAAUoI,MAAMxM,EAAQ,KAC5F,EAAK/B,SAAS,CAACmG,UAAWA,IAC1B,EAAKhK,MAAM0G,SAAS,sGA/GL,EAiHnB2L,YAAc,WACNrN,IAAOC,KAAK,iCAAkC,CAAC,SAAY,UAAW,IAAO,oBACxE9B,MAAK,SAAAiC,GACF,EAAKvB,SAAS,CAACkN,cAAe3L,EAAOA,YAExC5B,OAAM,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,OAtHjB,EAwHnB6O,YAAc,SAAA1O,GACV,IAAME,EAASF,EAAME,OACfyO,EAAWzO,EAAOC,KAClByO,EAAc1O,EAAO2E,GACvBmI,EAAa,EAAK1M,MAAM0M,WAC5BA,EAAW2B,GAAUtB,OAAOuB,GAAarB,QAAU,EAAKjN,MAAM0M,WAAW2B,GAAUtB,OAAOuB,GAAarB,OACvG,EAAKtN,SAAS,CAAC+M,WAAYA,KA9HZ,EAgInB6B,QAAU,SAAC7M,GAUP,OATgB,EAAK1B,MAAM0M,WAAWhL,GAAOqL,OAAOC,QAChD,SAASjH,GACL,OAAoB,IAAhBA,EAAKkH,OACElH,EAAKkH,OAEL,QAIFjI,QAxIjB,EAAKhF,MAAQ,CACT8D,MAAO,GACP9C,aAAc,GACd0L,WAAY,GACZ8B,aAAa,EACb3B,eAAe,EACfD,cAAc,EACdnI,YAAa,GACbqB,UAAW,IAEf,EAAKrG,aAAe,EAAKA,aAAagP,KAAlB,gBAZL,E,gEAef5K,KAAK4I,kB,mCA6HG/M,GAAQ,IAAD,EACKA,EAAME,OAArBC,EADU,EACVA,KAAMC,EADI,EACJA,MACX+D,KAAKlE,SAAL,eAAgBE,EAAOC,M,+BAGlB,IAAD,OACJ,OACY,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMsE,KAAK,IAAI5F,KAAK,UAChB,kBAAC,IAAD,CACI4F,KAAK,IACLK,YAAY,gHACZ9D,OAAQ,kBAAC,IAAD,CAAQwD,IAAKN,KAAK/H,MAAMoB,KAAKkE,WAAYgD,KAAM,MAEtDP,KAAK/H,MAAMoB,KAAK8E,UAAY,IAAM6B,KAAK/H,MAAMoB,KAAK+E,UAEvD,kBAAC,IAAD,CACI2C,YAAU,EACV3I,QAAS4H,KAAK/H,MAAM4S,WACpB5J,UAAWjB,KAAK/H,MAAMgP,WAAW3O,OAAS,oDAC1CoR,OAAQ1J,KAAK/H,MAAMgP,WAAW3O,MAAQ,QAAU,QAChDqM,OAAQ3E,KAAK/H,MAAMgP,WAAW3O,MAAQ,GAAK,iQAL/C,uDAWR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMiI,KAAK,IAAI5F,KAAK,UAChB,kBAAC,IAAD,CACIwH,WAAS,EACT2I,aACI,kBAAC,IAAD,CACI/K,SAAUC,KAAKsK,YACfS,QAAS/K,KAAK7D,MAAM6M,gBAE5BrE,QAAqC,IAA7B3E,KAAK7D,MAAM6M,eAA2B,2LAPlD,odAoBR,kBAAC,IAAD,CACIhN,KAAM,cACN2I,OAAQ3E,KAAK7D,MAAMyE,YAAc,GAAK,mMACtCiE,IAAI,kCACJ5I,MAAO+D,KAAK7D,MAAMyE,YAClBb,SAAUC,KAAKpE,eACnB,kBAAC,IAAD,CAAiBiJ,IAAI,0GACJF,OAAO,mbACPjE,GAAI,YAEjBV,KAAK7D,MAAM0M,WAAWxH,KAAI,SAACvI,EAAUgK,GACjC,OACI,kBAAC,IAAD,CAAOrB,IAAK3I,EAASsE,KACjB,kBAAC,IAAD,CAAMpB,KAAMlD,EAASsE,IACfhF,QAAS,kBAAM,EAAK0D,SAAL,eAAgBhD,EAASsE,KAAO,EAAKjB,MAAMrD,EAASsE,QACnE6D,UACI,+CAAc,EAAKyJ,QAAQ5H,GAE/BgI,aAAc,EAAK3O,MAAMrD,EAASsE,KAAO,kBAAC,KAAD,MAAe,kBAAC,KAAD,OAEzDtE,EAASuQ,OAEb,EAAKlN,MAAMrD,EAASsE,MACrB,kBAAC,IAAD,KAEQtE,EAASoQ,OAAO7H,KAAI,SAAC2J,EAAanN,EAAO/E,GACrC,OACI,kBAAC,IAAD,CACI2I,IAAK5D,EACLiN,aACI,kBAAC,IAAD,CACA9O,KAAM8G,EACNpC,GAAI7C,EACJkC,SAAU,EAAKwK,YACfQ,QAASC,EAAY5B,UAExB4B,EAAY3B,gBAYjD,kBAAC,IAAD,CAAO/Q,MAAO,2DACuB,IAAhC0H,KAAK7D,MAAM8F,UAAUd,QACtB,kBAAC,IAAD,CAAMgB,WAAS,GAAf,ufAEA,kBAAC,IAAD,KACKnC,KAAK7D,MAAM8F,UAAUZ,KAAI,SAACa,EAAMrE,GAAP,OACtB,kBAAC,IAAD,CAAM0C,KAAK,IAAI5F,KAAK,UAChB,kBAAC,IAAD,CACI8G,IAAKS,EACLC,WAAS,GAMT,kBAAC,IAAD,CACIvB,YAAY,2GAAsB,EAAKzE,MAAM8F,UAAUpE,GAAOvF,OAClE,kBAAC,IAAD,CAAMsI,YAAY,qJACZuB,WAAS,GAAE,EAAKhG,MAAM8F,UAAUpE,GAAO5C,MAC7C,kBAAC,IAAD,CACI2F,YAAY,iJAA8B,EAAKzE,MAAM8F,UAAUpE,GAAOuE,QAE9E,kBAAC,IAAD,CAEIhK,QAAS,WAAO,EAAKgS,SAASvM,IAC9B0C,KAAK,KACL5F,KAAK,eAJT,mDASXqF,KAAK7D,MAAM2N,IACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMlJ,YAAY,qJAA6BuB,WAAS,GACpD,kBAAC,IAAD,CACI8I,SAAO,EACPjP,KAAK,eACL4D,KAAK,OACL3D,MAAO+D,KAAK7D,MAAM8N,aAClBnF,YAAa,8FACb/E,SAAUC,KAAKpE,eACnB,kBAAC,IAAD,CACIqP,SAAO,EACPjP,KAAK,cACLC,MAAO+D,KAAK7D,MAAM+N,YAClBpF,YAAa,8FACb/E,SAAUC,KAAKpE,eACnB,kBAAC,IAAD,CACIqP,SAAO,EACPjP,KAAK,eACL4D,KAAK,SAAS3D,MAAO+D,KAAK7D,MAAMgO,aAChCrF,YAAa,sEACb/E,SAAUC,KAAKpE,gBAEvB,kBAAC,IAAD,CAAKS,MAAO,CAACgI,QAAS,SAClB,kBAAC,IAAD,CAAQ9D,KAAK,IAAI2K,WAAS,EAAC7O,MAAO,CAACG,YAAa,GACxCpE,QAAS,kBAAM,EAAK2R,aAD5B,0DAEA,kBAAC,IAAD,CAAQxJ,KAAK,IAAI2K,WAAS,EAACvQ,KAAK,cACxBvC,QAAS,kBAAM,EAAKyR,SAAQ,KADpC,sDAIJ,kBAAC,IAAD,CACIzR,QAAS,kBAAM,EAAKyR,SAAQ,IAC5B/M,OAAQ,kBAAC,KAAD,OAFZ,4GAMR,kBAAC,IAAD,CACId,KAAM,OACNC,MAAO+D,KAAK7D,MAAMyD,KAClB+E,OAAQ3E,KAAK7D,MAAMyD,KAAO,GAAK,8MAC/BG,SAAUC,KAAKpE,aACfkJ,YAAY,uJACZ,4BAAQ7I,MAAM,sEAAd,sEACA,4BAAQA,MAAM,mFAAd,oFAGoB,uEAApB+D,KAAK7D,MAAMyD,MACX,kBAAC,IAAD,CAAiBiF,IAAI,gTACjB,kBAAC,IAAD,CAAO7I,KAAM,QAAS4D,KAAK,OAAO3D,MAAO+D,KAAK7D,MAAM0E,MAAOd,SAAUC,KAAKpE,gBAGlF,kBAAC,IAAD,CAAUmE,SAAU,kBAAM,EAAKjE,SAAS,CAACiN,cAAe,EAAK5M,MAAM4M,iBAAnE,sDACM,kBAAC,IAAD,CAAM3Q,QAAS4H,KAAK/H,MAAMkT,WAA1B,uMACN,kBAAC,IAAD,CAAQ5K,KAAK,KAAKnI,QAAS4H,KAAK8I,WAAhC,8K,GApUPzG,IAAMC,WAyVZC,gBAdS,SAACpG,GACrB,MAAO,CACH8K,WAAY9K,EAAM8K,WAClB5N,KAAM8C,EAAM9C,KACZY,OAAQkC,EAAMlC,WAII,SAAC0M,GACvB,MAAO,CACHmB,iBAAkBsD,aAAmBtD,GAAkBnB,MAIhDpE,CAA4CoG,I,oFC/O5C0C,G,kDA3HX,WAAYpT,GAAQ,IAAD,8BACf,cAAMA,IAiBVqT,gBAAkB,WACd,IAA4C,IAAxC,EAAKrT,MAAMmB,OAAOM,WAAWgQ,OAC7B,OACI,kBAAC,IAAD,CAAMvH,WAAS,GAAf,sVArBO,EA6CnBoJ,YAAc,WACVtO,IAAOC,KAAK,yBAA0B,IAAI9B,MAAK,SAAAZ,GAAI,OAAEc,QAAQC,IAAIf,OA5CjE,EAAK2B,MAAQ,CACTqP,YAAY,EACZnS,KAAM,EAAKpB,MAAMoB,KACjBoS,QAAS,GACT3F,UAAU,EACV4F,QAAQ,EACRC,QAAS,GACTC,WAAY,GACZlO,UAAW,GAVA,E,oGA0BY,IAAtBnD,EAAqB,uDAAf,GAAIC,EAAW,uDAAJ,GAEtB,OAAOC,MAAMF,EAAK,CACdG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAAAC,GAAQ,OAAIC,QAAQC,IAAIF,EAASG,a,+BAQtC,IAAD,OACJ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI+E,KAAK,IACLK,YAAaZ,KAAK7D,MAAM9C,KAAKqQ,OAC7B5I,cAAed,KAAK7D,MAAM9C,KAAKyM,UAAY,kBAAC,IAAD,CACvC1N,QAAS4H,KAAK/H,MAAM4T,YACpB/O,OAAQ,kBAAC,KAAD,OAF+B,kFAI3CA,OAAQ,kBAAC,IAAD,CAAQwD,IAAKN,KAAK7D,MAAM9C,KAAKkE,WAAYgD,KAAM,MAEtDP,KAAK7D,MAAM9C,KAAK8E,UAAU,IAAI6B,KAAK7D,MAAM9C,KAAK+E,UAElD4B,KAAK7D,MAAM9C,KAAKyM,UAAY9F,KAAKsL,kBAC9B,kBAAC,IAAD,CAAOhT,MAAM,mDAAW0J,UAAW,QAC/B,kBAAC,IAAD,CAAW3F,MAAO,CAAEmF,OAAQ,YAC5B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIT,YAAU,EACVjE,OAAQ,kBAAC,KAAD,MACR1E,QAAS4H,KAAK/H,MAAM6T,eAHxB,4DAcmB,IAA3B9L,KAAK/H,MAAMmE,YACP,kBAAC,IAAD,CACI2F,OAAO,sEACPsD,UAAU,wcACVC,QAAS,kBAAC,IAAD,CAAQlN,QAAS,kBAAI,EAAKmT,gBAA1B,sDAEb,KAEPvL,KAAK7D,MAAM9C,KAAKyM,UACb,kBAAC,IAAD,CAAOxN,MAAM,uEACb,kBAAC,IAAD,CAAW+D,MAAO,CAAEmF,OAAQ,YAC5B,kBAAC,IAAD,KAaA,kBAAC,IAAD,CACIT,YAAU,EACVjE,OAAQ,kBAAC,KAAD,MACR1E,QAAS4H,KAAK/H,MAAM8T,iBAHxB,0DAKI,kBAAC,IAAD,CACIhL,YAAU,EACVjE,OAAQ,kBAAC,KAAD,MACR1E,QAAS4H,KAAK/H,MAAM+T,eAHxB,8E,GA/GP3J,IAAMC,W,wCCwKR3G,G,kDAxKX,WAAY1D,GAAQ,IAAD,8BACf,cAAMA,IAkCV2B,YAAc,WACV,EAAKkC,SAAS,CAACmQ,SAAS,IACxB,IAAMC,EAAW,IAAIC,SACjBC,EAAeC,SAASC,eAAe,SAASC,MAAM,GAC1DL,EAASM,OAAO,SAAU,EAAKrQ,MAAMgB,aAAagB,UAAU,IAAI,EAAKhC,MAAMgB,aAAaiB,UACxF8N,EAASM,OAAO,YAAa,EAAKrQ,MAAMsQ,WACxCP,EAASM,OAAO,QAAS,EAAKrQ,MAAMqC,OACpC0N,EAASM,OAAO,QAASJ,GACzB3R,MAAMjC,EAAQmB,MAAMC,YAAa,CACzBc,OAAQ,OACRO,KAAMiR,IAEL9Q,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAC,GACF,EAAKqR,UAAUrR,EAAS3C,SACxBiU,KAAWtR,EAASuR,QAAS,CACzBjS,KAAM,UACND,OAAQ,QAEPU,MAAK,SAAAiC,GAAM,OAAIA,EAAO7B,UACtBJ,MAAK,SAAAiC,GAEF,IAAIwP,EAASxP,EAAOhC,SAAS,GAAGyR,MAAM,GAAGvS,IACrCwS,EAAS,EAAK5Q,MAAM+D,OACxB6M,EAAOC,QAAQH,GACf,EAAK/Q,SAAS,CAACoE,OAAQ6M,IACvB,IAAIvS,EAAO,CACPuE,SAAU,EAAK5C,MAAMgB,aAAaC,IAClCyP,OAAQA,GAEZpS,MAAMjC,EAAQmB,MAAME,UAAW,CAC3Bc,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBJ,OAAQ,OACRO,KAAMC,KAAKC,UAAUX,GACrBO,SAAU,SACVC,SAAU,gBAETI,MAAK,SAAAiC,GAAM,OAAIA,EAAO7B,UACtBJ,MAAK,SAAAiC,GACF,EAAKqP,UAAUrP,EAAO3E,SACtB,EAAKoD,SAAS,CAACmQ,SAAS,OAE3BxQ,OAAM,SAAAmO,GAAK,OAAI,EAAK8C,UAAU9C,SAGlCnO,OAAM,SAAAmO,GAAK,OAAI,EAAK8C,UAAU9C,SAE1CnO,OAAM,SAAAmO,GAAK,OAAI,EAAK8C,UAAU9C,OAxFxB,EA2FnBqD,gBAAkB,SAACzO,GACfvB,IAAOC,KAAK,wBAAyB,CACjC,OAAU,yBACV,OAAU,CAAC,SAAY,YAAY,SAAY,YAAa,EAAI,QAAS,aAAgBsB,KACxFpD,MAAK,SAAAiC,GACF,EAAKvB,SAAS,CAAC2Q,UAAWpP,EAAOhC,SAAS6R,WAAY1O,MAAOA,OAEhE/C,OAAM,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,OAlGb,EAqGnByR,SAAW,WACPlQ,IAAOC,KAAK,uBAAwB,CAAC,OAAU,QAAS,MAAS,WAC5D9B,MAAK,SAAAZ,GACF,EAAKyS,gBAAgBzS,EAAK4S,iBAE7B3R,OAAM,SAAAmO,GAAK,OAAItO,QAAQC,IAAIqO,OAxGhC,EAAKzN,MAAQ,CACTkR,eAAgB,EAAKpV,MAAMoV,eAC3BlQ,aAAc,GACdmQ,SAAU,GACV3P,QAAQ,EACR4P,UAAW,GACXrN,OAAQ,IARG,E,gEAWE,IAAD,OAChBzF,MAAMjC,EAAQG,QAAQI,MAAQiH,KAAK/H,MAAMoB,KAAKkF,OACzCnD,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAA+B,GACH,EAAKrB,SAAS,CAACqB,aAAcA,EAAa,GAAI+C,OAAQ/C,EAAa,GAAGiE,OAAOoB,UAAW7E,QAAQ,S,gCAGhGyC,GAAO,IAAD,OACTJ,KAAK7D,MAAMwC,UACfqB,KAAKlE,SAAS,CAAE6C,SACR,kBAAC,IAAD,CACIa,OAAO,WACPC,QAAS,kBAAM,EAAK3D,SAAS,CAAE6C,SAAU,SAExCyB,O,qCAIFF,EAAQrC,GACnBZ,IAAOC,KAAK,qBAAsB,CAC9BgD,OAAQA,EACRC,YAAatC,IACdzC,MAAK,SAAAZ,GAAI,OAAIc,QAAQC,IAAIf,Q,kCA2EnB,IAAD,OACR,OAAIwF,KAAK7D,MAAM+D,OAAOiB,OAAS,EAEvB,kBAAC,IAAD,KAEQnB,KAAK7D,MAAM+D,OAAOmB,KAAI,SAACoB,EAAO5E,GAC1B,OACI,kBAAC,IAAD,CACIxB,MAAO,CAACE,QAAS,EAAGgF,aAAc,GAAIC,OAAQ,GAC9CjB,KAAK,IACL5F,KAAK,SACL8G,IAAK5D,EACLzF,QAAS,kBAAM,EAAKsJ,eAAe,EAAKvF,MAAM+D,OAAQrC,KAEtD,yBAAKxB,MAAO,CAACM,OAAQ,GAAIgF,gBAAiB,OAAOc,EAAM,IAAKb,eAAgB,QAASL,aAAc,WAQnH,kBAAC,IAAD,uL,+BAKZ,OAAuB,IAApBvB,KAAK7D,MAAMwB,OAEN,kBAAC,IAAD,CAAS4C,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,MAI1C,kBAAC,IAAD,KAEQR,KAAK7D,MAAM8P,QAAU,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAM9J,WAAS,GAAf,wOAAkE,kBAAC,IAAD,OAAwB,kBAAC,IAAD,CAAO7J,MAAM,IAC7H,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIuM,IAAI,0IACJ/H,OAAQ,kBAAC,KAAD,MACRyD,KAAK,IACLR,SAAUC,KAAKpG,YACfxB,QAAS4H,KAAKmN,SACdzM,GAAG,SANP,0FAWJ,kBAAC,IAAD,CAAOsB,UAAU,QACZhC,KAAK0C,cAIjB1C,KAAK7D,MAAMwC,c,GAlKN0D,IAAMC,W,oBCF1BkL,G,kDAEF,WAAYvV,GAAQ,IAAD,8BACf,cAAMA,IACDkE,MAAQ,CACTsR,OAAQ,GACRpH,OAAQ,CAAC,CAAC3F,GAAG,EAAGpI,MAAO,UAE3B,EAAKyH,SAAW,EAAKA,SAAS6K,KAAd,gBAND,E,gEAcf5K,KAAK0N,c,kCAGI,IAAD,OACFD,EAASzN,KAAK7D,MAAMsR,OAAOE,cAEjC1Q,IAAOC,KAAK,wBAAyB,CACjC,OAAU,qBACV,OAAU,CACN,WAAc,EACd,EAAKuQ,EACL,EAAK,QACL,aAPM,6EAUTrS,MAAK,SAAAiC,GACF,EAAKvB,SAAS,CAACuK,OAAQhJ,EAAOhC,SAASuS,QAAQ,kBAAM,EAAK3V,MAAM4V,0BAEnEpS,OAAM,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,Q,+BAGvBA,GACLsE,KAAKlE,SAAS,CAAC2R,OAAQ/R,EAAEK,OAAOE,QAChC+D,KAAK0N,c,+BAGC,IAAD,OACL,OACI,kBAAC,IAAMI,SAAP,KACI,kBAAC,IAAD,CAAQ7R,MAAO+D,KAAK7D,MAAMsR,OAAQ1N,SAAUC,KAAKD,SAAUM,MAAO,OACjEL,KAAK7D,MAAMkK,OAAOlF,OAAS,GAC5B,kBAAC,IAAD,KACKnB,KAAK7D,MAAMkK,OAAOhF,KAAI,SAAAiF,GAAI,OACvB,kBAAC,IAAD,CACI1F,YAAa0F,EAAKyH,QAAU,GAC5B3V,QAAS,kBAAI,EAAKH,MAAM6P,iBAAiBxB,IACzC7E,IAAK6E,EAAK5F,IAET4F,EAAKhO,gB,GAtDN+J,IAAMC,WA+DnB0L,eAAsBR,I,qBCtC/BS,GAASC,cAETC,G,kDACF,WAAYlW,GAAQ,IAAD,8BACf,cAAMA,IA6CVmW,YAAc,WACV,IAAMhV,EAAS,EAAK+C,MAAM/C,OAC1BA,EAAOa,OAAS,EAAKhC,MAAMgC,OAC3B,EAAKK,UAAU9B,EAAQG,QAAQC,IAAM,EAAKuD,MAAM/C,OAAOgE,IAAKhE,GAC5D,EAAKnB,MAAMsP,UAAU,EAAKpL,MAAM/C,SAlDjB,EAkEnBwC,aAAe,SAACC,GACZ,EAAKC,SAAL,eAAgBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAnElC,EAgHnBwE,QAAU,SAAA5E,GACN,IACMG,EADSH,EAAME,OACDC,KAChB5C,EAAS,EAAK+C,MAAM/C,OACxBA,EAAO4C,IAAS5C,EAAO4C,GACvB,EAAKF,SAAS,CAAC1C,OAAQA,KArHR,EAuHnBgR,SAAW,SAACvM,GACR,IAAIzE,EAAS,EAAK+C,MAAM/C,OACxBA,EAAO6I,UAAP,sBAAuB,EAAK9F,MAAM/C,OAAO6I,UAAUoI,MAAM,EAAGxM,IAA5D,YAAuE,EAAK1B,MAAM/C,OAAO6I,UAAUoI,MAAMxM,EAAQ,KACjH,EAAK/B,SAAS,CAAC1C,OAAQA,KA1HR,EA6HnByQ,QAAU,SAACH,GACP,EAAK5N,SAAS,CAACgO,IAAKJ,KA9HL,EA0JnBK,SAAW,WACP,IACI,QAAgCC,IAA5B,EAAK7N,MAAM8N,aAA4B,KAAM,8KACjD,GAAI,EAAK9N,MAAM8N,aAAa9I,OAAS,GAAI,KAAM,6QAC/C,QAA+B6I,IAA3B,EAAK7N,MAAM+N,YAA2B,KAAM,8KAChD,GAAI,EAAK/N,MAAM+N,YAAY/I,OAAS,IAAK,KAAM,gSAA0D,EAAKhF,MAAM+N,YAAY/I,OAAjF,oBAC/C,QAAgC6I,IAA5B,EAAK7N,MAAMgO,aAA4B,KAAM,oLACjD,GAAI,EAAKhO,MAAMgO,aAAahJ,OAAS,EAAG,KAAM,qNAC9C,IAAI/H,EAAS,EAAK+C,MAAM/C,OACxBA,EAAO6I,UAAUnE,KAAK,CAClBxF,MAAO,EAAK6D,MAAM8N,aAClBhP,KAAM,EAAKkB,MAAM+N,YACjB9H,MAAO,EAAKjG,MAAMgO,eAEtB,EAAKrO,SAAS,CAAC1C,OAAQA,EAAQ0Q,KAAK,EAAOG,aAAc,GAAIC,YAAa,GAAIC,aAAc,KAC5F,EAAKuC,UAAU,iHACjB,MAAO9C,GACL,EAAKyE,iBAAiBzE,KA3KX,EAiMnBc,QAAU,SAAC7M,GAUP,OATgB,EAAK1B,MAAM0M,WAAWhL,GAAOqL,OAAOC,QAChD,SAASjH,GACL,OAAoB,IAAhBA,EAAKkH,OACElH,EAAKkH,OAEL,QAIFjI,QA3MF,EA6MnBmN,SAAW,WACP,OAAwC,IAApC,EAAKnS,MAAM/C,OAAOqQ,OAAOC,OAErB,kBAAC,IAAD,CAAMvH,WAAS,GAAf,oyBAIA,kBAAC,IAAD,CACI2I,aAAc,kBAAC,IAAD,CACV9O,KAAM,UACN+D,SAAU,EAAKU,QACfsK,QAAS,EAAK5O,MAAM/C,OAAOqH,WAJnC,wJApNO,EA+NnB8J,YAAc,SAAA1O,GACV,IAAME,EAASF,EAAME,OACfyO,EAAWzO,EAAOC,KAClByO,EAAc1O,EAAO2E,GACvBmI,EAAa,EAAK1M,MAAM0M,WAC5BA,EAAW2B,GAAUtB,OAAOuB,GAAarB,QAAU,EAAKjN,MAAM0M,WAAW2B,GAAUtB,OAAOuB,GAAarB,OACvG,EAAKtN,SAAS,CAAC+M,WAAYA,KArOZ,EAwOnBgC,WAAa,SAACvE,GACV,IAAIlN,EAAS,EAAK+C,MAAM/C,OACxBA,EAAOmQ,SAASjD,KAAOA,EACvB,EAAKrO,MAAMsP,UAAUnO,GACrB,EAAKnB,MAAMsW,YAAY,YA1OvB,EAAKpS,MAAQ,CACTqS,MAAO,WACPC,SAAS,EACTC,OAAQ,KACR3V,MAAO,GACPkH,MAAO,CACH0O,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EACjBC,eAAgB,EAChBC,gBAAiB,EACjBC,WAAY,EACZC,eAAgB,GAEpBnW,SAAU,GACV6E,QAAQ,EACRmI,UAAU,EACVnH,SAAU,MAnBC,E,gEAuBE,IAAD,QACgB,IAA7BqB,KAAK/H,MAAMoB,KAAKyM,WACf9F,KAAKlE,SAAS,CAAC1C,OAAQ4G,KAAK/H,MAAMmB,OAAQwH,YAAaZ,KAAK/H,MAAMmB,OAAOwH,cACzEnG,MAAMjC,EAAQM,SAASiB,QAClBqB,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAyN,GACF,EAAK/M,SAAS,CAAC+M,WAAYA,EAAYlL,QAAQ,IAC/CkL,EAAWxH,KAAI,SAAAvI,GACX,EAAKgD,SAAL,eAAgBhD,EAASsE,KAAM,OAEnC,EAAK8R,UAAW,EAAKjX,MAAMmB,OAAOyP,WAAWK,c,yCAK1C7F,EAAWC,EAAWC,GACrC,GAAIF,EAAU4D,aAAejH,KAAK/H,MAAMgP,WAAW,CAC/C,IAAI7N,EAAS4G,KAAK7D,MAAM/C,OACxBA,EAAOmQ,SAASjD,KAAOtG,KAAK/H,MAAMgP,WAClCjH,KAAKlE,SAAS,CAAC1C,OAAQA,O,gCAWrB8P,GAAQ,IAAD,OACTiG,MAAMC,QAAQlG,IACdlJ,KAAK7D,MAAM0M,WAAWxH,KAAI,SAAAvI,GACtB,EAAKgD,SAAL,eAAgBhD,EAASsE,KAAM,IAC/BtE,EAASoQ,OAAO7H,KAAI,SAAA6H,GACZ,EAAK/M,MAAM/C,OAAOyP,WAAWK,OAAOzL,SAASyL,EAAO9L,OACpD8L,EAAOE,QAAS,W,kCAWI,IAAD,OAA7B7O,EAA6B,uDAAvB,GAAI4C,EAAmB,uDAAJ,GAqB/B,OApBA6C,KAAK7D,MAAM0M,WAAWxH,KAAI,SAAAvI,GACtB,IAAImH,EAAQnH,EAASoQ,OAAOC,QAAO,SAAAD,GAAM,OAAsB,IAAlBA,EAAOE,UAAiBjI,OACrErI,EAASsQ,OAASnJ,EAAQ,KAE9B9C,EAAayD,YAAcZ,KAAK7D,MAAMyE,YACtCzD,EAAa0L,WAAa,CACtBK,OAAQ,GACRpQ,SAAU,IAEVkH,KAAK7D,MAAM0M,WAAWxH,KAAI,SAAAvI,IACE,IAApBA,EAASsQ,QACTjM,EAAa0L,WAAW/P,SAASgF,KAAK,CAAC4C,GAAI5H,EAASsE,IAAKiM,MAAOvQ,EAASuQ,QAE7EvQ,EAASoQ,OAAO7H,KAAI,SAAA6H,IACM,IAAlBA,EAAOE,QACPjM,EAAa0L,WAAWK,OAAOpL,KAAKoL,EAAO9L,WAKpD3C,MAAMF,EAAK,CACdG,OAAQ,QACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUgC,KAEpB/B,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAqL,GACF,EAAKxO,MAAMoX,YACX,EAAKpX,MAAM0G,SAAS,oHAEvBlD,OAAM,SAAAC,GAAC,OAAEJ,QAAQC,IAAIG,EAAEhD,c,uCAoBf0H,GAAO,IAAD,OACfJ,KAAK7D,MAAMwC,UAAUqB,KAAKlE,SAAS,CAAC6C,SAAU,OAClDqB,KAAKlE,SAAS,CACV6C,SACI,kBAAC,IAAD,CACI7B,OAAQ,kBAAC,KAAD,MACR0C,OAAO,WACPC,QAAS,kBAAM,EAAK3D,SAAS,CAAC6C,SAAU,SAEvCyB,O,gCAIPA,GAAO,IAAD,OACRJ,KAAK7D,MAAMwC,UAAUqB,KAAKlE,SAAS,CAAC6C,SAAU,OAClDqB,KAAKlE,SAAS,CACV6C,SACI,kBAAC,IAAD,CACIa,OAAO,WACPC,QAAS,kBAAM,EAAK3D,SAAS,CAAC6C,SAAU,SAEvCyB,O,+BAyFP,IAAD,OACL,OAAyB,IAAtBJ,KAAK7D,MAAMwB,SAGmB,IAA7BqC,KAAK/H,MAAMoB,KAAKyM,SAFT,KAMC,kBAAC,IAAD,CACIwJ,YAAatP,KAAK/H,MAAMqX,YACxB7P,QAASO,KAAKoO,aAEd,kBAAC,IAAD,CAAWmB,sBAAoB,EACpB7O,GAAI,UACJjB,QAASO,KAAKoO,YACdrM,OACI,kBAAC,IAAD,CACI5J,KAAM8V,KAAWuB,KACjB,kBAAC,IAAD,CAAmBpX,QAAS4H,KAAKoO,aAAc,0DAC/CqB,MAAO,kBAAC,IAAD,CAAmBrX,QAAS4H,KAAKoO,aAAcH,KAAWyB,IAAM,yDACnE,kBAAC,KAAD,QAJR,2DAUX,kBAAC,IAAD,KACI,kBAAC,IAAD,CACInP,KAAK,IACLK,YACIZ,KAAK7D,MAAM/C,OAAOqH,QAAU,6JAAkC,gLAElE3D,OAAQ,kBAAC,IAAD,CAAQwD,IAAKN,KAAK7D,MAAM/C,OAAOmE,WAAYgD,KAAM,MAExDP,KAAK7D,MAAM/C,OAAO+E,UAAY,IAAM6B,KAAK7D,MAAM/C,OAAOgF,UAE3D,kBAAC,IAAD,CACI2C,YAAU,EACV3I,QAAS,kBAAM,EAAKH,MAAMsW,YAAY,eACtCtN,UAAWjB,KAAK7D,MAAM/C,OAAOmQ,SAASjD,cAAgBqJ,OAAS,0DAAe3P,KAAK7D,MAAM/C,OAAOmQ,SAASjD,KAAKhO,OAHlH,qDAOA,kBAAC,IAAD,KACK0H,KAAKsO,YAEV,kBAAC,IAAD,CAAOhW,MAAO,2DAC8B,IAAvC0H,KAAK7D,MAAM/C,OAAO6I,UAAUd,QAC7B,kBAAC,IAAD,CAAMgB,WAAS,GAAf,ufAEA,kBAAC,IAAD,KACKnC,KAAK7D,MAAM/C,OAAO6I,UAAUZ,KAAI,SAACa,EAAMrE,GAAP,OAC7B,kBAAC,IAAD,CAAM0C,KAAK,IAAI5F,KAAK,UAChB,kBAAC,IAAD,CACI8G,IAAKS,EACLC,WAAS,GAOT,kBAAC,IAAD,CACIvB,YAAY,2GAAsB,EAAKzE,MAAM/C,OAAO6I,UAAUpE,GAAOvF,OACzE,kBAAC,IAAD,CAAMsI,YAAY,qJACZuB,WAAS,GAAE,EAAKhG,MAAM/C,OAAO6I,UAAUpE,GAAO5C,MACpD,kBAAC,IAAD,CACI2F,YAAY,iJAA8B,EAAKzE,MAAM/C,OAAO6I,UAAUpE,GAAOuE,OACjF,kBAAC,IAAD,CAEIhK,QAAS,WAAO,EAAKgS,SAASvM,IAC9B0C,KAAK,KACL5F,KAAK,eAJT,oDAUfqF,KAAK7D,MAAM2N,KACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMlJ,YAAY,qJAA6BuB,WAAS,GACpD,kBAAC,IAAD,CACI8I,SAAO,EACPjP,KAAK,eACL4D,KAAK,OACL3D,MAAO+D,KAAK7D,MAAM8N,aAClBnF,YAAa,8FACb/E,SAAUC,KAAKpE,eACnB,kBAAC,IAAD,CACIqP,SAAO,EACPjP,KAAK,cACLC,MAAO+D,KAAK7D,MAAM+N,YAClBpF,YAAa,8FACb/E,SAAUC,KAAKpE,eACnB,kBAAC,IAAD,CACIqP,SAAO,EACPjP,KAAK,eACL4D,KAAK,SAAS3D,MAAO+D,KAAK7D,MAAMgO,aAChCrF,YAAa,sEACb/E,SAAUC,KAAKpE,gBAEvB,kBAAC,IAAD,CAAKS,MAAO,CAACgI,QAAS,SAClB,kBAAC,IAAD,CAAQ9D,KAAK,IAAI2K,WAAS,EAAC7O,MAAO,CAACG,YAAa,GACxCpE,QAAS,kBAAM,EAAK2R,aAD5B,0DAEA,kBAAC,IAAD,CAAQxJ,KAAK,IAAI2K,WAAS,EAACvQ,KAAK,cACxBvC,QAAS,kBAAM,EAAKyR,SAAQ,KADpC,uDAMZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIzR,QAAS,kBAAM,EAAKyR,SAAQ,IAC5B/M,OAAQ,kBAAC,KAAD,OAFZ,4GAKJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAY8S,SAAU5P,KAAK6P,cACvB,kBAAC,IAAD,CACI7T,KAAM,cACN0N,OAAQ1J,KAAK7D,MAAMyE,YAAc,QAAU,QAC3C+D,OAAQ3E,KAAK7D,MAAMyE,YAAc,GAAK,mMACtCiE,IAAI,kCACJ5I,MAAO+D,KAAK7D,MAAMyE,YAClBb,SAAUC,KAAKpE,gBAEvB,kBAAC,IAAD,CAAiBiJ,IAAI,0GACJF,OAAO,mbACPjE,GAAI,YAEbV,KAAK7D,MAAM0M,WAAWxH,KAAI,SAACvI,EAAUgK,GACjC,OACI,kBAAC,IAAD,CAAOrB,IAAK3I,EAASsE,KACjB,kBAAC,IAAD,CAAM2D,YAAU,EAAC/E,KAAMlD,EAASsE,IAC1BhF,QAAS,kBAAM,EAAK0D,SAAL,eAAgBhD,EAASsE,KAAO,EAAKjB,MAAMrD,EAASsE,QACnE6D,UACI,+CAAc,EAAKyJ,QAAQ5H,IAEhChK,EAASuQ,OAEb,EAAKlN,MAAMrD,EAASsE,MACrB,kBAAC,IAAD,KAEQtE,EAASoQ,OAAO7H,KAAI,SAAC2J,EAAanN,EAAO/E,GACrC,OACI,kBAAC,IAAD,CACI2I,IAAK5D,EACLiN,aACI,kBAAC,IAAD,CACI9O,KAAM8G,EACNpC,GAAI7C,EACJkC,SAAU,EAAKwK,YACfQ,QAASC,EAAY5B,UAE5B4B,EAAY3B,kBAc5DrJ,KAAK7D,MAAMwC,UAEhB,kBAAC,IAAD,CAAW4Q,sBAAoB,EACpB7O,GAAI,aACJjB,QAAS,kBAAM,EAAKxH,MAAMsW,YAAY,YACtCxM,OACI,kBAAC,IAAD,CACI5J,KAAM8V,KAAWuB,KACjB,kBAAC,IAAD,CAAmBpX,QAAS,kBAAM,EAAKH,MAAMsW,YAAY,aAAa,kCACtEkB,MAAO,kBAAC,IAAD,CAAmBrX,QAAS,kBAAM,EAAKH,MAAMsW,YAAY,aAAaN,KAAWyB,IAAM,iCAC1F,kBAAC,KAAD,QAJR,wEAUX,kBAAC,GAAD,CAAeH,sBAAoB,EACpBzH,iBAAkB,SAACxB,GAAD,OAAU,EAAKuE,WAAWvE,Y,GAzajEjE,IAAMC,WAmcbC,gBAfS,SAACpG,GACrB,MAAO,CACH8K,WAAY9K,EAAM8K,WAClB5N,KAAM8C,EAAM9C,KACZD,OAAQ+C,EAAM/C,OACda,OAAQkC,EAAMlC,WAII,SAAC0M,GACvB,MAAO,CACHY,UAAW6D,aAAmB7D,GAAWZ,MAIlCpE,CAA4CyL,YAAsBG,K,yCCtXlE2B,G,kDAnGX,WAAY7X,GAAQ,IAAD,8BACf,cAAMA,IAkBV8X,gBAAkB,SAAC7W,GAEf,IAAI8W,EAAM,CAACA,IAAK9W,GAChBuB,MAAMjC,EAAQG,QAAQM,UAAW,CAC7ByB,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU6U,KAEpB5U,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAwQ,GACF,EAAK9P,SAAS,CAAC8P,WAAYA,EAAYqE,UAAU,OAEpDxU,OAAM,SAAAyU,GACH5U,QAAQC,IAAI2U,GACZ,EAAKpU,SAAS,CAACmU,UAAU,QAvCjC,EAAK9T,MAAQ,CACTwP,QAAS,GACTC,WAAY,GACZqE,UAAU,GALC,E,gEASE,IAAD,OAChBE,OAAOC,QAAQC,aAAa,GAAI,GAAI,SACpCF,OAAOC,QAAQE,UAAU,GAAI,GAAI,WACjCH,OAAOI,iBAAiB,YAAY,SAAA1U,GAChCsU,OAAOC,QAAQE,UAAU,GAAI,GAAI,gBACjC,EAAKrY,MAAMI,YAEf2H,KAAK+P,gBAAgB/P,KAAK/H,MAAMoB,KAAKH,Q,+BA6B/B,IAAD,OACL,OAA4B,IAAxB8G,KAAK7D,MAAM8T,SACH,kBAAC,IAAD,CAAS1P,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,MAEb,+HAAlCR,KAAK7D,MAAMyP,WAAWlT,QAEjB,kBAAC,IAAD,CACIwS,WAAS,EACTpJ,KAAM,kBAAC,KAAD,MACNC,OAAQ/B,KAAK7D,MAAMyP,WAAWlT,SAHlC,icASAsH,KAAK7D,MAAMyP,WAAWvK,KAAI,SAAAjI,GACtB,GAAgB,OAAXA,EACD,OACI,kBAAC,IAAD,CAAUqI,IAAKrI,EAAOmF,OAClB,kBAAC,IAAD,CAAMgC,KAAK,IAAI5F,KAAK,UAChB,kBAAC,IAAD,CACI8G,IAAKrI,EAAOgE,IACZN,OAAQ,kBAAC,IAAD,CAAQyD,KAAM,GAAID,IAAKlH,EAAOmE,aACtC6C,KAAMhH,EAAOwG,KACb4Q,QAASpX,EAAOmQ,SAASjD,KAAKhO,MAC9B+H,MAAO,kBAAC,KAAD,MACPjI,QAAS,kBAAM,EAAKH,MAAMwY,kBAAkBrX,EAAOgE,OAElDhE,EAAO+E,UARZ,IAQwB/E,EAAOgF,mB,GA1E/CiE,IAAMC,W,oBCNf,SAASoO,GAASzY,GAC7B,OACI,kBAAC,IAAD,CAAUwJ,IAAKxJ,EAAMwJ,KACjB,kBAAC,IAAD,CAAMlB,KAAK,KACP,kBAAC,IAAD,CACIoQ,UAAQ,EAER7T,OAAQ,kBAAC,IAAD,CAAQyD,KAAM,GAAID,IAAKrI,EAAM2Y,KAAKrT,aAC1CiT,QAASvY,EAAMwL,KACfkB,OAAQ,kBAAC,IAAD,KAAU1M,EAAM2Y,KAAKC,MAC7BvL,QACI,kBAAC,IAAMwI,SAAP,KACI,kBAAC,IAAD,CAAQnT,KAAK,UAAUvC,QAAS,kBAAIH,EAAM6Y,eAAe7Y,EAAM2Y,KAAK7R,YAApE,8GAIP9G,EAAM2Y,KAAKzS,UAZhB,IAY4BlG,EAAM2Y,KAAKxS,UAEvC,kBAAC,IAAD,CAAM+D,WAAS,GACVlK,EAAM2Y,KAAK3V,MAEhB,kBAAC,IAAD,CAAUoB,MAAO,CAAC0U,aAAc,KAExB9Y,EAAM2Y,KAAK1Q,OAAOmB,KAAI,SAACoB,EAAMK,GACzB,OACI,kBAAC,IAAD,CACIzG,MAAO,CAACE,QAAS,EAAGgF,aAAc,GAAIC,OAAQ,GAC9CjB,KAAK,IACL5F,KAAK,SACL8G,IAAKqB,GAEL,yBAAKzG,MAAO,CAACkF,aAAc,GAAI5E,OAAQ,GAAIgF,gBAAiB,OAAOc,EAAM,IAAKb,eAAgB,kBC7BlI,SAASqC,GAAQP,GACb,GAAgB,4DAAZA,EACA,OAAOA,EAEP,IAAID,EAAO,IAAIE,KAAKD,GAChBE,EAAQH,EAAKI,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUL,EAAKM,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQP,EAAKQ,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQT,EAAKU,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAIT,EAAKW,cAAc,WAAMR,EAAM,IAAIE,EAoBvD,SAASkN,GAAS/Y,GAC7B,OAA6B,IAAzBA,EAAMgZ,QAAQ9P,OAEV,kBAAC,IAAD,CACIW,KAAM,kBAAC,KAAD,MACNC,OAAO,0GACPmP,OAAQ,kBAAC,IAAD,CAAQ9Y,QAASH,EAAM+E,MAAOuD,KAAK,KAAnC,iEAHZ,gIAK8BtI,EAAMoB,KAAKkQ,SAASjD,KAAKhO,MALvD,irBAWAL,EAAMgZ,QAAQ5P,KAAI,SAAAuP,GACd,OACI,kBAACF,GAAD,CACIjN,KAAMQ,GAAQ2M,EAAKnN,MACnBhC,IAAKmP,EAAKxT,IACVwT,KAAMA,EACNE,eAAgB7Y,EAAM6Y,oBCtD9C,SAAS7P,GAAUqF,GACf,GAAGA,EACC,MAAgB,8EAATA,EAA2BA,EAAOA,EAAKhO,MAgBtD,IAOeiK,gBAPS,SAACpG,GACrB,MAAO,CACH8K,WAAY9K,EAAM8K,cAKX1E,EAlBf,SAAkBtK,GACd,OACI,kBAAC,IAAD,CACIoE,MAAO,CAACmI,SAAU,GAAIjI,QAAS,GAC/BwE,YAAU,EACV3I,QAASH,EAAM4S,WACf5J,UAAWA,GAAUhJ,EAAMgP,aAC9B,0BAAM5K,MAAO,CAACmI,SAAU,KAAxB,6FCPH2M,G,kDACF,WAAYlZ,GAAQ,IAAD,8BACf,cAAMA,IA2BVmZ,SAAW,WACH3W,MAAMjC,EAAQc,UAAUE,OAAO,EAAKvB,MAAMgP,WAAWvG,IAChDtF,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAwV,GACFtV,QAAQC,IAAIqV,GACZ,EAAK3Y,MAAMiQ,qBAAqB0I,GAChC,EAAK9U,SAAS,CAACmV,QAASL,EAAMjT,QAAQ,QAlCnC,EAsCnBX,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,gCACjC9B,MAAK,SAAAiC,GAAM,OAAI,EAAKC,gBAAgB,+KAAoC,EAAKnB,MAAMgB,aAAaI,gBAtCrG,EAAKpB,MAAQ,CACTwB,QAAQ,GAHG,E,gEAME,IAAD,OACwB,IAArCqC,KAAK/H,MAAMiP,eAAe/F,OACzBnB,KAAKoR,WAELpR,KAAKlE,SAAS,CAACmV,QAASjR,KAAK/H,MAAMiP,eAAgBvJ,QAAQ,IAAO,WAC1D,EAAK1F,MAAMkP,sBACXgJ,OAAOkB,SAAS,EAAG,EAAKpZ,MAAMkP,2B,yCAM3B9D,EAAWC,EAAWC,GAAW,IAAD,OAC5CF,EAAU4D,aAAejH,KAAK/H,MAAMgP,YACnCjH,KAAKlE,SAAS,CAAC6B,QAAQ,IAAO,kBAAI,EAAKyT,gB,6CAK3CpR,KAAK/H,MAAMmQ,2BAA2B+H,OAAOmB,KAAKC,e,+BAiB7C,IAAD,OACJ,OAA0B,IAAtBvR,KAAK7D,MAAMwB,OAEP,kBAAC,IAAMmQ,SAAP,KACI,kBAAC,GAAD,CACIjD,WAAY,kBAAI,EAAK5S,MAAM4S,gBAE/B,kBAAC,IAAD,CAAStK,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,OAK9C,kBAAC,IAAMsN,SAAP,KACI,kBAAC,GAAD,CACIjD,WAAY,kBAAI,EAAK5S,MAAM4S,gBAE/B,kBAACmG,GAAD,CACIC,QAASjR,KAAK7D,MAAM8U,QACpBjU,MAAOgD,KAAKhD,MACZ3D,KAAM2G,KAAK/H,MAAMoB,KACjByX,eAAgB9Q,KAAK/H,MAAM6Y,sB,GA/D3BzO,IAAMC,WAuFfC,gBAhBS,SAACpG,GACrB,MAAO,CACH8K,WAAY9K,EAAM8K,WAClB5N,KAAM8C,EAAM9C,KACZ8N,qBAAsBhL,EAAMgL,qBAC5BD,eAAgB/K,EAAM+K,mBAIJ,SAACP,GACvB,MAAO,CACHuB,qBAAsBkD,aAAmBlD,GAAsBvB,GAC/DyB,2BAA4BgD,aAAmBhD,GAA4BzB,MAIpEpE,CAA4C4O,I,iBC0N5CK,G,kDAxSX,WAAYvZ,GAAQ,IAAD,8BACf,cAAMA,IAqHVwZ,mBAAqB,SAAC5V,GAClB,EAAKC,SAAS,CAAC4V,YAAa7V,EAAME,OAAOE,SAvH1B,EA0HnBL,aAAe,SAACC,GAAW,IAAD,EACFA,EAAME,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAKH,SAAL,eAAgBE,EAAOC,KA5HR,EA8HnB0V,KAAK,WACD,IACI,GAA8B,iGAA3B,EAAKxV,MAAMuV,YAAqC,KAAM,yWACzD,GAA8B,KAA3B,EAAKvV,MAAMuV,YAAoB,KAAM,yWACxC,GAA+B,IAA3B,EAAKvV,MAAMlB,KAAKkG,OAAc,KAAM,iKACxC,IAAIjB,EAAS,GAMb,GALA,EAAK/D,MAAMgB,aAAaiE,OAAOC,KAAI,SAACoB,EAAMK,GAClCA,EAAI,GACJ5C,EAAOpC,KAAK2E,OAGQ,IAAxB,EAAKtG,MAAMyV,SAAmB,CAC9B,IAAIhB,EAAM,EAAKzU,MAAMiV,SACrBR,EAAK3V,KAAO,EAAKkB,MAAMlB,KACvB2V,EAAK1Q,OAASA,EACd0Q,EAAKC,KAAO,EAAK1U,MAAMuV,YACvBd,EAAKnQ,QAAU,EAAKtE,MAAMsE,QAC1BnF,QAAQC,IAAI,+DAAaqV,GACzB,EAAK9U,SAAS,CAACsV,SAAUR,IACzB,EAAKtW,UAAU9B,EAAQc,UAAUH,IAAI,EAAKgD,MAAMiV,SAAShU,IAAKwT,GAC9D,EAAKlE,UAAU,uKACZ,CACH,IAAIkE,EAAM,EAAKzU,MAAMiV,SACrBR,EAAK3V,KAAO,EAAKkB,MAAMlB,KACvB2V,EAAK7R,SAAW,EAAK5C,MAAMgB,aAAaC,IACxCwT,EAAKrH,SAAW,EAAKpN,MAAMgB,aAAaoM,SACxCqH,EAAKzS,UAAY,EAAKhC,MAAMgB,aAAagB,UACzCyS,EAAKxS,SAAW,EAAKjC,MAAMgB,aAAaiB,SACxCwS,EAAKrT,WAAa,EAAKpB,MAAMgB,aAAaI,WAC1CqT,EAAK1Q,OAASA,EACd0Q,EAAKC,KAAO,EAAK1U,MAAMuV,YACvBd,EAAKnQ,QAAU,EAAKtE,MAAMsE,QAC1B,EAAKxB,SAASzG,EAAQc,UAAUH,IAAKyX,GACrC,EAAKlE,UAAU,gNAErB,MAAMhR,GACJ,EAAKgR,UAAUhR,KAhKnB,EAAKS,MAAQ,CACTgB,aAAc,GACdlC,KAAM,GACNgV,UAAU,EACV2B,UAAU,EACVhI,MAAO,GACPqC,SAAS,EACT/L,OAAQ,GACRkR,SAAU,CACNlR,OAAQ,IAEZwR,YAAa,+FACbjR,SAAS,GAdE,E,gEAiBE,IAAD,OAEhBhG,MAAMjC,EAAQG,QAAQI,MAAMiH,KAAK/H,MAAMoB,KAAKkF,OACvCnD,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAA+B,GACF,EAAKrB,SAAS,CAACqB,aAAcA,EAAa,KAC1C1C,MAAMjC,EAAQc,UAAUC,WAAW4D,EAAa,GAAGC,KAC9ChC,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAwV,GACF,GAAIA,EAAKzP,OAAS,EACd7F,QAAQC,IAAIqV,GACZ,EAAK9U,SAAS,CAACsV,SAAUR,EAAK,GAAI3V,KAAK2V,EAAK,GAAG3V,KAAMwF,QAAQmQ,EAAK,GAAGnQ,QAAUmJ,MAAO,GAAIqG,UAAU,EAAMyB,YAAad,EAAK,GAAGC,KAAMe,UAAU,QAC5I,CACH,IAAIhI,EAAQ,kBAAC,IAAD,iJACZ,EAAK9N,SAAS,CAAC8N,MAAOA,EAAOqG,UAAU,a,gCAMpD7P,GAAO,IAAD,OAITJ,KAAK7D,MAAMwC,UACfqB,KAAKlE,SAAS,CAAE6C,SACR,kBAAC,IAAD,CACIa,OAAO,WACPC,QAAS,kBAAM,EAAK3D,SAAS,CAAE6C,SAAU,SAExCyB,O,kCAsHe,IAAtB7F,EAAqB,uDAAf,GAAIC,EAAW,uDAAJ,GACvB,OAAOC,MAAMF,EAAK,CACdG,OAAQ,QACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAAAC,GAAQ,OAAEA,EAASG,UACxBJ,MAAK,SAAAiC,GACF/B,QAAQC,IAAI8B,MAEf5B,OAAM,SAAAC,GAAC,OAAEJ,QAAQC,IAAIG,Q,8BAEtBgI,GACJ,GAAgB,4DAAZA,EACA,OAAOA,EAEP,IAAID,EAAO,IAAIE,KAAKD,GAChBE,EAAQH,EAAKI,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUL,EAAKM,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQP,EAAKQ,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQT,EAAKU,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAIT,EAAKW,cAAc,WAAMR,EAAM,IAAIE,I,iCAGvC,IAAD,OAArBvJ,EAAqB,uDAAf,GAAIC,EAAW,uDAAJ,GAEtBC,MAAMF,EAAK,CACPG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAAAC,GAAQ,OAAEA,EAASG,UACxBJ,MAAK,SAAAiC,GACF/B,QAAQC,IAAI8B,GACZ,EAAKvB,SAAS,CAACsV,SAAU/T,EAAQuU,UAAU,S,+BAa9C,IAAD,OACJ,OAA4B,IAAxB5R,KAAK7D,MAAM8T,SACH,kBAAC,IAAD,CAAS1P,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,MAG9C,kBAAC,IAAMsN,SAAP,KACY,kBAAC,IAAD,CACI/L,OAAO,qGACPsD,UAAU,0GACVjF,KAAK,sqCAET,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIpE,KAAM,OACN6I,IAAI,0GACJ5I,MAAO+D,KAAK7D,MAAMlB,KAClB8E,SAAUC,KAAKpE,eAEnB,kBAAC,IAAD,KAEIoE,KAAK7D,MAAMgB,aAAaiE,OAAOD,OAAS,EACxCnB,KAAK7D,MAAMgB,aAAaiE,OAAOC,KAAI,SAACoB,EAAMK,GACtC,OACI,kBAAC,IAAD,CAAMvC,KAAK,IAAIkB,IAAKqB,GAChB,yBACIzG,MAAO,CAACM,OAAQ,GAAIgF,gBAAiB,OAAOc,EAAM,IAAKb,eAAgB,eAKlF,uIAGT,kBAAC,IAAD,CAAQ3F,MAAO+D,KAAK7D,MAAMuV,YAAa3R,SAAUC,KAAKyR,mBAAoB5M,IAAI,oDAAYC,YAAY,sGAClG,4BAAQ7I,MAAM,4CAAd,4CACA,4BAAQA,MAAM,4GAAd,4GACA,4BAAQA,MAAM,0DAAd,2DAEJ,kBAAC,IAAD,CACI6O,aAAc,kBAAC,IAAD,CACV/K,SAAU,kBAAI,EAAKjE,SAAS,CAAC2E,SAAU,EAAKtE,MAAMsE,WAClDsK,QAAS/K,KAAK7D,MAAMsE,WAH5B,yKAMJ,kBAAC,IAAD,CAAQF,KAAK,KAAKnI,QAAS4H,KAAK2R,MAAhC,2DAEA,kBAAC,IAAD,CAAWtV,MAAO,CAAEmF,OAAQ,YAExBxB,KAAK7D,MAAMyV,UACX,kBAAClB,GAAD,CACIjN,KAAMzD,KAAKiE,QAAQjE,KAAK7D,MAAMiV,SAAS3N,MACvChC,IAAKzB,KAAK7D,MAAMiV,SAAShU,IACzBwT,KAAM5Q,KAAK7D,MAAMiV,SACjBN,eAAgB9Q,KAAK/H,MAAM6Y,iBAGlC9Q,KAAK7D,MAAMwC,c,GAjSV0D,IAAMC,W,8BCUrBuP,G,kDAxBX,WAAY5Z,GAAQ,IAAD,8BACf,cAAMA,IACDkE,MAAQ,GAFE,E,0LAOTc,IAAOC,KAAK,yBAA0B,IAAI9B,MAAK,SAAAZ,GAAI,OAAEc,QAAQC,IAAIf,M,gIAGlE,IAAD,OACJ,OACI,kBAAC,IAAMsT,SAAP,KACI,kBAAC,IAAD,CACI/L,OAAO,4JAEPsD,UAAU,wgCACVC,QAAS,kBAAC,IAAD,CAAQlN,QAAS,kBAAI,EAAK0Z,mBAA1B,2I,GAlBNzP,IAAMC,W,qBCGvByP,G,kDAEF,WAAY9Z,GAAQ,IAAD,8BACf,cAAMA,IACDkE,MAAQ,CACTsR,OAAQ,GACR9P,QAAQ,EACR0I,OAAQ,CACJ,CAAC3F,GAAI,IAAKpI,MAAO,0DACjB,CAACoI,GAAI,GAAIpI,MAAO,8EAGxB,EAAKyH,SAAW,EAAKA,SAAS6K,KAAd,gBAVD,E,gEAkBf5K,KAAK0N,c,kCAGI,IAAD,OACFD,EAASzN,KAAK7D,MAAMsR,OAAOE,cAEjC1Q,IAAOC,KAAK,wBAAyB,CACjC,OAAU,qBACV,OAAU,CACN,WAAc,EACd,EAAKuQ,EACL,EAAK,QACL,aAPM,6EAUTrS,MAAK,SAAAiC,GACF,EAAKvB,SAAS,CAACuK,OAAQhJ,EAAOhC,SAASuS,MAAOjQ,QAAQ,IAAO,kBAAM,EAAK1F,MAAM4V,0BAEjFpS,OAAM,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,Q,+BAGvBA,GACLsE,KAAKlE,SAAS,CAAC2R,OAAQ/R,EAAEK,OAAOE,QAChC+D,KAAK0N,c,+BAGC,IAAD,OACL,OAAyB,IAAtB1N,KAAK7D,MAAMwB,OACF,kBAAC,IAAD,CAAS4C,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,MAG9C,kBAAC,IAAD,CAAOE,GAAG,cACN,kBAAC,EAAD,CAAMpI,MAAO,sEACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAC3B,kBAAC,IAAMyV,SAAP,KACI,kBAAC,IAAD,CAAQ7R,MAAO+D,KAAK7D,MAAMsR,OAAQ1N,SAAUC,KAAKD,SAAUM,MAAO,OACjEL,KAAK7D,MAAMkK,OAAOlF,OAAS,EAC5B,kBAAC,IAAD,KACKnB,KAAK7D,MAAMkK,OAAOhF,KAAI,SAAAiF,GAAI,OACvB,kBAAC,IAAD,CACI1F,YAAa0F,EAAKyH,QAAU,GAC5B3V,QAAS,kBAAI,EAAKH,MAAM4S,WAAWvE,IACnC7E,IAAK6E,EAAK5F,IAET4F,EAAKhO,WAId,kBAAC,IAAD,CACIwJ,KAAM,kBAAC,KAAD,MACNC,OAAO,oFAFX,2Q,GApETM,IAAMC,WAiFd0L,eAAsB+D,ICgHtBC,G,kDA5LX,WAAa/Z,GAAQ,IAAD,8BAChB,cAAMA,IAwBVga,KAAO,SAACvR,EAAI7C,GACR,IAAIiJ,EAAc,EAAK3K,MAAM2K,YACzBjJ,GAAS,EACTiJ,EAAY7I,OAAOJ,EAAO,GACvBiJ,EAAY7I,OAAO,EAAGJ,GAC7B,EAAK/B,SAAS,CAACgL,YAAaA,IAC5B,IAAIpN,EAAa,CACbgH,GAAIA,EACJgJ,QAAQ,EACRwI,QAAS,IAEbzX,MAAMjC,EAAQ6B,MAAO,CACjBK,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUzB,KAEpB0B,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBC,OAAM,SAAAC,GAAC,OAAEJ,QAAQC,IAAIG,OAjDV,EAoDpByW,IAAM,SAACzR,EAAI7C,GACP,IAAIiJ,EAAc,EAAK3K,MAAM2K,YACzBjJ,GAAS,EACTiJ,EAAY7I,OAAOJ,EAAO,GACvBiJ,EAAY7I,OAAO,EAAGJ,GAC7B,EAAK/B,SAAS,CAACgL,YAAaA,IAC5B,IAAIoL,EAAU,GACdA,EAAQpU,KAAK,EAAK3B,MAAMiW,QACxB,IAAI1Y,EAAa,CACbgH,GAAIA,EACJgJ,QAAQ,EACRwI,QAASA,GAEbzX,MAAMjC,EAAQ6B,MAAO,CACjBK,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUzB,KAEpB0B,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBC,OAAM,SAAAC,GAAC,OAAEJ,QAAQC,IAAIG,OA9EV,EAiFpB2W,YAAc,aAjFM,EAqFpBC,WAAa,aAnFT,EAAKnW,MAAQ,CACT2K,YAAa,GACbyL,UAAW,UACXrR,SAAU,GACVsR,aAAc,EACdC,WAAY,GAPA,E,gEAWC,IAAD,OAChBhY,MAAMjC,EAAQ6B,OACTe,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAA0L,GACF,EAAKhL,SAAS,CAACgL,YAAaA,OAEpCrM,MAAMjC,EAAQiB,QAAQC,YACjB0B,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAA8F,GACF5F,QAAQC,IAAI2F,GACZ,EAAKpF,SAAS,CAACoF,SAAUA,S,uCAoEnB,IAAD,OACb,OAAmC,IAA/BlB,KAAK7D,MAAM+E,SAASC,OAEhB,kBAAC,IAAD,CACIW,KAAM,kBAAC,KAAD,MACNC,OAAO,uEAFX,oFAOD/B,KAAK7D,MAAM+E,SAASG,KAAI,SAAC5H,EAASoE,GACrC,OAAgB,OAAZpE,EAAyB,KAEzB,kBAAC,IAAD,CAAUgI,IAAK5D,EAAOxB,MAAO,CAACE,QAAS,IACnC,kBAAC,IAAD,CAAMgE,KAAK,IAAI5F,KAAK,UAChB,kBAAC,IAAD,CACIgW,UAAQ,EACRxO,WAAS,EACTmD,QACI,kBAAC,IAAMwI,SAAP,KACI,kBAAC,IAAD,CAAQ1V,QAAS,kBAAI,EAAKia,YAAY5Y,EAAQ,GAAG2D,IAAKS,KAAtD,oDACA,kBAAC,IAAD,CAAQzF,QAAS,kBAAI,EAAKka,WAAW7Y,EAAQ,GAAG2D,IAAKS,IAAQlD,KAAK,aAAlE,4DAIPlB,EAAQ,GAAGwB,a,sCAQnB,IAAD,OACZ,OAAqC,IAAlC+E,KAAK7D,MAAM2K,YAAY3F,OAElB,kBAAC,IAAD,CACIW,KAAM,kBAAC,KAAD,MACNC,OAAO,uEAFX,oFAOG/B,KAAK7D,MAAM2K,YAAYzF,KAAI,SAACjI,EAAQyE,GACvC,OACI,kBAAC,IAAD,CAAU4D,IAAKrI,EAAOmF,MAAOlC,MAAO,CAACE,QAAS,IAC1C,kBAAC,IAAD,CAAMgE,KAAK,IAAI5F,KAAK,UAChB,kBAAC,IAAD,CACIgW,UAAQ,EACRxO,WAAS,EACTrF,OAAQ,kBAAC,IAAD,CAAQ1E,QAAS,kBAAM,EAAKH,MAAMya,WAAWtZ,IAASkH,IAAKlH,EAAOmE,WAAYgD,KAAM,KAC5FiQ,QAASpX,EAAOmQ,SAASjD,KAAKhO,MAC9BgN,QACI,kBAAC,IAAMwI,SAAP,KACI,kBAAC,IAAD,CAAQ1V,QAAS,kBAAI,EAAK6Z,KAAK7Y,EAAOgE,IAAKS,KAA3C,sDAKPzE,EAAO+E,UAZZ,IAYwB/E,EAAOgF,iB,+BAS9C,IAAD,OACJ,OACI,kBAAC,IAAD,CAAOsC,GAAG,SACN,kBAAC,EAAD,CACIpI,MAAO,yDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAEzB,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACID,QAAS,kBAAM,EAAK0D,SAAS,CAAEyW,UAAW,aAC1CI,SAAmC,YAAzB3S,KAAK7D,MAAMoW,WAFzB,8CAMA,kBAAC,IAAD,CACIna,QAAS,kBAAM,EAAK0D,SAAS,CAAEyW,UAAW,cAC1CI,SAAmC,aAAzB3S,KAAK7D,MAAMoW,WAFzB,uEAQyB,YAAzBvS,KAAK7D,MAAMoW,UAA0BvS,KAAK4S,gBAAkB5S,KAAK6S,uB,GArLzExQ,IAAMC,WCNLwQ,G,kDACjB,WAAY7a,GAAQ,IAAD,8BACf,cAAMA,IAkEV8a,UAAY,SAAChQ,EAAQ5B,GACjB,OAAIA,EAAS,EAEL,kBAAC,IAAD,CAAK9E,MAAO,CAACmF,OAAQ,EAAGjF,QAAS,EAAGiI,SAAU,GAAIC,MAAO,YAAzD,8CACa1B,EADb,iBACyB5B,EADzB,+CAMA,kBAAC,IAAD,CAAK9E,MAAO,CAACmF,OAAQ,EAAGjF,QAAS,EAAGiI,SAAU,GAAIC,MAAO,YAAzD,4GA5EO,EAmFnBzH,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,0CACjC9B,MAAK,SAAAiC,GAAM,OAAI,EAAKpF,MAAMyU,UAAU,iOAnFzC,EAAKvQ,MAAQ,GAFE,E,gEAMfb,QAAQC,IAAIyE,KAAK/H,MAAM6O,aACvB9G,KAAKgT,SAAShT,KAAK/H,MAAM6O,YAAY3F,QACrC,IACI,GAAwB,4DAApBnB,KAAK/H,MAAMqO,KAAuB,MAAM,IAAI2M,MAAM,2DACtD,GAAsC,IAAlCjT,KAAK/H,MAAM6O,YAAY3F,OAAc,MAAM,IAAI8R,MAAM,oFAC3D,MAAOvX,GACLsE,KAAKlE,SAAS,CAAC8N,MAAOlO,O,yCAIX2H,EAAWC,EAAWC,GACrC,GAAGF,IAAcrD,KAAK/H,MAAM,CACxB+H,KAAKlE,SAAS,CAAC8N,MAAO,OACtB,IACI,GAAwB,4DAApB5J,KAAK/H,MAAMqO,KAAuB,MAAM,IAAI2M,MAAM,2DACtD,GAAsC,IAAlCjT,KAAK/H,MAAM6O,YAAY3F,OAAc,MAAM,IAAI8R,MAAM,oFAC3D,MAAOvX,GACLsE,KAAKlE,SAAS,CAAC8N,MAAOlO,Q,+BAKzBuE,QACS+J,IAAV/J,EACAD,KAAKlE,SAAS,CAACxD,MAAO,6KAEtB0H,KAAKlE,SAAS,CAACxD,MAAO,gGAAqB2H,M,sCAIlC,IAAD,OACZ,OAAOD,KAAK/H,MAAM6O,YAAYzF,KAAI,SAAAjI,GAC9B,IAAI8Z,EAAY9Z,EAAO8H,SAASG,KAAI,SAAA5H,GAChC,OAAOwJ,OAAOxJ,EAAQsJ,WAGtBA,EADMmQ,EAAUC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACzBH,EAAU/R,OAC7B,OACI,kBAAC,IAAD,CAAUM,IAAKrI,EAAOmF,OAClB,kBAAC,IAAD,CAAMgC,KAAK,IAAI5F,KAAK,UAChB,kBAAC,IAAD,CAAMoG,YAAU,EACVJ,MAAM,kEACNC,YACIxH,EAAOyP,WAAW/P,SAASuI,KAAI,SAAAvI,GAC3B,OAAOA,EAASuQ,MAAQ,OAGhCvI,cACI,EAAKiS,UAAUhQ,EAAQmQ,EAAU/R,QAErCrE,OAAQ,kBAAC,IAAD,CAAQwD,IAAKlH,EAAOmE,WAAYgD,KAAM,KAC9CA,KAAK,IACLnI,QAAS,kBAAM,EAAKH,MAAMqb,gBAAgB,aAAala,KAC3DA,EAAO+E,UAbT,IAaqB/E,EAAOgF,iB,+BA6BtC,IAAD,OACL,MAAyB,4DAArB4B,KAAK7D,MAAMyN,MAEP,kBAAC,IAAD,CACI9H,KAAM,kBAAC,KAAD,MACNC,OAAO,oCAFX,wSAOwB,qFAArB/B,KAAK7D,MAAMyN,MAEd,kBAAC,IAAD,CACI9H,KAAM,kBAAC,KAAD,MACNC,OAAO,0GACPmP,OAAQ,kBAAC,IAAD,CAAQ9Y,QAAS,kBAAM,EAAK4E,SAASuD,KAAK,KAA1C,iEAHZ,q9BAYA,kBAAC,IAAD,CAAOyB,UAAU,OAAOD,OAAQ,kBAAC,IAAD,CAAQpH,KAAK,aAAaqF,KAAK7D,MAAM7D,QAChE0H,KAAK4S,qB,GAlHevQ,IAAMC,WCF/C,SAASiR,GAAY7S,EAAGzI,GACpB,IAAIgI,EAAQ,EAMZ,OALAhI,EAAM6O,YAAYzF,KAAI,SAACjI,GACfA,EAAOyP,WAAWK,QACf9P,EAAOyP,WAAWK,OAAOzL,SAASiD,IAAMT,OAG5CA,EAGX,IA0BeuT,GA1BM,SAACvb,GAClB,GAA8B,QAA3BA,EAAM+O,eAAe5J,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEQnF,EAAM+O,eAAekC,OAAO7H,KAAI,SAAA6H,GAC5B,OACI,kBAAC,IAAD,CACI7I,MAAO,kBAAC,IAAD,CAASE,KAAK,KAAKgT,GAAYrK,EAAO9L,IAAKnF,IAClDwJ,IAAKyH,EAAO9L,IACZsD,GAAIwI,EAAO9L,IACXhF,QAASH,EAAMsS,YACfoI,SAAU1a,EAAMkR,OAAO1L,SAASyL,EAAO9L,MAEtC8L,EAAOG,aCjBtCoK,G,kDACF,WAAYxb,GAAQ,IAAD,8BACf,cAAMA,IA6BVyb,SAAW,WAC0B,KAA9B,EAAKzb,MAAM+O,eACVvM,MAAMjC,EAAQG,QAAQG,SAAS,OAAO,EAAKb,MAAMgP,WAAWvG,IACvDtF,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAA0L,GACF,EAAK7O,MAAMyP,kBAAkBZ,GAC7B,EAAKqC,YAGb1O,MAAMjC,EAAQG,QAAQG,SAAS,EAAKb,MAAM+O,eAAe5J,IAAI,IAAI,EAAKnF,MAAMgP,WAAWvG,IAClFtF,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAA0L,GACF,EAAK7O,MAAMyP,kBAAkBZ,GAC7B,EAAKqC,aA3CF,EAgDnBoB,YAAc,SAAC7O,GACX,GAAG,EAAKS,MAAMgN,OAAO1L,SAAS/B,EAAEiY,cAAcjT,IAAI,CAC9C,IAAI7C,EAAQ,EAAK1B,MAAMgN,OAAOnL,QAAQtC,EAAEiY,cAAcjT,IAClDyI,EAAS,EAAKhN,MAAMgN,OACpBtL,GAAS,EACTsL,EAAOlL,OAAOJ,EAAO,GAClBsL,EAAOlL,OAAO,EAAGJ,GACxB,EAAK/B,SAAS,CAACqN,OAAQA,IAAS,kBAAK,EAAKA,gBACvC,CACH,IAAIA,EAAS,EAAKhN,MAAMgN,OACxBA,EAAOrL,KAAKpC,EAAEiY,cAAcjT,IAC5B,EAAK5E,SAAS,CAACqN,OAAQA,IAAS,kBAAK,EAAKA,cAzD9C,EAAKhN,MAAQ,CACTwB,QAAO,EACPwL,OAAQ,IAJG,E,gEAQE,IAAD,OACsB,IAAlCnJ,KAAK/H,MAAM6O,YAAY3F,OACvBnB,KAAK0T,WAEL1T,KAAKlE,SAAS,CAAC8X,aAAc5T,KAAK/H,MAAM6O,YAAanJ,QAAQ,IAAO,WAC5D,EAAK1F,MAAM8O,mBACXoJ,OAAOkB,SAAS,EAAG,EAAKpZ,MAAM8O,wB,6CAO1C/G,KAAK/H,MAAM+P,wBAAwBmI,OAAOmB,KAAKC,e,yCAGhClO,EAAWC,EAAWC,GAAW,IAAD,OAC5CF,EAAU4D,aAAejH,KAAK/H,MAAMgP,YACnCjH,KAAKlE,SAAS,CAAC6B,QAAQ,IAAO,kBAAI,EAAK+V,gB,+BAqCrC,IAAD,OACL,GAAgC,IAA7B1T,KAAK7D,MAAMgN,OAAOhI,OACjBnB,KAAKlE,SAAS,CAAC8X,aAAc5T,KAAK/H,MAAM6O,YAAanJ,QAAQ,QAC1D,CACH,IAAIiW,EAAe5T,KAAK/H,MAAM6O,YAAYqC,QAAO,SAAA/P,GAC7C,IAAI0J,EAAI,EAQR,GAPA,EAAK3G,MAAMgN,OAAO0K,SAAQ,SAAA1K,GACtB,IAAG/P,EAAOyP,WAAWK,OAGjB,OAAO,EAFJ9P,EAAOyP,WAAWK,OAAOzL,SAAS0L,IAASrG,OAKlDA,EAAE,EAAG,OAAO,KAEpB9C,KAAKlE,SAAS,CAAC8X,aAAcA,EAAajW,QAAQ,O,+BAIhD,IAAD,SAC0BqC,KAAK/H,MAA7B+O,EADF,EACEA,eAAgB3N,EADlB,EACkBA,KACnB,OACI,kBAAC,IAAMyU,SAAP,KACI,kBAAC,IAAD,mDACA,kBAAC,GAAD,CAAUjD,WAAY,kBAAI,EAAK5S,MAAM4S,gBACrC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIhG,IAAI,0GACJC,YAAY,8KACZ1M,QAAgC,8EAAvBiB,EAAKkQ,SAASjD,KACnBtG,KAAK/H,MAAMyU,UAAU,8HACrB1M,KAAK/H,MAAM6b,gBAEjB9M,EAAeqC,OAEbrC,GAAkBhH,KAAK7D,MAAMwB,QAC7B,kBAAC,GAAD,CACIqJ,eAAgBA,EAChBF,YAAa9G,KAAK/H,MAAM6O,YACxByD,YAAa,SAAC7O,GAAD,OAAK,EAAK6O,YAAY7O,IACnCyN,OAAQnJ,KAAK7D,MAAMgN,UAK3BnJ,KAAK7D,MAAMwB,OACP,kBAAC,GAAD,CACI+O,UAAW1M,KAAK/H,MAAMyU,UACtB5F,YAAa9G,KAAK7D,MAAMyX,aACxB9a,SAAUkO,EACVV,KAAMjN,EAAKkQ,SAASjD,KACpBgN,gBAAiBtT,KAAK/H,MAAMqb,kBAEhC,kBAAC,IAAD,CAAS/S,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,W,GArHhD6B,IAAMC,WA+IbC,gBAnBS,SAACpG,GACrB,MAAO,CACH2K,YAAa3K,EAAM2K,YACnBE,eAAgB7K,EAAM6K,eACtBC,WAAY9K,EAAM8K,WAClBF,kBAAmB5K,EAAM4K,kBACzB1N,KAAM8C,EAAM9C,SAIM,SAACsN,GACvB,MAAO,CACHe,kBAAmB0D,aAAmB1D,GAAmBf,GACzDiB,qBAAsBwD,aAAmBxD,GAAsBjB,GAC/DmB,iBAAkBsD,aAAmBtD,GAAkBnB,GACvDqB,wBAAyBoD,aAAmBpD,GAAyBrB,MAI9DpE,CAA4CkR,ICpJrDM,G,kDACF,WAAY9b,GAAQ,IAAD,8BACf,cAAMA,IAUV+b,eAAiB,WACbvZ,MAAMjC,EAAQM,SAASiB,QAClBqB,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAyN,GACFA,EAAWmE,QAAQ,CAAC5P,IAAK,MAAOiM,MAAO,+HACvC,EAAKvN,SAAS,CAAC+M,WAAYA,EAAYlL,QAAQ,OAElDlC,OAAM,SAAAmO,GACHtO,QAAQC,IAAIqO,OAjBpB,EAAKzN,MAAQ,CACTwB,QAAQ,GAHG,E,gEAQfqC,KAAKgU,mB,+BAeC,IAAD,OACL,OAA0B,IAAtBhU,KAAK7D,MAAMwB,OAEP,yBAAKtB,MAAO,CAAEgI,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAShE,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,OAK9C,kBAAC,IAAD,KAEQR,KAAK7D,MAAM0M,WAAWxH,KAAI,SAAAvI,GACtB,OACI,kBAAC,IAAD,CACI2I,IAAK3I,EAASsE,IACdhF,QAAS,kBAAI,EAAKH,MAAMgc,YAAYnb,IACpCgS,aAAc,EAAK7S,MAAM+O,iBAAmBlO,EACxC,kBAAC,KAAD,CAAY8D,KAAK,kBAAoB,MAExC9D,EAASuQ,e,GA3CjBhH,IAAMC,WA4DpBC,gBANS,SAACpG,GACrB,MAAO,CACH6K,eAAgB7K,EAAM6K,kBAIfzE,CAAyBwR,ICCzBG,G,kDA7DX,WAAYjc,GAAQ,IAAD,8BACf,cAAMA,IACDkE,MAAQ,GAFE,E,qDAQf,OACI,kBAAC,IAAD,CAAKE,MAAO,CAACoI,MAAO,SAApB,iGAEQ,6BAFR,mSAGQ,6BAHR,g2DAIQ,6BAJR,04BAKQ,6BALR,48BAMQ,6BANR,4jBAOI,6BACA,6BACI,6BATR,+EAUQ,6BAVR,woCAWI,6BACA,6BACI,6BAbR,mJAcQ,6BAdR,m/CAeQ,6BAfR,q4FAgBQ,6BAhBR,01BAiBQ,6BAjBR,ygGAkBQ,6BAlBR,yxCAmBQ,6BAnBR,+8CAoBI,6BACA,6BACI,6BAtBR,qLAuBQ,6BAvBR,whEAwBQ,6BAxBR,opEAyBQ,6BAzBR,g/EA0BQ,6BA1BR,u9BA2BQ,6BA3BR,s/CA4BQ,6BA5BR,ygCA6BI,6BACA,6BACI,6BA/BR,wJAgCQ,6BAhCR,6yCAiCQ,6BAjCR,mxCAkCQ,6BAlCR,q3EAmCQ,6BAnCR,wpFAoCQ,6BApCR,mqCAqCQ,6BArCR,i1BAsCI,6BACA,6BACI,6BAxCR,iJAyCQ,6BAzCR,kwBA0CQ,6BA1CR,gwBA2CQ,6BA3CR,gpCA4CQ,6BA5CR,q4DA6CQ,6BA7CR,42CA8CQ,6BA9CR,wrC,GAVQpC,IAAMC,WCuCpB6R,GAAKlJ,EAAQ,KACbmJ,GAASnJ,EAAQ,KAEjBoJ,G,kDACF,WAAYpc,GAAQ,IAAD,8BACf,cAAMA,IAqEVqc,WAAa,WACL,IAAMC,EAAW,YAAO,EAAKpY,MAAMoY,aACnCA,EAAYC,MACZ,IAAMC,EAAkBF,EAAYA,EAAYpT,OAAS,GACjC,SAApBsT,GACAxX,IAAOC,KAAK,4BAEhB,EAAKpB,SAAS,CAAEyY,cAAaE,qBA7ElB,EAgFnBC,cAAgB,SAACD,GACb,IAAMF,EAAW,YAAO,EAAKpY,MAAMoY,aACnCA,EAAYzW,KAAK2W,GACkB,SAA/B,EAAKtY,MAAMsY,iBACXxX,IAAOC,KAAK,2BAEhB,EAAKpB,SAAS,CAAEyY,cAAaE,qBAtFd,EAyFnBE,aAAe,SAAC1a,GACZ,IAAM2a,EAAY3a,EACZ4a,EAAU,GAChBC,OAAOC,KAAKH,GAAWlO,OAAOmN,SAAQ,SAACpS,GACZ,QAAnBA,EAAI4I,MAAM,EAAE,KACZwK,EAAQpT,GAAOmT,EAAUnT,OAIjC,IAAMrH,EAAY5B,EAAQ4B,UACpB4a,EAAeb,GAAGhZ,UAAU0Z,GAC5BI,EAAab,GACdc,WAAW,SAAU9a,GACrB+a,OAAOH,GACPI,SACAC,SAAS,UACTzQ,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,KAAM,IACnBtJ,QAAQC,IAAI,oGAAqB0Z,IAAeL,EAAUU,MAC1D,EAAKxZ,SAAS,CAACyZ,kBAAmBN,IAAeL,EAAUU,QA7G5C,EAiHnBE,iBAAmB,SAACC,GACfhb,MAAMjC,EAAQC,MAAQ,UAAYgd,EAAO/U,IACrCtF,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAsa,GACF,GAAwB,IAApBA,EAASvU,OAAc,CACvB,IAAM9H,EAAO,CACTkF,MAAOkX,EAAO/U,GACdvC,UAAWsX,EAAOE,WAClBvX,SAAUqX,EAAOG,UACjBrY,WAAYkY,EAAOI,UACnBvM,IAAKmM,EAAOnM,IACZC,SAAU,CACNC,QAASiM,EAAOjM,SAAW,sEAC3BlD,KAAMmP,EAAOnP,MAAQ,uEAEzBR,UAAU,EACV5M,KAAM,GACNe,OAAQ,EAAKhC,MAAMgC,QAEvBQ,MAAMjC,EAAQC,MAAO,CACjBiC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CAAC,eAAgB,oBAC1BC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU9B,KAEpB+B,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAA0a,GACF,EAAK7d,MAAMwP,UAAUqO,MAExBra,OAAM,SAACC,GAAD,OAAK,EAAKgR,UAAUhR,EAAEhD,iBAE7B,EAAKyD,MAAMoZ,oBACkB,IAAzBG,EAAS,GAAG5P,UACZrL,MAAMjC,EAAQG,QAAQI,MAAQ2c,EAAS,GAAGnX,OACrCnD,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAhC,GACF,GAAsB,IAAlBA,EAAO+H,OAEP,OADA7F,QAAQC,IAAI,6EACL,KAEP,EAAKtD,MAAMsP,UAAUnO,EAAO,OAI5C,EAAKnB,MAAMwP,UAAUiO,EAAS,KAE9B,EAAKhJ,UAAU,+JAI1BjR,OAAM,SAAAmO,GACH,EAAK8C,UAAU,yPACfpR,QAAQC,IAAIqO,OAzKL,EA+LnBD,SAAW,SAACvQ,GACRqB,MAAMjC,EAAQG,QAAQC,IAAK,CACvB8B,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CAAC,eAAgB,oBAC1BC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU/B,KAEpBgC,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAA2a,GACF,EAAK9d,MAAMsP,UAAUwO,GACrB,EAAKja,SAAS,CAACka,aAAc,OAC7B,EAAKtJ,UAAU,2mBACf,EAAKxO,YAAY,ukDAExBzC,OAAM,SAAAC,GACHJ,QAAQC,IAAIG,GACZ,EAAKgR,UAAUhR,EAAEhD,aAnNN,EAwNnBwF,YAAc,SAACxF,GACX,IAAI8F,EAAQhG,EAAQ2B,SACpB8C,IAAOC,KAAK,wBAAyB,CACjC,OAAU,gBACV,OAAU,CAAC,UAAauB,KAAKC,SAAU,QAAW,aAAc,QAAW,EAAKzG,MAAMoB,KAAKkF,MAAM,QAAW7F,EAAS,EAAI,QAAS,aAAgB8F,KACjJpD,MAAK,SAAAiC,GAAM,OAAI/B,QAAQC,IAAI8B,MAC3B5B,OAAM,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,OA9Nb,EAiOnB4X,gBAAkB,SAAC2C,EAAW7c,GAC1B,EAAKnB,MAAMqQ,4BAA4BlP,GACvC,EAAK0C,SAAS,CAACoa,mBAAoBD,KAnOpB,EAsOnBnF,eAAiB,SAAC/R,GACdtE,MAAMjC,EAAQG,QAAQE,KAAOkG,GACxB3D,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAhC,GACF,EAAKnB,MAAMuQ,+BAA+BpP,GAC1C,EAAK0C,SAAS,CAACqa,sBAAuB,mBA3O/B,EA+OnBC,iBAAmB,SAACrX,GAChB,EAAKjD,SAAS,CAACuR,eAAgBtO,EAASsX,YAAa,UAAUC,kBAAmB,cAAcJ,mBAAoB,eACpH5a,QAAQC,IAAIwD,IAjPG,EAoPnB0R,kBAAoB,SAAC1R,GACjBtE,MAAMjC,EAAQG,QAAQE,KAAOkG,GACxB3D,MAAK,SAAAqL,GAAG,OAAIA,EAAIjL,UAChBJ,MAAK,SAAAhC,GACF,EAAKnB,MAAMwQ,yBAAyBrP,GACpC,EAAK0C,SAAS,CAACya,cAAe,mBAzPvB,EA6PnBL,mBAAqB,SAACla,GAClB,EAAKF,SAAS,CAACoa,mBAAoBla,IACnCV,QAAQC,IAAI,EAAKY,MAAM+Z,qBA/PR,EAkQnBM,UAAY,SAACC,GACT,EAAK3a,SAAS,CAACua,YAAaI,KAhQ5B,EAAKta,MAAQ,CACTuS,OAAQ,KACR2H,YAAa,OACbF,sBAAuB,YACvBD,mBAAoB,cACpB7I,eAAgB,GAChBiJ,kBAAmB,cACnBN,aAAc,KACdO,cAAe,KACfG,eAAgB,eAChBC,WAAY,GACZC,WAAY,GACZtH,YAAa,KACbuH,aAAc,GACd5P,WAAY,0DACZ6P,YAAa,QACbC,OAAQ,eACRtC,gBAAiB,OACjBF,YAAa,CAAC,QACdgB,mBAAmB,GAGvB,EAAKyB,cAAgB,EAAKA,cAAcpM,KAAnB,gBACrB,EAAKyE,UAAY,WACb,EAAK4H,eAAe,EAAK9a,MAAM0a,aAAa,EAAK1a,MAAM0a,aAAa1V,OAAS,KA3BlE,E,gEAgCE,IAAD,OACZnB,KAAK/H,MAAMgC,SACX+F,KAAK2U,aAAa3U,KAAK/H,MAAMgC,QAC7B+F,KAAK/H,MAAMyQ,mBAAmB1I,KAAK/H,MAAMgC,SAiB7CgD,IAAOC,KAAK,sBAAuB,IAC9B9B,MAAK,SAAAZ,GAAI,OAAI,EAAKgb,iBAAiBhb,MACnCiB,OAAM,SAAAC,GAAC,OAAE,EAAKgR,UAAUhR,MAM7BuB,IAAOia,WAAU,YAAgC,IAAD,IAA5BC,OAAUvX,EAAkB,EAAlBA,KAAMpF,EAAY,EAAZA,KACnB,yBAAToF,GACA,EAAK9D,SAAS,CAACib,OAAQvc,EAAKuc,YAGpC5G,OAAOiH,WAAa,WAChBjH,OAAOC,QAAQE,UAAU,KAAM,S,gCA2G7BlQ,GAAO,IAAD,OAIRJ,KAAK7D,MAAMwC,UAAUqB,KAAKlE,SAAS,CAAC6C,SAAU,OAClDqB,KAAKlE,SAAS,CACV6C,SACI,kBAAC,IAAD,CACIa,OAAO,WACPC,QAAS,kBAAM,EAAK3D,SAAS,CAAC6C,SAAU,QACxC7B,OAAQ,kBAAC,IAAD,CAAQyD,KAAM,GAAIlE,MATf,CACnBuJ,gBAAiB,kBAQwC,kBAAC,IAAD,CAAYhJ,KAAK,OAAOF,MAAO,GACnBC,OAAQ,OAEpEyD,O,oCA4EH1E,GACVsE,KAAKlE,SAAS,CAACua,YAAa3a,EAAEiY,cAAc0D,QAAQC,U,uCAGvChR,GACb,IAAIjN,EAAO2G,KAAK/H,MAAMoB,KACtBA,EAAKkQ,SAASjD,KAAOA,EACrBtG,KAAK/H,MAAM6P,iBAAiBxB,GAC5BjN,EAAKY,OAAS+F,KAAK/H,MAAMgC,OACzBK,EAAU9B,EAAQC,MAAM,IAAIY,EAAK+D,IAAK/D,GACtC2G,KAAKiX,eAAe,Q,+BAGd,IAAD,SACuBjX,KAAK/H,MAA1BoB,EADF,EACEA,KACP,OAAoB,IAFf,EACQwN,YAGL,kBAAC,IAAD,CAAgBkQ,OAAQ/W,KAAK7D,MAAM4a,QAC/B,kBAAC,IAAD,CAAMrW,GAAG,OAAO6W,YAAY,QACxB,kBAAC,IAAD,CAAO7W,GAAG,QACN,kBAAC,IAAD,CACIwK,WAAS,EACTpJ,KAAM,kBAAC,IAAD,CAASvB,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,MAChDuB,OAAO,kGAHX,qLAKK/B,KAAK7D,MAAMwC,cAMC,IAAjCqB,KAAK7D,MAAMoZ,kBAEP,kBAAC,IAAD,CAAgBwB,OAAQ/W,KAAK7D,MAAM4a,QAC/B,kBAAC,IAAD,CAAMrW,GAAG,OAAO6W,YAAY,QACxB,kBAAC,IAAD,CAAO7W,GAAG,QACN,kBAAC,IAAD,CACIoB,KAAM,kBAAC,IAAD,CAASvB,KAAK,QAAQlE,MAAO,CAAEmE,UAAW,OADpD,+NAYZ,kBAAC,IAAD,CAAgBuW,OAAQ/W,KAAK7D,MAAM4a,QACnC,kBAAC,IAAD,CAAMV,YAAarW,KAAK7D,MAAMka,YAAamB,OACvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIpf,QAAS4H,KAAKgX,cACdrE,SAAqC,SAA3B3S,KAAK7D,MAAMka,YACrBoB,aAAW,OACXrX,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACIhI,QAAS4H,KAAKgX,cACdrE,SAAqC,YAA3B3S,KAAK7D,MAAMka,YACrBoB,aAAW,UACXrX,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACIhI,QAAS4H,KAAKgX,cACdrE,SAAqC,cAA3B3S,KAAK7D,MAAMka,YACrBoB,aAAW,YACXrX,KAAK,2DACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACIhI,QAAS4H,KAAKgX,cACdrE,SAAqC,OAA3B3S,KAAK7D,MAAMka,YACrBoB,aAAW,KACXrX,KAAK,8CACR,kBAAC,IAAD,SAGL,kBAAC,IAAD,CAAMM,GAAG,OAAO0P,QAASpQ,KAAK7D,MAAMoY,YAAagD,YAAavX,KAAK7D,MAAMsY,gBAAiBiD,YAAa,kBAAM,EAAKpD,eAC1G,kBAAC,GAAD,CACI5T,GAAG,OACHzG,OAAQ+F,KAAK/H,MAAMgC,OACnB+L,QAAS,kBAAM,EAAKlK,SAAS,CAACka,aAAc,eAAgBK,YAAa,QACzEG,UAAWxW,KAAKwW,UAChBnd,KAAM2G,KAAK/H,MAAMoB,KACjB0M,UAAW,kBAAM,EAAK2O,cAAc,YAExC,kBAAC,GAAD,CACIhU,GAAG,QACHrI,OAAQ,kBAAM,EAAKic,cACnBjb,KAAM2G,KAAK7D,MAAM9C,KACjBqZ,WAAY,SAACtZ,GACT,EAAK0C,SAAS,CAACqB,aAAc/D,IAC7B,EAAKsb,cAAc,iBAG3B,kBAAC,IAAD,CAAOhU,GAAG,cACN,kBAAC,EAAD,CACIrI,OAAQ,kBAAM,EAAKic,cACnBzS,UAAW,iBAAM,QACjBb,aAAc,iBAAM,QACpB7D,aAAc6C,KAAK7D,MAAMgB,aACzBwa,gBAAiB,SAACve,GAAD,OAAU,EAAK0C,SAAS,CAACqB,aAAc/D,SAIxE,kBAAC,IAAD,CAAMsH,GAAG,UAAUkX,WAAY5X,KAAK7D,MAAMma,mBACtC,kBAAC,IAAD,CAAM5V,GAAG,cAAc6W,YAAavX,KAAK7D,MAAM+Z,oBAC3C,kBAAC,IAAD,CAAOxV,GAAG,eACN,kBAAC,GAAD,CACImK,WAAY,kBAAI,EAAK/O,SAAS,CAACoa,mBAAoB,gBACnDxJ,UAAW,SAACpU,GAAD,OAAS,EAAKoU,UAAUpU,IACnCwb,eAAgB,kBAAI,EAAKhY,SAAS,CAACoa,mBAAoB,eAEvD5C,gBAAiBtT,KAAKsT,kBAEzBtT,KAAK7D,MAAMwC,UAEhB,kBAAC,GAAD,CACQ+B,GAAG,aACHrI,OAAQ,kBAAM,EAAKyD,SAAS,CAACoa,mBAAoB,iBACjDrL,WAAY,SAACvE,GACb,EAAKwB,iBAAiBxB,GACtB,EAAKxK,SAAS,CAACoa,mBAAoB,mBAG3C,kBAAC,IAAD,CAAOxV,GAAG,cACN,kBAAC,EAAD,CACIA,GAAG,aACHrI,OAAQ,kBAAM,EAAKyD,SAAS,CAACoa,mBAAoB,iBAEjDrU,UAAW,kBAAM,EAAK/F,SAAS,CAACoa,mBAAoB,iBACpDlV,aAAc,kBAAM,EAAKlF,SAAS,CAACoa,mBAAoB,oBACvD/Y,aAAc6C,KAAK/H,MAAMmP,yBAKjC,kBAAC,IAAD,CAAO1G,GAAG,eACN,kBAAC,EAAD,CACIpI,MAAO,yDACPD,OAAQ,kBAAM,EAAKyD,SAAS,CAACoa,mBAAoB,kBAErD,kBAAC,EAAD,CACI7d,OAAQ,kBAAM,EAAKyD,SAAS,CAACoa,mBAAoB,gBACjD/Y,aAAc6C,KAAK/H,MAAMmP,yBAIjC,kBAAC,IAAD,CAAO1G,GAAG,kBACN,kBAAC,EAAD,CACIpI,MAAO,uCACPD,OAAQ,kBAAM,EAAKyD,SAAS,CAACoa,mBAAoB,kBAErD,kBAAC,GAAD,CACI7d,OAAQ,kBAAM,EAAKyD,SAAS,CAACoa,mBAAoB,gBACjD/Y,aAAc6C,KAAK/H,MAAMmP,yBAIjC,kBAAC,IAAD,CAAO1G,GAAG,aACN,kBAAC,IAAD,8FACA,kBAAC,IAAD,KACI,kBAAC,GAAD,CACIuT,YAAa,SAACnb,GACV,EAAKb,MAAM2P,qBAAqB9O,GAChC,EAAKgD,SAAS,CAACoa,mBAAoB,uBAoB3D,kBAAC,IAAD,CACIxV,GAAG,YACH6W,YAAavX,KAAK7D,MAAMga,uBAExB,kBAAC,IAAD,CAAOzV,GAAG,aACN,kBAAC,IAAD,gEACA,kBAAC,GAAD,CACIoQ,eAAgB,SAAC/R,GAAD,OAAY,EAAK+R,eAAe/R,IAChD8L,WAAY,kBAAM,EAAK/O,SAAS,CAACqa,sBAAuB,mBAGhE,kBAAC,GAAD,CACQzV,GAAG,aACHrI,OAAQ,kBAAM,EAAKyD,SAAS,CAACqa,sBAAuB,eACpDtL,WAAY,SAACvE,GACb,EAAKxK,SAAS,CAACqa,sBAAuB,cACtC,EAAKrO,iBAAiBxB,MAG9B,kBAAC,IAAD,CAAO5F,GAAG,cACN,kBAAC,EAAD,CACIA,GAAG,aACHrI,OAAQ,kBAAM,EAAKyD,SAAS,CAACqa,sBAAuB,eACpDtU,UAAW,kBAAM,EAAK/F,SAAS,CAACqa,sBAAuB,iBACvDhZ,aAAc6C,KAAK/H,MAAMoP,yBACzBrG,aAAc,kBAAM,EAAKlF,SAAS,CAACqa,sBAAuB,uBAIlE,kBAAC,IAAD,CAAOzV,GAAG,eACN,kBAAC,EAAD,CACIpI,MAAO,yDACPD,OAAQ,kBAAM,EAAKyD,SAAS,CAACqa,sBAAuB,kBAExD,kBAAC,EAAD,CACI9d,OAAQ,kBAAM,EAAKyD,SAAS,CAACqa,sBAAuB,gBACpDhZ,aAAc6C,KAAK/H,MAAMoP,4BAIjC,kBAAC,IAAD,CAAO3G,GAAG,kBACN,kBAAC,EAAD,CACIpI,MAAO,uCACPD,OAAQ,kBAAM,EAAKyD,SAAS,CAACqa,sBAAuB,kBAExD,kBAAC,GAAD,CACI9d,OAAQ,kBAAM,EAAKyD,SAAS,CAACqa,sBAAuB,gBACpDhZ,aAAc6C,KAAK/H,MAAMoP,6BAMrC,kBAAC,IAAD,CAAM3G,GAAG,KAAKkX,WAAY5X,KAAK7D,MAAM6Z,cACjC,kBAAC,IAAD,CAAMtV,GAAG,KAAK6W,YAAavX,KAAK7D,MAAMoa,cAAe7H,OAAQ1O,KAAK7D,MAAMuS,OAAQmJ,MAC5E,kBAAC,GAAD,CACIlZ,SAAU,SAACjG,GAAD,OAAa,EAAKgU,UAAUhU,IACtC2W,UAAWrP,KAAKqP,UAChBC,YAAatP,KAAK7D,MAAMmT,YACxBf,YAAa,SAACvS,GAAD,OAAU,EAAKib,eAAejb,OAG/C,kBAAC,IAAD,CAAO0E,GAAG,MACN,kBAAC,IAAD,CAAasB,WAAW,GAAxB,8CACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI5J,QAAS,kBAAM,EAAK0D,SAAS,CAAEgb,YAAa,WAC5CnE,SAAqC,UAA3B3S,KAAK7D,MAAM2a,aAFzB,mFAMA,kBAAC,IAAD,CACI1e,QAAS,kBAAM,EAAK0D,SAAS,CAAEgb,YAAa,cAC5CnE,SAAqC,aAA3B3S,KAAK7D,MAAM2a,aAFzB,2DAOJ,kBAAC,IAAD,MAE+B,UAA3B9W,KAAK7D,MAAM2a,YACP,kBAAC,GAAD,CACI1d,OAAQ4G,KAAK/H,MAAMmB,OACnBC,KAAMA,EACNwS,YAAa,kBAAM,EAAKoL,eAAe,YACvCnL,cAAe,kBAAM,EAAKhQ,SAAS,CAACya,cAAe,eACnDvK,cAAe,kBAAM,EAAKlQ,SAAS,CAACya,cAAe,eACnDxK,gBAAiB,kBAAM,EAAKjQ,SAAS,CAACya,cAAe,eACrDna,YAAa4D,KAAK/H,MAAMgC,OAAOuM,iBAEnC,kBAAC,GAAD,MAEPxG,KAAK7D,MAAMwC,UAEhB,kBAAC,IAAD,CAAO+B,GAAG,aACN,kBAAC,EAAD,CACIpI,MAAM,yDACND,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,UAEhD,kBAAC,GAAD,CACIle,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,QAC5Cld,KAAMA,EACNoX,kBAAmBzQ,KAAKyQ,qBAGhC,kBAAC,IAAD,CAAO/P,GAAG,cACN,kBAAC,EAAD,CACIA,GAAG,aACHrI,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,eAC5C1U,UAAW,kBAAM,EAAK/F,SAAS,CAACya,cAAe,iBAC/Cld,KAAMA,EACN8D,aAAc6C,KAAK/H,MAAMqP,mBACzBtG,aAAc,kBAAM,EAAKlF,SAAS,CAACya,cAAe,oBAClDoB,gBAAiB,SAACve,GAAD,OAAU,EAAK0C,SAAS,CAACqB,aAAc/D,QAGhE,kBAAC,IAAD,CAAOsH,GAAG,eACN,kBAAC,EAAD,CACIpI,MAAO,yDACPD,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,kBAEhD,kBAAC,EAAD,CACIle,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,gBAC5CpZ,aAAc6C,KAAK/H,MAAMqP,sBAIjC,kBAAC,IAAD,CAAO5G,GAAG,aACN,kBAAC,EAAD,CACIpI,MAAO,yDACPD,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,UAEhD,kBAAC,GAAD,CACIle,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,QAC5Cld,KAAMA,KAGd,kBAAC,IAAD,CAAOqH,GAAG,kBACN,kBAAC,EAAD,CACIpI,MAAM,uCACND,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,kBAEhD,kBAAC,GAAD,CACIle,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,gBAC5Cld,KAAMA,EACN8D,aAAc6C,KAAK/H,MAAMqP,sBAIjC,kBAAC,IAAD,CAAO5G,GAAG,aACN,kBAAC,EAAD,CACIpI,MAAM,0DACND,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,UAEhD,kBAAC,GAAD,CACIle,OAAQ,kBAAM,EAAKyD,SAAS,CAACya,cAAe,QAC5Cld,KAAMA,EAAMqV,OAAQ1O,KAAK8X,cAIrC,kBAAC,IAAD,CAAMP,YAAavX,KAAK7D,MAAMua,eAAgBhW,GAAG,gBAC7C,kBAAC,IAAD,CAAOA,GAAG,gBACN,kBAAC,EAAD,CACIpI,MAAO,qEACPD,OAAQ,kBAAM,EAAKyD,SAAS,CAACka,aAAc,UAE/C,kBAAC,GAAD,CACI3d,OAAQ,kBAAM,EAAKyD,SAAS,CAACka,aAAc,QAC3CrM,SAAU3J,KAAK2J,SACfkB,WAAY,kBAAM,EAAK/O,SAAS,CAAC4a,eAAgB,gBACjDvL,UAAW,kBAAM,EAAKrP,SAAS,CAAC4a,eAAgB,WAChD/X,SAAU,SAACjG,GAAD,OAAa,EAAKgU,UAAUhU,MAEzCsH,KAAK7D,MAAMwC,UAEhB,kBAAC,IAAD,CAAO+B,GAAG,SACN,kBAAC,EAAD,CACIpI,MAAM,+DACND,OAAQ,kBAAM,EAAKyD,SAAS,CAAC4a,eAAgB,oBAEjD,kBAAC,GAAD,CACIre,OAAQ,kBAAM,EAAKyD,SAAS,CAAC4a,eAAgB,qBAGrD,kBAAC,GAAD,CACQhW,GAAG,aACHrI,OAAQ,kBAAM,EAAKyD,SAAS,CAAC4a,eAAgB,kBAC7C7L,WAAY,SAACvE,GACb,EAAKwB,iBAAiBxB,GACtB,EAAKxK,SAAS,CAAC4a,eAAgB,4B,GA7nBjDrU,IAAMC,WA4qBTC,gBAnCS,SAACpG,GACrB,MAAO,CACH2K,YAAa3K,EAAM2K,YACnBE,eAAgB7K,EAAM6K,eACtBC,WAAY9K,EAAM8K,WAClBF,kBAAmB5K,EAAM4K,kBACzBG,eAAgB/K,EAAM+K,eACtBC,qBAAsBhL,EAAMgL,qBAC5B9N,KAAM8C,EAAM9C,KACZwN,YAAa1K,EAAM0K,YACnBzN,OAAQ+C,EAAM/C,OACdgO,sBAAuBjL,EAAMiL,sBAC7BC,yBAA0BlL,EAAMkL,yBAChCC,mBAAoBnL,EAAMmL,uBAIR,SAACX,GACvB,MAAO,CACHe,kBAAmB0D,aAAmB1D,GAAmBf,GACzDiB,qBAAsBwD,aAAmBxD,GAAsBjB,GAC/DmB,iBAAkBsD,aAAmBtD,GAAkBnB,GACvDqB,wBAAyBoD,aAAmBpD,GAAyBrB,GACrEuB,qBAAsBkD,aAAmBlD,GAAsBvB,GAC/DyB,2BAA4BgD,aAAmBhD,GAA4BzB,GAC3Ec,UAAW2D,aAAmB3D,GAAWd,GACzCY,UAAW6D,aAAmB7D,GAAWZ,GACzC2B,4BAA6B8C,aAAmB9C,GAA6B3B,GAC7E6B,+BAAgC4C,aAAmB5C,GAAgC7B,GACnF8B,yBAA0B2C,aAAmB3C,GAA0B9B,GACvE+B,mBAAoB0C,aAAmB1C,GAAoB/B,MAKpDpE,CAA4C8R,IC/sBvC0D,QACW,cAA7B5H,OAAO5G,SAASyO,UAEe,UAA7B7H,OAAO5G,SAASyO,UAEhB7H,OAAO5G,SAASyO,SAASC,MACvB,2DCRN,IAAMC,GAAQC,cvBmBa,WAAmC,IAAlChc,EAAiC,uDAAzByK,GAAcsK,EAAW,uCAEzD,OAAQA,EAAOtR,MACX,IAhCkC,6BAiC9B,OAAO,6BAAIzD,GAAX,IAAkB2K,YAAaoK,EAAO1J,UAC1C,IAjCqC,gCAkCjC,OAAO,6BAAIrL,GAAX,IAAkB6K,eAAgBkK,EAAO1J,QAASV,YAAa,KACnE,IAlCiC,4BAmC7B,IAAI+D,EAAa1O,EAAM9C,KAEvB,OADAwR,EAAWtB,SAASjD,KAAO4K,EAAO1J,QAC3B,6BAAIrL,GAAX,IAAkB8K,WAAYiK,EAAO1J,QAASV,YAAa,GAAII,eAAgB,GAAI7N,KAAMwR,IAC7F,IArCwC,mCAsCpC,OAAO,6BAAI1O,GAAX,IAAkB4K,kBAAmBmK,EAAO1J,UAChD,IAtCqC,gCAuCjC,OAAO,6BAAIrL,GAAX,IAAkB+K,eAAgBgK,EAAO1J,UAC7C,IAvCuC,kCAwCnC,OAAO,6BAAIrL,GAAX,IAAkBgL,qBAAsB+J,EAAO1J,UACnD,IArCkB,aAsCd,OAAO,6BAAIrL,GAAX,IAAkB0K,aAAa,EAAMxN,KAAM6X,EAAO1J,QAASP,WAAWiK,EAAO1J,QAAQ+B,SAASjD,OAClG,IAtCkB,aAuCd,IAAI8R,EAAiBjc,EAAM9C,KAE3B,OADA+e,EAAetS,UAAW,EACnB,6BAAI3J,GAAX,IAAkB/C,OAAQ8X,EAAO1J,QAASnO,KAAM+e,IACpD,IA9C8C,yCA+C1C,OAAO,6BAAIjc,GAAX,IAAkBiL,sBAAuB8J,EAAO1J,UACpD,IA/CiD,4CAgD7C,OAAO,6BAAIrL,GAAX,IAAkBkL,yBAA0B6J,EAAO1J,UACvD,IAhD2C,sCAiDvC,OAAO,6BAAIrL,GAAX,IAAkBmL,mBAAoB4J,EAAO1J,UACjD,IA/CyB,oBAgDrB,OAAO,6BAAIrL,GAAX,IAAkBlC,OAAQiX,EAAO1J,UAEzC,OAAOrL,KuBjDXc,IAAOC,KAAK,eAAgB,IAE5B,IAAImb,GAAclI,OACb5G,SACA+O,KACA1T,QAAQ,IAAI,IACZ2T,MAAM,KACNpF,QACG,SAASqF,EAAE9c,GACP,IAAI0X,EAAI1X,EAAE6c,MAAM,KAEhB,OADAC,EAAGC,mBAAmBrF,EAAE,KAAOqF,mBAAmBrF,EAAE,IAC7CoF,IAEX,IAEJve,GAASkW,OACR5G,SACAkE,OACA7I,QAAQ,IAAI,IACZ2T,MAAM,KACNpF,QACG,SAASqF,EAAE9c,GACP,IAAI0X,EAAI1X,EAAE6c,MAAM,KAEhB,OADAC,EAAGC,mBAAmBrF,EAAE,KAAOqF,mBAAmBrF,EAAE,IAC7CoF,IAEX,IAGRE,IAASC,OAAO,kBAAC,IAAD,CAAUT,MAAOA,IACb,kBAAC,GAAD,CAAKG,WAAYA,GAAYpe,OAAQA,MAC5BoS,SAASC,eAAe,SDsF/C,kBAAmBsM,WACrBA,UAAUC,cAAcC,MAAM1d,MAAK,SAAA2d,GACjCA,EAAaC,kB","file":"static/js/main.f8690767.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";","import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    keyGroup: 'f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf', //'17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b'\r\n    secretKey: 'eb8wUDGs1LQoSKPsIS9i',\r\n    moder: BACK_LINK+'masters/moderation'\r\n};","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, FormLayout, RichCell, CellButton, Placeholder, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline';\r\nimport Head from \"../elements/panelHeader\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props.activeMaster);\r\n       this.setState({activeMaster: this.props.activeMaster}, ()=> this.loadFavs())\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            patchData(BACKEND.users+'/'+this.state.user._id, this.state.user);\r\n            if (this.state.isFavourite === true) {\r\n                let count = {count: 1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //прибавляем счетчик мастера\r\n            } else {\r\n                let count = {count: -1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //убавляем счетчик\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.getPhone(title)}\r\n                mode=\"outline\"\r\n            >\r\n                Записаться\r\n            </Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = BACKEND.keyGroup;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number});\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Cell>Мастер скрыт</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                    ?\r\n                                    <Cell before={<Icon20UserOutline />}>Да, это Вы</Cell>\r\n                                    :\r\n                                    <Cell>\r\n                                        {this.favStatus()}\r\n                                        <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                    </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}\r\n                            description={'Подписчиков: ' + this.state.countFavs}\r\n                        >\r\n                            Отзывы\r\n                        </Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Div>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Div> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <div>\r\n                                                            <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                        </div>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersCard);","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport {connect} from \"react-redux\";\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars();\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({commentsArr: this.props.activeMaster.comments, countComments: count, isLoad: true});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = [];\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            }\r\n        }\r\n        this.setState({stars: stars});\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера';\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body,\r\n                moderation: false,\r\n                params: this.props.params\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n            this.setState({isCommended: true});\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Комментарий отправлен на проверку\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.setState({ snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                        >\r\n                            Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                        </Snackbar>\r\n                });\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={comment.rating+` из 5`}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        {/*<Slider*/}\r\n                        {/*    step={1}*/}\r\n                        {/*    min={1}*/}\r\n                        {/*    max={5}*/}\r\n                        {/*    value={Number(this.state.rating)}*/}\r\n                        {/*    onChange={rating=>this.setState({rating})}*/}\r\n                        {/*    top={\"Моя оценка работы мастера: \"+this.state.rating}*/}\r\n                        {/*    bottom='Перемещайте ползунок влево или вправо для изменения оценки'*/}\r\n                        {/*/>*/}\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/ /g, \"\").length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers, countCities: data.countCities, cities: data.cities.sort()})\r\n            });\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранные</Button>}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"groups.isMember\",\r\n            \"params\": {\"group_id\": \"193179174\",\"user_id\": this.props.user.vkUid, \"v\":\"5.103\", \"access_token\": BACKEND.keyGroup}})\r\n            .then(result => {\r\n                if (result.response === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {user.isMaster === false &&\r\n                    <Cell\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы - мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <div>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        <Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>\r\n                        <Cell multiline>\r\n                            {\r\n                                this.state.cities &&\r\n                                this.state.cities.map(city=>{\r\n                                    return city+' '\r\n                                })\r\n                            }\r\n                        </Cell>\r\n                    </div>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                    <Group>\r\n                        <Placeholder\r\n                            icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                            header=\"Привет!\"\r\n                        >\r\n                            У нас ты можешь найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                        </Placeholder>\r\n                        {this.userInfo(user)}\r\n                        {this.nowCounter()}\r\n                        {this.isMember()}\r\n                        {this.favApp()}\r\n                        {/*{this.feedList()}*/}\r\n                        {/*<FixedLayout*/}\r\n                        {/*    vertical=\"bottom\"*/}\r\n                        {/*    style={{marginBottom: 5}}*/}\r\n                        {/*>*/}\r\n                        {/*    */}\r\n                        {/*</FixedLayout>*/}\r\n                    </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);;","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: {},\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity:action.payload.location.city};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload};\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload};\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER', master);\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER', user);\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST', newMastersList);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY', newTargetCategory);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY', newTargetCity);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL', newScroll);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST', newFindModelsList);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL', newFindModelsListScroll);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS', NewActiveMaster);\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS', NewActiveMaster);\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS', NewActiveMaster);\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS', params);\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                firstname: this.props.user.firstname,\r\n                lastname: this.props.user.lastname,\r\n                description: this.state.description,\r\n                vkUid: this.props.user.vkUid,\r\n                type: this.state.type,\r\n                avatarLink: this.props.user.avatarLink,\r\n                sex: this.props.user.sex,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                banned: {status: false},\r\n                priceList: this.state.priceList,\r\n                visible: true,\r\n                params: this.props.params\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена');\r\n    };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        size=\"l\"\r\n                                        description=\"Регистрация мастера\"\r\n                                        before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                    >\r\n                                        {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={this.props.changeCity}\r\n                                        indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                        status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                        bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                    >\r\n                                        Ваш город\r\n                                    </Cell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        multiline\r\n                                        asideContent={\r\n                                            <Switch\r\n                                                onChange={this.permMessage}\r\n                                                checked={this.state.statusMessage}/>\r\n                                        }\r\n                                        bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                    >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                    </Cell>\r\n                                    {/*<Cell*/}\r\n                                    {/*    expandable*/}\r\n                                    {/*    multiline*/}\r\n                                    {/*    onClick={this.permMessage}*/}\r\n                                    {/*    description=\"Для получения уведомлений о заявках\"*/}\r\n                                    {/*    status={this.state.statusMessage === true ? 'valid' : 'error'}*/}\r\n                                    {/*>Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? <span style={{color: 'green'}}>Разрешен</span> : <span style={{color: 'red'}}>Не разрешен</span>}*/}\r\n                                    {/*</Cell>*/}\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                // removable\r\n                                                // onRemove={() => {\r\n                                                //     this.onRemove(index)\r\n                                                // }}\r\n                                                >\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            </Cell>\r\n                                            <Button\r\n                                                //before={<Icon24Dismiss/>}\r\n                                                onClick={() => {this.onRemove(index)}}\r\n                                                size=\"xl\"\r\n                                                mode=\"destructive\"\r\n                                            >Удалить</Button>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdTitle\"\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Textarea\r\n                                            require\r\n                                            name=\"newProdBody\"\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdPrice\"\r\n                                            type=\"number\" value={this.state.newProdPrice}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            return (\r\n                <Cell multiline>Ваш профиль на проверке. В течении часа он будет доступен в поиске.</Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    bottomContent={this.state.user.isMaster && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                {this.state.user.isMaster && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Snackbar, Cell, PanelSpinner, Spinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    onClick={this.getToken}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories, isLoad: true});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        const master = this.state.master;\r\n        master.params = this.props.params;\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, master);\r\n        this.props.setMaster(this.state.master);\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.props.modalBack();\r\n                this.props.snackbar('Изменения сохранены');\r\n            })\r\n            .catch(e=>console.log(e.message))\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.openSnack('Процедура добавлена');\r\n        } catch (error) {\r\n            this.openSnackDismiss(error)\r\n        }\r\n    };\r\n    // saveProd = () => {\r\n    //     try {\r\n    //         if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n    //         if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n    //         if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n    //         let master = this.state.master;\r\n    //         master.priceList.push({\r\n    //             title: this.state.newProdTitle,\r\n    //             body: this.state.newProdBody,\r\n    //             price: this.state.newProdPrice\r\n    //         });\r\n    //         this.setState({master: master});\r\n    //         this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n    //         this.props.snackbar('Процедура добавлена');\r\n    //     } catch (error) {\r\n    //         this.props.snackbar(error)\r\n    //     }\r\n    // };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <ModalRoot\r\n                        activeModal={this.props.activeModal}\r\n                        onClose={this.saveChanges}\r\n                    >\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'setting'}\r\n                                   onClose={this.saveChanges}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={this.saveChanges}>{'Сохранить'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={this.saveChanges}>{osname === IOS ? 'Сохранить' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Настройки\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.master.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.props.changeModal('changeCity')}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\">\r\n                                                <Cell\r\n                                                    key={item}\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    //removable\r\n                                                    // onRemove={() => {\r\n                                                    //     this.onRemove(index)\r\n                                                    // }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                    <Button\r\n                                                        //before={<Icon24Dismiss/>}\r\n                                                        onClick={() => {this.onRemove(index)}}\r\n                                                        size=\"xl\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Удалить</Button>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Textarea\r\n                                                require\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\" value={this.state.newProdPrice}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={this.checkSubcat}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                            </Div>\r\n                            {this.state.snackbar}\r\n                        </ModalPage>\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'changeCity'}\r\n                                   onClose={() => this.props.changeModal('setting')}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{'Назад'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{osname === IOS ? 'Назад' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Выбор города\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <CityListModal dynamicContentHeight\r\n                                           changeTargetCity={(city) => this.changeCity(city)}\r\n                            />\r\n                        </ModalPage>\r\n                    </ModalRoot>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.history.replaceState({}, '', '#init');\r\n        window.history.pushState({}, '', '#router');\r\n        window.addEventListener('popstate', event => {\r\n            window.history.pushState({}, '', '#router-back');\r\n            this.props.goBack();\r\n        });\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56LikeOutline/>}\r\n                        header={this.state.mastersArr.message}\r\n                    >Добавить мастера в этот список можно, нажав соответствующую кнопку в профиле мастера.\r\n                    </Placeholder>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master.vkUid}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <RichCell\r\n                                            key={master._id}\r\n                                            before={<Avatar size={72} src={master.avatarLink} />}\r\n                                            text={master.type}\r\n                                            caption={master.location.city.title}\r\n                                            after={<Icon16Chevron/>}\r\n                                            onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >\r\n                                            {master.firstname} {master.lastname}\r\n                                        </RichCell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n\r\n                                // <CardGrid key={master._id}>\r\n                                //     <Card size=\"l\" mode=\"shadow\">\r\n                                //         <Cell expandable\r\n                                //               photo={master.avatarLink}\r\n                                //               description={master.type}\r\n                                //               before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                //               size=\"l\"\r\n                                //               onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                //         >{master.firstname} {master.lastname}\r\n                                //         </Cell>\r\n                                //     </Card>\r\n                                // </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\n// function renderLastPhoto(arr){\r\n//     for (let i =0; i<arr.length; i++){\r\n//         if (!arr[i]) break;\r\n//         return (\r\n//             <Card\r\n//                 size=\"s\"\r\n//                 mode=\"shadow\"\r\n//                 key={i}\r\n//                 //onClick={() => this.openShowImages(this.state.images, index)}\r\n//             >\r\n//                 <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    console.log(find);\r\n                    this.props.changeFindModelsList(find);\r\n                    this.setState({findArr: find, isLoad: true});\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        \r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0]});\r\n                fetch(BACKEND.findModel.onMasterId+activeMaster[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        if (find.length > 0) {\r\n                            console.log(find);\r\n                            this.setState({loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                        } else {\r\n                            let error = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({error: error, isLoaded: true});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    // getToken = () => {\r\n    //     bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n    //         .then(data => {\r\n    //             this.getUploadServer(data.access_token);\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // };\r\n\r\n    // getUploadServer = (token) => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n    //         .then(result => {\r\n    //             this.setState({uploadUrl: result.response.upload_url, token: token});\r\n    //         })\r\n    //         .catch(e => console.log(e))\r\n    //\r\n    // };\r\n\r\n    // uploadPhoto = () =>{\r\n    //     try {\r\n    //         if (this.state.loadFind){\r\n    //             if (this.state.loadFind.images.length >= 3) throw 'Можно загрузить только 3 фотографии в разделе Мастер ищет модель';\r\n    //         }\r\n    //         this.setState({loading: true});\r\n    //         const formData = new FormData();\r\n    //         let selectedFile = document.getElementById('input').files[0];\r\n    //         formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n    //         formData.append('uploadUrl', this.state.uploadUrl);\r\n    //         formData.append('token', this.state.token);\r\n    //         formData.append('file1', selectedFile);\r\n    //         fetch(BACKEND.vkapi.uploadPhoto, {\r\n    //             method: 'POST',\r\n    //             body: formData\r\n    //         })\r\n    //             .then(res => res.json())\r\n    //             .then(response => {\r\n    //                 fetchJsonp(response.saveUrl, {\r\n    //                     mode: 'no-cors',\r\n    //                     method: 'GET'\r\n    //                 })\r\n    //                     .then(result => result.json())\r\n    //                     .then(result => {\r\n    //                         console.log(result);\r\n    //                         let newImg = result.response[0].sizes[2].url;//адрес фото\r\n    //                         let imgArr = this.state.images;\r\n    //                         let data = {\r\n    //                             findId: this.state.loadFind,\r\n    //                             newImg: newImg\r\n    //                         };\r\n    //                         let loadFind = this.state.loadFind;\r\n    //                         loadFind.images.push(newImg);\r\n    //                         this.setState({loading: false, loadFind: loadFind}, ()=>this.save());\r\n    //                     })\r\n    //                     .catch(error => console.log(error))\r\n    //             })\r\n    //             .catch(error => {\r\n    //                 console.log(error);\r\n    //                 this.openSnack(error);\r\n    //             })\r\n    //     } catch (e) {\r\n    //         this.openSnack(e);\r\n    //     }\r\n    //\r\n    // };\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if (this.state.body.length === 0) throw 'Пустое сообщение недопустимо';\r\n            let images = [];\r\n            this.state.activeMaster.photos.map((image,i)=> {\r\n                if (i < 3){\r\n                    images.push(image)\r\n                }\r\n            });\r\n            if (this.state.isActive === true) {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                console.log('измененный',find);\r\n                this.setState({loadFind: find});\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n                this.openSnack('Информация успешно обновлена.')\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.masterId = this.state.activeMaster._id;\r\n                find.location = this.state.activeMaster.location;\r\n                find.firstname = this.state.activeMaster.firstname;\r\n                find.lastname = this.state.activeMaster.lastname;\r\n                find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                this.postData(BACKEND.findModel.new, find);\r\n                this.openSnack('Информация о поиске успешно размещена.')\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.map((image,i)=>{\r\n                                        return (\r\n                                            <Card size='s' key={i}>\r\n                                                <div\r\n                                                    style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                >\r\n                                                </div>\r\n                                            </Card>\r\n                                        )\r\n                                    }) : 'У вас в портфолио нет фото'\r\n                                }\r\n                                </CardGrid>\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>this.setState({visible: !this.state.visible})}\r\n                                        checked={this.state.visible}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества со схожей тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\nimport Head from \"./panelHeader\";\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: true,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 49, title: 'Екатеринбург'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items, isLoad: true}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Panel id='changeCity'>\r\n                    <Head title={'Выбор города'}\r\n                          goBack={() => this.props.goBack()}/>\r\n                        <React.Fragment>\r\n                            <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                            {this.state.cities.length > 0 ?\r\n                            <List>\r\n                                {this.state.cities.map(city =>\r\n                                    <Cell\r\n                                        description={city.region || ''}\r\n                                        onClick={()=>this.props.changeCity(city)}\r\n                                        key={city.id}\r\n                                    >\r\n                                        {city.title}\r\n                                    </Cell>\r\n                                )}\r\n                            </List> :\r\n                                <Placeholder\r\n                                    icon={<Icon56PlaceOutline />}\r\n                                    header=\"Город не найден\"\r\n                                >\r\n                                    Проверьте опечатки или измените критерии поиска\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n                </Panel>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\n\r\nimport {BACKEND} from \"../func/func\";\r\nimport Head from \"../elements/panelHeader\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.moder)\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            });\r\n        fetch(BACKEND.comment.moderation)\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                console.log(comments);\r\n                this.setState({comments: comments})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: []\r\n        };\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons\r\n        };\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    goodComment = () => {\r\n\r\n    };\r\n\r\n    badComment = () => {\r\n\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment[0]._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment[0]._id, index)} mode=\"secondary\">Отклонить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment[0].body}\r\n                        </RichCell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                        {/*<Button onClick={()=>this.bad(master._id, index)} mode=\"secondary\">Отклонить</Button>*/}\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Panel id=\"moder\">\r\n                <Head\r\n                    title={'Модерация'}\r\n                    goBack={() => this.props.goBack()}\r\n                />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'masters' })}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'comments' })}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Moder;","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.mastersList);\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw new Error('Нет города');\r\n            if (this.props.mastersList.length === 0) throw new Error('Никого не нашли');\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw new Error('Нет города');\r\n                if (this.props.mastersList.length === 0) throw new Error('Никого не нашли');\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArr = master.comments.map(comment => {\r\n                return Number(comment.rating)\r\n            });\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster('masterInfo',master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner, Div} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    window.scrollTo(0, this.props.mastersListScroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <React.Fragment>\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e)=>this.checkSubcat(e)}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster, changeActiveMasterOnMasters, changeActiveMasterOnFindModels, changeActiveMasterOnFavs, changeLaunchParams} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nconst qs = require('query-string');\r\nconst crypto = require('crypto');\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            activePanelNews: 'news',\r\n            newsHistory: ['news'],\r\n            validLaunchParams: false\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.modalBack = () => {\r\n            this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.params) {\r\n            this.launchParams(this.props.params);\r\n            this.props.changeLaunchParams(this.props.params);\r\n            // fetch(BACKEND.logs.params, {\r\n            //     method: 'POST',\r\n            //     mode: 'cors',\r\n            //     cache: 'no-cache',\r\n            //     credentials: 'same-origin',\r\n            //     headers: {'Content-Type': 'application/json',},\r\n            //     redirect: 'follow',\r\n            //     referrer: 'no-referrer',\r\n            //     body: JSON.stringify(this.props.params)\r\n            // })\r\n            //     .then(res => res.json())\r\n            //     .then(res => {\r\n            //         this.setState({validationParams: res.status})\r\n            //     })\r\n            //     .catch(e=>console.log(e));\r\n        }\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data => this.verificationUser(data))\r\n            .catch(e=>this.openSnack(e));\r\n        // if (this.props.linkParams.masterid) {\r\n        //     this.setState({activeMasterId: this.props.linkParams.masterid});\r\n        //     this.openMasterOnLink(this.props.linkParams.masterid);\r\n        //     //bridge.send(\"VKWebAppSetLocation\", {\"location\": \"masterid=\"+this.props.linkParams.masterid});\r\n        // }\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n        });\r\n        window.onpopstate = () => {\r\n            window.history.pushState(null, null);\r\n        };\r\n    }\r\n\r\n    goBackNews = () => {\r\n            const newsHistory = [...this.state.newsHistory];\r\n            newsHistory.pop();\r\n            const activePanelNews = newsHistory[newsHistory.length - 1];\r\n            if (activePanelNews === 'news') {\r\n                bridge.send('VKWebAppDisableSwipeBack');\r\n            }\r\n            this.setState({ newsHistory, activePanelNews });\r\n    };\r\n\r\n    goForwardNews = (activePanelNews) => {\r\n        const newsHistory = [...this.state.newsHistory];\r\n        newsHistory.push(activePanelNews);\r\n        if (this.state.activePanelNews === 'news') {\r\n            bridge.send('VKWebAppEnableSwipeBack');\r\n        }\r\n        this.setState({ newsHistory, activePanelNews });\r\n    };\r\n\r\n    launchParams = (params) => {\r\n        const urlParams = params;\r\n        const ordered = {};\r\n        Object.keys(urlParams).sort().forEach((key)=>{\r\n            if (key.slice(0,3) === 'vk_'){\r\n                ordered[key] = urlParams[key];\r\n            }\r\n        });\r\n\r\n        const secretKey = BACKEND.secretKey;\r\n        const stringParams = qs.stringify(ordered);\r\n        const paramsHash = crypto\r\n            .createHmac('sha256', secretKey)\r\n            .update(stringParams)\r\n            .digest()\r\n            .toString('base64')\r\n            .replace(/\\+/g, '-')\r\n            .replace(/\\//g, '_')\r\n            .replace(/=$/, '')\r\n        console.log('Параметры запуска', paramsHash === urlParams.sign);\r\n        this.setState({validLaunchParams: paramsHash === urlParams.sign});\r\n        //return paramsHash === urlParams.sign;\r\n    };\r\n\r\n    verificationUser = (vkUser) => {\r\n         fetch(BACKEND.users + '/vkuid/' + vkUser.id)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0) {\r\n                    const user = {\r\n                        vkUid: vkUser.id,\r\n                        firstname: vkUser.first_name,\r\n                        lastname: vkUser.last_name,\r\n                        avatarLink: vkUser.photo_200,\r\n                        sex: vkUser.sex,\r\n                        location: {\r\n                            country: vkUser.country || 'Не определен',\r\n                            city: vkUser.city || 'Не определен'\r\n                        },\r\n                        isMaster: false,\r\n                        favs: [],\r\n                        params: this.props.params\r\n                    };\r\n                    fetch(BACKEND.users, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {'Content-Type': 'application/json',},\r\n                        redirect: 'follow',\r\n                        referrer: 'no-referrer',\r\n                        body: JSON.stringify(user)\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(newUser => {\r\n                            this.props.loginUser(newUser)\r\n                        })\r\n                        .catch((e)=>this.openSnack(e.message));\r\n                } else {\r\n                    if (this.state.validLaunchParams){\r\n                        if (usersArr[0].isMaster === true) {\r\n                            fetch(BACKEND.masters.vkuid + usersArr[0].vkUid)\r\n                                .then(res => res.json())\r\n                                .then(master => {\r\n                                    if (master.length === 0) {\r\n                                        console.log('Мастер удален');\r\n                                        return null\r\n                                    } else {\r\n                                        this.props.setMaster(master[0]);\r\n                                    }\r\n                                });\r\n                        }\r\n                        this.props.loginUser(usersArr[0]);\r\n                    } else {\r\n                        this.openSnack('Параметры запуска подделаны');\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.openSnack('Отсутствует соединение с базой пользователей.');\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                this.props.setMaster(newMaster);\r\n                this.setState({activeViewLk: 'lk'});\r\n                this.openSnack('Ваш профиль отправлен на проверку. Не забудьте добавить фотографии в портфолио - так, шансы получить заказ намного выше.');\r\n                this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack(e.message);\r\n            //this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    sendMessage = (message) => {\r\n        let token = BACKEND.keyGroup;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.user.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => console.log(result))\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    openPanelMaster = (panelName, master) => {\r\n        this.props.changeActiveMasterOnMasters(master);\r\n        this.setState({activePanelMasters: panelName});\r\n    };\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFindModels(master);\r\n                this.setState({activePanelFindModels: 'masterInfo'});\r\n            });\r\n    };\r\n\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n        console.log(masterId);\r\n    };\r\n\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFavs(master);\r\n                this.setState({activePanelLk: 'masterInfo'});\r\n            });\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        user.params = this.props.params;\r\n        patchData(BACKEND.users+'/'+user._id, user);\r\n        this.setActiveModal(null)\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"auth\" activePanel=\"auth\">\r\n                        <Panel id=\"auth\">\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                                header=\"Выполняется вход...\"\r\n                            >Это может занять несколько секунд\r\n                                {this.state.snackbar}\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n      } if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Все, беда. Кто-то лезет в параметры запуска :(\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" history={this.state.newsHistory} activePanel={this.state.activePanelNews} onSwipeBack={() => this.goBackNews()}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                openModer={() => this.goForwardNews('moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBackNews()}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master});\r\n                                    this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBackNews()}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                    </View>\r\n                    <Root id=\"masters\" activeView={this.state.activeViewMasters}>\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <Masters\r\n                                    changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    changeCategory={()=>this.setState({activePanelMasters: 'masterCat'})}\r\n                                    //openPanelMaster={this.openPanelMaster}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelMasters: 'mastersList'})\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    //onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openComments={() => this.setState({activePanelMasters: 'masterComments'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.setState({activePanelMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                        {/*<View activePanel=\"masterCat\" id=\"masterCat\">*/}\r\n                        {/*    /!*<Panel id=\"masterCat\">*!/*/}\r\n                        {/*    /!*    <PanelHeader>Выбор категории</PanelHeader>*!/*/}\r\n                        {/*    /!*    <Group>*!/*/}\r\n                        {/*    /!*        <CategoriesList*!/*/}\r\n                        {/*    /!*            setCategory={(category) => {*!/*/}\r\n                        {/*    /!*                this.props.changeTargetCategory(category);*!/*/}\r\n                        {/*    /!*                this.setState({activeViewMasters: 'mastersList'});*!/*/}\r\n                        {/*    /!*            }}*!/*/}\r\n                        {/*    /!*        />*!/*/}\r\n                        {/*    /!*    </Group>*!/*/}\r\n                        {/*    /!*</Panel>*!/*/}\r\n                        {/*</View>*/}\r\n                    </Root>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.state.activePanelFindModels}\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ишу модель</PanelHeader>\r\n                            <FindModel\r\n                                openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                            />\r\n                        </Panel>\r\n                        <CityList\r\n                                id='changeCity'\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                                changeCity={(city) => {\r\n                                this.setState({activePanelFindModels: 'findmodel'});\r\n                                this.changeTargetCity(city);\r\n                            }}\r\n                        />\r\n                        <Panel id=\"masterInfo\">\r\n                            <MasterCard\r\n                                id=\"masterInfo\"\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                                openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                openComments={() => this.setState({activePanelFindModels: 'masterComments'})}\r\n                                //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterPhoto\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterComments\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout} modal={\r\n                            <Setting\r\n                                snackbar={(message) => this.openSnack(message)}\r\n                                modalBack={this.modalBack}\r\n                                activeModal={this.state.activeModal}\r\n                                changeModal={(name) => this.setActiveModal(name)}\r\n                            />\r\n                        }>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнерам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.setActiveModal('setting')}\r\n                                            openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                            openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                            openMasterPhoto={() => this.setState({activePanelLk: 'portfolio'})}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head\r\n                                    title='Избранное'\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Favourite\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user}\r\n                                    openFavMasterOnId={this.openFavMasterOnId}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.setState({activePanelLk: 'favourite'})}\r\n                                    openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    openComments={() => this.setState({activePanelLk: 'masterComments'})}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"portfolio\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Portfolio\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title='Отзывы'\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head\r\n                                    title='Ищу модель'\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <FindModelMaster\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                    user={user} popout={this.openAlert}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id='registration'>\r\n                            <Panel id='registration'>\r\n                                <Head\r\n                                    title={'Регистрация'}\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                />\r\n                                <Invite\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                    openRules={() => this.setState({activePanelReg: 'rules'})}\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='rules'>\r\n                                <Head\r\n                                    title='Соглашение'\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                                <Rules\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                            </Panel>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelReg: 'registration'})\r\n                                }}\r\n                            />\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch)\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App linkParams={linkParams} params={params} />\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}