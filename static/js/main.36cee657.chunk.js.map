{"version":3,"sources":["js/func/func.js","js/masters/panelMasterList.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/idea/idea.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","App.js","serviceWorker.js","index.js"],"names":["BACK_LINK","BACKEND","users","masters","all","onID","category","vkuid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","getAll","MasterList","props","setBottom","rating","length","style","margin","padding","fontSize","color","state","mastersList","title","isLoad","this","fetch","then","res","json","setState","setTitle","console","log","id","city","count","undefined","Array","isArray","display","alignItems","flexDirection","size","marginTop","icon","header","action","map","ratingArr","comments","reduce","a","b","key","vkUid","mode","expandable","photo","description","categories","active","label","bottomContent","before","src","avatarLink","onClick","openPanelMaster","firstname","lastname","separator","renderMaster","React","Component","MastersCard","handleChange","event","target","name","value","favStatus","isFavourite","status","float","marginRight","checkFavs","width","height","fill","getPhone","loadFavs","activeMaster","_id","favsArr","countFavs","fav","userId","changeVisible","index","userVkUid","masterId","masterVkUid","postData","openSnackAvatar","sendMessage","message","phone","bridge","send","Math","random","result","snackbar","catch","e","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","activeMasterId","priceList","text","after","url","data","method","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","brand","openComments","indicator","photos","slice","photoUrl","backgroundImage","backgroundSize","openPhoto","item","multiline","price","images","reverse","start_index","image","openShowImages","gridPhoto","sendComment","Number","isCommended","alert","bodyComment","author","date","Date","now","commentsArr","countComments","arr","push","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","step","min","max","top","bottom","replace","placeholder","commentList","validate","News","isMaster","vertical","openReg","wide","Invite","regMaster","subcat","filter","sex","location","closeReg","permMessage","statusMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","i","subcategory","asideContent","checked","checkLicense","Lk","connection","tmpUser","isUser","mastersArr","activePanel","openFavourite","openMasterPhoto","openFindModel","openSetting","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","error","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","visible","onRemove","patchData","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","about","tooltip","popout","showProfile","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","hairVisible","manicureVisible","pedicureVisible","eyelashesVisible","eyebrowsVisible","shugaringVisible","cosmeticVisible","backgroundColor","removable","require","stretched","onSubmit","handleSubmit","Favourite","loadFavsMasters","isLoaded","openFavMasterOnId","FindModel","findList","findArr","find","openMasterOnId","FindModelMaster","save","loadFind","activeFind","osname","platform","App","loadCategories","catArr","regNewUser","first_name","last_name","photo_200","country","verifiedUser","vkUserId","usersArr","openAlert","actionsLayout","actions","autoclose","activeViewLk","change","story","view","panel","panelName","activePanelMasters","openMaster","activeViewMasters","activeStory","activePanelFindModels","activePanelLk","openStory","storyName","targetCategory","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","onStoryChange","currentTarget","dataset","tabbar","selected","data-story","activeView","theme","left","IOS","addon","Boolean","window","hostname","match","params","search","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36cee657.chunk.js","sourcesContent":["const BACK_LINK = 'http://localhost:3030/';\r\n//const BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    }\r\n};","import React from 'react';\r\nimport {\r\n    Spinner,\r\n    Separator,\r\n    Avatar,\r\n    Button,\r\n    Cell,\r\n    Div,\r\n    Group,\r\n    List,\r\n    Header,\r\n    CardGrid,\r\n    Card,\r\n    Placeholder, Counter\r\n} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MasterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: null,\r\n            title: '',\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n            if(this.props.category === '') {\r\n                fetch(BACKEND.masters.all)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                            this.setState({isLoad: true});\r\n                    });\r\n            } else {\r\n                console.log(BACKEND.masters.category+this.props.category.id+'/'+this.props.city.id);\r\n                fetch(BACKEND.masters.category+this.props.category.id+'/'+this.props.city.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList, isLoad: true});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                    });\r\n            }\r\n        }\r\n\r\n    setTitle(count) {\r\n        if (count===undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n    renderMaster() {\r\n        if(Array.isArray(this.state.mastersList)) {\r\n            if(this.state.isLoad === false) {\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (this.state.mastersList.length === 0) {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Не расстраивайтесь\"\r\n                            action={<Button size=\"l\">Поделиться</Button>}\r\n                        >\r\n                            В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                            Поделитесь приложением с мастерами, которых Вы знаете.\r\n                        </Placeholder>\r\n                    );\r\n                } else {\r\n                    return this.state.mastersList.map(master => {\r\n                        let ratingArr = master.comments.map(comment =>{\r\n                            return comment.rating\r\n                        });\r\n                        let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n                        let rating = sum/ratingArr.length;\r\n                        //console.log(rating);\r\n                        return (\r\n                                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                                      description={\r\n                                                          master.categories.map(category => {\r\n                                                              if(category.active === true) {\r\n                                                                  return category.label+\" \"\r\n                                                              }\r\n                                                          })\r\n                                                      }\r\n                                                      bottomContent={\r\n                                                          this.setBottom(rating, ratingArr.length)\r\n                                                      }\r\n                                                      before={<Avatar src={master.avatarLink} size={70}/>}\r\n                                                      size=\"l\"\r\n                                                      onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                                                >{master.firstname} {master.lastname}\r\n                                                </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Оценка {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                        {this.renderMaster()}\r\n                        </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MasterList","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, Alert, Input,FormLayout\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {\r\n                priceList: []\r\n            },\r\n            favsArr: [\r\n                {vkUid:12523452}\r\n            ],\r\n            isFavourite: {\r\n                status: false\r\n            },\r\n            isLoad: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.setState({activeMaster: this.props.activeMaster});\r\n        this.loadFavs();\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        console.log(this.state);\r\n    };\r\n    favStatus = () => {\r\n        if(this.state.isFavourite.status === false) {\r\n            return (\r\n                        <Cell>\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n                            <Button onClick={() => this.getPhone()}>Записаться</Button>\r\n                        </Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell>\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n                    <Button onClick={() => this.getPhone()}>Записаться</Button>\r\n                </Cell>\r\n            )\r\n        }\r\n    }\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        //console.log(BACKEND.favs.master+this.props.activeMaster._id);\r\n        fetch(BACKEND.favs.master+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                this.setState({favsArr: favsArr});\r\n                let count = favsArr.length;\r\n                this.setState({countFavs: count});\r\n                this.setState({isLoad: true})\r\n                this.state.favsArr.map(fav => {\r\n                    if (fav.userId === this.props.user._id) {\r\n                        this.setState({isFavourite: {status: true, id: fav._id}});\r\n                        //console.log('У тебя в избранном');\r\n                    } else {\r\n                        this.setState({isFavourite: {status: false}})\r\n                        //console.log('Нет в избранном');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    }\r\n    checkFavs = () => {\r\n        console.log('прежний статус '+this.state.isFavourite.status);\r\n        if (this.state.isFavourite.status === false) {\r\n            let fav = {\r\n                userId: this.props.user._id,\r\n                userVkUid: this.props.user.vkUid,\r\n                masterId: this.state.activeMaster._id,\r\n                masterVkUid: this.state.activeMaster.vkUid\r\n            };\r\n            this.postData(BACKEND.favs.new, fav, 'POST');\r\n            this.setState({isFavourite: {status: true}});\r\n            this.setState({countFavs: this.state.countFavs+1});\r\n            this.openSnackAvatar('Вы подписались на обновления мастера. Отменить подписку можно во вкладке Кабинет, в разделе Избранное.', this.state.activeMaster.avatarLink);\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться к тебе! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ snackbar: null })\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = () => {\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({phone: result.phone_number});\r\n                //this.sendMessage();\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    }\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    {/*<Input*/}\r\n                    {/*    mask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    inputmask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    name='phone'*/}\r\n                    {/*    type=\"text\"*/}\r\n                    {/*    defaultValue={number || ''}*/}\r\n                    {/*    align=\"center\"*/}\r\n                    {/*    value={this.state.phone}*/}\r\n                    {/*    onChange={this.handleChange}*/}\r\n                    {/*/>*/}\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                this.favStatus()\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card size=\"s\">\r\n                                                        <div key={index} style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover'}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div>\r\n                        }\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={'От ' + item.price + \" рублей\"}\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: {\r\n                id: '1',\r\n                body: 'ТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТест',\r\n                author: 'Тест Тестович',\r\n                date: Date.now()\r\n            },\r\n            body: '',\r\n            commentsArr: [],\r\n            isLoad: false,\r\n            rating: 3\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({commentsArr: this.props.activeMaster.comments});\r\n        //console.log('comments ',   this.props.activeMaster.comments);\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            try {\r\n                this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n                this.setState({isCommended: true});\r\n            } catch (e) {\r\n                alert(e);\r\n                console.log(e.message);\r\n            }\r\n    }\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.sendMessage(data.body);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    sendMessage = (bodyComment) => {\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        let message = \"Привет! У тебя новый комментарий: \"+bodyComment;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                let date = new Date(comment.date);\r\n                let hours = date.getHours();\r\n                if (hours < 10) hours = '0'+hours;\r\n                let minutes = date.getMinutes();\r\n                if (minutes < 10) minutes = '0'+minutes;\r\n                let date1 = date.getDate();\r\n                if (date1 < 10) date1 = '0'+date1;\r\n                let month = date.getMonth();\r\n                if (month < 10) month = '0'+month;\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={\r\n                                date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes\r\n                            }\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        //console.log(this.props.activeMaster.vkUid, this.props.user.vkUid);\r\n        if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n            )\r\n        }\r\n        else if (this.state.isCommended === true) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <Slider\r\n                        step={1}\r\n                        min={1}\r\n                        max={5}\r\n                        value={Number(this.state.rating)}\r\n                        onChange={rating => this.setState({rating})}\r\n                        top=\"Оцените работу мастера\"\r\n                    />\r\n                    <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                    <Textarea\r\n                        name={'body'}\r\n                        value={this.state.body}\r\n                        status={this.state.body.length > 50 ? 'valid' : 'error'}\r\n                        bottom={this.state.body.length > 50 ? '' : 'Опишите подробнее. Символов: '+this.state.body.replace(/ /g, \"\").length+' из 50' }\r\n                        top={\"Добавление отзыва\"}\r\n                        placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                </FormLayout>\r\n            )\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {Group, HorizontalScroll, FixedLayout, TabsItem, Tabs, Panel, PanelHeader, Cell} from \"@vkontakte/vkui\"\r\n\r\n\r\nclass Idea extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: 'all',\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Panel id=\"idea\">\r\n                <PanelHeader>Случайная идея</PanelHeader>\r\n                <FixedLayout vertical=\"top\">\r\n                    <Tabs theme=\"header\" type=\"buttons\">\r\n                        <HorizontalScroll>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'all' })}\r\n                                selected={this.state.activeTab === 'all'}\r\n                            >\r\n                                Ногти\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'users' })}\r\n                                selected={this.state.activeTab === 'users'}\r\n                            >\r\n                                Информация о разделе\r\n                            </TabsItem>\r\n                        </HorizontalScroll>\r\n                    </Tabs>\r\n                </FixedLayout>\r\n                <Group>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Этот раздел</Cell>\r\n                </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Idea;","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar, PanelSpinner, Spinner, FixedLayout\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                    <Group>\r\n                        {\r\n                            this.props.user.firstname === '???' ?\r\n                                <Placeholder >\r\n                                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                                </Placeholder> :\r\n                                <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n                                    Привет, {this.props.user.firstname}!\r\n                                </Placeholder>\r\n                        }\r\n                        <Cell multiline>\r\n                            Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по\r\n                            любой области косметологии или предложить свои услуги.\r\n                        </Cell>\r\n                    </Group>\r\n                {this.props.user.isMaster === false &&\r\n                <FixedLayout vertical=\"bottom\">\r\n                    <Cell\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы - мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                </FixedLayout>\r\n                }\r\n                <Separator wide />\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar, Input} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.permMessage();\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n                console.log('State on load', this.state)\r\n            });\r\n\r\n    }\r\n\r\n    regMaster = () => {\r\n        let categories = this.state.categories;\r\n        categories.map((category, index) => {\r\n            let countCat = category.subcat.filter(\r\n                function(item){\r\n                    if (item.active === true){\r\n                        return item.active;\r\n                    } else {\r\n                        return null\r\n                    }\r\n                }\r\n            );\r\n            if (countCat.length > 0) {\r\n                category.active = true;\r\n            } else {\r\n                category.active = false;\r\n            }\r\n        });\r\n        let master = {\r\n            firstname: this.props.user.firstname,\r\n            lastname: this.props.user.lastname,\r\n            description: this.state.description,\r\n            vkUid: this.props.user.vkUid,\r\n            type: this.state.type,\r\n            avatarLink: this.props.user.avatarLink,\r\n            sex: this.props.user.sex,\r\n            location: this.props.user.location,\r\n            categories: this.state.categories,\r\n            brand: this.state.brand\r\n        };\r\n        this.props.closeReg(master);\r\n    };\r\n    // permPhoto = () => {\r\n    //     bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n    //         .then(data => {\r\n    //             console.log(data);\r\n    //             this.setState({statusPhoto: data.result})\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    console.log(result);\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    multiline*/}\r\n                            {/*    onClick={this.permPhoto}*/}\r\n                            {/*    description=\"Для загрузки фото в портфолио\"*/}\r\n                            {/*    bottom={this.state.statusPhoto === false && 'Доступ обязателен для регистрации'}*/}\r\n                            {/*>Доступ к загрузке фотографий в альбом приложения - {this.state.statusPhoto === true ? 'Разрешен' : 'Не разрешен'}</Cell>*/}\r\n                            <Cell\r\n                                expandable\r\n                                multiline\r\n                                onClick={this.permMessage}\r\n                                description=\"Для получения уведомлений о заявках\"\r\n                                status={this.state.statusMessage === true ? 'valid' : 'error'}\r\n                                bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                            >Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? 'Разрешен' : 'Не разрешен'}</Cell>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            {this.state.checkLicense && this.state.statusMessage && this.state.description && this.state.type &&\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                            }\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.user);\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Cell\r\n                            //expandable\r\n                            onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                            user={this.state.user}\r\n                            indicator={this.state.user.location.city.title}\r\n                        >Ваш город</Cell>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Settings />}\r\n                    >Настройки</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    List, Button, CellButton, Input, Spinner,Snackbar, Tooltip\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            activeMaster: {\r\n                priceList: [],\r\n                showProfile: false\r\n            },\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            hairVisible: false,\r\n            manicureVisible: false,\r\n            pedicureVisible: false,\r\n            eyelashesVisible: false,\r\n            eyebrowsVisible: false,\r\n            shugaringVisible: false,\r\n            cosmeticVisible: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0], description: activeMaster[0].description});\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        //console.log(activeMaster);\r\n        activeMaster.description = this.state.description;\r\n\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.openSnack(\"Изменения сохранены\");\r\n                //this.props.popout();\r\n                console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    };\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        //console.log(this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.activeMaster.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.categories[indexCat].subcat[indexSubcat].active = !this.state.activeMaster.categories[indexCat].subcat[indexSubcat].active;\r\n        if (this.counter(indexCat) > 0) {\r\n            activeMaster.categories[indexCat].active = true;\r\n        } else {\r\n            activeMaster.categories[indexCat].active = false;\r\n        }\r\n        this.setState({activeMaster: activeMaster});\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.activeMaster._id) {\r\n            return (<div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                <Spinner size=\"large\" style={{marginTop: 120}}/>\r\n            </div>)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={\r\n                            this.state.activeMaster.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                        }\r\n                        before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                    </Cell>\r\n                    <Group>\r\n                        <Cell\r\n                            asideContent={<Switch\r\n                                name={'visible'}\r\n                                onChange={this.visible}\r\n                                checked={this.state.activeMaster.visible}/>}>\r\n                            Показывать профиль в поиске\r\n                        </Cell>\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                    {this.state.activeMaster.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры</Cell>\r\n                    }\r\n                    {this.state.activeMaster.priceList.map((item, index) => (\r\n                        <List key={index}>\r\n                            <Cell\r\n                                key={item}\r\n                                multiline\r\n                                //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                removable\r\n                                onRemove={() => {\r\n                                    this.onRemove(index)\r\n                                }}>\r\n                                <Cell\r\n                                    description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                <Cell description=\"Краткое описание процедуры\"\r\n                                      multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                <Cell\r\n                                    description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                            </Cell>\r\n                        </List>\r\n                    ))}\r\n                    {this.state.add &&\r\n                    <Div>\r\n                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdTitle\"\r\n                                type=\"text\"\r\n                                value={this.state.newProdTitle}\r\n                                placeholder={'Введите название'}\r\n                                onChange={this.handleChange}/>\r\n                            <Textarea\r\n                                require\r\n                                name=\"newProdBody\"\r\n                                value={this.state.newProdBody}\r\n                                placeholder={'Укажите описание'}\r\n                                onChange={this.handleChange}/>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdPrice\"\r\n                                type=\"number\" value={this.state.newProdPrice}\r\n                                placeholder={'Укажите цену'}\r\n                                onChange={this.handleChange}/>\r\n                        </Cell>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                        </Div>\r\n                    </Div>\r\n                    }\r\n                    </Group>\r\n                    <Group>\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                        </ FormLayout>\r\n                        <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                         bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                         id={'category'}>\r\n                            {\r\n                                this.state.activeMaster.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                        name={i}\r\n                                                                        id={index}\r\n                                                                        onChange={this.checkSubcat}\r\n                                                                        checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </FormLayoutGroup>\r\n                        <Button size=\"xl\"\r\n                                onClick={() => this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)}>Сохранить\r\n                            изменения</Button>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Lk;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div, Separator, Cell, Avatar, Spinner, Card, CardGrid, FixedLayout\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadFavsMasters(this.props.user);\r\n    }\r\n\r\n    loadFavsMasters = (user) => {\r\n        fetch(BACKEND.favs.user + user._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                if(favsArr.length === 0){\r\n                    this.setState({isLoaded: true});\r\n                } else {\r\n                    favsArr.map(fav => {\r\n                        fetch(BACKEND.masters.onID + fav.masterId)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                let mastersArr = this.state.mastersArr;\r\n                                mastersArr.push(master);\r\n                                this.setState({mastersArr: mastersArr});\r\n                            });\r\n                    });\r\n                    this.setState({isLoaded: true});\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.length === 0) {\r\n                return (\r\n                        <CardGrid>\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell multiline align=\"center\">\r\n                                    Список избранного пуст\r\n                                </Cell>\r\n                            </Card>\r\n                        </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if (master._id !== undefined) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master._id}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                              photo={master.avatarLink}\r\n                                              description={master.type}\r\n                                              before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                              onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >{master.firstname} {master.lastname}\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Cell, Div, Group, Separator, Spinner, Placeholder, Button} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: [],\r\n            title: '',\r\n            master: {\r\n                vkUid: 9999999999,\r\n                avatarLink: \"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\",\r\n                firstname: 'Евгения',\r\n                lastname: 'Плюхова'\r\n            },\r\n            findArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.user);\r\n        fetch(BACKEND.findModel.onCity+this.props.user.location.city.id)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                console.log(find);\r\n                this.setState({findArr: find});\r\n                console.log('Найдено '+find.length);\r\n                this.setState({isLoad: true})\r\n            });\r\n    }\r\n\r\n    findList = () => {\r\n        if (this.state.findArr.length === 0) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент в городе {this.props.user.location.city.title} нет поиска моледей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                this.state.findArr.map(find => {\r\n                    return (\r\n                        <Group key={find._id}>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            <Cell expandable\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                // description={'Место под категории'}\r\n                                  before={<Avatar src={find.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openMasterOnId(find.masterId)}\r\n                                  bottom=\"\"\r\n                            >{find.firstname} {find.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>\r\n                                {find.body}\r\n                            </Cell>\r\n                        </Group>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        //expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={this.props.user.location.city.title}>Ваш город</Cell>\r\n                    {this.findList()}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            master: '',\r\n            body: '',\r\n            loadFind: '',\r\n            isLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({master: master[0]});\r\n                fetch(BACKEND.findModel.onMasterId+master[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        this.setState({findArr: find, isLoaded: true});\r\n                        if (find.length > 0) {\r\n                            this.setState({body: find[0].body, loadFind: find[0]});\r\n                            let activeFind =\r\n                                <Group>\r\n                                    <Cell>Ваш активный поиск</Cell>\r\n                                    <Separator style={{ margin: '12px 0' }} />\r\n                                    <Cell expandable\r\n                                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                          description={'desf'}\r\n                                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                          size=\"l\"\r\n                                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                                    </Cell>\r\n                                    <Cell multiline>\r\n                                        {this.state.findArr[0].body}\r\n                                    </Cell>\r\n                                </Group>\r\n                            ;\r\n                            this.setState({activeFind: activeFind});\r\n                        } else {\r\n                            let activeFind = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({activeFind: activeFind});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.master._id,\r\n            body: this.state.body,\r\n            city: this.state.master.city,\r\n            firstname: this.state.master.firstname,\r\n            lastname: this.state.master.lastname,\r\n            avatarLink: this.state.master.avatarLink\r\n        };\r\n        console.log(BACKEND.findModel.new+this.state.loadFind._id);\r\n        if (this.state.loadFind._id) {\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            let activeFind =\r\n                <Group>\r\n                    <Cell>Ваш активный поиск</Cell>\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <Cell expandable\r\n                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                          description={'desf'}\r\n                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                          size=\"l\"\r\n                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                    </Cell>\r\n                    <Cell multiline>\r\n                        {find.body}\r\n                    </Cell>\r\n                </Group>\r\n            ;\r\n            this.setState({activeFind: activeFind});\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.popout();\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Cell>Добавить / изменить</Cell>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                            top=\"О себе\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}/>\r\n                    </FormLayoutGroup>\r\n                    <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    {this.state.activeFind}\r\n                </FormLayout>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {\r\n    View,\r\n    Panel,\r\n    PanelHeader,\r\n    Tabbar,\r\n    TabbarItem,\r\n    Epic,\r\n    SelectMimicry,\r\n    FormLayout,\r\n    Group, List, Cell, Root, PanelHeaderButton, platform, IOS, Alert\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n//import Sale from './js/sale/sale.js';\r\nimport PanelMasterList from './js/masters/panelMasterList.js';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport Idea from './js/idea/idea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {BACKEND} from \"./js/func/func\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nconst osname = platform();\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            mastersList: null,\r\n            user: {\r\n                firstname: '???',\r\n                lastname: '???',\r\n                avatarLink: '???',\r\n                vkUid: '???',\r\n                status: '???',\r\n                location: {\r\n                    city: {id:1, title: '???'}\r\n                },\r\n                isMaster: false\r\n            },\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ]\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data=> {\r\n                console.log(data);\r\n                this.verifiedUser(data.id);\r\n            });\r\n        this.loadCategories();\r\n    }\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                let catArr = categories.map(category=>{\r\n                    return {id: category._id, label: category.label}\r\n                });\r\n                catArr.unshift({id: 'all', label: 'Мастера всех категорий'});\r\n                console.log(catArr);\r\n                this.setState({categories: catArr})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    }\r\n    regNewUser = () => {\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => {\r\n            console.log('Данные с моста',data);\r\n            const user = {\r\n                vkUid: data.id,\r\n                firstname: data.first_name,\r\n                lastname: data.last_name,\r\n                avatarLink: data.photo_200,\r\n                sex: data.sex,\r\n                location: {\r\n                    country: data.country,\r\n                    city: data.city\r\n                },\r\n                isMaster: false\r\n            };\r\n            this.setState({user: user});\r\n            this.postData(BACKEND.users, user); //регитрируем\r\n        });\r\n    }\r\n    verifiedUser = (vkUserId) => {\r\n        //on mock\r\n        //vkUserId = 2314852;\r\n        fetch(BACKEND.users+'/vkuid/'+vkUserId)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0){\r\n                    console.log('Пользователь зашел впервые');\r\n                    this.regNewUser();\r\n                } else {\r\n                    console.log('Пользователь уже заходил в приложение');\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    openAlert = (title, body, action) => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={()=>this.setState({ popout: null })}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    // closeAlert = () => {\r\n    //     this.setState({ popout: null });\r\n    // };\r\n    closeReg = (master) => {\r\n       console.log(master);\r\n        this.postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({ user: user, activeViewLk: 'lk' });\r\n        // //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n    };\r\n    change = (story, view, panel) => {\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n    };\r\n    /*\r\n    *Story (news,masters,findmodel,idea,lk)\r\n    * mastersView -> mastersPanel\r\n    *\r\n    *\r\n    */\r\n\r\n    /*\r\n    *\r\n    *\r\n    *\r\n     */\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({ activePanelMasters: panelName });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMaster = (master) => {\r\n        this.setState({ activeViewMasters: 'mastersList' });\r\n        this.setState({ activeStory: 'masters' });\r\n        this.setState({ activePanelMasters: 'masterInfo' });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelFindModels: 'masterInfo' });\r\n            });\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelLk: 'masterInfo' });\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({ activePanelMasters: name });\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({ activeStory: storyName })\r\n    }\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n    render () {\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    {\r\n                        /*<TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'sale'}\r\n                            data-story=\"sale\"\r\n                            text=\"Акции\"\r\n                        ><Icon28FireOutline /></TabbarItem>*/\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'news'}\r\n                        data-story=\"news\"\r\n                        text=\"News\"\r\n                    ><Icon28FireOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'masters'}\r\n                        data-story=\"masters\"\r\n                        text=\"Мастера\"\r\n                    ><Icon28ServicesOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'findmodel'}\r\n                        data-story=\"findmodel\"\r\n                        text=\"Ищу модель\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'idea'}*/}\r\n                    {/*    data-story=\"idea\"*/}\r\n                    {/*    text=\"Идеи\"*/}\r\n                    {/*><Icon28HelpOutline /></TabbarItem>*/}\r\n                    {\r\n                        /*\r\n                        <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомлен.\"\r\n                        label=\"1\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                        * */\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'lk'}\r\n                        data-story=\"lk\"\r\n                        text=\"Кабинет\"\r\n                    ><Icon28More /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                {\r\n                    /*<View id=\"sale\" activePanel=\"sale\">\r\n                    <Panel id=\"sale\">\r\n                        <PanelHeader>Акции</PanelHeader>\r\n                        <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })} indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                        <Sale />\r\n                    </Panel>\r\n                </View>*/\r\n                }\r\n                <View id=\"news\" activePanel=\"news\">\r\n                    <Panel id=\"news\">\r\n                        <PanelHeader>Горячие новости</PanelHeader>\r\n                        <News openReg={() => this.setState({ activeViewLk: 'masterReg',activeStory:'lk' })} user={this.state.user} openStory={this.openStory}/>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"masters\" activeView={this.state.activeViewMasters}>\r\n                    <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                        <Panel id=\"mastersList\">\r\n                            <FormLayout>\r\n                                <Cell\r\n                                    //expandable\r\n                                    onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                    indicator={this.state.user.location.city.title}>Ваш город</Cell>\r\n                                <SelectMimicry\r\n                                    top=\"Выберите категорию\"\r\n                                    placeholder=\"Показаны мастера всех категорий\"\r\n                                    onClick={() => this.setState({ activeViewMasters: 'masterCat' })}\r\n                                >{this.state.targetCategory.label}</SelectMimicry>\r\n                            </FormLayout>\r\n                            <PanelHeader>Мастера</PanelHeader>\r\n                            <PanelMasterList category={this.state.targetCategory} city={this.state.user.location.city} openPanelMaster={this.openPanelMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelMasters: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelMasters: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                        <Panel id=\"masterCat\">\r\n                            <PanelHeader>Выбор категории</PanelHeader>\r\n                            <Group>\r\n                                <List>\r\n                                    {\r\n                                        this.state.categories.map(category => {\r\n                                            //console.log(category);\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={category.id}\r\n                                                    onClick={() => this.setState({ targetCategory: category, activeViewMasters: 'mastersList' })}\r\n                                                    asideContent={this.state.targetCategory === category ? <Icon24Done fill=\"var(--accent)\" /> : null}\r\n                                                >\r\n                                                    {category.label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </Group>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n                {/*<View id=\"idea\" activePanel=\"idea\">*/}\r\n                {/*    <Panel id=\"idea\">*/}\r\n                {/*        <Idea />*/}\r\n                {/*    </Panel>*/}\r\n                {/*</View>*/}\r\n                <View id=\"findmodel\" activePanel={this.state.activePanelFindModels}>\r\n                    <Panel id=\"findmodel\">\r\n                        <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                        <FindModel openMasterOnId={this.openMasterOnId} user={this.state.user}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterInfo\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            О мастере\r\n                        </PanelHeader>\r\n                        <MasterCard openPhoto={() => this.setState({ activePanelFindModels: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelFindModels: 'masterComments' })}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterPhoto\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Портфолио\r\n                        </PanelHeader>\r\n                        <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                    </Panel>\r\n                    <Panel id=\"masterComments\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Отзывы\r\n                        </PanelHeader>\r\n                        <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Этот раздел</Cell>\r\n                        </Group>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                    <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout}>\r\n                        <Panel id=\"lk\">\r\n                            <PanelHeader>Личный кабинет</PanelHeader>\r\n                            <Lk\r\n                                user={this.state.user}\r\n                                openSetting={() => this.setState({ activePanelLk: 'setting' })}\r\n                                openFavourite={() => this.setState({ activePanelLk: 'favourite' })}\r\n                                openFindModel={() => this.setState({ activePanelLk: 'findModel' })}\r\n                                openMasterPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='favourite'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Избранное</PanelHeader>\r\n                            <Favourite user={this.state.user} openFavMasterOnId={this.openFavMasterOnId}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelLk: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <Portfolio user={this.state.user}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id='findModel'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Мастер ищет модель</PanelHeader>\r\n                            <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                        <Panel id='setting'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Настройки</PanelHeader>\r\n                            <Setting user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterReg\" id=\"masterReg\">\r\n                        <Panel id=\"masterReg\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Регистрация мастера\r\n                            </PanelHeader>\r\n                            <Invite user={this.state.user} closeReg={this.closeReg}/>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nbridge.send(\"VKWebAppInit\", {})\r\n    .then(data => console.log('Инициализировали апи вк? '+data.result));\r\n\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nconsole.log(params);\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}