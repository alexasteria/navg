{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/elements/functions.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/store/reducers.js","js/store/actions.js","js/lk/invite.js","js/lk/lk.js","js/elements/spinner.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/elements/modalPage.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","App.js","Warn.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["osname","platform","Head","theme","left","onClick","this","props","goBack","IOS","addon","title","React","Component","BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","subscribers","onarrayid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getAll","logs","params","sendmessage","keyGroup","secretKey","patchData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","response","console","log","json","catch","e","MastersCard","handleChange","event","setState","target","name","value","favStatus","state","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","getPhone","share","bridge","send","activeMaster","_id","result","openSnackAvatar","avatarLink","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","sendMessage","firstname","lastname","sendtitle","phone","vkUid","token","Math","random","snackbar","mess","userId","userVkUid","masterId","masterVkUid","postData","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","activeMasterId","res","setActiveMaster","prevProps","prevState","snapshot","count","text","after","src","size","marginTop","photo","description","brand","bottomContent","before","expandable","openComments","indicator","comments","length","photos","slice","map","photoUrl","key","backgroundImage","backgroundSize","openPhoto","separator","priceList","item","multiline","price","header","connect","images","reverse","start_index","image","borderRadius","margin","openShowImages","gridPhoto","MastersComments","sendComment","rating","Number","isCommended","bodyComment","commentsArr","countComments","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","step","min","max","top","status","bottom","replace","placeholder","commentList","validate","News","addFav","group_id","inGroup","feedList","icon","action","feed","isMaster","openReg","dispatch","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","setMaster","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","Invite","getCategories","categories","regMaster","checkLicense","statusMessage","cat","subcat","filter","active","id","label","sex","location","country","city","banned","visible","closeReg","error","addProd","add","saveProd","undefined","newProdTitle","newProdBody","newProdPrice","onRemove","permMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","asideContent","checked","i","subcategory","removable","require","stretched","bindActionCreators","Lk","addToFavApp","connection","tmpUser","isUser","favsArr","mastersArr","openSetting","openFavourite","activePanel","subheader","actions","openMasterPhoto","openFindModel","Spin","spinner","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","CityListModal","search","cities","getCities","toLowerCase","items","updateModalHeight","Fragment","region","withModalRootContext","Setting","saveChanges","checkBan","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","Array","isArray","modalBack","activeModal","dynamicContentHeight","ANDROID","right","String","onSubmit","handleSubmit","Favourite","loadFavsMasters","ids","isLoaded","err","openFavMasterOnId","FindCard","find","openMasterOnId","FindList","findArr","FindModel","loadFind","window","scrollTo","self","pageYOffset","FindModelMaster","save","isActive","activeFind","deleteImage","Partners","asideMode","addToCommunity","CityList","Modal","pageId","leftButton","rightButton","content","MastersList","setBottom","setTitle","ratingArr","reduce","a","b","openPanelMaster","renderMasters","countSubcat","ScrollSubcat","selected","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","App","verificationUser","vkUser","usersArr","first_name","last_name","photo_200","newUser","openAlert","actionsLayout","autoclose","newMaster","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeStory","activeViewMasters","activePanelLk","openStory","storyName","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","scheme","onStoryChange","setActiveModal","linkParams","masterid","subscribe","detail","validationParams","backgroundColor","dataset","story","tabbar","data-story","activeView","modal","vk_is_favorite","Boolean","hostname","match","store","createStore","changeIsMaster","hash","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6b792d4c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, IOS, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nconst osname = platform();\r\n\r\nclass Head extends React.Component {\r\n    render(){\r\n        return (\r\n            <PanelHeader\r\n                theme=\"light\"\r\n                left={<PanelHeaderButton onClick={this.props.goBack}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                addon={<PanelHeaderButton onClick={this.props.goBack}>Назад</PanelHeaderButton>}\r\n            >{this.props.title}\r\n            </PanelHeader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head;","//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    keyGroup: 'f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf', //'17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b'\r\n    secretKey: 'eb8wUDGs1LQoSKPsIS9i'\r\n};","import React from \"react\";\r\n\r\nfunction postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, FormLayout\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.setActiveMaster(master);\r\n                this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps !== this.props){\r\n            fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n                .then(res => res.json())\r\n                .then(master => {\r\n                    this.props.setActiveMaster(master);\r\n                    this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            patchData(BACKEND.users+'/'+this.state.user._id, this.state.user);\r\n            if (this.state.isFavourite === true) {\r\n                let count = {count: 1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //прибавляем счетчик мастера\r\n            } else {\r\n                let count = {count: -1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //убавляем счетчик\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button onClick={() => this.getPhone(title)}>Записаться</Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = BACKEND.keyGroup;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number});\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                <Cell>\r\n                                    {this.favStatus()}\r\n                                    <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card size=\"s\">\r\n                                                        <div key={index} style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover'}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div>\r\n                        }\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                    <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                    </Cell>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersCard);","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout, Snackbar\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 3,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({commentsArr: this.props.activeMaster.comments, countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 200) throw 'Длина отзыва ограничена 200 символами.';\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n            this.setState({isCommended: true});\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.sendMessage(data.body);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    sendMessage = (bodyComment) => {\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        let message = \"Привет! У тебя новый отзыв: \"+bodyComment;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={this.getDate(comment.date)}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={1}\r\n                            max={5}\r\n                            value={Number(this.state.rating)}\r\n                            onChange={rating=>this.setState({rating})}\r\n                            top=\"Оцените работу мастера\"\r\n                        />\r\n                        <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            status={this.state.body.length > 20 ? 'valid' : 'error'}\r\n                            bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Символов: '+this.state.body.replace(/ /g, \"\").length+' из 50' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, FixedLayout,CardGrid,Card,Button\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = this.props.user;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n                    \"method\": \"groups.isMember\",\r\n                    \"params\": {\"group_id\": \"193179174\",\"user_id\": user.vkUid, \"v\":\"5.103\", \"access_token\": BACKEND.keyGroup}})\r\n                    .then(result => {\r\n                        if (result.response === 0){\r\n                            this.setState({inGroup: false})\r\n                        } else {\r\n                            this.setState({inGroup: true})\r\n                        }\r\n                    })\r\n                    .catch(e => console.log(e))\r\n    }\r\n\r\n    addFav = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        }).then(result=>this.setState({inGroup: result}));\r\n    };\r\n\r\n    feedList = () => {\r\n        if(this.state.inGroup){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                    header=\"Привет!\"\r\n                >\r\n                    Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return(\r\n                <Placeholder\r\n                    icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                    header=\"Привет!\"\r\n                    action={<Button onClick={this.addFav} size=\"l\">Вступить в группу</Button>}\r\n                >\r\n                    Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным. Вступайте в нашу группу Вконтакте, чтобы не пропустить важные обновления!\r\n                </Placeholder>\r\n            )\r\n        }\r\n\r\n\r\n            // this.state.feed.map(feed=>{\r\n            //     return (\r\n            //         <CardGrid>\r\n            //             <Card key={feed} size=\"l\" mode=\"shadow\">\r\n            //                 <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n            //             </Card>\r\n            //         </CardGrid>\r\n            //     )\r\n            // })\r\n    };\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Group>\r\n                <CardGrid>\r\n                    <Card size=\"l\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                            }\r\n                            //bottomContent={}\r\n                            before={<Avatar src={user.avatarLink} size={50}/>}\r\n                            size=\"l\"\r\n                        >{user.firstname} {user.lastname}\r\n                        </Cell>\r\n                        {user.isMaster === false &&\r\n                        <Cell\r\n                            multiline\r\n                            onClick={this.props.openReg}\r\n                            before={<Icon24UserOutgoing/>}\r\n                            expandable\r\n                        >\r\n                            Если вы - мастер, пройдите простую процедуру регистрации\r\n                        </Cell>\r\n                        }\r\n                    </Card>\r\n                </CardGrid>\r\n                {this.feedList()}\r\n            </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);;","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: {},\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity:action.payload.location.city};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    LOGIN_USER,\r\n    SET_MASTER\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER', master);\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER', user);\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST', newMastersList);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY', newTargetCategory);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY', newTargetCity);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL', newScroll);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST', newFindModelsList);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL', newFindModelsListScroll);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.permMessage();\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                firstname: this.props.user.firstname,\r\n                lastname: this.props.user.lastname,\r\n                description: this.state.description,\r\n                vkUid: this.props.user.vkUid,\r\n                type: this.state.type,\r\n                avatarLink: this.props.user.avatarLink,\r\n                sex: this.props.user.sex,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                banned: {status: false},\r\n                priceList: this.state.priceList,\r\n                visible: true\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена');\r\n    };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        size=\"l\"\r\n                                        description=\"Регистрация мастера\"\r\n                                        before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                    >\r\n                                        {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={this.props.changeCity}\r\n                                        indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                        status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                        bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                    >\r\n                                        Ваш город\r\n                                    </Cell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        multiline\r\n                                        asideContent={\r\n                                            <Switch\r\n                                                onChange={this.permMessage}\r\n                                                checked={this.state.statusMessage}/>\r\n                                        }\r\n                                        bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                    >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                    </Cell>\r\n                                    {/*<Cell*/}\r\n                                    {/*    expandable*/}\r\n                                    {/*    multiline*/}\r\n                                    {/*    onClick={this.permMessage}*/}\r\n                                    {/*    description=\"Для получения уведомлений о заявках\"*/}\r\n                                    {/*    status={this.state.statusMessage === true ? 'valid' : 'error'}*/}\r\n                                    {/*>Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? <span style={{color: 'green'}}>Разрешен</span> : <span style={{color: 'red'}}>Не разрешен</span>}*/}\r\n                                    {/*</Cell>*/}\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  after={<Icon16Dropdown />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                removable\r\n                                                onRemove={() => {\r\n                                                    this.onRemove(index)\r\n                                                }}>\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            </Cell>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdTitle\"\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Textarea\r\n                                            require\r\n                                            name=\"newProdBody\"\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/>\r\n                                        <Input\r\n                                            require\r\n                                            name=\"newProdPrice\"\r\n                                            type=\"number\" value={this.state.newProdPrice}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    bottomContent={this.state.user.isMaster && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport spinner from \"./img/spinner.svg\";\r\n\r\nexport default function Spin(props){\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n            <img src={spinner}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spin/>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories, isLoad: true});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        this.props.setMaster(this.state.master);\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n        this.props.snackbar('Изменения сохранены');\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                this.props.modalBack();\r\n                this.props.snackbar('Изменения сохранены');\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.props.snackbar('Процедура добавлена');\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({master: master});\r\n            this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.props.snackbar('Процедура добавлена');\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <ModalRoot\r\n                        activeModal={this.props.activeModal}\r\n                        onClose={this.saveChanges}\r\n                    >\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'setting'}\r\n                                   onClose={this.saveChanges}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={this.saveChanges}>{'Сохранить'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={this.saveChanges}>{osname === IOS ? 'Сохранить' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Настройки\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.master.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.props.changeModal('changeCity')}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\">\r\n                                                <Cell\r\n                                                    key={item}\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    removable\r\n                                                    onRemove={() => {\r\n                                                        this.onRemove(index)\r\n                                                    }}>\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Textarea\r\n                                                require\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\" value={this.state.newProdPrice}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={this.checkSubcat}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                            </Div>\r\n                        </ModalPage>\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'changeCity'}\r\n                                   onClose={() => this.props.changeModal('setting')}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{'Назад'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{osname === IOS ? 'Назад' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Выбор города\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <CityListModal dynamicContentHeight\r\n                                           changeTargetCity={(city) => this.changeCity(city)}\r\n                            />\r\n                        </ModalPage>\r\n                    </ModalRoot>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Cell, Avatar, Card, CardGrid, Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                        <CardGrid>\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell multiline align=\"center\">\r\n                                    {this.state.mastersArr.message}\r\n                                </Cell>\r\n                            </Card>\r\n                        </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master._id}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                              photo={master.avatarLink}\r\n                                              description={master.type}\r\n                                              before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                              onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >{master.firstname} {master.lastname}\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <Cell expandable\r\n                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                      description={props.date}\r\n                      before={<Avatar src={props.find.avatarLink} size={50}/>}\r\n                      size=\"l\"\r\n                      onClick={()=>props.openMasterOnId(props.find.masterId)}\r\n                      bottom=\"\"\r\n                >{props.find.firstname} {props.find.lastname}\r\n                </Cell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card size='s' key={i}>\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder,Card} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\nfunction renderLastPhoto(arr){\r\n    for (let i =0; i<arr.length; i++){\r\n        if (!arr[i]) break;\r\n        return (\r\n            <Card\r\n                size=\"s\"\r\n                mode=\"shadow\"\r\n                key={i}\r\n                //onClick={() => this.openShowImages(this.state.images, index)}\r\n            >\r\n                <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport Spin from '../elements/spinner'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    this.setState({findArr: find, isLoad: true});\r\n                    this.props.changeFindModelsList(find);\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={()=>this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Div, PanelSpinner\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0]});\r\n                fetch(BACKEND.findModel.onMasterId+activeMaster[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        if (find.length > 0) {\r\n                            console.log(find);\r\n                            this.setState({loadFind: find[0], body:find[0].body, error: '', isLoaded: true, isActive: true});\r\n                        } else {\r\n                            let error = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({error: error, isLoaded: true});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n\r\n    uploadPhoto = () =>{\r\n        try {\r\n            if (this.state.loadFind.images.length >= 3) throw 'Можно загрузить только 3 фотографии в разделе Мастер ищет модель';\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n            formData.append('uploadUrl', this.state.uploadUrl);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;//адрес фото\r\n                            let imgArr = this.state.images;\r\n                            let data = {\r\n                                findId: this.state.loadFind,\r\n                                newImg: newImg\r\n                            };\r\n                            let loadFind = this.state.loadFind;\r\n                            loadFind.images.push(newImg);\r\n                            this.setState({loading: false, loadFind: loadFind}, ()=>this.save());\r\n                        })\r\n                        .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.openSnack(error);\r\n                })\r\n        } catch (e) {\r\n            this.openSnack(e);\r\n        }\r\n\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        if (this.state.isActive === true) {\r\n            let find =this.state.loadFind;\r\n            find.body = this.state.body;\r\n            console.log('измененный',find);\r\n            this.setState({loadFind: find});\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            this.openSnack('Информация успешно обновлена.')\r\n        } else {\r\n            let find =this.state.loadFind;\r\n            find.body = this.state.body;\r\n            find.masterId = this.state.activeMaster._id;\r\n            find.location = this.state.activeMaster.location;\r\n            find.firstname = this.state.activeMaster.firstname;\r\n            find.lastname = this.state.activeMaster.lastname;\r\n            find.avatarLink = this.state.activeMaster.avatarLink;\r\n            this.postData(BACKEND.findModel.new, find);\r\n            this.openSnack('Информация о поиске успешно размещена.')\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    deleteImage(index){\r\n        let find = this.state.loadFind;\r\n        if (index > -1) {\r\n            find.images.splice(index, 1);\r\n        } else find.images.splice(0, index);\r\n        this.setState({activeFind: find}, ()=> this.save())\r\n    }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spin />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                {\r\n                    this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div> :\r\n                        <FormLayout>\r\n                            <FormLayoutGroup>\r\n                                <Cell>Добавить / изменить</Cell>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.state.isActive &&\r\n                                    this.state.loadFind.images.map((image,i)=>{\r\n                                        return (\r\n                                            <Card size='s' key={i}>\r\n                                                <div\r\n                                                    style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                >\r\n                                                    <Icon24DismissSubstract\r\n                                                        onClick={()=>this.deleteImage(i)}\r\n                                                    />\r\n                                                </div>\r\n                                            </Card>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </CardGrid>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Добавить фото\r\n                                </File>\r\n                            </FormLayoutGroup>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                        </FormLayout>\r\n                }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества со схожей тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: true,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 1, title: 'Другой город'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                this.setState({cities: result.response.items, isLoad: true}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                    {this.state.cities.length > 0 ?\r\n                    <List>\r\n                        {this.state.cities.map(city =>\r\n                            <Cell\r\n                                description={city.region || ''}\r\n                                onClick={()=>this.props.changeCity(city)}\r\n                                key={city.id}\r\n                            >\r\n                                {city.title}\r\n                            </Cell>\r\n                        )}\r\n                    </List> :\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56PlaceOutline />}\r\n                            header=\"Город не найден\"\r\n                        >\r\n                            Проверьте опечатки или измените критерии поиска\r\n                        </Placeholder>\r\n                    }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {ANDROID, IOS, ModalPage, ModalPageHeader, ModalRoot, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nconst osname = platform();\r\n\r\nexport default function Modal(props){\r\n    return(\r\n        <ModalRoot\r\n            activeModal={props.activeModal}\r\n            onClose={props.onClose}\r\n        >\r\n            <ModalPage dynamicContentHeight\r\n                       id={props.pageId}\r\n                       onClose={props.onClose}\r\n                       header={\r\n                           <ModalPageHeader\r\n                               left={osname === ANDROID && props.leftButton &&\r\n                               <PanelHeaderButton onClick={props.onClose}>{'Сохранить'}</PanelHeaderButton>}\r\n                               right={props.rightButton && <PanelHeaderButton onClick={props.onClose}>{osname === IOS  ? 'Сохранить' :\r\n                                   <Icon24Done/>}</PanelHeaderButton>}\r\n                           >\r\n                               {props.header}\r\n                           </ModalPageHeader>\r\n                       }\r\n            >\r\n                {props.content}\r\n            </ModalPage>\r\n        </ModalRoot>\r\n    )\r\n}","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArr = master.comments.map(comment => {\r\n                return Number(comment.rating)\r\n            });\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nexport default function ScrollSubcat(props){\r\n    const subcatStyle = {\r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        fontSize: 10\r\n    };\r\n    if(props.targetCategory._id!=='all'){\r\n        return(\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n            // <HorizontalScroll>\r\n            //     <div style={{display: 'flex'}}>\r\n            //         {\r\n            //             props.targetCategory.subcat.map(subcat=>{\r\n            //                 return (\r\n            //                     <div style={{subcatStyle}} key={subcat._id}>\r\n            //                         <Button\r\n            //                             after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n            //                             id={subcat._id}\r\n            //                             onClick={props.checkSubcat}\r\n            //                             style={{margin: '4px 4px 0px 0px'}}\r\n            //                             mode=\"outline\"\r\n            //                         >\r\n            //                             {subcat.label}\r\n            //                         </Button>\r\n            //                     </div>\r\n            //                 )\r\n            //             })\r\n            //         }\r\n            //     </div>\r\n            // </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    window.scrollTo(0, this.props.mastersListScroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <React.Fragment>\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <SelectMimicry\r\n                        top=\"Выберите категорию\"\r\n                        placeholder=\"Показаны мастера всех категорий\"\r\n                        onClick={user.location.city === 'Не определено' ?\r\n                            this.props.openSnack('Сначала выберите город') :\r\n                            this.props.changeCategory\r\n                        }\r\n                    >{targetCategory.label}</SelectMimicry>\r\n                    {\r\n                        targetCategory && this.state.isLoad &&\r\n                        <ScrollSubcat\r\n                            targetCategory={targetCategory}\r\n                            mastersList={this.props.mastersList}\r\n                            checkSubcat={(e)=>this.checkSubcat(e)}\r\n                            filter={this.state.filter}\r\n                        />\r\n                    }\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {\r\n    Alert,\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Modal from './js/elements/modalPage'\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {postData, patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport spinner from './js/elements/img/spinner.svg'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\"\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.modalBack = () => {\r\n            this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data => {this.verificationUser(data)});\r\n        if (this.props.linkParams.masterid) {\r\n            this.setState({activeMasterId: this.props.linkParams.masterid});\r\n            this.openMasterOnLink(this.props.linkParams.masterid);\r\n            //bridge.send(\"VKWebAppSetLocation\", {\"location\": \"masterid=\"+this.props.linkParams.masterid});\r\n        }\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n            // if (type === 'VKWebAppViewRestore') { // Восстановление из кэша\r\n            //     if (this.props.linkParams.masterid) {\r\n            //         this.setState({activeMasterId: this.props.linkParams.masterid});\r\n            //     }\r\n            // }\r\n            // if (type === 'VKWebAppLocationChanged'){\r\n            //     let id = data.location.split('=');\r\n            //     console.log('В параметры пришел мастер', id[1]);\r\n            //     this.openMasterOnLink(id[1]);\r\n            // }\r\n            // if (type === 'VKWebAppUpdateConfig') { // Получаем тему клиента.\r\n            //     this.setState({scheme: data.scheme})\r\n            // }\r\n        });\r\n        if (this.props.params) {\r\n            fetch(BACKEND.logs.params, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {'Content-Type': 'application/json',},\r\n                redirect: 'follow',\r\n                referrer: 'no-referrer',\r\n                body: JSON.stringify(this.props.params)\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.setState({validationParams: res.status})\r\n                })\r\n                .catch(e=>console.log(e));\r\n        }\r\n    }\r\n\r\n    verificationUser = (vkUser) => {\r\n         fetch(BACKEND.users + '/vkuid/' + vkUser.id)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0) {\r\n                    const user = {\r\n                        vkUid: vkUser.id,\r\n                        firstname: vkUser.first_name,\r\n                        lastname: vkUser.last_name,\r\n                        avatarLink: vkUser.photo_200,\r\n                        sex: vkUser.sex,\r\n                        location: {\r\n                            country: vkUser.country || 'Не определен',\r\n                            city: vkUser.city || 'Не определен'\r\n                        },\r\n                        isMaster: false,\r\n                        favs: []\r\n                    };\r\n                    fetch(BACKEND.users, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {'Content-Type': 'application/json',},\r\n                        redirect: 'follow',\r\n                        referrer: 'no-referrer',\r\n                        body: JSON.stringify(user)\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(newUser => {\r\n                            this.props.loginUser(newUser);\r\n                        });\r\n                } else {\r\n                    if (usersArr[0].isMaster === true) {\r\n                        fetch(BACKEND.masters.vkuid + usersArr[0].vkUid)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                if (master.length === 0) {\r\n                                    console.log('Мастер удален');\r\n                                    return null\r\n                                } else {\r\n                                    this.props.setMaster(master[0]);\r\n                                }\r\n                            });\r\n                    }\r\n                    this.props.loginUser(usersArr[0]);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.openSnack('Отсутствует соединение с базой пользователей.');\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n\r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openAlert = (title, body, action) => {\r\n        this.setState({\r\n            popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={() => this.setState({popout: null})}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                this.props.setMaster(newMaster);\r\n                this.setState({activeViewLk: 'lk'});\r\n                this.openSnack('Вы успешно зарегистрированы. Не забудьте добавить фотографии в портфолио - так, шансы получить заказ намного выше.');\r\n                this.sendMessage('Благодарим за регистрацию. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack('Ошибка при регистрации');\r\n            this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    sendMessage = (message) => {\r\n        let token = BACKEND.keyGroup;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.user.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => console.log(result))\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({activeMaster: master, activeMasterId: master._id, activePanelMasters: panelName});\r\n    };\r\n\r\n    openMasterOnId = (masterId) => {\r\n        this.setState({activePanelFindModels: 'masterInfo', activeMasterId: masterId});\r\n    };\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n        console.log(masterId);\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        this.setState({activeMasterId: masterId, activePanelLk: 'masterInfo'});\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        patchData(BACKEND.users+'/'+user._id, user);\r\n        this.setActiveModal(null)\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"auth\" activePanel=\"auth\">\r\n                        <Panel id=\"auth\">\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                                header=\"Выполняется вход...\"\r\n                            >\r\n                                Это может занять несколько секунд\r\n                                {this.state.snackbar}\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n      } if (this.state.validationParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Все, беда. Кто-то лезет в параметры запуска :(\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" activePanel=\"news\">\r\n                        <Panel id=\"news\">\r\n                            <PanelHeader>Новости</PanelHeader>\r\n                            <News\r\n                                openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n                    <Root\r\n                        id=\"masters\"\r\n                        activeView={this.state.activeViewMasters}\r\n                        modal={\r\n                            <Modal\r\n                                header={'Выбор города'}\r\n                                activeModal={this.state.activeModal}\r\n                                pageId={'cityList'}\r\n                                onClose={()=>this.setActiveModal(null)}\r\n                                content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                                leftButton={false}\r\n                                rightButton={false}\r\n                            />\r\n                        }\r\n                    >\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <Masters\r\n                                    changeCity={() => this.setActiveModal('cityList')}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    changeCategory={()=>this.setState({activeViewMasters: 'masterCat'})}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head\r\n                                    title={'О мастере'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                />\r\n                                <MasterCard\r\n                                    openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openComments={() => this.setState({activePanelMasters: 'masterComments'})}\r\n                                    activeMasterId={this.state.activeMasterId}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.setState({activeViewMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.state.activePanelFindModels}\r\n                        modal={\r\n                            <Modal\r\n                                header={'Выбор города'}\r\n                                activeModal={this.state.activeModal}\r\n                                pageId={'cityList'}\r\n                                onClose={()=>this.setActiveModal(null)}\r\n                                content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                                leftButton={false}\r\n                                rightButton={false}\r\n                            />\r\n                        }\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ишу модель</PanelHeader>\r\n                            <FindModel\r\n                                openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                changeCity={() => this.setActiveModal('cityList')}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head\r\n                                title={'О мастере'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                            />\r\n                            <MasterCard\r\n                                openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                activeMasterId={this.state.activeMasterId}\r\n                                openComments={() => this.setState({activePanelFindModels: 'masterComments'})}\r\n                                setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterComments\r\n                                activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout} modal={\r\n                            <Setting\r\n                                snackbar={(message) => this.openSnack(message)}\r\n                                modalBack={this.modalBack}\r\n                                activeModal={this.state.activeModal}\r\n                                changeModal={(name) => this.setActiveModal(name)}\r\n                            />\r\n                        }>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнерам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            user={user}\r\n                                            openSetting={() => this.setActiveModal('setting')}\r\n                                            openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                            openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                            openMasterPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head\r\n                                    title={'Избранное'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Favourite\r\n                                    user={user}\r\n                                    openFavMasterOnId={this.openFavMasterOnId}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head\r\n                                    title={'О мастере'}\r\n                                    goBack={() => this.setState({activePanelLk: 'favourite'})}\r\n                                />\r\n                                <MasterCard\r\n                                    openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                    user={user}\r\n                                    activeMasterId={this.state.activeMasterId}\r\n                                    openComments={() => this.setState({activePanelLk: 'masterComments'})}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Portfolio user={user}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <MasterComments user={user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head title={'Мастер ищет модель'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <FindModelMaster user={user} popout={this.openAlert}/>\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id=\"registration\">\r\n                            <Panel id='registration'>\r\n                                <Head title={'Регистрация'} goBack={() => this.setState({activeViewLk: 'lk'})}/>\r\n                                <Invite\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelReg: 'registration'})}/>\r\n                                <CityList changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelReg: 'registration'})\r\n                                }}/>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","import React from 'react';\r\nimport {Panel, View, Cell} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Warn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <View>\r\n                <Panel>\r\n                    <Cell>Доступ запрещен</Cell>\r\n                </Panel>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Warn;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Warn from './Warn';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nconst qs = require('query-string');\r\nconst crypto = require('crypto');\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}><App linkParams={linkParams} params={params} /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}