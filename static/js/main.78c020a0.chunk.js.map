{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/store/reducers.js","js/store/actions.js","js/masters/mastersCard.js","js/elements/functions.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["Head","props","theme","left","onClick","goBack","title","BACK_LINK","process","BACKEND","users","auth","like","message","masters","all","onID","category","vkuid","subscribers","onarrayid","connect","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getCities","isMember","getAll","logs","params","sendmessage","moder","moderCom","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","activePanelnews","activePanelmasters","activePanelfindmodel","activePanellk","newsHistory","mastersHistory","findmodelHistory","lkHistory","activeStory","setMaster","console","log","type","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","goTo","story","panel","goForward","changeStory","MastersCard","handleChange","event","setState","target","name","value","sendMessage","data","state","sendtitle","phone","fetch","activeMaster","_id","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","openSnackAvatar","avatarLink","catch","e","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","getPhone","share","bridge","send","result","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","phone_number","enterNumber","error_data","error_reason","number","snackbar","duration","layout","onClose","className","mask","defaultValue","align","onChange","this","url","postData","images","start_index","text","after","src","size","response","marginTop","visible","id","disabled","bottom","marginLeft","vkUid","description","brand","firstname","lastname","expandable","openComments","indicator","comments","filter","Boolean","length","photos","map","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","openPhoto","icon","header","separator","priceList","item","multiline","price","React","Component","dispatch","bindActionCreators","reverse","image","gridPhoto","MastersComments","changeStars","stars","i","rating","sendComment","Number","isCommended","count","commentsArr","countComments","prevProps","prevState","snapshot","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","star","replace","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","user_id","ingroup","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","photo","openModer","openReg","nowCounter","countUsers","countMasters","countCities","cities","city","inGroup","vk_is_favorite","sort","Invite","getCategories","categories","regMaster","checkLicense","cat","subcat","active","label","location","country","closeReg","error","addProd","status","add","saveProd","undefined","newProdTitle","newProdBody","newProdPrice","onRemove","slice","permMessage","statusMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","asideContent","checked","subcategory","require","stretched","openRules","Lk","checkModeration","reasons","reason","addToFavApp","connection","tmpUser","isMaster","isUser","favsArr","mastersArr","bottomContent","openSetting","openFavourite","openMasterPhoto","openFindModel","Portfolio","uploadUrl","token","loading","formData","FormData","selectedFile","document","getElementById","files","append","fetchJsonp","saveUrl","savePh","sizes","imgArr","unshift","img","openSnack","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","accept","CityListModal","search","toLowerCase","country_id","cityList","Fragment","region","withModalRootContext","Setting","platform","saveChanges","patchData","openSnackDismiss","checkBan","banned","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","Array","isArray","String","onSubmit","handleSubmit","Favourite","loadFavsMasters","ids","isLoaded","err","window","history","replaceState","pushState","addEventListener","caption","openFavMasterOnId","FindCard","find","sale","openMasterOnId","masterId","marginBottom","FindList","findArr","action","FindModel","loadFind","scrollTo","self","pageYOffset","FindModelMaster","handleChangeSelect","selectvalue","save","isActive","Partners","addToCommunity","CityList","Moder","good","bad","goodComment","badComment","activeTab","mastersCount","usersCount","openMaster","selected","renderMasters","renderComments","MastersList","setBottom","setTitle","ratingArr","reduce","a","b","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","App","validLaunchParams","newMaster","activeViewLk","openMasterOnLink","activeMasterId","activeViewMasters","activePanelMasters","hist","openStory","storyName","activePanelFindModels","activePanelLk","activePanelReg","baseCities","searchCity","activeModal","modalHistory","activeTabLk","scheme","onStoryChange","launchParams","sign","subscribe","detail","onpopstate","dataset","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","activeView","modalBack","setActiveModal","openAlert","hostname","match","config","store","createStore","changeIsMaster","newhistory","pop","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.78c020a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","const BACK_LINK = process.env.REACT_APP_BACK_LINK;\r\n\r\nexport const BACKEND = {\r\n    users: {\r\n        auth: BACK_LINK+'users/auth/',\r\n        like: BACK_LINK+'users/like/'\r\n    },\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/',\r\n        connect: BACK_LINK+'masters/connect/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/',\r\n        getCities: BACK_LINK+'vkapi/getCities',\r\n        isMember: BACK_LINK+'vkapi/isMember'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    moder: BACK_LINK+'masters/moderation/',\r\n    moderCom: BACK_LINK+'comment/moderation/',\r\n};","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS';\r\nexport const GO_TO = 'GO_TO';\r\nexport const GO_FORWARD = 'GO_FORWARD';\r\nexport const CHANGE_STORY = 'CHANGE_STORY';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: null,\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null,\r\n    activePanelnews: 'news',\r\n    activePanelmasters: 'mastersList',\r\n    activePanelfindmodel: 'findmodel',\r\n    activePanellk: 'lk',\r\n    newsHistory: ['news'],\r\n    mastersHistory: ['mastersList'],\r\n    findmodelHistory: ['findmodel'],\r\n    lkHistory: ['lk'],\r\n    activeStory: 'news'\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity:action.payload.location.city};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload};\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload};\r\n        case GO_TO:\r\n            const history = state[action.payload.story+'History'];\r\n            history.push(action.payload.panel);\r\n            return {...state, ['activePanel'+action.payload.story]: action.payload.panel, [action.payload.story+'History']: history};\r\n        case GO_FORWARD:\r\n            let newhistory = state[action.payload.story+'History'];\r\n            newhistory.pop();\r\n            return {...state, [action.payload.story+'History']: newhistory, ['activePanel'+action.payload.story]: newhistory[newhistory.length -1]};\r\n        case CHANGE_STORY:\r\n            return {...state, activeStory: action.payload}\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS,\r\n    GO_TO,\r\n    GO_FORWARD,\r\n    CHANGE_STORY\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER');\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER');\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS');\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    };\r\n};\r\n\r\nexport const goTo = (story, panel) => {\r\n    return {\r\n        type: GO_TO,\r\n        payload: {story: story, panel: panel}\r\n    };\r\n};\r\n\r\nexport const goForward = (story) => {\r\n    return {\r\n        type: GO_FORWARD,\r\n        payload: {story: story}\r\n    };\r\n};\r\n\r\nexport const changeStory = (story) => {\r\n    return {\r\n        type: CHANGE_STORY,\r\n        payload: story\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner,\r\n    Header,\r\n    Card,\r\n    CardGrid,\r\n    CardScroll,\r\n    Button,\r\n    FormLayout,\r\n    RichCell,\r\n    CellButton,\r\n    Placeholder,\r\n    Panel,\r\n    SimpleCell\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData, postData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline';\r\nimport Head from \"../elements/panelHeader\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {loginUser} from \"../store/actions\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props.activeMaster);\r\n       this.setState({activeMaster: this.props.activeMaster}, ()=> this.loadFavs())\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            postData(BACKEND.users.like+this.state.activeMaster._id, this.props.params);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let data = {\r\n            params: this.props.params,\r\n            title: this.state.sendtitle,\r\n            phone: this.state.phone\r\n        };\r\n        fetch(BACKEND.masters.connect+this.state.activeMaster._id, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink)\r\n            })\r\n            .catch(e=>console.log(e));\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.getPhone(title)}\r\n                mode=\"outline\"\r\n            >\r\n                Записаться\r\n            </Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number});\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Cell>Мастер скрыт</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <RichCell\r\n                            disabled\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            bottom={\r\n                                    <Div style={{marginLeft: 10, padding: 0}}>\r\n                                                <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                        {\r\n                                            this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                                ?\r\n                                                null\r\n                                                :\r\n                                                this.favStatus()\r\n                                        }\r\n                                    </Div>\r\n                            }\r\n                        >\r\n                            <SimpleCell description={this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}>{this.state.activeMaster.firstname} {this.state.activeMaster.lastname}</SimpleCell>\r\n                        </RichCell>\r\n\r\n                        {/*<Cell*/}\r\n                        {/*    photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"*/}\r\n                        {/*    description={*/}\r\n                        {/*        this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type*/}\r\n                        {/*    }*/}\r\n                        {/*    bottomContent={*/}\r\n                        {/*        this.props.user.vkUid === this.state.activeMaster.vkUid*/}\r\n                        {/*            ?*/}\r\n                        {/*            {null}*/}\r\n                        {/*            :*/}\r\n                        {/*            <Cell>*/}\r\n                        {/*                {this.favStatus()}*/}\r\n                        {/*                <Button onClick={() => this.share()}>Поделиться</Button>*/}\r\n                        {/*            </Cell>*/}\r\n                        {/*    }*/}\r\n                        {/*    before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}*/}\r\n                        {/*    size=\"l\"*/}\r\n                        {/*>*/}\r\n                        {/*    {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}*/}\r\n                        {/*</Cell>*/}\r\n\r\n                        <Separator/>\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.filter(Boolean).length}\r\n                            description={'Подписчиков: ' + this.state.countFavs}\r\n                        >\r\n                            Отзывы\r\n                        </Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Div>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Div> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <div>\r\n                                                            <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                        </div>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        loginUser: bindActionCreators(loginUser, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MastersCard);","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport {connect} from \"react-redux\";\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars();\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment !== null && comment.user === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        fetch(BACKEND.comment.onMasterId+this.props.activeMaster._id)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                console.log(res);\r\n                this.setState({commentsArr: res, countComments: count, isLoad: true});\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = [];\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            }\r\n        }\r\n        this.setState({stars: stars});\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера';\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body,\r\n                moderation: false,\r\n                params: this.props.params\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Комментарий отправлен на проверку\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr, isCommended: true, snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                        >\r\n                            Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                        </Snackbar>});\r\n            })\r\n            .catch(e=>this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e.message}\r\n                    </Snackbar>\r\n            }));\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={comment.rating+` из 5`}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        {/*<Slider*/}\r\n                        {/*    step={1}*/}\r\n                        {/*    min={1}*/}\r\n                        {/*    max={5}*/}\r\n                        {/*    value={Number(this.state.rating)}*/}\r\n                        {/*    onChange={rating=>this.setState({rating})}*/}\r\n                        {/*    top={\"Моя оценка работы мастера: \"+this.state.rating}*/}\r\n                        {/*    bottom='Перемещайте ползунок влево или вправо для изменения оценки'*/}\r\n                        {/*/>*/}\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/ /g, \"\").length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers, countCities: data.countCities, cities: data.cities.sort()})\r\n            });\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранные</Button>}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        const data = {\r\n            user_id: this.props.user.vkUid\r\n        };\r\n        fetch(BACKEND.vkapi.isMember,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ingroup === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {this.props.master === null &&\r\n                    <Cell\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы - мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <div>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        <Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>\r\n                        <Cell multiline>\r\n                            {\r\n                                this.state.cities &&\r\n                                this.state.cities.map(city=>{\r\n                                    return city+' '\r\n                                })\r\n                            }\r\n                        </Cell>\r\n                    </div>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                    <Group>\r\n                        <Placeholder\r\n                            icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                            header=\"Привет!\"\r\n                        >\r\n                            У нас ты можешь найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                        </Placeholder>\r\n                        {this.userInfo(user)}\r\n                        {this.nowCounter()}\r\n                        {this.isMember()}\r\n                        {this.favApp()}\r\n                        {/*{this.feedList()}*/}\r\n                        {/*<FixedLayout*/}\r\n                        {/*    vertical=\"bottom\"*/}\r\n                        {/*    style={{marginBottom: 5}}*/}\r\n                        {/*>*/}\r\n                        {/*    */}\r\n                        {/*</FixedLayout>*/}\r\n                    </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            //if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                description: this.state.description,\r\n                type: this.state.type,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                priceList: this.state.priceList,\r\n                params: this.props.params\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена');\r\n    };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <CardGrid>\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <Cell\r\n                                        size=\"l\"\r\n                                        description=\"Регистрация мастера\"\r\n                                        before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                    >\r\n                                        {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={this.props.changeCity}\r\n                                        indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                        status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                        bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                    >\r\n                                        Ваш город\r\n                                    </Cell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                            <CardGrid>\r\n                                    <Cell\r\n                                        multiline\r\n                                        asideContent={\r\n                                            <Switch\r\n                                                onChange={this.permMessage}\r\n                                                checked={this.state.statusMessage}/>\r\n                                        }\r\n                                        bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                    >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                    </Cell>\r\n                            </CardGrid>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                // removable\r\n                                                // onRemove={() => {\r\n                                                //     this.onRemove(index)\r\n                                                // }}\r\n                                                >\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            </Cell>\r\n                                            <Button\r\n                                                //before={<Icon24Dismiss/>}\r\n                                                onClick={() => {this.onRemove(index)}}\r\n                                                size=\"xl\"\r\n                                                mode=\"destructive\"\r\n                                            >Удалить</Button>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <Cell><Input\r\n                                            require\r\n                                            name=\"newProdTitle\"\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/></Cell>\r\n                                        <Cell><Textarea\r\n                                            require\r\n                                            name=\"newProdBody\"\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/></Cell>\r\n                                        <Cell><Input\r\n                                            require\r\n                                            name=\"newProdPrice\"\r\n                                            type=\"number\" value={this.state.newProdPrice}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/></Cell>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button, Card} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            if (this.props.master.moderation.reasons.length > 0) {\r\n                return (\r\n                    <Card>\r\n                        <Cell description={'Их необходимо исправить'}>При модерации обнаружены ошибки:</Cell>\r\n                        {\r\n                            this.props.master.moderation.reasons.map((reason, index)=>{\r\n                                return <Cell key={index}>{reason}</Cell>\r\n                            })\r\n                        }\r\n                    </Card>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Card>\r\n                        <Cell multiline>Ваш профиль на проверке. В течении часа он будет доступен в поиске.</Cell>\r\n                    </Card>\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'}\r\n                    bottomContent={this.props.master !== null && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.props.user.firstname+' '+this.props.user.lastname}\r\n                </Cell>\r\n                {this.props.master !== null && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.props.master !== null &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Lk);","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Snackbar, Cell, PanelSpinner, Spinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Portfolio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.master.photos.reverse(), isLoad: true});\r\n    }\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        try {\r\n            if (this.state.uploadUrl === undefined) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n            if (this.state.token === undefined) throw 'Ошибка. Не получен токен пользователя.';\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            formData.append('master', this.props.master.firstname+' '+this.props.master.lastname );\r\n            formData.append('uploadUrl', this.state.uploadUrl);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            formData.append('masterId', this.props.master._id);\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    fetchJsonp(res.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result =>{\r\n                            console.log(result);\r\n                        const savePh = {\r\n                            url: result.response[0].sizes[2].url,\r\n                            params: this.props.params\r\n                        };\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                                body: JSON.stringify(savePh)\r\n                            })\r\n                                .then(res => res.json())\r\n                                .then(res =>{\r\n                                    console.log(res);\r\n                                    let imgArr = this.state.images;\r\n                                    imgArr.unshift(res.img);\r\n                                    this.openSnack('Фото успешно загружено');\r\n                                    this.setState({images: imgArr, loading: false});\r\n                                })\r\n                                .catch(e=>console.log(e))\r\n                        })\r\n                        .catch(e=>console.log(e))\r\n                    // console.log(res);\r\n                    // let imgArr = this.state.images;\r\n                    // imgArr.unshift(res.img);\r\n                    // this.openSnack('Фото успешно загружено');\r\n                    // this.setState({images: imgArr, loading: false});\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n        } catch(e){\r\n            this.openSnack(e);\r\n        }\r\n\r\n    };\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                this.getUploadServer(data.access_token);\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    accept=\"image/*\"\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    onClick={this.getToken}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Portfolio);","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const data = {\r\n            search: this.state.search.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories, isLoad: true});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveChanges()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master;\r\n            master.location.city = this.props.targetCity;\r\n            this.setState({master: master});\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        const master = this.state.master;\r\n        master.params = this.props.params;\r\n        this.patchData(BACKEND.masters.all + this.state.master._id, master);\r\n        this.props.setMaster(this.state.master);\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.props.snackbar('Изменения сохранены');\r\n            })\r\n            .catch(e=>console.log(e.message))\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    saveProd = () => {\r\n        try {\r\n            if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n            if (this.state.newProdTitle.length > 20) throw 'Название длинее 20-ти символов необходимо сократить';\r\n            if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n            if (this.state.newProdBody.length > 250) throw 'Описание процедуры слишком длинное. Сейчас заполнено - '+this.state.newProdBody.length+\" из \"+250;\r\n            if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n            if (this.state.newProdPrice.length > 5) throw 'Максимально допустимы 5-ти значные суммы';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: this.state.newProdPrice\r\n            });\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.openSnack('Процедура добавлена');\r\n        } catch (error) {\r\n            this.openSnackDismiss(error)\r\n        }\r\n    };\r\n    // saveProd = () => {\r\n    //     try {\r\n    //         if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n    //         if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n    //         if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n    //         let master = this.state.master;\r\n    //         master.priceList.push({\r\n    //             title: this.state.newProdTitle,\r\n    //             body: this.state.newProdBody,\r\n    //             price: this.state.newProdPrice\r\n    //         });\r\n    //         this.setState({master: master});\r\n    //         this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n    //         this.props.snackbar('Процедура добавлена');\r\n    //     } catch (error) {\r\n    //         this.props.snackbar(error)\r\n    //     }\r\n    // };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.master.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.props.changeModal('changeCity')}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\" key={index}>\r\n                                                <Cell\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    //removable\r\n                                                    // onRemove={() => {\r\n                                                    //     this.onRemove(index)\r\n                                                    // }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                    <Button\r\n                                                        //before={<Icon24Dismiss/>}\r\n                                                        onClick={() => {this.onRemove(index)}}\r\n                                                        size=\"xl\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Удалить</Button>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Textarea\r\n                                                require\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\" value={this.state.newProdPrice}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={this.checkSubcat}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                        {this.state.snackbar}\r\n                            </Div>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.history.replaceState({}, '', '#init');\r\n        window.history.pushState({}, '', '#router');\r\n        window.addEventListener('popstate', event => {\r\n            window.history.pushState({}, '', '#router-back');\r\n            this.props.goBack();\r\n        });\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56LikeOutline/>}\r\n                        header={this.state.mastersArr.message}\r\n                    >Добавить мастера в этот список можно, нажав соответствующую кнопку в профиле мастера.\r\n                    </Placeholder>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master.vkUid}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <RichCell\r\n                                            key={master._id}\r\n                                            before={<Avatar size={72} src={master.avatarLink} />}\r\n                                            text={master.type}\r\n                                            caption={master.location.city.title}\r\n                                            after={<Icon16Chevron/>}\r\n                                            onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >\r\n                                            {master.firstname} {master.lastname}\r\n                                        </RichCell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n\r\n                                // <CardGrid key={master._id}>\r\n                                //     <Card size=\"l\" mode=\"shadow\">\r\n                                //         <Cell expandable\r\n                                //               photo={master.avatarLink}\r\n                                //               description={master.type}\r\n                                //               before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                //               size=\"l\"\r\n                                //               onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                //         >{master.firstname} {master.lastname}\r\n                                //         </Cell>\r\n                                //     </Card>\r\n                                // </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\n// function renderLastPhoto(arr){\r\n//     for (let i =0; i<arr.length; i++){\r\n//         if (!arr[i]) break;\r\n//         return (\r\n//             <Card\r\n//                 size=\"s\"\r\n//                 mode=\"shadow\"\r\n//                 key={i}\r\n//                 //onClick={() => this.openShowImages(this.state.images, index)}\r\n//             >\r\n//                 <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    console.log(find);\r\n                    this.props.changeFindModelsList(find);\r\n                    this.setState({findArr: find, isLoad: true});\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.findModel.onMasterId+this.props.master._id)\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                if (find.length > 0) {\r\n                    console.log(find);\r\n                    this.setState({loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                } else {\r\n                    let error = <Cell>У вас нет активных поисков</Cell>;\r\n                    this.setState({error: error, isLoaded: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if(this.props.master.photos.length < 3) throw 'В портфолио должно быть не менее 3-х фотографий';\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if (this.state.body.length === 0) throw 'Пустое сообщение недопустимо';\r\n            let images = [];\r\n            this.props.master.photos.map((image,i)=> {\r\n                if (i < 3){\r\n                    images.push(image)\r\n                }\r\n            });\r\n            if (this.state.isActive === true) {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                console.log('измененный',find);\r\n                this.setState({loadFind: find});\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n                this.openSnack('Информация успешно обновлена.')\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                // find.masterId = this.state.activeMaster._id;\r\n                // find.location = this.state.activeMaster.location;\r\n                // find.firstname = this.state.activeMaster.firstname;\r\n                // find.lastname = this.state.activeMaster.lastname;\r\n                // find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                this.postData(BACKEND.findModel.new, find);\r\n                this.openSnack('Информация о поиске успешно размещена.')\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.props.master.photos.length > 0 ?\r\n                                    this.props.master.photos.map((image,i)=>{\r\n                                        return (\r\n                                            <Card size='s' key={i}>\r\n                                                <div\r\n                                                    style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                >\r\n                                                </div>\r\n                                            </Card>\r\n                                        )\r\n                                    }) : 'У вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий'\r\n                                }\r\n                                </CardGrid>\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>this.setState({visible: !this.state.visible})}\r\n                                        checked={this.state.visible}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <FindCard\r\n                                    date={this.getDate(this.state.loadFind.date)}\r\n                                    key={this.state.loadFind._id}\r\n                                    find={this.state.loadFind}\r\n                                    openMasterOnId={this.props.openMasterOnId}\r\n                                />\r\n                            }\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModelMaster);","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества со схожей тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\nimport Head from \"./panelHeader\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: false,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 49, title: 'Екатеринбург'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const data = {\r\n            search: this.state.search.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n}\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                        <React.Fragment>\r\n                            <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                            {this.state.cities.length > 0 ?\r\n                            <List>\r\n                                {this.state.cities.map(city =>\r\n                                    <Cell\r\n                                        description={city.region || ''}\r\n                                        onClick={()=>this.props.changeCity(city)}\r\n                                        key={city.id}\r\n                                    >\r\n                                        {city.title}\r\n                                    </Cell>\r\n                                )}\r\n                            </List> :\r\n                                <Placeholder\r\n                                    icon={<Icon56PlaceOutline />}\r\n                                    header=\"Город не найден\"\r\n                                >\r\n                                    Проверьте опечатки или измените критерии поиска\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel, Textarea, Cell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\n\r\nimport {BACKEND} from \"../func/func\";\r\nimport Head from \"../elements/panelHeader\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            })\r\n            .catch(e=>console.log(e))\r\n        fetch(BACKEND.comment.moderation,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                this.setState({comments: comments})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: [],\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        // if (index > -1) {\r\n        //     mastersList.splice(index, 1);\r\n        // } else mastersList.splice(0, index);\r\n        // this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        mastersList[index].moderation.reasons = reasons;\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n        this.setState({mastersList: mastersList});\r\n    };\r\n\r\n    goodComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'good');\r\n        fetch(BACKEND.moderCom+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    badComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'bad');\r\n        fetch(BACKEND.moderCom+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null;\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment._id, index)} mode=\"destructive\">Удалить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment.body}\r\n                        </RichCell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Cell>\r\n                                            <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                            <Button onClick={()=>this.setState({[master.vkUid]: true})} mode=\"secondary\">Отклонить</Button>\r\n                                        </Cell>\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                            {\r\n                                master.moderation.reasons.length > 0 &&\r\n                                <Cell>\r\n                                    {\r\n                                        master.moderation.reasons.map(reason=>{\r\n                                            return reason\r\n                                        })\r\n                                    }\r\n                                </Cell>\r\n                            }\r\n                            {\r\n                                this.state[master.vkUid] === true &&\r\n                                <Cell>\r\n                                    <Textarea name='reason' value={this.state.reason} onChange={(event)=>{\r\n                                        console.log(this.state.reason);\r\n                                        this.setState({reason: event.target.value})\r\n                                    }\r\n                                    }/>\r\n                                    <Button onClick={()=>this.bad(master._id, index)} mode=\"secondary\">Отклонить</Button>\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Panel id=\"moder\">\r\n                <Head\r\n                    title={'Модерация'}\r\n                    goBack={() => this.props.goBack()}\r\n                />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'masters' })}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'comments' })}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Moder);","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArrNew = master.comments.map(comment => {\r\n                if (comment !== null) return Number(comment.rating)\r\n            });\r\n            let ratingArr = ratingArrNew.filter(Boolean);\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster(master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner, Div, Panel, View} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    window.scrollTo(0, this.props.mastersListScroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <Panel id=\"mastersList\">\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e)=>this.checkSubcat(e)}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n                    {this.props.snackbar}\r\n                </Panel>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster, changeActiveMasterOnMasters, changeActiveMasterOnFindModels, changeActiveMasterOnFavs, changeLaunchParams, changeStory, goTo, goForward} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport HeadCity from \"./js/elements/headCity\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\"\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.launchParams.sign !== undefined) {\r\n            this.setState({validLaunchParams: true});\r\n            console.log('Параметры пришли');\r\n            this.props.changeLaunchParams(this.props.launchParams);\r\n            this.auth(this.props.launchParams);\r\n        } else {\r\n            this.setState({validLaunchParams: false});\r\n            this.openSnack('Ошибка. Не переданы параметры запуска.');\r\n        }\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n        });\r\n        window.onpopstate = () => {\r\n            this.goBack(this.props.activeStory)\r\n        };\r\n    }\r\n\r\n    auth = (params) => {\r\n        fetch(BACKEND.users.auth, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                this.setState({validLaunchParams: true});\r\n                this.props.loginUser(data.user);\r\n                if (data.master !== null){\r\n                    this.props.setMaster(data.master)\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                this.openSnack('Ошибка подключения к серверу.')\r\n                this.setState({validLaunchParams: false});\r\n            })\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                this.props.setMaster(newMaster);\r\n                this.setState({activeViewLk: 'lk'});\r\n                this.openSnack('Ваш профиль отправлен на проверку. Не забудьте добавить фотографии в портфолио - так, шансы получить заказ намного выше.');\r\n                //this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack(e.message);\r\n            //this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n        console.log(masterId);\r\n    };\r\n\r\n    goTo = (story, panel) => {\r\n        window.history.pushState({panel: panel}, panel);\r\n        this.props.goTo(story, panel)\r\n        let hist = this.props[story+'History'];\r\n        console.log(hist);\r\n    };\r\n\r\n    goBack = (story) => {\r\n        if (this.props[story+'History'].length === 1){\r\n            bridge.send('VKWebAppClose', {'status': 'sucsess'});\r\n        } else {\r\n            this.props.goForward(story)\r\n            let hist = this.props[story+'History'];\r\n            console.log(hist);\r\n        }\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        user.params = this.props.params;\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Все, беда. Кто-то лезет в параметры запуска :(\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                        header=\"Выполняется вход...\"\r\n                    >Это может занять несколько секунд\r\n                        {this.state.snackbar}\r\n                    </Placeholder>\r\n                </ConfigProvider>\r\n            )\r\n      } else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.props.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('news')}\r\n                            selected={this.props.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('masters')}\r\n                            selected={this.props.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('findmodel')}\r\n                            selected={this.props.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('lk')}\r\n                            selected={this.props.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" history={this.props.newsHistory} onSwipeBack={() => this.goBack('news')} activePanel={this.props.activePanelnews}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={()=>{\r\n                                    this.props.changeStory('lk');\r\n                                    this.setState({activeViewLk: 'registration'})\r\n                                }}\r\n                                //openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                // openModer={() => this.goForwardNews('moder')}\r\n                                openModer={() => this.goTo('news', 'moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBack('news')}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master});\r\n                                    this.goTo('news', 'masterInfo');\r\n                                    //this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('news')}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                    </View>\r\n                        <View id=\"masters\" activePanel={this.props.activePanelmasters} history={this.props.mastersHistory} onSwipeBack={() => this.goBack('masters')}>\r\n                            <Masters\r\n                                id=\"mastersList\"\r\n                                    //changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                    changeCity={()=> this.goTo('masters', 'changeCity')}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    //changeCategory={()=>this.setState({activePanelMasters: 'masterCat'})}\r\n                                    changeCategory={()=>this.goTo('masters', 'masterCat')}\r\n                                    openPanelMaster={(master)=>{\r\n                                        this.props.changeActiveMasterOnMasters(master);\r\n                                        this.goTo('masters', 'masterInfo');\r\n                                    }}\r\n                                    snackbar={this.state.snackbar}\r\n                            />\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.props.goBack()}/>\r\n                                    <CityList\r\n                                            id='changeCity'\r\n                                            // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                            goBack={() => this.goBack('masters')}\r\n                                            changeCity={(city) => {\r\n                                            this.changeTargetCity(city);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'})\r\n                                        }}\r\n                                    />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    //onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    //openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openPhoto={() => this.goTo('masters', 'masterPhoto')}\r\n                                    openComments={() => this.goTo('masters', 'masterComments')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <Head\r\n                                    title={'Выбор категории'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.props.activePanelfindmodel}\r\n                        history={this.props.findmodelHistory} onSwipeBack={() => this.goBack('findmodel')}\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ишу модель</PanelHeader>\r\n                            <FindModel\r\n                                //openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                openMasterOnId={(masterId)=>{\r\n                                    fetch(BACKEND.masters.onID + masterId)\r\n                                        .then(res => res.json())\r\n                                        .then(master => {\r\n                                            this.props.changeActiveMasterOnFindModels(master);\r\n                                            console.log(master);\r\n                                            this.goTo('findmodel', 'masterInfo')\r\n                                        });\r\n                                }}\r\n                                // changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                                changeCity={() => this.goTo('findmodel', 'changeCity')}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='changeCity'>\r\n                            <Head title={'Выбор города'}\r\n                                  goBack={() => this.props.goBack()}/>\r\n                        <CityList\r\n                                id='changeCity'\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.goBack('findmodel')\r\n                            }}\r\n                        />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <MasterCard\r\n                                id=\"masterInfo\"\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                openPhoto={() => this.goTo('findmodel', 'masterPhoto')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                openComments={() => this.goTo('findmodel', 'masterComments')}\r\n                                //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterPhoto\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterComments\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.props.activePanellk} history={this.props.lkHistory} onSwipeBack={() => this.goBack('lk')}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнерам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.goTo('lk', 'setting')}\r\n                                            openFavourite={() => this.goTo('lk', 'favourite')}\r\n                                            openFindModel={() => this.goTo('lk', 'findModel')}\r\n                                            openMasterPhoto={() => this.goTo('lk', 'portfolio')}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Head\r\n                                    title='Настройки'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Setting\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                    modalBack={this.modalBack}\r\n                                    activeModal={this.state.activeModal}\r\n                                    changeModal={(name) => this.setActiveModal(name)}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head\r\n                                    title='Избранное'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Favourite\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    openFavMasterOnId={(masterId)=>{\r\n                                        fetch(BACKEND.masters.onID + masterId)\r\n                                            .then(res => res.json())\r\n                                            .then(master => {\r\n                                                this.props.changeActiveMasterOnFavs(master);\r\n                                                this.goTo('findmodels', 'masterInfo')\r\n                                            });\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    openPhoto={() => this.goTo('lk', 'masterPhoto')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    openComments={() => this.goTo('lk', 'masterComments')}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"portfolio\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Portfolio\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title='Отзывы'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head\r\n                                    title='Ищу модель'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <FindModelMaster\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user} popout={this.openAlert}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id='registration'>\r\n                            <Panel id='registration'>\r\n                                <Head\r\n                                    title={'Регистрация'}\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                />\r\n                                <Invite\r\n                                    goBack={() => this.setState({activeViewLk: 'lk'})}\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                    openRules={() => this.setState({activePanelReg: 'rules'})}\r\n                                    snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='rules'>\r\n                                <Head\r\n                                    title='Соглашение'\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                                <Rules\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.props.goBack()}/>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.setState({activePanelReg: 'registration'})}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelReg: 'registration'})\r\n                                }}\r\n                            />\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs,\r\n        params: state.params,\r\n        activePanelnews: state.activePanelnews,\r\n        activePanelmasters: state.activePanelmasters,\r\n        activePanelfindmodel: state.activePanelfindmodel,\r\n        activePanellk: state.activePanellk,\r\n        activeStory: state.activeStory,\r\n        newsHistory: state.newsHistory,\r\n        mastersHistory: state.mastersHistory,\r\n        findmodelHistory: state.findmodelHistory,\r\n        lkHistory: state.lkHistory\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch),\r\n        changeStory: bindActionCreators(changeStory, dispatch),\r\n        goTo: bindActionCreators(goTo, dispatch),\r\n        goForward: bindActionCreators(goForward, dispatch)\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nrequire('dotenv').config();\r\n\r\n\r\nconst store = createStore(rootReducer);\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\n// let linkParams =  window\r\n//     .location\r\n//     .hash\r\n//     .replace('#','')\r\n//     .split('&')\r\n//     .reduce(\r\n//         function(p,e){\r\n//             let a = e.split('=');\r\n//             p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n//             return p;\r\n//         },\r\n//         {}\r\n//     );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App launchParams={params} />\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}