{"version":3,"sources":["js/func/func.js","js/masters/panelMasterList.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/idea/idea.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","App.js","serviceWorker.js","index.js"],"names":["BACK_LINK","BACKEND","users","masters","all","onID","category","vkuid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","MasterList","props","state","mastersList","title","isLoad","console","log","this","fetch","then","res","json","setState","setTitle","length","id","count","undefined","Array","isArray","style","display","alignItems","flexDirection","size","marginTop","multiline","level","map","key","vkUid","padding","mode","expandable","photo","description","active","label","bottomContent","margin","fontSize","color","before","src","avatarLink","onClick","openPanelMaster","firstname","lastname","separator","header","renderMaster","React","Component","MastersCard","favStatus","isFavourite","status","checkFavs","width","height","fill","loadFavs","activeMaster","_id","favsArr","countFavs","fav","userId","changeVisible","index","userVkUid","masterId","masterVkUid","postData","openSnackAvatar","activeMasterId","priceList","text","snackbar","layout","onClose","after","url","data","method","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","type","openComments","indicator","comments","openPhoto","photos","slideWidth","align","slice","photoUrl","backgroundImage","backgroundSize","item","price","images","reverse","bridge","send","start_index","image","openShowImages","gridPhoto","sendComment","isCommended","e","alert","message","handleChange","event","target","name","value","author","date","Date","now","commentsArr","countComments","arr","push","top","placeholder","onChange","commentList","validate","Idea","activeTab","vertical","theme","selected","activePanel","News","icon","openStory","wide","Invite","handleCheck","mass","countMass","filter","checkLicense","hairVisible","manicureVisible","pedicureVisible","eyelashesVisible","eyebrowsVisible","shugaringVisible","cosmeticVisible","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","bind","prevProps","prevState","snapshot","about","sex","city","country","onSubmit","handleSubmit","bottom","subcategory","asideContent","checked","closeReg","Lk","connection","tmpUser","isMaster","isUser","mastersArr","openReg","openFavourite","openMasterPhoto","openFindModel","openSetting","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","result","newImg","sizes","imgArr","unshift","catch","error","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","showProfile","onRemove","patchData","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","tooltip","popout","loadCount","backgroundColor","removable","require","stretched","marginRight","Favourite","loadFavsMasters","isLoaded","openFavMasterOnId","FindModel","findList","findArr","find","openMasterOnId","FindModelMaster","save","loadFind","activeFind","osname","platform","App","regNewUser","first_name","last_name","photo_200","verifiedUser","vkUserId","usersArr","openAlert","action","actionsLayout","actions","autoclose","closeAlert","activeViewLk","change","story","view","panel","panelName","activePanelMasters","openMaster","activeViewMasters","activeStory","activePanelFindModels","activePanelLk","storyName","targetCategory","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","categories","onStoryChange","currentTarget","dataset","tabbar","data-story","activeView","left","IOS","addon","Boolean","window","location","hostname","match","params","search","replace","split","reduce","p","a","decodeURIComponent","ReactDOM","render","vk_user_id","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.767eabe2.chunk.js","sourcesContent":["//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nconst BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/'\r\n    }\r\n};\r\n\r\nexport {BACKEND};","import React from 'react';\r\nimport {Spinner, Separator, Avatar, Button, Cell, Div, Group, List, Header, CardGrid, Card} from \"@vkontakte/vkui\";\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MasterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: null,\r\n            title: '',\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Страница загрузилась');\r\n            if(this.state.category === '') {\r\n                fetch(BACKEND.masters.all)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                            this.setState({isLoad: true});\r\n                    });\r\n            } else {\r\n                fetch(BACKEND.masters.category+this.state.category.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                            this.setState({isLoad: true});\r\n                    });\r\n            }\r\n        }\r\n\r\n    setTitle(count) {\r\n        if (count===undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n    renderMaster() {\r\n        if(Array.isArray(this.state.mastersList)) {\r\n            if(this.state.isLoad === false) {\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (this.state.mastersList.length === 0) {\r\n                    return (\r\n                        <List>\r\n                            <Cell multiline>Увы, сейчас у нас нет данных о специалистах данного профиля в вашем городе.\r\n                                Помогите нам их найти :) Поделитесь ссылкой на наше приложение нажав кнопку</Cell>\r\n                            <Cell><Button size=\"xl\" level=\"commerce\">Поделиться</Button></Cell>\r\n                        </List>\r\n                    );\r\n                } else {\r\n                    return this.state.mastersList.map(master => {\r\n                        return (\r\n                                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                                      description={\r\n                                                          master.category.map(category => {\r\n                                                              if(category.active === true) {\r\n                                                                  return category.label+\" \"\r\n                                                              }\r\n                                                          })\r\n                                                      }\r\n                                                      bottomContent={\r\n                                                          <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>Рейтинг - 4.7 (На основе 23 отзывов)</Div>\r\n                                                      }\r\n                                                      before={<Avatar src={master.avatarLink} size={70}/>}\r\n                                                      size=\"l\"\r\n                                                      onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                                                >{master.firstname} {master.lastname}\r\n                                                </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                        {this.renderMaster()}\r\n                        </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MasterList","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid\r\n} from \"@vkontakte/vkui\"\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {\r\n                priceList: []\r\n            },\r\n            favsArr: [\r\n                {vkUid:12523452}\r\n            ],\r\n            isFavourite: {\r\n                status: false\r\n            },\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.setState({activeMaster: this.props.activeMaster});\r\n        this.loadFavs();\r\n    }\r\n    favStatus = () => {\r\n        if(this.state.isFavourite.status === false) {\r\n            return (\r\n                        <Cell\r\n                            onClick={this.checkFavs}\r\n                            before={<Icon16LikeOutline width={20} height={20} fill=\"red\"/>}\r\n                           // description=\"на обновления\"\r\n                        >\r\n                            Подписаться\r\n                        </Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid style={{padding: 0}}>\r\n                    <Card size=\"l\">\r\n                        <Cell\r\n                            before={<Icon16Like width={20} height={20} fill=\"red\"/>}\r\n                        >В избранном</Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        }\r\n    }\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    //action=\"Отменить\"\r\n                    //onActionClick={() => this.setState({ text: 'Сообщение Ивану было отменено.' })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        //console.log(BACKEND.favs.master+this.props.activeMaster._id);\r\n        fetch(BACKEND.favs.master+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                this.setState({favsArr: favsArr});\r\n                let count = favsArr.length;\r\n                this.setState({countFavs: count});\r\n                this.setState({isLoad: true})\r\n                this.state.favsArr.map(fav => {\r\n                    if (fav.userId === this.props.user._id) {\r\n                        this.setState({isFavourite: {status: true, id: fav._id}});\r\n                        //console.log('У тебя в избранном');\r\n                    } else {\r\n                        this.setState({isFavourite: {status: false}})\r\n                        //console.log('Нет в избранном');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    }\r\n    checkFavs = () => {\r\n        console.log('прежний статус '+this.state.isFavourite.status);\r\n        if (this.state.isFavourite.status === false) {\r\n            let fav = {\r\n                userId: this.props.user._id,\r\n                userVkUid: this.props.user.vkUid,\r\n                masterId: this.state.activeMaster._id,\r\n                masterVkUid: this.state.activeMaster.vkUid\r\n            };\r\n            this.postData(BACKEND.favs.new, fav, 'POST');\r\n            this.setState({isFavourite: {status: true}});\r\n            this.setState({countFavs: this.state.countFavs+1});\r\n            this.openSnackAvatar('Вы подписались на обновления мастера. Отменить подписку можно во вкладке Кабинет, в разделе Избранное.', this.state.activeMaster.avatarLink);\r\n        }\r\n\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={this.state.activeMaster.type}\r\n                            bottomContent={\r\n                                this.favStatus()\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <Gallery\r\n                                        slideWidth=\"90%\"\r\n                                        align=\"center\"\r\n                                        style={{height: 250}}\r\n                                    >\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <div key={index} style={{\r\n                                                        backgroundImage: 'url('+photoUrl+')',\r\n                                                        backgroundSize: 'cover'\r\n                                                    }}/>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Gallery>\r\n                                </Div>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <Cell\r\n                                            description={'От ' + item.price + \" рублей\"}\r\n                                            expandable\r\n                                            indicator=\"\">\r\n                                            {this.state.activeMaster.priceList[index].title}\r\n                                        </Cell>\r\n                                        {\r\n                                            this.state[index] &&\r\n                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                  multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                        }\r\n                                        <Separator></Separator>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, Avatar, Footer, CellButton, Textarea, Spinner, Separator} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: {\r\n                id: '1',\r\n                body: 'ТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТест',\r\n                author: 'Тест Тестович',\r\n                date: Date.now()\r\n            },\r\n            body: '',\r\n            commentsArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({commentsArr: this.props.activeMaster.comments});\r\n        //console.log('comments ',   this.props.activeMaster.comments);\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                body: this.state.body\r\n            };\r\n            try {\r\n                this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n                this.setState({isCommended: true});\r\n            } catch (e) {\r\n                alert(e);\r\n                console.log(e.message);\r\n            }\r\n    }\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={comment.date}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        //console.log(this.props.activeMaster.vkUid, this.props.user.vkUid);\r\n        if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n            )\r\n        }\r\n        else if (this.state.isCommended === true) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Textarea\r\n                        name={'body'}\r\n                        value={this.state.body}\r\n                        top=\"Добавление отзыва\"\r\n                        placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {Group, HorizontalScroll, FixedLayout, TabsItem, Tabs, Panel, PanelHeader, Cell} from \"@vkontakte/vkui\"\r\n\r\n\r\nclass Idea extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: 'all',\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Panel id=\"idea\">\r\n                <PanelHeader>Случайная идея</PanelHeader>\r\n                <FixedLayout vertical=\"top\">\r\n                    <Tabs theme=\"header\" type=\"buttons\">\r\n                        <HorizontalScroll>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'all' })}\r\n                                selected={this.state.activeTab === 'all'}\r\n                            >\r\n                                Ногти\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'users' })}\r\n                                selected={this.state.activeTab === 'users'}\r\n                            >\r\n                                Информация о разделе\r\n                            </TabsItem>\r\n                        </HorizontalScroll>\r\n                    </Tabs>\r\n                </FixedLayout>\r\n                <Group>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Этот раздел</Cell>\r\n                </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Idea;","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar, PanelSpinner\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                    <Group>\r\n                        <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n                            Привет, {this.props.user.firstname}!\r\n                        </Placeholder>\r\n                        <Cell multiline>\r\n                            Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по\r\n                            любой области косметологии или предложить свои услуги.\r\n                        </Cell>\r\n                        <Cell\r\n                            onClick={() => this.props.openStory('masters')}\r\n                            before={<Icon24UserIncoming/>}\r\n                            expandable\r\n                        >Я клиент - ищу мастера</Cell>\r\n                        <Cell\r\n                            onClick={() => this.props.openStory('lk')}\r\n                            before={<Icon24UserOutgoing/>}\r\n                            expandable\r\n                        >Я мастер - ищу клиентов</Cell>\r\n                    </Group>\r\n                <Separator wide />\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n//import connect from \"@vkontakte/vk-connect\";\r\n//import VKConnect from '@vkontakte/vkui-connect-mock';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar} from \"@vkontakte/vkui\"\r\n//import {BACKEND} from \"../func/func\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkLicense: false,\r\n            hairVisible: false,\r\n            manicureVisible: false,\r\n            pedicureVisible: false,\r\n            eyelashesVisible: false,\r\n            eyebrowsVisible: false,\r\n            shugaringVisible: false,\r\n            cosmeticVisible: false,\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            activeMaster: {\r\n\r\n            },\r\n            manicureStatus: [\r\n                    {active: false, id:\"5e3756b37612461064809b28\", label: \"Наращивание\"},\r\n                    {active: false, id:\"5e3757907612461064809b29\", label: \"Покрытие гелем\"},\r\n                    {active: false, id:\"5e3757977612461064809b2a\", label: \"Маникюр комбинированый\"},\r\n                    {active: false, id:\"5e3757a37612461064809b2b\", label: \"Маникюр обрезной\"},\r\n                    {active: false, id:\"5e3757a97612461064809b2c\", label: \"Аппаратный маникюр\"},\r\n                    {active: false, id:\"5e3757b17612461064809b2d\", label: \"Укрепление ногтей\"}\r\n                ],\r\n            pedicureStatus: [\r\n                    {active: false, id:\"5e3757f67612461064809b33\", label: \"Классический\"},\r\n                    {active: false, id:\"5e3757fb7612461064809b34\", label: \"Аппаратный\"},\r\n                    {active: false, id:\"5e3757ff7612461064809b35\", label: \"Экспресс\"},\r\n                    {active: false, id:\"5e3758037612461064809b36\", label: \"Комбинированный\"},\r\n                    {active: false, id:\"5e3758087612461064809b37\", label: \"Покрытие\"}\r\n                ],\r\n            eyelashesStatus: [\r\n                    {active: false, id:\"5e3758147612461064809b38\", label: \"Наращивание\"},\r\n                    {active: false, id:\"5e3758197612461064809b39\", label: \"Ламинирование\"},\r\n                    {active: false, id:\"5e37581e7612461064809b3a\", label: \"Кератиновая завивка\"},\r\n                    {active: false, id:\"5e3758267612461064809b3b\", label: \"Окрашивание\"},\r\n                    {active: false, id:\"5e37582b7612461064809b3c\", label: \"Биозавивка\"}\r\n                ],\r\n            eyebrowsStatus: [\r\n                    {active: false, id:\"5e3758347612461064809b3d\", label: \"Перманентный макияж\"},\r\n                    {active: false, id:\"5e37583b7612461064809b3e\", label: \"Микроблейдинг\"},\r\n                    {active: false, id:\"5e3758407612461064809b3f\", label: \"Нанонапыление\"},\r\n                    {active: false, id:\"5e3758467612461064809b40\", label: \"Долговременная укладка\"},\r\n                    {active: false, id:\"5e37584c7612461064809b41\", label: \"Окрашивание\"}\r\n                ],\r\n            shugaringStatus: [\r\n                    {active: false, id:\"5e37585a7612461064809b42\", label: \"Подмышечные впадины\"},\r\n                    {active: false, id:\"5e3758607612461064809b43\", label: \"Бикини\"},\r\n                    {active: false, id:\"5e3758647612461064809b44\", label: \"Руки\"},\r\n                    {active: false, id:\"5e3758697612461064809b45\", label: \"Ноги\"},\r\n                    {active: false, id:\"5e37586e7612461064809b46\", label: \"Белая линия живота\"}\r\n                ],\r\n            hairStatus: [\r\n                    {active: false, id:\"5e3757d07612461064809b2e\", label: \"Ламинирование\"},\r\n                    {active: false, id:\"5e3757d87612461064809b2f\", label: \"Окрашивание\"},\r\n                    {active: false, id:\"5e3757dd7612461064809b30\", label: \"Мелирование\"},\r\n                    {active: false, id:\"5e3757e17612461064809b31\", label: \"Ботокс волос\"},\r\n                    {active: false, id:\"5e3757e97612461064809b32\", label: \"Стрижка\"}\r\n                ],\r\n            cosmeticStatus: [\r\n                    {active: false, id:\"5e3758767612461064809b47\", label: \"Макияж\"},\r\n                    {active: false, id:\"5e37587a7612461064809b48\", label: \"Пилинг\"},\r\n                    {active: false, id:\"5e37587d7612461064809b49\", label: \"Чистка\"},\r\n                    {active: false, id:\"5e3758827612461064809b4a\", label: \"Массаж лица\"},\r\n                ],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.type !== this.state.type || prevState.about !== this.state.about || prevState.category !== this.state.category) {\r\n            let master = this.state.activeMaster;\r\n            master.type = this.state.type;\r\n            master.description = this.state.about;\r\n            master.category = [\r\n                {id: '5e37537a58b85c13bcffb8b4', active: this.state.count.manicureStatus > 0, label:'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', active: this.state.count.pedicureStatus > 0, label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', active: this.state.count.eyelashesStatus > 0, label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', active: this.state.count.eyebrowsStatus > 0, label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', active: this.state.count.shugaringStatus > 0, label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', active: this.state.count.hairStatus > 0, label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', active: this.state.count.cosmeticStatus > 0, label: 'Косметология'}\r\n            ];\r\n            this.setState({activeMaster: master});\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let master = this.state.activeMaster;\r\n        console.log('user пришел из props', this.props.user);\r\n        master.firstname = this.props.user.firstname;\r\n        master.lastname =this.props.user.lastname;\r\n        master.vkUid =this.props.user.vkUid;\r\n        master.avatarLink =this.props.user.avatarLink;\r\n        master.sex =this.props.user.sex;\r\n        master.city =this.props.user.city;\r\n        master.country =this.props.user.country;\r\n        master.manicureStatus = this.state.manicureStatus;\r\n        master.pedicureStatus = this.state.pedicureStatus;\r\n        master.eyelashesStatus = this.state.eyelashesStatus;\r\n        master.eyebrowsStatus = this.state.eyebrowsStatus;\r\n        master.shugaringStatus = this.state.shugaringStatus;\r\n        master.hairStatus = this.state.hairStatus;\r\n        master.cosmeticStatus = this.state.cosmeticStatus;\r\n        console.log('после обработки', master);\r\n        this.setState({activeMaster: master});\r\n\r\n    }\r\n    handleCheck = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let mass = this.state.activeMaster[name];\r\n        const index = target.id;\r\n        mass[index].active = !mass[index].active;\r\n        this.setState({ [name]: mass });\r\n        let countMass = this.state.activeMaster[name].filter(\r\n            function(item){\r\n                //console.log(item);\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n        let count = this.state.count;\r\n        count[name] = countMass.length;\r\n        this.setState({ count: count });\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                                bottomContent={'Bottom content'}\r\n                            >\r\n                                {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                            </Cell>\r\n                            <Textarea\r\n                                name={'about'}\r\n                                status={this.state.about ? 'valid' : 'error'}\r\n                                bottom={this.state.about ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.about}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                                <Cell expandable name={'manicureVisible'}\r\n                                      onClick={() => this.setState({manicureVisible: !this.state.manicureVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.manicureStatus}>Маникюр</Cell>\r\n                                {this.state.manicureVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.manicureStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'manicureStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.manicureStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.manicureStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'pedicureVisible'}\r\n                                      onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.pedicureStatus}>Педикюр</Cell>\r\n                                {this.state.pedicureVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.pedicureStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'pedicureStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.pedicureStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.pedicureStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'eyelashesVisible'}\r\n                                      onClick={() => this.setState({eyelashesVisible: !this.state.eyelashesVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.eyelashesStatus}>Ресницы</Cell>\r\n                                {this.state.eyelashesVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.eyelashesStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'eyelashesStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.eyelashesStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.eyelashesStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'eyebrowsVisible'}\r\n                                      onClick={() => this.setState({eyebrowsVisible: !this.state.eyebrowsVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.eyebrowsStatus}>Брови</Cell>\r\n                                {this.state.eyebrowsVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.eyebrowsStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'eyebrowsStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.eyebrowsStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.eyebrowsStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'shugaringVisible'}\r\n                                      onClick={() => this.setState({shugaringVisible: !this.state.shugaringVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.shugaringStatus}>Шугаринг</Cell>\r\n                                {this.state.shugaringVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.shugaringStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'shugaringStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.shugaringStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.shugaringStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'hairVisible'}\r\n                                      onClick={() => this.setState({hairVisible: !this.state.hairVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.hairStatus}>Уход за волосами</Cell>\r\n                                {this.state.hairVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.hairStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'hairStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.hairStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.hairStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'hairVisible'}\r\n                                      onClick={() => this.setState({cosmeticVisible: !this.state.cosmeticVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.cosmeticStatus}>Косметология</Cell>\r\n                                {this.state.cosmeticVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.cosmeticStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'cosmeticStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.cosmeticStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.cosmeticStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            {this.state.checkLicense && this.state.about && this.state.type &&\r\n                            <Button size=\"xl\" onClick={() => this.props.closeReg(this.state.activeMaster)}>Зарегистрироваться как мастер</Button>\r\n                            }\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.user);\r\n        //this.verifiedUser(this.props.user);\r\n    }\r\n    /*verifiedUser = (user) => {\r\n        console.log(BACKEND.users+'/vkuid/'+user.vkUid);\r\n        fetch(BACKEND.users+'/vkuid/'+user.vkUid)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0){\r\n                    console.log('Пользователь ', user, ' не найден');\r\n                    this.postData(BACKEND.users, user); //регитрируем\r\n                } else {\r\n                    console.log('Пришло при авторизации', usersArr[0]);\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };*/\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                {this.state.user.isMaster === false &&\r\n                    <CellButton\r\n                        onClick={this.props.openReg}\r\n                    >Зарегистрироваться как мастер</CellButton>\r\n                }\r\n                    <Group title=\"Основное\">\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                            user={this.state.user}\r\n                            indicator={this.state.user.city.title}\r\n                        >Выбранный город</Cell>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon28Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Settings />}\r\n                    >Настройки</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    List, Button, CellButton, Input, Spinner,Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            activeMaster: {\r\n                priceList: [],\r\n                showProfile: false\r\n            },\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            hairVisible: false,\r\n            manicureVisible: false,\r\n            pedicureVisible: false,\r\n            eyelashesVisible: false,\r\n            eyebrowsVisible: false,\r\n            shugaringVisible: false,\r\n            cosmeticVisible: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0]})\r\n                this.loadCount()\r\n                this.setState({about: activeMaster[0].description})\r\n            });\r\n    }\r\n    componentWillUpdate(prevProps, prevState, snapshot) {\r\n        if  (prevState.type !== this.state.type || prevState.about !== this.state.about || prevState.count !== this.state.count) {\r\n            let master = this.state.activeMaster;\r\n            master.type = this.state.type;\r\n            master.description = this.state.about;\r\n            master.category = [\r\n                {id: '5e37537a58b85c13bcffb8b4', active: this.state.count.manicureStatus > 0, label:'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', active: this.state.count.pedicureStatus > 0, label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', active: this.state.count.eyelashesStatus > 0, label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', active: this.state.count.eyebrowsStatus > 0, label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', active: this.state.count.shugaringStatus > 0, label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', active: this.state.count.hairStatus > 0, label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', active: this.state.count.cosmeticStatus > 0, label: 'Косметология'}\r\n            ];\r\n            console.log(master.category);\r\n            this.setState({activeMaster: master});\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    onChange(event) {\r\n        //console.log(event.target.value)\r\n    }\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        //console.log(activeMaster);\r\n        activeMaster.description = this.state.about;\r\n\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.openSnack(\"Изменения сохранены\");\r\n                //this.props.popout();\r\n                console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    showProfile = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        //console.log('Изменено с ', activeMaster[name], ' на ', !activeMaster[name]);\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    }\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    }\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        //console.log(this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    loadCount() {\r\n        const arrCategory = ['manicureStatus', 'pedicureStatus', 'eyelashesStatus',\r\n            'eyebrowsStatus', 'shugaringStatus', 'hairStatus'];\r\n        arrCategory.map(category => {\r\n            let countMass = this.state.activeMaster[category].filter(\r\n                item => item.active === true\r\n            );\r\n            let count = this.state.count;\r\n            count[category] = countMass.length;\r\n            this.setState({count: count});\r\n        });\r\n    }\r\n\r\n    handleCheck = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        //const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        let mass = this.state.activeMaster[name];\r\n        const index = target.id;\r\n        //console.log(mass);\r\n        mass[index].active = !mass[index].active;\r\n        this.setState({[name]: mass});\r\n        let countMass = this.state.activeMaster[name].filter(\r\n            function (item) {\r\n                //console.log(item);\r\n                if (item.active === true) {\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n        let count = this.state.count;\r\n        count[name] = countMass.length;\r\n        this.setState({count: count});\r\n        let master = this.state.activeMaster;\r\n        master.category = [\r\n            {id: '5e37537a58b85c13bcffb8b4', active: this.state.count.manicureStatus > 0, label:'Маникюр'},\r\n            {id: '5e3753be58b85c13bcffb8b5', active: this.state.count.pedicureStatus > 0, label: 'Педикюр'},\r\n            {id: '5e3753c458b85c13bcffb8b6', active: this.state.count.eyelashesStatus > 0, label: 'Ресницы'},\r\n            {id: '5e3753c858b85c13bcffb8b7', active: this.state.count.eyebrowsStatus > 0, label: 'Брови'},\r\n            {id: '5e3753cd58b85c13bcffb8b8', active: this.state.count.shugaringStatus > 0, label: 'Шугаринг'},\r\n            {id: '5e3753d558b85c13bcffb8b9', active: this.state.count.hairStatus > 0, label: 'Уход за волосами'},\r\n            {id: '5e3753dc58b85c13bcffb8ba', active: this.state.count.cosmeticStatus > 0, label: 'Косметология'}\r\n        ];\r\n        this.setState({activeMaster: master});\r\n        //console.log(this.state.count);\r\n        //console.log(this.state.activeMaster);\r\n    };\r\n\r\n    render() {\r\n        //console.log(this.state);\r\n        if (!this.state.activeMaster._id) {\r\n            //console.log(this.state.activeMaster);\r\n            return (<div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                <Spinner size=\"large\" style={{marginTop: 120}}/>\r\n            </div>)\r\n        } else {\r\n            //console.log(this.state.activeMaster);\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={'Показывать в поиске'}\r\n                        before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                    </Cell>\r\n                    <Group>\r\n                        <Cell\r\n                            asideContent={<Switch\r\n                                name={'showProfile'}\r\n                                onChange={this.showProfile}\r\n                                checked={this.state.activeMaster.showProfile}/>}>\r\n                            Показывать мой профиль в поиске\r\n                        </Cell>\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                    {this.state.activeMaster.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры</Cell>\r\n                    }\r\n                    {this.state.activeMaster.priceList.map((item, index) => (\r\n                        <List key={index}>\r\n                            <Cell\r\n                                key={item}\r\n                                multiline\r\n                                //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                removable\r\n                                onRemove={() => {\r\n                                    this.onRemove(index)\r\n                                }}>\r\n                                <Cell\r\n                                    description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                <Cell description=\"Краткое описание процедуры\"\r\n                                      multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                <Cell\r\n                                    description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                            </Cell>\r\n                        </List>\r\n                    ))}\r\n                    {this.state.add &&\r\n                    <Div>\r\n                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdTitle\"\r\n                                type=\"text\"\r\n                                value={this.state.newProdTitle}\r\n                                placeholder={'Введите название'}\r\n                                onChange={this.handleChange}/>\r\n                            <Textarea\r\n                                require\r\n                                name=\"newProdBody\"\r\n                                value={this.state.newProdBody}\r\n                                placeholder={'Укажите описание'}\r\n                                onChange={this.handleChange}/>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdPrice\"\r\n                                type=\"number\" value={this.state.newProdPrice}\r\n                                placeholder={'Укажите цену'}\r\n                                onChange={this.handleChange}/>\r\n                        </Cell>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                        </Div>\r\n                    </Div>\r\n                    }\r\n                    </Group>\r\n                    <Group>\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Textarea\r\n                                name={'about'}\r\n                                status={this.state.about ? 'valid' : 'error'}\r\n                                bottom={this.state.about ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.about}\r\n                                onChange={this.handleChange}/>\r\n                        </ FormLayout>\r\n                        <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                         bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                         id={'category'}>\r\n                            <Cell expandable name={'manicureVisible'}\r\n                                  onClick={() => this.setState({manicureVisible: !this.state.manicureVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.manicureStatus}>Маникюр</Cell>\r\n                            {this.state.manicureVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.manicureStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'manicureStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.manicureStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.manicureStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'pedicureVisible'}\r\n                                  onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.pedicureStatus}>Педикюр</Cell>\r\n                            {this.state.pedicureVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.pedicureStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'pedicureStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.pedicureStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.pedicureStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'eyelashesVisible'}\r\n                                  onClick={() => this.setState({eyelashesVisible: !this.state.eyelashesVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.eyelashesStatus}>Ресницы</Cell>\r\n                            {this.state.eyelashesVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.eyelashesStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'eyelashesStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.eyelashesStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.eyelashesStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'eyebrowsVisible'}\r\n                                  onClick={() => this.setState({eyebrowsVisible: !this.state.eyebrowsVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.eyebrowsStatus}>Брови</Cell>\r\n                            {this.state.eyebrowsVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.eyebrowsStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'eyebrowsStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.eyebrowsStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.eyebrowsStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'shugaringVisible'}\r\n                                  onClick={() => this.setState({shugaringVisible: !this.state.shugaringVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.shugaringStatus}>Шугаринг</Cell>\r\n                            {this.state.shugaringVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.shugaringStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'shugaringStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.shugaringStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.shugaringStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'hairVisible'}\r\n                                  onClick={() => this.setState({hairVisible: !this.state.hairVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.hairStatus}>Уход за волосами</Cell>\r\n                            {this.state.hairVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.hairStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'hairStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.hairStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.hairStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'hairVisible'}\r\n                                  onClick={() => this.setState({cosmeticVisible: !this.state.cosmeticVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.cosmeticStatus}>Косметология</Cell>\r\n                            {this.state.cosmeticVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.cosmeticStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'cosmeticStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.cosmeticStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.cosmeticStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                        </FormLayoutGroup>\r\n                        <Button size=\"xl\"\r\n                                onClick={() => this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)}>Сохранить\r\n                            изменения</Button>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Lk;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div, Separator, Cell, Avatar, Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadFavsMasters(this.props.user);\r\n    }\r\n\r\n    loadFavsMasters = (user) => {\r\n        fetch(BACKEND.favs.user + user._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                if(favsArr.length === 0){\r\n                    this.setState({isLoaded: true});\r\n                } else {\r\n                    favsArr.map(fav => {\r\n                        fetch(BACKEND.masters.onID + fav.masterId)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                let mastersArr = this.state.mastersArr;\r\n                                mastersArr.push(master);\r\n                                this.setState({mastersArr: mastersArr});\r\n                            });\r\n                    });\r\n                    this.setState({isLoaded: true});\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.length === 0) {\r\n                return (\r\n                    <Group>\r\n                        <Cell multiline>\r\n                            Вы еще не добавили ни одного мастера в список избранного\r\n                        </Cell>\r\n                    </Group>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => (\r\n                        <Group key={master._id}>\r\n                            <Separator style={{margin: '12px 0'}}/>\r\n                            <Cell expandable\r\n                                  photo={master.avatarLink}\r\n                                  description={master.type}\r\n                                  before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                            >{master.firstname} {master.lastname}\r\n                            </Cell>\r\n                        </Group>\r\n                    ))\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Cell, Div, Group, Separator, Spinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: [],\r\n            title: '',\r\n            master: {\r\n                vkUid: 9999999999,\r\n                avatarLink: \"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\",\r\n                firstname: 'Евгения',\r\n                lastname: 'Плюхова'\r\n            },\r\n            findArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.user);\r\n        fetch(BACKEND.findModel.onCity+this.props.user.city.id)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                console.log(find);\r\n                this.setState({findArr: find});\r\n                console.log('Найдено '+find.length);\r\n                this.setState({isLoad: true})\r\n            });\r\n    }\r\n\r\n    findList = () => {\r\n        if (this.state.findArr.length === 0) {\r\n            return (\r\n                <Cell multiline>В данный момент в городе {this.props.user.city.title} нет поиска моледей</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                this.state.findArr.map(find => {\r\n                    return (\r\n                        <Group key={find._id}>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            <Cell expandable\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                // description={'Место под категории'}\r\n                                  before={<Avatar src={find.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openMasterOnId(find.masterId)}\r\n                                  bottom=\"\"\r\n                            >{find.firstname} {find.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>\r\n                                {find.body}\r\n                            </Cell>\r\n                        </Group>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={this.props.user.city.title}>Выбранный город</Cell>\r\n                    {this.findList()}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            master: '',\r\n            body: '',\r\n            loadFind: '',\r\n            isLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({master: master[0]});\r\n                fetch(BACKEND.findModel.onMasterId+master[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        this.setState({findArr: find, isLoaded: true});\r\n                        if (find.length > 0) {\r\n                            this.setState({body: find[0].body, loadFind: find[0]});\r\n                            let activeFind =\r\n                                <Group>\r\n                                    <Cell>Ваш активный поиск</Cell>\r\n                                    <Separator style={{ margin: '12px 0' }} />\r\n                                    <Cell expandable\r\n                                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                          description={'desf'}\r\n                                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                          size=\"l\"\r\n                                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                                    </Cell>\r\n                                    <Cell multiline>\r\n                                        {this.state.findArr[0].body}\r\n                                    </Cell>\r\n                                </Group>\r\n                            ;\r\n                            this.setState({activeFind: activeFind});\r\n                        } else {\r\n                            let activeFind = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({activeFind: activeFind});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.master._id,\r\n            body: this.state.body,\r\n            city: this.state.master.city,\r\n            firstname: this.state.master.firstname,\r\n            lastname: this.state.master.lastname,\r\n            avatarLink: this.state.master.avatarLink\r\n        };\r\n        console.log(BACKEND.findModel.new+this.state.loadFind._id);\r\n        if (this.state.loadFind._id) {\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            let activeFind =\r\n                <Group>\r\n                    <Cell>Ваш активный поиск</Cell>\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <Cell expandable\r\n                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                          description={'desf'}\r\n                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                          size=\"l\"\r\n                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                    </Cell>\r\n                    <Cell multiline>\r\n                        {find.body}\r\n                    </Cell>\r\n                </Group>\r\n            ;\r\n            this.setState({activeFind: activeFind});\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.popout();\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Cell>Добавить / изменить</Cell>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                            top=\"О себе\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}/>\r\n                    </FormLayoutGroup>\r\n                    <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    {this.state.activeFind}\r\n                </FormLayout>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {\r\n    View,\r\n    Panel,\r\n    PanelHeader,\r\n    Tabbar,\r\n    TabbarItem,\r\n    Epic,\r\n    SelectMimicry,\r\n    FormLayout,\r\n    Group, List, Cell, Root, PanelHeaderButton, platform, IOS, Alert\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n//import Sale from './js/sale/sale.js';\r\nimport PanelMasterList from './js/masters/panelMasterList.js';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport Idea from './js/idea/idea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {BACKEND} from \"./js/func/func\";\r\n//import VKConnect from \"@vkontakte/vkui-connect-mock\";\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nconst osname = platform();\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            mastersList: null,\r\n            user: {\r\n                firstname: '',\r\n                lastname: '',\r\n                avatarLink: '',\r\n                vkUid: '',\r\n                status: '',\r\n                city: {id:1, title: 'СПБ'}\r\n            },\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ]\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        bridge.send(\"VKWebAppInit\", {}).then(data => console.log('Инициализировали апи вк? '+data.result));\r\n            console.log('Пользователь с VKid: '+this.props.vkUserId);\r\n            this.verifiedUser(this.props.vkUserId);\r\n    }\r\n    regNewUser = () => {\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => {\r\n            console.log('Данные с моста '+data);\r\n            const user = {\r\n                vkUid: data.id,\r\n                firstname: data.first_name,\r\n                lastname: data.last_name,\r\n                avatarLink: data.photo_200,\r\n                sex: data.sex,\r\n                city: {id: data.city.id, title: data.city.title},\r\n                country: {id: data.country.id, title: data.country.title},\r\n                isMaster: false\r\n            };\r\n            this.setState({user: user});\r\n            this.postData(BACKEND.users, user); //регитрируем\r\n        });\r\n    }\r\n    verifiedUser = (vkUserId) => {\r\n        fetch(BACKEND.users+'/vkuid/'+vkUserId)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0){\r\n                    console.log('Пользователь зашел впервые');\r\n                    this.regNewUser();\r\n                } else {\r\n                    console.log('Пользователь уже заходил в приложение');\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    openAlert = (title, body, action) => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    closeReg = (master) => {\r\n        console.log('master - ', master);\r\n        this.postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({ user: user });\r\n        //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n        this.setState({ activeViewLk: 'lk' });\r\n    };\r\n    change = (story, view, panel) => {\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n    };\r\n    /*\r\n    *Story (news,masters,findmodel,idea,lk)\r\n    * mastersView -> mastersPanel\r\n    *\r\n    *\r\n    */\r\n\r\n    /*\r\n    *\r\n    *\r\n    *\r\n     */\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({ activePanelMasters: panelName });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMaster = (master) => {\r\n        this.setState({ activeViewMasters: 'mastersList' });\r\n        this.setState({ activeStory: 'masters' });\r\n        this.setState({ activePanelMasters: 'masterInfo' });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelFindModels: 'masterInfo' });\r\n            });\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelLk: 'masterInfo' });\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({ activePanelMasters: name });\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({ activeStory: storyName })\r\n    }\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n    render () {\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    {\r\n                        /*<TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'sale'}\r\n                            data-story=\"sale\"\r\n                            text=\"Акции\"\r\n                        ><Icon28FireOutline /></TabbarItem>*/\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'news'}\r\n                        data-story=\"news\"\r\n                        text=\"News\"\r\n                    ><Icon28FireOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'masters'}\r\n                        data-story=\"masters\"\r\n                        text=\"Мастера\"\r\n                    ><Icon28ServicesOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'findmodel'}\r\n                        data-story=\"findmodel\"\r\n                        text=\"Ищу модель\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'idea'}*/}\r\n                    {/*    data-story=\"idea\"*/}\r\n                    {/*    text=\"Идеи\"*/}\r\n                    {/*><Icon28HelpOutline /></TabbarItem>*/}\r\n                    {\r\n                        /*\r\n                        <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомлен.\"\r\n                        label=\"1\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                        * */\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'lk'}\r\n                        data-story=\"lk\"\r\n                        text=\"Кабинет\"\r\n                    ><Icon28More /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                {\r\n                    /*<View id=\"sale\" activePanel=\"sale\">\r\n                    <Panel id=\"sale\">\r\n                        <PanelHeader>Акции</PanelHeader>\r\n                        <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })} indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                        <Sale />\r\n                    </Panel>\r\n                </View>*/\r\n                }\r\n                <View id=\"news\" activePanel=\"news\">\r\n                    <Panel id=\"news\">\r\n                        <PanelHeader>Горячие новости</PanelHeader>\r\n                        <News user={this.state.user} openStory={this.openStory}/>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"masters\" activeView={this.state.activeViewMasters}>\r\n                    <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                        <Panel id=\"mastersList\">\r\n                            <FormLayout>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                    indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                                <SelectMimicry\r\n                                    top=\"Выберите категорию\"\r\n                                    placeholder=\"Не выбрана\"\r\n                                    onClick={() => this.setState({ activeViewMasters: 'masterCat' })}\r\n                                >{this.state.targetCategory.label}</SelectMimicry>\r\n                            </FormLayout>\r\n                            <PanelHeader>Мастера</PanelHeader>\r\n                            <PanelMasterList category={this.state.targetCategory} city={this.state.user.city} openPanelMaster={this.openPanelMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelMasters: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelMasters: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                        <Panel id=\"masterCat\">\r\n                            <PanelHeader>Выбор категории</PanelHeader>\r\n                            <Group>\r\n                                <List>\r\n                                    {\r\n                                        this.state.categories.map(category => {\r\n                                            //console.log(category);\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={category.id}\r\n                                                    onClick={() => this.setState({ targetCategory: category, activeViewMasters: 'mastersList' })}\r\n                                                    asideContent={this.state.targetCategory === category ? <Icon24Done fill=\"var(--accent)\" /> : null}\r\n                                                >\r\n                                                    {category.label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </Group>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n                <View id=\"idea\" activePanel=\"idea\">\r\n                    <Panel id=\"idea\">\r\n                        <Idea />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"findmodel\" activePanel={this.state.activePanelFindModels}>\r\n                    <Panel id=\"findmodel\">\r\n                        <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                        <FindModel openMasterOnId={this.openMasterOnId} user={this.state.user}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterInfo\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            О мастере\r\n                        </PanelHeader>\r\n                        <MasterCard openPhoto={() => this.setState({ activePanelFindModels: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelFindModels: 'masterComments' })}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterPhoto\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Портфолио\r\n                        </PanelHeader>\r\n                        <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                    </Panel>\r\n                    <Panel id=\"masterComments\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Отзывы\r\n                        </PanelHeader>\r\n                        <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Этот раздел</Cell>\r\n                        </Group>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                    <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout}>\r\n                        <Panel id=\"lk\">\r\n                            <PanelHeader>Личный кабинет</PanelHeader>\r\n                            <Lk\r\n                                user={this.state.user}\r\n                                openReg={() => this.setState({ activeViewLk: 'masterReg' })}\r\n                                openSetting={() => this.setState({ activePanelLk: 'setting' })}\r\n                                openFavourite={() => this.setState({ activePanelLk: 'favourite' })}\r\n                                openFindModel={() => this.setState({ activePanelLk: 'findModel' })}\r\n                                openMasterPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='favourite'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Избранное</PanelHeader>\r\n                            <Favourite user={this.state.user} openFavMasterOnId={this.openFavMasterOnId}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelLk: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <Portfolio user={this.state.user}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id='findModel'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Мастер ищет модель</PanelHeader>\r\n                            <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                        <Panel id='setting'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Настройки</PanelHeader>\r\n                            <Setting user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterReg\" id=\"masterReg\">\r\n                        <Panel id=\"masterReg\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Регистрация мастера\r\n                            </PanelHeader>\r\n                            <Invite user={this.state.user} closeReg={this.closeReg}/>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nconsole.log(params);\r\n\r\n\r\nReactDOM.render(<App vkUserId={params.vk_user_id} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}