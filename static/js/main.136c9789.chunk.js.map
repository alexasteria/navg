{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/store/reducers.js","js/store/actions.js","js/masters/mastersCard.js","js/elements/functions.js","js/masters/mastersPhoto.js","js/elements/items/ratingStars.js","js/masters/mastersComments.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/elements/headCity.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["Head","props","theme","left","onClick","goBack","title","BACK_LINK","process","BACKEND","users","auth","like","changeCity","message","masters","all","onID","category","vkuid","subscribers","onarrayid","connect","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getCities","getCountries","isMember","getAlbum","delPhoto","stories","getAll","logs","params","sendmessage","moder","moderCom","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","targetCountry","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","activePanelnews","activePanelmasters","activePanelfindmodel","activePanellk","newsHistory","mastersHistory","findmodelHistory","lkHistory","activeStory","activeViewLk","regSet","filter","setMaster","console","log","type","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","goTo","story","panel","goForward","changeStory","changeActiveViewLk","activeView","regSetInvite","data","setFilter","MastersCard","handleChange","event","setState","target","name","value","changeNumber","openModal","sendMessage","state","sendtitle","phone","fetch","activeMaster","_id","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","error","openSnackAvatar","avatarLink","catch","e","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","enterNumber","share","bridge","send","result","loadFavs","includes","countFavs","length","isLoad","changeVisible","index","push","isChange","indexOf","splice","getPhone","phone_number","a","activeModal","onClose","id","header","caption","className","align","onChange","novalidate","snackbar","bind","window","scrollTo","this","map","item","url","postData","images","start_index","text","duration","layout","after","src","size","response","icon","marginTop","visible","Fragment","separator","disabled","multiline","level","weight","marginBottom","brand","vkUid","firstname","lastname","expandable","openComments","indicator","meta","comments","description","photos","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","openPhoto","priceList","price","asideContent","React","Component","dispatch","bindActionCreators","imgArr","image","gridPhoto","RatingStars","useState","stars","setStars","activeStar","inactiveStar","useEffect","starsArr","i","countStars","display","star","MastersComments","changeStars","rating","validCommentText","replace","sendComment","Number","onModer","ids","isCommended","commentsArr","countComments","prevProps","prevState","snapshot","comDate","date","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","alignItems","flexDirection","fontSize","color","webkitUserSelect","userSelect","status","bottom","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","user_id","ingroup","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","photo","openModer","openReg","nowCounter","countUsers","countMasters","inGroup","promo","vk_is_favorite","subscribe","detail","bannerData","Invite","deleteProcedure","setAlert","actionsLayout","autoclose","action","onRemove","getCategories","categories","regMaster","statusMessage","trim","checkLicense","cat","subcat","active","label","location","country","city","closeReg","addProd","add","saveProd","validateNewProdTitle","newProdTitle","validateNewProdBody","newProdBody","validateNewProdPrice","newProdPrice","slice","permMessage","checkSubcat","indexCat","indexSubcat","counter","count","statusPhoto","qapi","undefined","subcategory","checked","require","stretched","openRules","Lk","wallPost","prods","prod","join","storiesPost","checkModeration","reasons","reason","addToFavApp","connection","tmpUser","isMaster","isUser","favsArr","mastersArr","error_data","openSetting","openFavourite","openMasterPhoto","openFindModel","Portfolio","deletePhoto","link","setTimeout","delete","loading","deleteMode","token","selectedFile","document","getElementById","files","match","create_album","encodeURI","fetchJsonp","album","album_id","getUploadServer","uploadServer","formData","FormData","append","openSnack","saveUrl","savePh","sizes","unshift","img","upload_url","uploadUrl","getToken","access_token","photoArr","photoFile","user_albums","vk_user_id","items","textAlign","accept","CityListModal","search","cities","toLowerCase","country_id","cityList","region","withModalRootContext","Setting","platform","saveChanges","patchData","snackbarDismiss","saveEdit","editProdTitle","editProdBody","editProdPrice","editProd","edit","checkBan","banned","statusProfile","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","warnConnection","changed","Array","isArray","String","defaultValue","snackbarLk","Favourite","loadFavsMasters","isLoaded","err","openFavMasterOnId","FindCard","find","sale","openMasterOnId","masterId","FindList","findArr","FindModel","loadFind","self","pageYOffset","FindModelMaster","targetImg","handleChangeSelect","selectvalue","save","isActive","mStatus","Partners","addToCommunity","CityList","renderCityList","countryList","changeCountry","Boolean","selected","Moder","good","bad","goodComment","badComment","activeTab","mastersCount","usersCount","to","openMaster","renderMasters","renderComments","MastersList","setBottom","marginLeft","setTitle","bottomContent","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","setCategory","Rules","App","validLaunchParams","openFindMasterOnId","newMaster","history","pushState","activePanelMasters","openStory","storyName","popoutLk","popoutInvite","activePanelFindModels","activeMasterId","activeViewMasters","activePanelLk","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","scheme","mastersModal","findModal","lkModal","snackbarInvite","onStoryChange","story_owner_id","launchParams","sign","linkParams","masterid","onpopstate","dataset","geo","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","content","modal","alert","openSnackLk","openSnackLkDismiss","modalBack","openAlert","openSnackInvite","activePanelregistration","registrationHistory","hostname","config","store","createStore","changeIsMaster","newhistory","pop","hash","split","reduce","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"2VAaeA,EAVF,SAACC,GACV,OACI,kBAAC,IAAD,CACIC,MAAM,QACNC,KAAM,kBAAC,IAAD,CAAiBC,QAASH,EAAMI,UACxCJ,EAAMK,Q,oFCRVC,EAAYC,iDAELC,EAAU,CACnBC,MAAO,CACHC,KAAMJ,EAAU,cAChBK,KAAML,EAAU,cAChBM,WAAYN,EAAU,qBAE1BO,QAASP,EAAU,iBACnBQ,QAAS,CACLC,IAAKT,EAAU,WACfU,KAAMV,EAAU,WAChBW,SAAUX,EAAU,oBACpBY,MAAOZ,EAAU,iBACjBa,YAAab,EAAU,qBACvBc,UAAWd,EAAU,qBACrBe,QAASf,EAAU,oBAEvBgB,KAAM,CACFC,IAAKjB,EAAU,QACfkB,OAAQlB,EAAU,eAClBmB,KAAMnB,EAAU,cAEpBoB,UAAW,CACPH,IAAKjB,EAAU,aACfqB,WAAYrB,EAAU,wBACtBsB,OAAQtB,EAAU,qBAEtBuB,QAAS,CACLN,IAAKjB,EAAU,kBACfqB,WAAYrB,EAAU,kBACtBwB,WAAYxB,EAAU,uBAE1ByB,MAAO,CACHC,YAAa1B,EAAU,qBACvB2B,UAAW3B,EAAU,mBACrB4B,oBAAqB5B,EAAU,6BAC/B6B,UAAW7B,EAAU,kBACrB8B,aAAc9B,EAAU,qBACxB+B,SAAU/B,EAAU,iBACpBgC,SAAUhC,EAAU,iBACpBiC,SAAUjC,EAAU,kBACpBkC,QAASlC,EAAU,kBAEvBW,SAAU,CACNwB,OAAQnC,EAAU,aAEtBoC,KAAM,CACFC,OAAQrC,EAAU,gBAEtBsC,YAAatC,EAAU,cACvBuC,MAAOvC,EAAU,sBACjBwC,SAAUxC,EAAU,uB,wFChClByC,EAAe,CACjBC,aAAa,EACbvB,KAAM,GACND,OAAQ,KACRyB,YAAa,GACbC,kBAAmB,EACnBC,eAAgB,GAChBC,WAAY,GACZC,cAAe,GACfC,eAAgB,GAChBC,qBAAsB,EACtBC,sBAAuB,GACvBC,yBAA0B,GAC1BC,mBAAoB,GACpBf,OAAQ,KACRgB,gBAAiB,OACjBC,mBAAoB,cACpBC,qBAAsB,YACtBC,cAAe,KAEfC,YAAa,CAAC,QACdC,eAAgB,CAAC,eACjBC,iBAAkB,CAAC,aACnBC,UAAW,CAAC,MAEZC,YAAa,OACbC,aAAc,KACdC,OAAQ,KACRC,OAAQ,IC1BCC,EAAY,SAAA/C,GAErB,OADAgD,QAAQC,IAAI,cACL,CACHC,KDdkB,aCelBC,QAASnD,IAIJoD,EAAY,SAACnD,GAEtB,OADA+C,QAAQC,IAAI,cACL,CACHC,KDvBkB,aCwBlBC,QAASlD,IAIJoD,EAAoB,SAACC,GAE9B,OADAN,QAAQC,IAAI,iCACL,CACHC,KDzCkC,6BC0ClCC,QAASG,IAIJC,EAAuB,SAACC,GAEjC,OADAR,QAAQC,IAAI,oCACL,CACHC,KDhDqC,gCCiDrCC,QAASK,IAIJC,EAAmB,SAACC,GAE7B,OADAV,QAAQC,IAAI,gCACL,CACHC,KDvDiC,4BCwDjCC,QAASO,IAYJC,EAA0B,SAACC,GAEpC,OADAZ,QAAQC,IAAI,uCACL,CACHC,KDrEwC,mCCsExCC,QAASS,IAIJC,EAAuB,SAACC,GAEjC,OADAd,QAAQC,IAAI,oCACL,CACHC,KD5EqC,gCC6ErCC,QAASW,IAIJC,EAA6B,SAACC,GAEvC,OADAhB,QAAQC,IAAI,sCACL,CACHC,KDnFuC,kCCoFvCC,QAASa,IAIJC,GAA8B,SAACC,GAExC,OADAlB,QAAQC,IAAI,6CACL,CACHC,KD1F8C,yCC2F9CC,QAASe,IAIJC,GAAiC,SAACD,GAE3C,OADAlB,QAAQC,IAAI,gDACL,CACHC,KDjGiD,4CCkGjDC,QAASe,IAIJE,GAA2B,SAACF,GAErC,OADAlB,QAAQC,IAAI,0CACL,CACHC,KDxG2C,sCCyG3CC,QAASe,IAIJG,GAAqB,SAAClD,GAE/B,OADA6B,QAAQC,IAAI,wBACL,CACHC,KD7GyB,oBC8GzBC,QAAShC,IAIJmD,GAAO,SAACC,EAAOC,GACxB,MAAO,CACHtB,KDnHa,QCoHbC,QAAS,CAACoB,MAAOA,EAAOC,MAAOA,KAI1BC,GAAY,SAACF,GACtB,MAAO,CACHrB,KDzHkB,aC0HlBC,QAAS,CAACoB,MAAOA,KAIZG,GAAc,SAACH,GACxB,MAAO,CACHrB,KD/HoB,eCgIpBC,QAASoB,IAIJI,GAAqB,SAACC,GAC/B,MAAO,CACH1B,KDrI6B,wBCsI7BC,QAASyB,IAIJC,GAAe,SAACC,GACzB,MAAO,CACH5B,KD3Ie,UC4IfC,QAAS2B,IAIJC,GAAY,SAACjC,GACtB,MAAO,CACHI,KDjJkB,aCkJlBC,QAASL,I,4DC7HXkC,G,kDACF,WAAYxG,GAAQ,IAAD,8BACf,cAAMA,IAmEVyG,aAAe,SAACC,GAEZ,EAAKC,SAAL,eAAgBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAtElC,EAyEnBC,aAAe,SAACL,GAEZ,EAAKC,SAAL,eAAgBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,OAAQ,EAAKE,YA3E/C,EAqFnBC,YAAc,WACV,IAAIX,EAAO,CACP3D,OAAQ,EAAK3C,MAAM2C,OACnBtC,MAAO,EAAK6G,MAAMC,UAClBC,MAAO,EAAKF,MAAME,OAEtBC,MAAM7G,EAAQM,QAAQO,QAAQ,EAAK6F,MAAMI,aAAaC,IAAK,CACvDC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACEA,EAAIE,OACJ,EAAKrI,MAAMgH,UAAU,MACrB,EAAKsB,gBAAgBH,EAAIE,MAAO,EAAKnB,MAAMI,aAAaiB,cAExD,EAAKvI,MAAMgH,UAAU,MACrB,EAAKsB,gBAAgB,2TAAkE,EAAKpB,MAAMI,aAAaiB,gBAGtHC,OAAM,SAAAC,GACH,EAAKzI,MAAMgH,UAAU,MACrB,EAAKsB,gBAAgBG,EAAE5H,QAAS,EAAKqG,MAAMI,aAAaiB,gBApHjD,EAwHnBG,UAAY,WACR,OAA8B,IAA3B,EAAKxB,MAAMyB,YAEM,kBAAC,IAAD,CAAKC,MAAO,CAACC,MAAO,QAASC,QAAS,EAAGC,YAAa,IAAK5I,QAAS,EAAK6I,WACrE,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,GAAIC,KAAK,SAK3D,kBAAC,IAAD,CAAKP,MAAO,CAACC,MAAO,QAASC,QAAS,EAAGC,YAAa,IAAK5I,QAAS,EAAK6I,WACrE,kBAAC,IAAD,CAAYC,MAAO,GAAIC,OAAQ,GAAIC,KAAK,UAlIzC,EAuInBC,cAAgB,SAAC/I,GACb,OACI,kBAAC,IAAD,CACIgJ,OAAQ,kBAAC,IAAD,MACRlJ,QAAS,kBAAM,EAAKmJ,YAAYjJ,KAFpC,iEAzIW,EAgJnBkJ,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,wCAAwC,EAAKvC,MAAMI,aAAaC,MACjGW,MAAK,SAAAwB,GACkB,wBAAhBA,EAAOhF,MACP,EAAK4D,gBAAgB,4JAAgC,EAAKpB,MAAMI,aAAaiB,gBApJ1E,EAqKnBoB,SAAW,WACH,EAAK3J,MAAMyB,KAAKH,OACZ,EAAKtB,MAAMyB,KAAKH,KAAKsI,SAAS,EAAK1C,MAAMI,aAAaC,KACtD,EAAKZ,SAAS,CAACgC,aAAa,IAE5B,EAAKhC,SAAS,CAACgC,aAAa,KAGpC,EAAKhC,SAAS,CAACkD,UAAW,EAAK3C,MAAMI,aAAanG,YAAY2I,OAAQC,QAAQ,KA7K/D,EA+KnBC,cAAgB,SAACC,GACb,EAAKtD,SAAL,eAAgBsD,GAAS,EAAK/C,MAAM+C,MAhLrB,EAkLnBjB,UAAY,WACR,IAA+B,IAA3B,EAAK9B,MAAMyB,YAAuB,CAClC,IAAIlH,EAAO,EAAKzB,MAAMyB,KACtBA,EAAKH,KAAK4I,KAAK,EAAKhD,MAAMI,aAAaC,KACvC,EAAKvH,MAAM4E,UAAUnD,GACrB,EAAKkF,SAAS,CAACgC,aAAa,EAAMkB,UAAW,EAAK3C,MAAM2C,UAAU,EAAGM,UAAW,EAAKjD,MAAMiD,WAAW,kBAClG,EAAK7B,gBAAgB,4LAAuC,EAAKpB,MAAMI,aAAaiB,mBACrF,CACH,IAAI9G,EAAO,EAAKzB,MAAMyB,KAClBwI,EAAQ,EAAKjK,MAAMyB,KAAKH,KAAK8I,QAAQ,EAAKlD,MAAMI,aAAaC,KAC7DjG,EAAO,EAAKtB,MAAMyB,KAAKH,KACvB2I,GAAS,EACT3I,EAAK+I,OAAOJ,EAAO,GAChB3I,EAAK+I,OAAO,EAAGJ,GACtB,EAAKjK,MAAM4E,UAAUnD,GACrB,EAAKkF,SAAS,CAACgC,aAAa,EAAOkB,UAAW,EAAK3C,MAAM2C,UAAU,EAAGM,UAAW,EAAKjD,MAAMiD,WAAW,kBACnG,EAAK7B,gBAAgB,sLAAsC,EAAKpB,MAAMI,aAAaiB,iBAlM5E,EAuMnB+B,SAAW,WACR9F,QAAQC,IAAI,+FACZ+E,IAAOC,KAAK,yBAA0B,CAAC,SAAY,UAAW,IAAO,oBAC/DvB,MAAK,SAAAwB,GACF,EAAK/C,SAAS,CAACS,MAAOsC,EAAOa,eAAe,kBAAK,EAAKvD,kBAEzDwB,OAAM,SAAAC,GACHjE,QAAQC,IAAIgE,GACZ,EAAKzB,gBA/ME,EAmNnBsC,YAnNmB,uCAmNL,WAAOjJ,GAAP,SAAAmK,EAAA,sDACV,EAAK7D,SAAS,CAACQ,UAAW9G,IAC1B,EAAK2G,YAFK,2CAnNK,wDAwNnBA,UAAY,WACRxC,QAAQC,IAAI,+FAEZ,EAAKzE,MAAMgH,UACP,kBAAC,IAAD,CACIyD,YAAa,cACbC,QAAS,kBAAI,EAAK1K,MAAMgH,UAAU,QAElC,kBAAC,IAAD,CACI2D,GAAI,cACJD,QAAS,kBAAM,EAAK1K,MAAMgH,UAAU,OACpC4D,OAAO,6HACPC,QACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,UAAU,iCACX,kBAAC,IAAD,CACIA,UAAU,YAEVjE,KAAK,QACLnC,KAAK,SAELqG,MAAM,SACNjE,MAAO,EAAKI,MAAME,MAClB4D,SAAU,EAAKjE,aACfkE,YAAU,IAEd,kBAAC,IAAD,CAAKH,UAAU,uBAGM,KAArB,EAAK5D,MAAME,OACX,kBAAC,IAAD,CAAYjH,QAAS,WACjB,EAAKmK,aADT,yFAIJ,soBACA,kBAAC,IAAD,CAAQnK,QAAS,EAAK8G,aAAtB,gEAzPpB,EAAKC,MAAQ,CACT6C,QAAQ,EACRmB,SAAU,KACVf,UAAU,EACV7C,aAAc,GACdF,MAAO,IAEX,EAAKX,aAAe,EAAKA,aAAa0E,KAAlB,gBATL,E,gEAaE,IAAD,OAChBC,OAAOC,SAAS,EAAE,GAClBC,KAAK3E,SAAS,CAACW,aAAcgE,KAAKtL,MAAMsH,eAAe,WACpB,OAA5B,EAAKtH,MAAMsH,cACX,EAAKqC,gB,6CAqBQ,IAAD,OAEnB,GADA2B,KAAKtL,MAAMgH,UAAU,MACjBsE,KAAKpE,MAAMiD,SAAS,CACpB,IACIrF,EADcwG,KAAKtL,MAAMiD,YACIsI,KAAI,SAAA/J,GACjC,OAAIA,EAAO+F,MAAQ,EAAKL,MAAMI,aAAaC,KACnC/F,EAAOL,YAAYyI,SAAS,EAAK5J,MAAMyB,KAAK8F,KAC5C/F,EAAOL,YAAcK,EAAOL,YAAYmD,QAAO,SAAAkH,GAAI,OAAIA,IAAS,EAAKxL,MAAMyB,KAAK8F,OAEhF/F,EAAOL,YAAY+I,KAAK,EAAKlK,MAAMyB,KAAK8F,KAErC/F,GAEAA,KAIf,GADA8J,KAAKtL,MAAM6E,kBAAkBC,GACzBwG,KAAKtL,MAAMyD,yBAAyB8D,MAAQ+D,KAAKpE,MAAMI,aAAaC,IAAI,CACxE,IAAI/F,EAAS8J,KAAKtL,MAAMyD,yBACpBjC,EAAOL,YAAYyI,SAAS0B,KAAKtL,MAAMyB,KAAK8F,KAC5C/F,EAAOL,YAAcK,EAAOL,YAAYmD,QAAO,SAAAkH,GAAI,OAAIA,IAAS,EAAKxL,MAAMyB,KAAK8F,OAEhF/F,EAAOL,YAAY+I,KAAKoB,KAAKtL,MAAMyB,KAAK8F,KAE5C+D,KAAKtL,MAAM2F,+BAA+BnE,ICtG1D,WAAwC,IAAtBiK,EAAqB,uDAAf,GAAInF,EAAW,uDAAJ,GAC/Be,MAAMoE,EAAK,CACPjE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBI,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,MD0FlBiD,CAASlL,EAAQC,MAAME,KAAK2K,KAAKpE,MAAMI,aAAaC,IAAK+D,KAAKtL,MAAM2C,W,qCAc7DgJ,EAAQ1B,GACnBT,IAAOC,KAAK,qBAAsB,CAC9BkC,OAAQA,EACRC,YAAa3B,IACd/B,MAAK,SAAA5B,GAAI,OAAI9B,QAAQC,IAAI6B,Q,sCAsEfuF,EAAMtD,GAAa,IAAD,OAC3B+C,KAAKpE,MAAMgE,UAAUI,KAAK3E,SAAS,CAACuE,SAAU,OAClDI,KAAK3E,SAAS,CAAEuE,SACR,kBAAC,IAAD,CACIY,SAAS,OACTC,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAAEuE,SAAU,QACzCc,MAAO,kBAAC,IAAD,CAAQC,IAAK1D,EAAY2D,KAAM,MAErCL,O,iCAoIsB,IAA9BJ,EAA6B,uDAAvB,GAAInF,EAAmB,uDAAZ,GAAIkB,EAAQ,uCAElC,OAAOH,MAAMoE,EAAK,CACdjE,OAAQA,EACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAiE,GAAQ,OAAI3H,QAAQC,IAAI,W,+BAE7B,IAAD,OACJ,OAAgC,OAA5B6G,KAAKtL,MAAMsH,aAEP,kBAAC,IAAD,CAAOqD,GAAG,cACN,kBAAC,EAAD,CACItK,MAAO,oDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAE7B,kBAAC,IAAD,CACIgM,KAAM,kBAAC,KAAD,MACNxB,OAAO,6IAFX,6NASDU,KAAKtL,MAAMsH,aAAae,MAE3B,kBAAC,IAAD,CAAOsC,GAAG,cACN,kBAAC,EAAD,CACItK,MAAO,oDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAE7B,kBAAC,IAAD,CACIgM,KAAM,kBAAC,KAAD,MACNxB,OAAO,iFAFX,8NAUW,IAApBU,KAAKpE,MAAM6C,OAEN,kBAAC,IAAD,CAASmC,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,OAER,IAApCf,KAAKpE,MAAMI,aAAagF,QAEtB,kBAAC,IAAD,CAAO3B,GAAG,cACN,kBAAC,EAAD,CACItK,MAAO,oDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAE7B,kBAAC,IAAD,CACIgM,KAAM,kBAAC,KAAD,MACNxB,OAAO,iFAFX,0MAWJ,kBAAC,IAAD,CAAOD,GAAG,cACN,kBAAC,EAAD,CACItK,MAAO,oDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAEjC,kBAAC,IAAMmM,SAAP,KACQ,kBAAC,IAAD,CAAOC,UAAW,QACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMN,KAAK,KACP,kBAAC,IAAD,CACIO,UAAQ,EACRC,WAAS,EACTrD,OAAQ,kBAAC,IAAD,CAAQ4C,IAAKX,KAAKpE,MAAMI,aAAaiB,WAAY2D,KAAM,KAC/DL,KACI,kBAAC,IAAD,CAASc,MAAM,IAAIC,OAAO,UAAUhE,MAAO,CAAEiE,aAAc,KACvB,uEAA/BvB,KAAKpE,MAAMI,aAAa5C,KAAuB4G,KAAKpE,MAAMI,aAAawF,MAAQxB,KAAKpE,MAAMI,aAAa5C,MAGhHmG,QACI,kBAAC,IAAM0B,SAAP,KACI,kBAAC,IAAD,CAAQpM,QAAS,kBAAM,EAAKoJ,UAA5B,gEAEI+B,KAAKtL,MAAMyB,KAAKsL,QAAUzB,KAAKpE,MAAMI,aAAayF,MAE9C,KAEAzB,KAAK5C,cAMpB4C,KAAKpE,MAAMI,aAAa0F,UAvB7B,IAuByC1B,KAAKpE,MAAMI,aAAa2F,aAK7E,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,YAAU,EACV/M,QAAS,kBAAM,EAAKH,MAAMmN,gBAAgBC,UAAW9B,KAAKpE,MAAMI,aAAa+F,KAAKC,UAAY,EAC9FC,YAAa,uEAAkBjC,KAAKpE,MAAM2C,WAH9C,yCAUR,kBAAC,IAAD,CAAOxJ,MAAM,0DAELiL,KAAKpE,MAAMI,aAAakG,OAAO1D,OAAS,EACpC,kBAAC,IAAD,CAAOc,OAAQ,kBAAC,IAAD,CAAQnD,KAAK,aAAb,iJACX,kBAAC,IAAD,KAEQ6D,KAAKpE,MAAMI,aAAakG,OAAOjC,KAAI,SAACkC,EAAUxD,GAC1C,OACI,kBAAC,IAAD,CACIrB,MAAO,CAACE,QAAS,EAAG4E,aAAc,GAAIC,OAAQ,GAC9CzB,KAAK,IACLzE,KAAK,SACLmG,IAAK3D,EACL9J,QAAS,kBAAM,EAAK0N,eAAe,EAAK3G,MAAMI,aAAakG,OAAQvD,KAEnE,yBAAKrB,MAAO,CACRK,MAAO,IACPC,OAAQ,GACR4E,gBAAiB,OAAOL,EAAS,IACjCM,eAAgB,QAChBC,mBAAoB,aACpBC,iBAAkB,YAClBP,aAAc,WAMtC,kBAAC,IAAD,CACIR,YAAU,EACV/M,QAAS,kBAAM,EAAKH,MAAMkO,aAC1BX,YAAajC,KAAKpE,MAAMI,aAAakG,OAAO1D,OAAO,0FACnDsD,UAAW9B,KAAKpE,MAAMI,aAAakG,OAAO1D,QAJ9C,sGAOJ,kBAAC,IAAD,CACIsC,KAAM,kBAAC,IAAD,MACNxB,OAAO,qFAIvB,kBAAC,IAAD,CAAO4B,UAAU,OAAO5B,OAAQ,kBAAC,IAAD,CAAQnD,KAAK,aAAb,0FAAoD8F,YAAa,ieAEzFjC,KAAKpE,MAAMI,aAAa6G,UAAU5C,KAAI,SAACC,EAAMvB,GAAP,OAO1B,kBAAC,IAAD,CAAU2D,IAAK3D,GACX,kBAAC,IAAD,CAAMiC,KAAK,IAAI/L,QAAS,kBAAM,EAAK6J,cAAcC,KAC7C,kBAAC,IAAD,CACIsD,YACmB,KAAf/B,EAAK4C,MAAe,gBAAQ5C,EAAK4C,MAAQ,uBAAU,iHAEvDC,aAAc,EAAKnH,MAAM+C,GAAS,kBAAC,KAAD,MAAe,kBAAC,KAAD,MACjDmD,UAAU,IAET,EAAKlG,MAAMI,aAAa6G,UAAUlE,GAAO5J,OAG1C,EAAK6G,MAAM+C,IACP,kBAAC,IAAMsC,SAAP,KACI,kBAAC,IAAD,CAAMgB,YAAY,qJACZb,WAAS,GAAE,EAAKxF,MAAMI,aAAa6G,UAAUlE,GAAOlC,MAEzD,EAAKqB,cAAc,EAAKlC,MAAMI,aAAa6G,UAAUlE,GAAO5J,QAGzE,kBAAC,IAAD,YAO5B,kBAAC,IAAD,CAAOmM,UAAU,OAAO5B,OAAQ,kBAAC,IAAD,CAAQnD,KAAK,aAAb,mHAC5B,kBAAC,IAAD,CAAMiF,WAAS,GACVpB,KAAKpE,MAAMI,aAAaiG,cAGhCjC,KAAKpE,MAAMgE,e,GAjfNoD,IAAMC,WA0gBjBlN,gBAjBS,SAAC6F,GACrB,MAAO,CACHzF,KAAMyF,EAAMzF,KACZkB,OAAQuE,EAAMvE,OACdM,YAAaiE,EAAMjE,YACnBQ,yBAA0ByD,EAAMzD,6BAId,SAAC+K,GACvB,MAAO,CACH5J,UAAW6J,YAAmB7J,EAAW4J,GACzC3J,kBAAmB4J,YAAmB5J,EAAmB2J,GACzD7I,+BAAgC8I,YAAmB9I,GAAgC6I,MAI5EnN,CAA4CmF,IEve5CA,G,kDArEX,WAAYxG,GAAQ,IAAD,8BACf,cAAMA,IACDkH,MAAQ,CACTI,aAAc,EAAKtH,MAAMsH,aACzByC,QAAQ,GAJG,E,gEAQfuB,KAAK3E,SAAS,CAACgF,OAAQL,KAAKtL,MAAMsH,aAAakG,OAAQzD,QAAQ,M,qCAEpD4B,EAAQ1B,GACnBT,IAAOC,KAAK,qBAAsB,CAC9BkC,OAAQA,EACRC,YAAa3B,IACd/B,MAAK,SAAA5B,GAAI,OAAI9B,QAAQC,IAAI6B,Q,kCAEnB,IAAD,OACR,GAAiC,IAA7BgF,KAAKpE,MAAMyE,OAAO7B,OAClB,OACI,kBAAC,IAAD,CAAM4C,WAAS,GAAf,sNAGJ,IAAIgC,EAASpD,KAAKpE,MAAMyE,OACxB,OACI,kBAAC,IAAD,KAEQ+C,EAAOnD,KAAI,SAACoD,EAAO1E,GACf,OACI,kBAAC,IAAD,CACIrB,MAAO,CAACE,QAAS,EAAG4E,aAAc,GAAIC,OAAQ,GAC9CzB,KAAK,IACLzE,KAAK,SACLmG,IAAK3D,EACL9J,QAAS,kBAAM,EAAK0N,eAAe,EAAK3G,MAAMyE,OAAQ1B,KAEtD,yBAAKrB,MAAO,CACRM,OAAQ,GACR4E,gBAAiB,OAAOa,EAAM,IAC9BZ,eAAgB,QAChBC,mBAAoB,aACpBC,iBAAkB,YAClBP,aAAc,a,+BAU9C,OAAuB,IAApBpC,KAAKpE,MAAM6C,OAEN,kBAAC,IAAD,CAASmC,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,MAI1C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOhM,MAAM,0DACT,kBAAC,IAAD,CAAOmM,UAAU,QACZlB,KAAKsD,mB,GA7DRN,IAAMC,W,qEC2BjBM,OA1Bf,SAAqB7O,GAAO,IAAD,EACG8O,mBAAS,IADZ,oBAChBC,EADgB,KACTC,EADS,KAEjBC,EAAa,kBAAC,KAAD,CAAgBhG,MAAO,GAAIC,OAAQ,GAAIC,KAAM,WAC1D+F,EAAe,kBAAC,KAAD,CAAuBjG,MAAO,GAAIC,OAAQ,GAAIC,KAAM,WAYzE,OAXAgG,qBAAU,WAEN,IADA,IAAIC,EAAW,GACPC,EAAE,EAAGA,GAAG,EAAGA,IACXA,GAAKrP,EAAMsP,WACXF,EAASlF,KAAK+E,GAEdG,EAASlF,KAAKgF,GAGtBF,EAASI,KACV,IAEC,kBAAC,IAAD,CAAKxG,MAAO,CAAC2G,QAAS,cAAezG,QAAS,IAEtCiG,EAAMxD,KAAI,SAAAiE,GACN,OAAOA,OCJrBC,G,kDACF,WAAYzP,GAAQ,IAAD,8BACf,cAAMA,IAmCV0P,YAAc,WAEV,IADA,IAAIX,EAAQ,GADI,WAERM,GACAA,GAAK,EAAKnI,MAAMyI,OAChBZ,EAAM7E,KAAK,kBAAC,KAAD,CAAgBjB,MAAO,GAAIC,OAAQ,GAAIyB,GAAI0E,EAAGlP,QAAS,kBAAI,EAAKwG,SAAS,CAACgJ,OAAQN,KAAKlG,KAAM,YAExG4F,EAAM7E,KAAK,kBAAC,KAAD,CAAuBjB,MAAO,GAAIC,OAAQ,GAAIyB,GAAI0E,EAAGlP,QAAS,kBAAI,EAAKwG,SAAS,CAACgJ,OAAQN,KAAKlG,KAAM,aAJ/GkG,EAAE,EAAGA,GAAG,EAAGA,IAAK,EAAhBA,GAOR,EAAK1I,SAAS,CAACoI,MAAOA,KA7CP,EAgDnBa,iBAAmB,SAAC/D,GAChB,SAAU,EAAK3E,MAAMa,KAAK8H,QAAQ,OAAQ,KAAKA,QAAQ,eAAgB,MAAM/F,OAAS,IAAM,EAAK5C,MAAMa,KAAK8H,QAAQ,OAAQ,KAAKA,QAAQ,eAAgB,MAAM/F,OAAS,KAjDzJ,EAoDnBgG,YAAc,WACV,IACI,GAA0B,IAAtB,EAAK5I,MAAMyI,OAAc,KAAM,mKACnC,GAAI,EAAKzI,MAAMa,KAAK8H,QAAQ,OAAO,KAAKA,QAAQ,eAAgB,MAAM/F,OAAS,GAAI,KAAM,gdACzF,GAAI,EAAK5C,MAAMa,KAAK8H,QAAQ,OAAO,KAAKA,QAAQ,eAAgB,MAAM/F,OAAS,IAAK,KAAM,+LAC1F,IAAIjI,EAAU,CACV8N,OAAQI,OAAO,EAAK7I,MAAMyI,QAC1B5H,KAAM,EAAKb,MAAMa,KAAK8H,QAAQ,eAAgB,MAC9C/N,YAAY,EACZa,OAAQ,EAAK3C,MAAM2C,QAEvB,EAAK+I,SAASlL,EAAQqB,QAAQN,IAAI,EAAKvB,MAAMsH,aAAaC,IAAK1F,EAAS,QAC1E,MAAO4G,GACLjE,QAAQC,IAAIgE,GACZ,EAAK9B,SAAS,CAAEuE,SACR,kBAAC,IAAD,CACIa,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAAEuE,SAAU,SAExCzC,OAvEF,EAwNnBhC,aAAe,SAACC,GAAW,IAAD,EACFA,EAAME,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAKH,SAAL,eAAgBE,EAAOC,KAxNvB,EAAKI,MAAQ,CACTyI,OAAQ,EACR5H,KAAM,GACNgC,QAAQ,EACRmB,SAAU,KACV6D,MAAO,GACPiB,QAAS,GARE,E,gEAWE,IAAD,OAChB1E,KAAKoE,cAOLrI,MAAM7G,EAAQqB,QAAQF,WAAW2J,KAAKtL,MAAMsH,aAAaC,KACpDW,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACEA,EAAI8H,IAAIrG,SAAS,EAAK5J,MAAMyB,KAAK8F,MACjC,EAAKZ,SAAS,CAACuJ,aAAa,IAEhC,EAAKvJ,SAAS,CAACwJ,YAAahI,EAAImF,SAAU8C,cAAejI,EAAImF,SAASxD,OAAQC,QAAQ,EAAMiG,QAAS7H,EAAI6H,aAE5GxH,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,Q,yCAGX4H,EAAWC,EAAWC,GACjCD,EAAUX,SAAWrE,KAAKpE,MAAMyI,QAChCrE,KAAKoE,gB,iCA4C0B,IAAD,OAA7BjE,EAA6B,uDAAvB,GAAInF,EAAmB,uDAAZ,GAAIkB,EAAQ,uCAElC,OAAOH,MAAMoE,EAAK,CACdjE,OAAQA,EACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5B,GAIEA,EAAK+B,MACL7D,QAAQC,IAAI6B,EAAK+B,OAEjB,EAAK1B,SAAS,CAACuJ,aAAa,EAAMF,QAAS,EAAK9I,MAAM8I,QAAS,EAAG9E,SAC1D,kBAAC,IAAD,CACIa,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAAEuE,SAAU,SAF7C,mbAQf1C,OAAM,SAAAC,GACC,EAAKvB,MAAMgE,UAAU,EAAKvE,SAAS,CAACuE,SAAU,OAClD,EAAKvE,SAAS,CAAEuE,SACR,kBAAC,IAAD,CACIa,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAACuE,SAAU,SAEvCzC,EAAE5H,gB,8BAKnB2P,GACJ,GAAgB,4LAAZA,EACA,OAAOA,EAEP,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAQF,EAAKG,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUJ,EAAKK,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQN,EAAKO,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQR,EAAKS,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAIR,EAAKU,cAAc,WAAMR,EAAM,IAAIE,I,oCAGvD,IAAD,OACV,OAA0B,IAAtBvF,KAAKpE,MAAM6C,OAEP,kBAAC,IAAD,CAAKnB,MAAO,CAAE2G,QAAS,OAAQ6B,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAASnF,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,OAI3Cf,KAAKpE,MAAMiJ,YAAY5E,KAAI,SAAA1J,GAC1B,OACI,kBAAC,IAAD,CAAO+L,IAAK/L,EAAQ0F,IAAKiF,UAAW,QAChC,kBAAC,IAAD,CACIe,YAAa,EAAKyD,QAAQnP,EAAQ4O,MAClCpH,OAAS,kBAAC,IAAD,CAAQ6C,KAAM,GAAID,IAAKpK,EAAQJ,KAAK8G,cAE5C1G,EAAQJ,KAAKuL,UAAU,IAAInL,EAAQJ,KAAKwL,UAE7C,kBAAC,IAAD,CAAMP,WAAS,IACY,IAAvB7K,EAAQC,WAAsBD,EAAQkG,KAClC,kBAAC,IAAD,CAAMsB,OAAQ,kBAAC,KAAD,OAAd,8JAGR,kBAAC,IAAD,CAAM+D,UAAW,kBAAC,GAAD,CAAakC,WAAYzN,EAAQ8N,UAAlD,wCACA,kBAAC,IAAD,Y,iCAMZ,IAAD,OACP,IAA0B,IAAtBrE,KAAKpE,MAAM6C,OACX,OAAIuB,KAAKtL,MAAMsH,aAAayF,QAAUzB,KAAKtL,MAAMyB,KAAKsL,MAE9C,kBAAC,IAAD,CAAKnE,MAAO,CAAC0I,SAAU,GAAIC,MAAO,WAAYC,iBAAkB,OAAQC,WAAY,SAApF,8OAG4B,IAA3BnG,KAAKpE,MAAMgJ,YAEZ,kBAAC,IAAD,CAAKtH,MAAO,CAAC0I,SAAU,GAAIC,MAAO,WAAYC,iBAAkB,OAAQC,WAAY,SAApF,8OAIA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIlE,YAAa,0IAET,kBAAC,IAAD,CAAK3E,MAAO,CAAC2G,QAAS,gBAEdjE,KAAKpE,MAAM6H,MAAMxD,KAAI,SAAAiE,GACjB,OAAOA,QAM/B,kBAAC,IAAD,CACI3I,KAAM,OACN6K,OACIpG,KAAKpE,MAAMa,KAAK+B,OAAS,GACkB,IAA3CwB,KAAKsE,iBAAiBtE,KAAKpE,MAAMa,MAAiB,QAAU,QACxD,KAERjB,MAAOwE,KAAKpE,MAAMa,KAClB4J,OAAQ,gPAAuDrG,KAAKpE,MAAMa,KAAK8H,QAAQ,OAAO,KAAKA,QAAQ,eAAgB,MAAM/F,OAAO,qBACxI8H,IAAK,oGACLC,YAAY,iVACZ7G,SAAUM,KAAK7E,eAEnB,kBAAC,IAAD,CACIgB,KAAK,UACLtH,QAAS,kBAAM,EAAK2P,gBAFxB,sF,+BAgBhB,OACQ,kBAAC,IAAMvD,SAAP,KAE+B,IAAvBjB,KAAKpE,MAAM8I,QACP,kBAAC,IAAD,CAAM5C,UAAW9B,KAAKpE,MAAM8I,QAAS3G,OAAQ,kBAAC,KAAD,OAA7C,kHAAoG,KAE3GiC,KAAKwG,cACN,kBAAC,IAAD,KAASxG,KAAKyG,YACbzG,KAAKpE,MAAMgE,c,GAtOFoD,IAAMC,WAmPrBlN,gBAPS,SAAC6F,GACrB,MAAO,CACHzF,KAAMyF,EAAMzF,KACZkB,OAAQuE,EAAMvE,UAIPtB,CAAyBoO,I,oBC3PlCuC,G,kDACF,WAAahS,GAAQ,IAAD,8BAChB,cAAMA,IAqCViS,SAAW,WACPzI,IAAOC,KAAK,yBAA0B,IACjCvB,MAAK,SAAA5B,IACkB,IAAhBA,EAAKoD,QACL,EAAK/C,SAAS,CAACuL,MAAO,OAG7B1J,OAAM,SAAAC,GAAC,OAAIjE,QAAQC,IAAIgE,OA7CZ,EAgDpB0J,OAAS,WACL,OAAyB,IAArB,EAAKjL,MAAMgL,MAEP,kBAAC,IAAD,CACIE,UAAU,2eACVC,QAAS,kBAAC,IAAD,CAAQlS,QAAS,kBAAI,EAAK8R,aAA1B,mEAIV,kBAAC,IAAD,OAzDK,EA6DpB5P,SAAW,WACP,IAAMiE,EAAO,CACTgM,QAAS,EAAKtS,MAAMyB,KAAKsL,MACzBpK,OAAQ,EAAK3C,MAAM2C,QAEvB0E,MAAM7G,EAAQuB,MAAMM,SAAS,CACzBmF,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACF,OAAoB,IAAhBA,EAAIoK,QACG,KAGH,kBAAC,IAAD,CACI3H,OAAO,mHACPwH,UAAU,2VACVC,QAAS,kBAAC,IAAD,CAAQlS,QAAS,kBAAI,EAAKqS,cAA1B,2EAKxBhK,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,OA7FV,EAgGpB+J,UAAY,WACRhJ,IAAOC,KAAK,oBAAqB,CAC7BgJ,SAAU,YAETvK,KAAK,EAAK7F,UACVmG,OAAM,SAAAC,GAAC,OAAIjE,QAAQC,IAAIgE,OArGZ,EAwGpBiK,SAAW,WACP,OACI,EAAKxL,MAAMyL,KAAKpH,KAAI,SAAAoH,GAChB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM/E,IAAK+E,EAAMzG,KAAK,IAAIzE,KAAK,UAC3B,yBAAKmB,MAAO,CAAEM,OAAQ,GAAI0J,gBAAiB,qBA9G/C,EAsHpBC,SAAW,SAACpR,GACR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMyK,KAAK,KACP,kBAAC,IAAD,CACI4G,MAAM,kEACNvF,YAC0B,OAAtB,EAAKvN,MAAMwB,OAAkB,2EAAiB,4HAGlD6H,OAAQ,kBAAC,IAAD,CAAQ4C,IAAKxK,EAAK8G,WAAY2D,KAAM,KAC5CA,KAAK,KACPzK,EAAKuL,UARP,IAQmBvL,EAAKwL,UAGL,cAAfxL,EAAKsL,OAEL,kBAAC,IAAD,CAAY5M,QAAS,EAAKH,MAAM+S,WAAhC,0DAEmB,OAAtB,EAAK/S,MAAMwB,QACZ,kBAAC,IAAD,CACIoH,MAAO,CAAC8E,aAAc,iBACtBhB,WAAS,EACTvM,QAAS,EAAKH,MAAMgT,QACpB3J,OAAQ,kBAAC,KAAD,MACR6D,YAAU,GALd,+SA1II,EAyJpB+F,WAAa,WACT,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM/G,KAAK,IAAIzE,KAAK,UAChB,kBAAC,IAAM8E,SAAP,KACI,kBAAC,IAAD,4DACA,kBAAC,IAAD,CAAMa,UAAW,EAAKlG,MAAMgM,WAAa,kBAAC,IAAD,KAAU,EAAKhM,MAAMgM,YAAwB,kBAAC,IAAD,CAAShH,KAAK,WAApG,kFACA,kBAAC,IAAD,CAAMkB,UAAW,EAAKlG,MAAMiM,aAAe,kBAAC,IAAD,KAAU,EAAKjM,MAAMiM,cAA0B,kBAAC,IAAD,CAASjH,KAAK,WAAxG,wDA9JhB,EAAKhF,MAAQ,CACTyL,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvBS,SAAS,EACTlB,MAAO,EACPmB,MAAO,MANK,E,gEAUC,IAAD,OAChBjI,OAAOC,SAAS,EAAE,GACdC,KAAKtL,MAAM2C,QACX2I,KAAK3E,SAAS,CAACuL,MAAOnC,OAAOzE,KAAKtL,MAAM2C,OAAO2Q,kBAEnDjM,MAAM,8DACDa,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5B,GACF,EAAKK,SAAS,CAACwM,aAAc7M,EAAK6M,aAAcD,WAAY5M,EAAK4M,gBAEzE1J,IAAO+J,WAAU,SAAA9K,GACb,GAAKA,EAAE+K,OAAP,CADgB,MAKO/K,EAAE+K,OAAjB9O,EALQ,EAKRA,KAAM4B,EALE,EAKFA,KAED,yBAAT5B,GAEA,EAAKiC,SAAS,CAAC0M,MAAO/M,QAI9BkD,IAAOC,KAAK,iBAAkB,IACzBvB,MAAK,SAAA5B,GAAI,OAAE9B,QAAQC,IAAI,UACvB+D,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,Q,+BAiJrB,IACEhH,EAAQ6J,KAAKtL,MAAbyB,KACP,OACI,kBAAC,IAAD,CAAOkJ,GAAG,QACN,kBAAC,IAAD,mDACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIyB,KAAM,kBAAC,IAAD,CAAQH,IAAI,2FAA2FC,KAAM,KACnHtB,OAAO,yCAFX,glBAMCU,KAAKuH,SAASpR,GACd6J,KAAK2H,aACL3H,KAAKjJ,WACLiJ,KAAK6G,SASmB,OAArB7G,KAAKpE,MAAMmM,MACP,kBAAC,IAAD,CAAMnH,KAAK,IAAIzE,KAAK,UAChB,kBAAC,IAAD,CAAagM,WAAanI,KAAKpE,MAAMmM,SAEzC,W,GAjNb/E,IAAMC,WAuOVlN,gBAdS,SAAC6F,GACrB,MAAO,CACHzF,KAAMyF,EAAMzF,KACZD,OAAQ0F,EAAM1F,OACdmB,OAAQuE,EAAMvE,WAII,SAAC6L,GACvB,MAAO,KAKInN,CAA4C2Q,I,6BCpNrD0B,G,kDACF,WAAY1T,GAAQ,IAAD,8BACf,cAAMA,IAiDV2T,gBAAkB,SAAC1J,GACf,EAAKjK,MAAM4T,SACP,kBAAC,IAAD,CACIC,cAAc,WACdxB,QAAS,CAAC,CACNhS,MAAO,oGACPyT,WAAW,EACXrM,KAAM,cACNsM,OAAQ,kBAAM,EAAKC,SAAS/J,KAC7B,CACC5J,MAAO,uCACPyT,WAAW,EACXrM,KAAM,WAEViD,QAAS,kBAAM,EAAK1K,MAAM4T,SAAS,QAEnC,mJACA,4SAnEO,EAwEnBK,cAAgB,WACZ5M,MAAM7G,EAAQS,SAASwB,QAClByF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgM,GACF,EAAKvN,SAAS,CAACuN,WAAYA,IAC3BA,EAAW3I,KAAI,SAAAtK,GACX,EAAK0F,SAAL,eAAgB1F,EAASsG,KAAM,WA9E5B,EAmFnB4M,UAAY,WACR,IAEI,GADwB,oFAApB,EAAKjN,MAAMxC,MAA2B,EAAKiC,SAAS,CAACmG,MAAO,KAClC,4DAA1B,EAAK9M,MAAMoD,WAA6B,KAAM,yLAClD,IAAiC,IAA7B,EAAK8D,MAAMkN,cAAyB,KAAM,+YAC9C,GAAI,EAAKlN,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,GAAI,KAAM,0PACzE,GAAI,EAAK5C,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAAK,KAAM,8OAC1E,GAAI,EAAK5C,MAAMiH,UAAUrE,OAAS,EAAG,KAAM,yYAC3C,IAAK,EAAK5C,MAAMxC,KAAM,KAAM,8TAC5B,GAAyB,KAArB,EAAKwC,MAAM4F,OACP,EAAK5F,MAAM4F,MAAMhD,OAAS,GAAI,KAAM,6QAE5C,IAAgC,IAA5B,EAAK5C,MAAMoN,aAAwB,KAAM,+aAC7C,IAAIC,EAAM,CACNC,OAAQ,GACRvT,SAAU,IAEG,EAAKiG,MAAMgN,WACjB3I,KAAI,SAACtK,EAAUgJ,GACPhJ,EAASuT,OAAOlQ,QAC3B,SAAUkQ,GACN,OAAsB,IAAlBA,EAAOC,QACPF,EAAIC,OAAOtK,KAAKsK,EAAOjN,KAChBiN,EAAOC,QAEP,QAIN3K,OAAS,GAClByK,EAAItT,SAASiJ,KAAK,CAACS,GAAI1J,EAASsG,IAAKmN,MAAOzT,EAASyT,QACrDzT,EAASwT,QAAS,GAElBxT,EAASwT,QAAS,KAG1B,IAAIjT,EAAS,CACT+L,YAAa,EAAKrG,MAAMqG,YACxB7I,KAAM,EAAKwC,MAAMxC,KACjBiQ,SAAU,CACNC,QAAS,EAAK5U,MAAMyB,KAAKkT,SAASC,QAClCC,KAAM,EAAK7U,MAAMoD,YAErB8Q,WAAYK,EACZzH,MAAO,EAAK5F,MAAM4F,MAClBqB,UAAW,EAAKjH,MAAMiH,UACtBxL,OAAQ,EAAK3C,MAAM2C,QAEvB,EAAK3C,MAAM8U,SAAStT,GACtB,MAAO6G,GACL7D,QAAQC,IAAI4D,GACZ,EAAKrI,MAAMkL,SAAS7C,KAtIT,EAyInB0M,QAAU,SAACrD,GACP,EAAK/K,SAAS,CAACqO,IAAKtD,KA1IL,EAuMnBuD,SAAW,WACP,IACI,IAAI5U,EAAQ,EAAK6U,qBAAqB,EAAKhO,MAAMiO,cACjD,IAAK9U,EAAMqR,OAAQ,MAAMrR,EAAMgI,MAE/B,IAAIN,EAAO,EAAKqN,oBAAoB,EAAKlO,MAAMmO,aAC/C,IAAKtN,EAAK2J,OAAQ,MAAM3J,EAAKM,MAE7B,IAAI+F,EAAQ,EAAKkH,qBAAqB,EAAKpO,MAAMqO,cACjD,IAAKnH,EAAMsD,OAAQ,MAAMtD,EAAM/F,MAE/B,IAAI8F,EAAY,EAAKjH,MAAMiH,UAC3BA,EAAUjE,KAAK,CACX7J,MAAO,EAAK6G,MAAMiO,aAClBpN,KAAM,EAAKb,MAAMmO,YACjBjH,MAAO2B,OAAO,EAAK7I,MAAMqO,aAAa1F,QAAQ,MAAO,OAEzD,EAAKlJ,SAAS,CAACwH,UAAWA,EAAW6G,KAAK,EAAOG,aAAc,GAAIE,YAAa,GAAIE,aAAc,KACpG,MAAOlN,GACL,EAAKrI,MAAMkL,SAAS7C,KA1NT,EA6NnB2L,SAAW,SAAC/J,GACR,IAAIkE,EAAY,EAAKjH,MAAMiH,UAC3BA,EAAS,uBAAO,EAAKjH,MAAMiH,UAAUqH,MAAM,EAAGvL,IAArC,aAAgD,EAAK/C,MAAMiH,UAAUqH,MAAMvL,EAAQ,KAC5F,EAAKtD,SAAS,CAACwH,UAAWA,KAhOX,EAkOnBsH,YAAc,WACVjM,IAAOC,KAAK,iCAAkC,CAAC,SAAY,UAAW,IAAO,oBACxEvB,MAAK,SAAAwB,GACF,EAAK/C,SAAS,CAACyN,cAAe1K,EAAOA,YAExClB,OAAM,SAAAC,GACHjE,QAAQC,IAAIgE,OAxOL,EA2OnBiN,YAAc,SAAAhP,GACV,IAAME,EAASF,EAAME,OACf+O,EAAW/O,EAAOC,KAClB+O,EAAchP,EAAO+D,GACvBuJ,EAAa,EAAKhN,MAAMgN,WAC5BA,EAAWyB,GAAUnB,OAAOoB,GAAanB,QAAU,EAAKvN,MAAMgN,WAAWyB,GAAUnB,OAAOoB,GAAanB,OACvG,EAAK9N,SAAS,CAACuN,WAAYA,KAjPZ,EAmPnB2B,QAAU,SAAC5L,GAUP,OATgB,EAAK/C,MAAMgN,WAAWjK,GAAOuK,OAAOlQ,QAChD,SAAUkH,GACN,OAAoB,IAAhBA,EAAKiJ,OACEjJ,EAAKiJ,OAEL,QAIF3K,QA3PjB,EAAK5C,MAAQ,CACT4O,MAAO,GACPxO,aAAc,GACd4M,WAAY,GACZ6B,aAAa,EACb3B,eAAe,EACfE,cAAc,EACd/G,YAAa,GACbY,UAAW,GACXgH,aAAc,GACdE,YAAa,GACbE,aAAc,GACdS,MAAM,EACNtR,KAAM,kFACNoI,MAAO,IAEX,EAAKrG,aAAe,EAAKA,aAAa0E,KAAlB,gBAlBL,E,gEAsBfC,OAAOC,SAAS,EAAG,GACnBC,KAAKmK,cACqB,OAAtBnK,KAAKtL,MAAMqE,OACXiH,KAAK3E,SAAS,CACV2N,aAAchJ,KAAKtL,MAAMqE,OAAOiQ,aAChC/G,YAAajC,KAAKtL,MAAMqE,OAAOkJ,YAC/BY,UAAW7C,KAAKtL,MAAMqE,OAAO8J,UAC7BzJ,KAAM4G,KAAKtL,MAAMqE,OAAOK,KACxBwP,WAAY5I,KAAKtL,MAAMqE,OAAO6P,WAC9BpH,MAAOxB,KAAKtL,MAAMqE,OAAOyI,QAG7BxB,KAAK2I,kB,6CAKT,IAAM3N,EAAO,GACbA,EAAKgO,aAAehJ,KAAKpE,MAAMoN,aAC/BhO,EAAKiH,YAAcjC,KAAKpE,MAAMqG,YAC9BjH,EAAK6H,UAAY7C,KAAKpE,MAAMiH,UAC5B7H,EAAK5B,KAAO4G,KAAKpE,MAAMxC,KACvB4B,EAAK4N,WAAa5I,KAAKpE,MAAMgN,WAC7B5N,EAAKwG,MAAQxB,KAAKpE,MAAM4F,MACxBxB,KAAKtL,MAAMqG,aAAaC,GACxBgF,KAAKtL,MAAM4T,SAAS,Q,2CA8FHuB,GACjB,YAAqBc,IAAjBd,EACO,CAACzD,QAAQ,EAAOrJ,MAAO,gLAE1B8M,EAAatF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAG7CqL,EAAatF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,EAF9C,CAAC4H,QAAQ,EAAOrJ,MAAO,mKAKnB,CAACqJ,QAAQ,K,0CAMZ2D,GAChB,YAAoBY,IAAhBZ,EACO,CAAC3D,QAAQ,EAAOrJ,MAAO,gLAE1BgN,EAAYxF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,KAG5CuL,EAAYxF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,EAF7C,CAAC4H,QAAQ,EAAOrJ,MAAO,6JAKnB,CAACqJ,QAAQ,K,2CAMX6D,GACjB,YAAqBU,IAAjBV,EACO,CAAC7D,QAAQ,EAAOrJ,MAAO,sLAE1BkN,EAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAkC,IAAIA,QAAQ,MAAO,IAAIwE,OAAOvK,OAAS,GAMlHyL,EAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAkC,IAAIA,QAAQ,MAAO,IAAIwE,OAAOvK,OAAS,EALnH,CACH4H,QAAQ,EACRrJ,MAAO,8WASH0H,OAAOwF,EAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAkC,IAAIA,QAAQ,MAAO,KAAO,EACzG,CAAC6B,QAAQ,EAAOrJ,MAAO,0NAEvB,CAACqJ,QAAQ,K,mCAgEvBhL,GAAQ,IAAD,EACIA,EAAME,OAArBC,EADW,EACXA,KAAMC,EADK,EACLA,MACXwE,KAAK3E,SAAL,eAAgBE,EAAOC,M,+BAGjB,IAAD,OACL,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMoF,KAAK,IAAIzE,KAAK,UAChB,kBAAC,IAAD,CACIyE,KAAK,IACLqB,YAAY,gHACZlE,OAAQ,kBAAC,IAAD,CAAQ4C,IAAKX,KAAKtL,MAAMyB,KAAK8G,WAAY2D,KAAM,MAEtDZ,KAAKtL,MAAMyB,KAAKuL,UAAY,IAAM1B,KAAKtL,MAAMyB,KAAKwL,UAEvD,kBAAC,IAAD,CACIC,YAAU,EACV/M,QAASmL,KAAKtL,MAAMY,WACpBwM,UAAW9B,KAAKtL,MAAMoD,WAAW/C,OAAS,oDAC1CqR,OAAQpG,KAAKtL,MAAMoD,WAAW/C,MAAQ,QAAU,QAChDsR,OAAQrG,KAAKtL,MAAMoD,WAAW/C,MAAQ,GAAK,iQAL/C,wDAYyB,IAA7BiL,KAAKpE,MAAMkN,cACP,kBAAC,IAAD,CACI1H,WAAS,EACT2B,aAAc,kBAAC,IAAD,CAAQ5G,KAAK,UAAUtH,QAASmL,KAAKmK,aAArC,0DACd9D,QAAqC,IAA7BrG,KAAKpE,MAAMkN,eAA2B,2LAHlD,kdAMA,MASZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIvN,KAAM,cACN8K,OAAQrG,KAAKpE,MAAMqG,YAAc,GAAK,mMACtCqE,IAAI,kCACJF,OACIpG,KAAKpE,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,EACvDwB,KAAKpE,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAAMwB,KAAKpE,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAAM,QAAU,QAC5I,KAERhD,MAAOwE,KAAKpE,MAAMqG,YAClBvC,SAAUM,KAAK7E,eACnB,kBAAC,IAAD,CAAiBmL,IAAI,0GACJD,OAAO,mbACPhH,GAAI,YAEbW,KAAKpE,MAAMgN,WAAW3I,KAAI,SAACtK,EAAUoO,GACjC,OACI,kBAAC,IAAD,CAAOzB,IAAK3M,EAASsG,KACjB,kBAAC,IAAD,CAAMV,KAAM5F,EAASsG,IACfpH,QAAS,kBAAM,EAAKwG,SAAL,eAAgB1F,EAASsG,KAAO,EAAKL,MAAMjG,EAASsG,QACnE6F,UACI,+CAAc,EAAKyI,QAAQxG,GAE/BhB,aAAc,EAAKnH,MAAMjG,EAASsG,KAAO,kBAAC,KAAD,MAAc,kBAAC,KAAD,OAExDtG,EAASyT,OAEb,EAAKxN,MAAMjG,EAASsG,MACrB,kBAAC,IAAD,KAEQtG,EAASuT,OAAOjJ,KAAI,SAAC2K,EAAajM,EAAOhJ,GACrC,OACI,kBAAC,IAAD,CACI2M,IAAK3D,EACLoE,aACI,kBAAC,IAAD,CACIxH,KAAMwI,EACN1E,GAAIV,EACJe,SAAU,EAAK0K,YACfS,QAASD,EAAYzB,UAE5ByB,EAAYxB,iBAazD,kBAAC,IAAD,CAAOrU,MAAO,2DACuB,IAAhCiL,KAAKpE,MAAMiH,UAAUrE,QACtB,kBAAC,IAAD,CAAM4C,WAAS,GAAf,ufAGA,kBAAC,IAAD,KACKpB,KAAKpE,MAAMiH,UAAU5C,KAAI,SAACC,EAAMvB,GAAP,OACtB,kBAAC,IAAD,CAAMiC,KAAK,IAAIzE,KAAK,UAChB,kBAAC,IAAD,CACImG,IAAKpC,EACLkB,WAAS,GAMT,kBAAC,IAAD,CACIa,YAAY,2GAAsB,EAAKrG,MAAMiH,UAAUlE,GAAO5J,OAClE,kBAAC,IAAD,CAAMkN,YAAY,qJACZb,WAAS,GAAE,EAAKxF,MAAMiH,UAAUlE,GAAOlC,MAC7C,kBAAC,IAAD,CACIwF,YAAY,iJAA8B,EAAKrG,MAAMiH,UAAUlE,GAAOmE,OAC1E,kBAAC,IAAD,CAEIjO,QAAS,WACL,EAAKwT,gBAAgB1J,IAEzBiC,KAAK,KACLzE,KAAK,eANT,oDAYf6D,KAAKpE,MAAM8N,IACR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMzH,YAAY,qJAA6Bb,WAAS,GACpD,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIa,YAAajC,KAAKpE,MAAMiO,aAAatF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,OACzE,kBAAC,IAAD,CACIsM,SAAO,EACP1E,OACIpG,KAAKpE,MAAMiO,aAAarL,OAAS,GACiC,IAA9DwB,KAAK4J,qBAAqB5J,KAAKpE,MAAMiO,cAAczD,OAAkB,QAAU,QAC/E,KAER7K,KAAK,eACLnC,KAAK,OACLoC,MAAOwE,KAAKpE,MAAMiO,aAClBtD,YAAa,8FACb7G,SAAUM,KAAK7E,gBAEvB,kBAAC,IAAD,CACI8G,YAAajC,KAAKpE,MAAMmO,YAAYxF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,QACxE,kBAAC,IAAD,CACIsM,SAAO,EACP1E,OACIpG,KAAKpE,MAAMmO,YAAYvL,OAAS,EAC5BwB,KAAK8J,oBAAoB9J,KAAKpE,MAAMmO,aAAa3D,OAAS,QAAU,QACpE,KAER7K,KAAK,cACLC,MAAOwE,KAAKpE,MAAMmO,YAClBxD,YAAa,8FACb7G,SAAUM,KAAK7E,gBAEvB,kBAAC,IAAD,CACI8G,YAAajC,KAAKpE,MAAMqO,aAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAkC,IAAIA,QAAQ,MAAO,IAAIwE,OAAOvK,OAAS,MAC9I,kBAAC,IAAD,CACIsM,SAAO,EACP1E,OACIpG,KAAKpE,MAAMqO,aAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAkC,IAAIA,QAAQ,MAAO,IAAI/F,OAAS,EACtHwB,KAAKgK,qBAAqBhK,KAAKpE,MAAMqO,aAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAkC,IAAIA,QAAQ,MAAO,KAAK6B,OAAS,QAAU,QAC/J,KAER7K,KAAK,eACLnC,KAAK,SACLoC,MAAOwE,KAAKpE,MAAMqO,aAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAkC,IAAIA,QAAQ,MAAO,IACpHgC,YAAa,sEACb7G,SAAUM,KAAK7E,kBAI/B,kBAAC,IAAD,CAAKmC,MAAO,CAAC2G,QAAS,SAClB,kBAAC,IAAD,CAAQrD,KAAK,IAAImK,WAAS,EAACzN,MAAO,CAACG,YAAa,GACxC5I,QAAS,kBAAM,EAAK8U,aAD5B,0DAEA,kBAAC,IAAD,CAAQ/I,KAAK,IAAImK,WAAS,EAAC5O,KAAK,cACxBtH,QAAS,kBAAM,EAAK4U,SAAQ,KADpC,sDAIR,kBAAC,IAAD,CACI5U,QAAS,kBAAM,EAAK4U,SAAQ,IAC5B1L,OAAQ,kBAAC,KAAD,OAFZ,4GAMR,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIxC,KAAM,OACN+K,IAAI,sJACJ9K,MAAOwE,KAAKpE,MAAMxC,KAClBiN,OAAQrG,KAAKpE,MAAMxC,KAAO,GAAK,8MAC/BsG,SAAUM,KAAK7E,cAEf,4BAAQK,MAAM,mFAAd,mFACA,4BAAQA,MAAM,sEAAd,uEAGoB,uEAApBwE,KAAKpE,MAAMxC,MACX,kBAAC,IAAD,CAAiBkN,IAAI,gTACjB,kBAAC,IAAD,CACI/K,KAAM,QACNnC,KAAK,OACLgN,OACIpG,KAAKpE,MAAM4F,MAAMhD,OAAS,EACtBwB,KAAKpE,MAAM4F,MAAMhD,OAAS,GAAK,QAAU,QACzC,KAERhD,MAAOwE,KAAKpE,MAAM4F,MAClB9B,SAAUM,KAAK7E,gBAI3B,kBAAC,IAAD,CAAU0P,QAAS7K,KAAKpE,MAAMoN,aACpBtJ,SAAU,kBAAM,EAAKrE,SAAS,CAAC2N,cAAe,EAAKpN,MAAMoN,iBADnE,sDAEM,kBAAC,IAAD,CAAMnU,QAASmL,KAAKtL,MAAMsW,WAA1B,uMACN,kBAAC,IAAD,CAAQpK,KAAK,KAAK/L,QAASmL,KAAK6I,WAAhC,yKAEJ,kBAAC,IAAD,W,GAveK7F,IAAMC,WA6fZlN,gBAhBS,SAAC6F,GACrB,MAAO,CACH9D,WAAY8D,EAAM9D,WAClB3B,KAAMyF,EAAMzF,KACZkB,OAAQuE,EAAMvE,OACd0B,OAAQ6C,EAAM7C,WAII,SAACmK,GACvB,MAAO,CACHvJ,iBAAkBwJ,YAAmBxJ,EAAkBuJ,GACvDnI,aAAcoI,YAAmBpI,GAAcmI,MAIxCnN,CAA4CqS,I,wHCngBrD6C,G,kDACF,WAAYvW,GAAQ,IAAD,8BACf,cAAMA,IAoCVwW,SAAW,WACP,IAGIC,EAHW,EAAKzW,MAAMwB,OAAO2M,UAAU5C,KAAI,SAAAmL,GACvC,MAAO,UAAYA,EAAKrW,MAAQ,QAEnBsW,KAAK,IAC1BnN,IAAOC,KAAK,0BAA2B,CACnC,YAAe,CACX,sCAAsC,EAAKzJ,MAAMwB,OAAO+F,KAE5D,QAAW,iJAA0CkP,EAA1C,gVAC+B,EAAKzW,MAAMwB,OAAO+F,IAC5D,SAAY,EAAKvH,MAAMwB,OAAOuL,MAC9B,UAAa,+BAjDF,EAqDnB6J,YAAc,WACVpN,IAAOC,KAAK,uBAAwB,CAChC,gBAAoB,QACpB,IAAQ,qFACR,QAAU,EACV,WAAc,CACV,KAAQ,OACR,KAAQ,MACR,IAAO,sCAAsC,EAAKzJ,MAAMwB,OAAO+F,KAEnE,SAAY,CACR,CACI,aAAgB,aAChB,QAAW,CACP,UAAa,CACT,eAAkB,GAClB,cAAiB,KAErB,WAAc,EACd,aAAgB,QAChB,IAAO,qFACP,gBAAmB,CACf,CAEI,YAAe,OACf,OAAU,CACN,KAAQ,sCAAsC,EAAKvH,MAAMwB,OAAO+F,IAChE,iBAAoB,qBAMxB,eAAkB,CACd,CACI,EAAK,EACL,EAAK,GAET,CACI,EAAK,IACL,EAAK,GAET,CACI,EAAK,IACL,EAAK,KAET,CACI,EAAK,EACL,EAAK,cArGtB,EA+GnBsP,gBAAkB,WACd,IAA4C,IAAxC,EAAK7W,MAAMwB,OAAOM,WAAW4P,OAC7B,OAAI,EAAK1R,MAAMwB,OAAOM,WAAWgV,QAAQhN,OAAS,EAE1C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMoC,KAAK,MACP,kBAAC,IAAD,CAAMqB,YAAa,oIAAnB,gLAEI,EAAKvN,MAAMwB,OAAOM,WAAWgV,QAAQvL,KAAI,SAACwL,EAAQ9M,GAC9C,OAAO,kBAAC,IAAD,CAAM2D,IAAK3D,GAAQ8M,QAQ1C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM7K,KAAK,MACP,kBAAC,IAAD,CAAMQ,WAAS,GAAf,8VAlIL,EA6JnBsK,YAAc,WACVxN,IAAOC,KAAK,yBAA0B,IAAIvB,MAAK,SAAA5B,GAAI,OAAE9B,QAAQC,IAAI6B,OA5JjE,EAAKY,MAAQ,CACT+P,YAAY,EACZC,QAAS,GACTC,UAAU,EACVC,QAAQ,EACRC,QAAS,GACTC,WAAY,GACZzN,UAAW,EACXwJ,MAAO,MAVI,E,gEAcE,IAAD,OAChB7J,IAAO+J,WAAU,SAAA9K,GACb,GAAKA,EAAE+K,OAAP,CADgB,MAKO/K,EAAE+K,OAAjB9O,EALQ,EAKRA,KAAM4B,EALE,EAKFA,KAED,yBAAT5B,GACA,EAAKiC,SAAS,CAAC0M,MAAO/M,IAGb,yBAAT5B,GAEAF,QAAQC,IAAI6B,EAAKiR,gBAIzB/N,IAAOC,KAAK,iBAAkB,IACzBvB,MAAK,SAAA5B,GAAI,OAAE9B,QAAQC,IAAI,UACvB+D,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,Q,iCAwGC,IAAtBgD,EAAqB,uDAAf,GAAInF,EAAW,uDAAJ,GAEtB,OAAOe,MAAMoE,EAAK,CACdjE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAiE,GAAQ,OAAI3H,QAAQC,IAAI,W,+BAQ7B,IAAD,OACJ,OACI,kBAAC,IAAM8H,SAAP,KACI,kBAAC,IAAD,CAAOC,UAAW,QACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMN,KAAK,KACP,kBAAC,IAAD,CACIO,UAAQ,EACRC,WAAS,EACTrD,OAAQ,kBAAC,IAAD,CAAQ4C,IAAKX,KAAKtL,MAAMyB,KAAK8G,WAAY2D,KAAM,KACvDL,KACI,kBAAC,IAAD,CAASc,MAAM,IAAIC,OAAO,UAAUhE,MAAO,CAAEiE,aAAc,KACtDvB,KAAKtL,MAAMwB,OAAS8J,KAAKtL,MAAMwB,OAAOkD,KAAO,4EAGtDmG,QAASS,KAAKtL,MAAMwB,QAAU8J,KAAKtL,MAAMwB,OAAOmT,SAASE,KAAKxU,MAC9D2L,MAA6B,OAAtBV,KAAKtL,MAAMwB,QAAmB,kBAAC,KAAD,CAAarB,QAASmL,KAAKtL,MAAMwX,eAErElM,KAAKtL,MAAMyB,KAAKuL,UAAU,IAAI1B,KAAKtL,MAAMyB,KAAKwL,aAKxC,OAAtB3B,KAAKtL,MAAMwB,QAAmB8J,KAAKuL,kBAChC,kBAAC,IAAD,CAAOxW,MAAM,mDAAWmM,UAAW,QAC/B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIU,YAAU,EACV7D,OAAQ,kBAAC,KAAD,MACRlJ,QAASmL,KAAKtL,MAAMyX,eAHxB,4DAcmB,IAA3BnM,KAAKtL,MAAM2I,YACP,kBAAC,IAAD,CACIiC,OAAO,sEACPwH,UAAU,wcACVC,QAAS,kBAAC,IAAD,CAAQlS,QAAS,kBAAI,EAAK6W,gBAA1B,sDAEb,KAEe,OAAtB1L,KAAKtL,MAAMwB,QACR,kBAAC,IAAD,CAAOnB,MAAM,uEACb,kBAAC,IAAD,CAAWuI,MAAO,CAAE+E,OAAQ,YAC5B,kBAAC,IAAD,KAaI,kBAAC,IAAD,CACItE,OAAQ,kBAAC,KAAD,MACRlJ,QAAS,kBAAI,EAAKqW,aAFtB,qGAIA,kBAAC,IAAD,CACInN,OAAQ,kBAAC,KAAD,MACRlJ,QAAS,kBAAI,EAAKyW,gBAFtB,kHAIJ,kBAAC,IAAD,CACI1J,YAAU,EACV7D,OAAQ,kBAAC,KAAD,MACRlJ,QAASmL,KAAKtL,MAAM0X,iBAHxB,0DAKI,kBAAC,IAAD,CACIxK,YAAU,EACV7D,OAAQ,kBAAC,KAAD,MACRlJ,QAASmL,KAAKtL,MAAM2X,eAHxB,8E,GA/OPrJ,IAAMC,WAiRRlN,gBAbS,SAAC6F,GACrB,MAAO,CACHzF,KAAMyF,EAAMzF,KACZD,OAAQ0F,EAAM1F,WAII,SAACgN,GACvB,MAAO,KAKInN,CAA4CkV,I,yFCjRrDqB,G,kDACF,WAAY5X,GAAQ,IAAD,8BACf,cAAMA,IAmDV6X,YAAc,SAACC,GACX,EAAK9X,MAAM4T,SACP,kBAAC,IAAD,CACIC,cAAc,WACdxB,QAAS,CAAC,CACNhS,MAAO,0GACPyT,WAAW,EACXrM,KAAM,cACNsM,OAAQ,kBAAMgE,WAAW,EAAKC,OAAOF,GAAO,OAC7C,CACCzX,MAAO,uCACPyT,WAAW,EACXrM,KAAM,WAEViD,QAAS,kBAAI,EAAK1K,MAAM4T,SAAS,QAEjC,mJACA,kTArEO,EA0EnBoE,OAAS,SAACF,GACN,EAAKnR,SAAS,CAACsR,SAAS,IACxB5Q,MAAM7G,EAAQuB,MAAMQ,SAAU,CAC1BiF,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU,CAACtF,OAAQ,EAAK3C,MAAM2C,OAAQmQ,MAAOgF,MAEvD5P,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIuJ,SAC6B,IAA7BvJ,EAAI3G,OAAOgM,OAAO1D,QAAc,EAAKnD,SAAS,CAACuR,YAAY,IAC/D,EAAKvR,SAAS,CAACgF,OAAQxD,EAAI3G,OAAOgM,OAAQyK,SAAS,IACnD,EAAKjY,MAAMuE,UAAU4D,EAAI3G,QACzB,EAAKxB,MAAM4T,SAAS,UAG3BpL,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,OAlGX,EA8HnBzG,YA9HmB,sBA8HL,sCAAAwI,EAAA,uEAEmByL,IAArB,EAAK/O,MAAMiR,MAFT,qBAEoC,yMAFpC,WAGFC,EAAeC,SAASC,eAAe,SAASC,MAAM,IACxC7T,KAAK8T,MAAM,WAJvB,qBAIyC,yNAJzC,uBAKe,EAAKlW,WALpB,WAMkB,KADpBA,EALE,QAMOoP,OANP,sBAM+B,oKAN/B,WAQkB,SAApBpP,EAASoP,OARP,wBAUI+G,EAAeC,UAAU,qKAAuF,EAAKxR,MAAMiR,MAAQ,YAVvI,UAWIQ,KAAWF,GACZvQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF3D,QAAQC,IAAI,uGAAwB0D,EAAIgE,SAASxB,IACjDiO,EAAQzQ,EAAIgE,SAASxB,MAExBnC,OAAM,SAAAC,GAAC,OAAIjE,QAAQC,IAAIgE,MAjB1B,gCAmBFmQ,EAAQtW,EAASuW,SAnBf,yBAsBqB,EAAKC,gBAAgB,EAAK5R,MAAMiR,MAAOS,GAtB5D,YAwBsB,KAFtBG,EAtBA,QAwBWrH,OAxBX,sBAwBmC,mOAxBnC,QA2BN,EAAK/K,SAAS,CAACsR,SAAS,KAClBe,EAAW,IAAIC,UACZC,OAAO,SAAU,EAAKlZ,MAAMwB,OAAOwL,UAAY,IAAM,EAAKhN,MAAMwB,OAAOyL,UAChF+L,EAASE,OAAO,YAAaH,EAAatN,KAC1CuN,EAASE,OAAO,QAAS,EAAKhS,MAAMiR,OACpCa,EAASE,OAAO,QAASd,GACzBY,EAASE,OAAO,WAAY,EAAKlZ,MAAMwB,OAAO+F,KAC9C/C,QAAQC,IAAI,yHACZ4C,MAAM7G,EAAQuB,MAAMC,YAAa,CAC7BwF,OAAQ,OACRO,KAAMiR,IAEL9Q,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACEA,EAAIE,OACJ,EAAK1B,SAAS,CAACsR,SAAS,IACxB,EAAKkB,UAAUhR,EAAIE,SAEnB7D,QAAQC,IAAI,aAAc0D,GAC1BwQ,KAAWxQ,EAAIiR,QAAS,CACpB3R,KAAM,UACND,OAAQ,QAEPU,MAAK,SAAAwB,GAAM,OAAIA,EAAOtB,UACtBF,MAAK,SAAAwB,GACF,GAAIA,EAAOrB,MACP,EAAK1B,SAAS,CAACsR,SAAS,IACxB,EAAKkB,UAAU,2LACZ,CACH3U,QAAQC,IAAI,gGAAqBiF,GACjC,IAAI2P,EAAS,CACT5N,IAAK/B,EAAOyC,SAAS,GAAGmN,MAAM,GAAG7N,IACjC9I,OAAQ,EAAK3C,MAAM2C,QAEvB0E,MAAM7G,EAAQuB,MAAME,UAAW,CAC3BuF,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUoR,KAEpBnR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,GAAIA,EAAIE,MACJ,EAAK1B,SAAS,CAACsR,SAAS,IACxB,EAAKkB,UAAUhR,EAAIE,WAChB,CACH,IAAIqG,EAAS,EAAKxH,MAAMyE,OACxB+C,EAAO6K,QAAQpR,EAAIqR,KACnB,EAAKL,UAAU,+HACf,EAAKxS,SAAS,CAACgF,OAAQ+C,EAAQuJ,SAAS,QAG/CzP,OAAM,SAAAC,GACH,EAAK9B,SAAS,CAACsR,SAAS,IACxBzT,QAAQC,IAAIgE,UAI3BD,OAAM,SAAAC,GACH,EAAK9B,SAAS,CAACsR,SAAS,IACxBzT,QAAQC,IAAIgE,UAI3BD,OAAM,SAAAH,GACH7D,QAAQC,IAAI4D,GACZ,EAAK1B,SAAS,CAACsR,SAAS,IACxB,EAAKkB,UAAU,gHApGjB,kDAuGN3U,QAAQC,IAAR,MACA,EAAK0U,UAAU,+LAxGT,0DA9HK,EA2OnBL,gBA3OmB,uCA2OD,WAAOX,EAAOS,GAAd,SAAApO,EAAA,sEACDhB,IAAOC,KAAK,wBAAyB,CAC9C,OAAU,yBACV,OAAU,CAAC,SAAYmP,EAAO,EAAK,QAAS,aAAgBT,KAE3DjQ,MAAK,SAAAwB,GAGF,OAFAlF,QAAQC,IAAI,4JAA+BiF,EAAOyC,SAASsN,YAC3D,EAAK9S,SAAS,CAAC+S,UAAWhQ,EAAOyC,SAASsN,aACnC,CAAC/H,QAAQ,EAAMjG,IAAK/B,EAAOyC,SAASsN,eAE9CjR,OAAM,SAAAC,GAEH,OADAjE,QAAQC,IAAIgE,GACL,CAACiJ,QAAQ,MAZV,mFA3OC,0DA4PnBiI,SAAW,WACPnQ,IAAOC,KAAK,uBAAwB,CAAC,OAAU,QAAS,MAAS,WAC5DvB,MAAK,SAAAwB,GACEA,EAAOkQ,cACP,EAAKjT,SAAS,CAACwR,MAAOzO,EAAOkQ,kBAGpCpR,OAAM,SAAAH,GAAK,OAAI7D,QAAQC,IAAI4D,OAjQhC,EAAKnB,MAAQ,CACTI,aAAc,GACduS,SAAU,GACV9P,QAAQ,EACR+P,UAAW,GACXnO,OAAQ,GACRuM,YAAY,GARD,E,gEAYE,IAAD,OAEhB1O,IAAOC,KAAK,uBAAwB,CAAC,OAAU,QAAS,MAAS,WAC5DvB,MAAK,SAAAwB,GACEA,EAAOkQ,aACP,EAAKjT,SAAS,CAACwR,MAAOzO,EAAOkQ,aAAcjO,OAAQ,EAAK3L,MAAMwB,OAAOgM,OAAQzD,QAAQ,IAErF,EAAKpD,SAAS,CAACgF,OAAQ,EAAK3L,MAAMwB,OAAOgM,OAAQzD,QAAQ,OAGhEvB,OAAM,SAAAH,GACH7D,QAAQC,IAAI4D,GACZ,EAAK1B,SAAS,CAACgF,OAAQ,EAAK3L,MAAMwB,OAAOgM,OAAQzD,QAAQ,S,6CAKjEuB,KAAKtL,MAAM4T,SAAS,Q,gCAGd/H,GAAO,IAAD,OACRP,KAAKpE,MAAMgE,UACfI,KAAK3E,SAAS,CACVuE,SACI,kBAAC,IAAD,CACIa,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAACuE,SAAU,SAEvCW,O,qCAKFF,EAAQ1B,GACnBT,IAAOC,KAAK,qBAAsB,CAC9BkC,OAAQA,EACRC,YAAa3B,IACd/B,MAAK,SAAA5B,GAAI,OAAI9B,QAAQC,IAAI,W,0JAqDrBsV,EAAcrB,UAAU,uDAAuDpN,KAAKtL,MAAM2C,OAAOqX,WAAW,iBAAiB1O,KAAKpE,MAAMiR,MAAM,YAChJU,EAAW,K,SACTF,KAAWoB,GACZ7R,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACEA,EAAIgE,UACJhE,EAAIgE,SAAS8N,MAAM1O,KAAI,SAAAqN,GACA,sGAAhBA,EAAMvY,QACLwY,EAAWD,EAAMjO,UAKhCnC,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,M,UACT,OAAboQ,E,uBACArU,QAAQC,IAAI,sK,kBACL,CAACiN,OAAQ,S,cAEhBlN,QAAQC,IAAI,uGAAuBoU,G,kBAC5B,CAACnH,QAAQ,EAAMmH,SAAUA,I,yIA6I5B,IAAD,OACR,OAAIvN,KAAKpE,MAAMyE,OAAO7B,OAAS,EAEvB,kBAAC,IAAD,KAEQwB,KAAKpE,MAAMyE,OAAOJ,KAAI,SAACoD,EAAO1E,GAC1B,OACI,kBAAC,IAAD,CACIrB,MAAO,CAACE,QAAS,EAAG4E,aAAc,GAAIC,OAAQ,GAC9CzB,KAAK,IACLzE,KAAK,SACLmG,IAAK3D,EACL9J,QACI,EAAK+G,MAAMgR,WACP,kBAAM,EAAKL,YAAYlJ,IACvB,kBAAM,EAAKd,eAAe,EAAK3G,MAAMyE,OAAQ1B,KAGrD,yBAAKrB,MAAO,CACRM,OAAQ,GACR4E,gBAAiB,OAASa,EAAQ,IAClCZ,eAAgB,QAChBC,mBAAoB,aACpBC,iBAAkB,YAClBP,aAAc,MAId,EAAKxG,MAAMgR,WACP,yBAAKtP,MAAO,CAAC2I,MAAO,MAAO2I,UAAW,WAAtC,8CACA,UASxB,kBAAC,IAAD,wL,+BAIN,IAAD,OACL,OAA0B,IAAtB5O,KAAKpE,MAAM6C,OAEP,kBAAC,IAAD,CAASmC,KAAK,QAAQtD,MAAO,CAACyD,UAAW,MAIzC,kBAAC,IAAD,CAAKzD,MAAO,CAAC4I,iBAAkB,OAAQC,WAAY,SAE3CnG,KAAKpE,MAAM+Q,QAAU,kBAAC,IAAD,CAAKrP,MAAO,CAAC4I,iBAAkB,OAAQC,WAAY,SAAS,kBAAC,IAAD,CAAM/E,WAAS,GAAf,wGAA2C,kBAAC,IAAD,OAAwB,kBAAC,IAAD,CAAOrM,MAAM,IAC7J,kBAAC,IAAD,KAEQiL,KAAKpE,MAAMiR,MACP,kBAAC,IAAM5L,SAAP,KACI,kBAAC,IAAD,CACI4N,OAAO,UACPvI,IAAI,0IACJvI,OAAQ,kBAAC,KAAD,MACR6C,KAAK,IACLlB,SAAUM,KAAKtJ,YAEf2I,GAAG,SAPP,yFAYIW,KAAKpE,MAAMyE,OAAO7B,OAAS,GACG,IAA1BwB,KAAKpE,MAAMgR,WACP,kBAAC,IAAD,CAAY/X,QAAS,kBAAM,EAAKwG,SAAS,CAACuR,YAAY,KAAQ7O,OAAQ,kBAAC,KAAD,OAAtE,kFACA,kBAAC,IAAD,CAAYlJ,QAAS,kBAAM,EAAKwG,SAAS,CAACuR,YAAY,KAAS7O,OAAQ,kBAAC,KAAD,OAAvE,+IAEJ,MAIZ,kBAAC,IAAMkD,SAAP,KACI,kBAAC,IAAD,CAAYpM,QAAS,kBAAM,EAAKwZ,YAAYtQ,OAAQ,kBAAC,KAAD,OAApD,iIAMhB,kBAAC,IAAD,CAAOmD,UAAU,QACZlB,KAAKsD,cAIjBtD,KAAKpE,MAAMgE,c,GAjWRoD,IAAMC,WAsXflN,gBAdS,SAAC6F,GACrB,MAAO,CACHzF,KAAMyF,EAAMzF,KACZD,OAAQ0F,EAAM1F,OACdmB,OAAQuE,EAAMvE,WAII,SAAC6L,GACvB,MAAO,CACHjK,UAAWkK,YAAmBlK,EAAWiK,MAIlCnN,CAA4CuW,I,oBCzYrDwC,G,kDAEF,WAAYpa,GAAQ,IAAD,8BACf,cAAMA,IACDkH,MAAQ,CACTmT,OAAQ,GACRC,OAAQ,CAAC,CAAC3P,GAAG,EAAGtK,MAAO,UAE3B,EAAK2K,SAAW,EAAKA,SAASG,KAAd,gBAND,E,gEAcfG,KAAKnJ,c,kCAGI,IAAD,OACFmE,EAAO,CACT+T,OAAQ/O,KAAKpE,MAAMmT,OAAOE,cAC1BC,WAAY,GAEhBnT,MAAM7G,EAAQuB,MAAMI,UAAU,CAC1BqF,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACEA,EAAIE,MACJ7D,QAAQC,IAAI0D,EAAIE,OAEhB,EAAK1B,SAAS,CAAC2T,OAAQnS,EAAIsS,SAAU1Q,QAAQ,OAGpDvB,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,Q,+BAGrBA,GACL6C,KAAK3E,SAAS,CAAC0T,OAAQ5R,EAAE7B,OAAOE,QAChCwE,KAAKnJ,c,+BAGC,IAAD,OACL,OACI,kBAAC,IAAMoK,SAAP,KACI,kBAAC,IAAD,CAAQzF,MAAOwE,KAAKpE,MAAMmT,OAAQrP,SAAUM,KAAKN,SAAUgB,MAAO,OACjEV,KAAKpE,MAAMoT,OAAOxQ,OAAS,GAC5B,kBAAC,IAAD,KACKwB,KAAKpE,MAAMoT,OAAO/O,KAAI,SAAAsJ,GAAI,OACvB,kBAAC,IAAD,CACItH,YAAasH,EAAK6F,QAAU,GAC5Bva,QAAS,kBAAI,EAAKH,MAAMiF,iBAAiB4P,IACzCjH,IAAKiH,EAAKlK,IAETkK,EAAKxU,gB,GAjENiO,IAAMC,W,IA0EnBoM,YAAsBP,I,kBC5ErC,SAAShN,GAAUyH,GACf,GAAGA,EACC,MAAgB,8EAATA,EAA2BA,EAAOA,EAAKxU,MAgBtD,IAOegB,gBAPS,SAAC6F,GACrB,MAAO,CACH9D,WAAY8D,EAAM9D,cAKX/B,EAlBf,SAAkBrB,GACd,OACI,kBAAC,IAAD,CACI4I,MAAO,CAAC0I,SAAU,GAAIxI,QAAS,GAC/BoE,YAAU,EACV/M,QAASH,EAAMY,WACfwM,UAAWA,GAAUpN,EAAMoD,aAC9B,0BAAMwF,MAAO,CAAC0I,SAAU,KAAxB,6F,oBCoBHsJ,IAFSC,c,kDAGX,WAAY7a,GAAQ,IAAD,8BACf,cAAMA,IA0EV8a,YAAc,WACV,IAEI,GADwB,oFAApB,EAAK5T,MAAMxC,MAA2B,EAAKiC,SAAS,CAACmG,MAAO,KAC5D,EAAK5F,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,GAAI,KAAM,6OACzE,GAAI,EAAK5C,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAAK,KAAM,2PAC1E,GAAI,EAAK5C,MAAM1F,OAAO2M,UAAUrE,OAAS,EAAG,KAAM,yYAClD,GAAyB,KAArB,EAAK5C,MAAM4F,OACP,EAAK5F,MAAM4F,MAAMhD,OAAS,GAAI,KAAM,6QAE1C,IAA4B,IAAxB,EAAK5C,MAAMiD,SAAkB,CAC7B,IAAI3I,EAAS,EAAK0F,MAAM1F,OACxBA,EAAOkD,KAAO,EAAKwC,MAAMxC,KACzBlD,EAAOsL,MAAQ,EAAK5F,MAAM4F,MAC1BtL,EAAOmB,OAAS,EAAK3C,MAAM2C,OAC3B,EAAKoY,UAAUva,EAAQM,QAAQC,IAAM,EAAKmG,MAAM1F,OAAO+F,IAAK/F,GAC5D,EAAKxB,MAAMuE,UAAU,EAAK2C,MAAM1F,SAEzC,MAAMiH,GACH,EAAKzI,MAAMgb,gBAAgBvS,KA7FhB,EA+GnBkL,gBAAkB,SAAC1J,GACf,EAAKtD,SAAS,CAACwD,UAAU,IACzB,EAAKnK,MAAM4T,SACC,kBAAC,IAAD,CACIC,cAAc,WACdxB,QAAS,CAAC,CACNhS,MAAO,oGACPyT,WAAW,EACXrM,KAAM,cACNsM,OAAQ,kBAAM,EAAKC,SAAS/J,KAC7B,CACC5J,MAAO,uCACPyT,WAAW,EACXrM,KAAM,WAEViD,QAAS,kBAAI,EAAK1K,MAAM4T,SAAS,QAEjC,mJACA,4SAjID,EAsInBnN,aAAe,SAACC,GACZ,EAAKC,SAAL,eAAgBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,QACjD,EAAKH,SAAS,CAACwD,UAAU,KAxIV,EAwLnB8Q,SAAW,SAAChR,GACR,IACI,IAAI5J,EAAQ,EAAK6U,qBAAqB,EAAKhO,MAAMgU,eACjD,IAAK7a,EAAMqR,OAAQ,MAAMrR,EAAMgI,MAE/B,IAAIN,EAAO,EAAKqN,oBAAoB,EAAKlO,MAAMiU,cAC/C,IAAKpT,EAAK2J,OAAQ,MAAM3J,EAAKM,MAE7B,IAAI+F,EAAQ,EAAKkH,qBAAqB,EAAKpO,MAAMkU,eACjD,IAAKhN,EAAMsD,OAAQ,MAAMtD,EAAM/F,MAG/B,IAAMgT,EAAW,CACbhb,MAAO,EAAK6G,MAAMgU,cAClBnT,KAAM,EAAKb,MAAMiU,aACjB/M,MAAO2B,OAAO,EAAK7I,MAAMkU,cAAcvL,QAAQ,WAAY,IAAIA,QAAQ,+BAA+B,IAAIA,QAAQ,MAAO,MAGzHrO,EAAS,EAAK0F,MAAM1F,OACxBA,EAAO2M,UAAU9D,OAAOJ,EAAO,EAAGoR,GAClC,EAAK1U,SAAS,CAACnF,OAAQA,EAAQ0Z,cAAe,GAAIC,aAAc,GAAIC,cAAe,GAAIE,KAAM,OAC7F,EAAK3U,SAAS,CAACwD,UAAU,IAC3B,MAAO9B,GACL,EAAKrI,MAAMgb,gBAAgB3S,KA/MhB,EAmNnBiE,QAAU,SAAA5F,GACN,IACMG,EADSH,EAAME,OACDC,KAChBrF,EAAS,EAAK0F,MAAM1F,OACxBA,EAAOqF,IAASrF,EAAOqF,GACvB,EAAKF,SAAS,CAACnF,OAAQA,IACvB,EAAKxB,MAAMuE,UAAU/C,GACrB,EAAKmF,SAAS,CAACwD,UAAU,KA1NV,EA4NnB6J,SAAW,SAAC/J,GACR,IAAIzI,EAAS,EAAK0F,MAAM1F,OACxBA,EAAO2M,UAAP,uBAAuB,EAAKjH,MAAM1F,OAAO2M,UAAUqH,MAAM,EAAGvL,IAA5D,aAAuE,EAAK/C,MAAM1F,OAAO2M,UAAUqH,MAAMvL,EAAQ,KACjH,EAAKtD,SAAS,CAACnF,OAAQA,IACvB,EAAKmF,SAAS,CAACwD,UAAU,KAhOV,EAkTnB8K,SAAW,WACP,IACI,IAAI5U,EAAQ,EAAK6U,qBAAqB,EAAKhO,MAAMiO,cACjD,IAAK9U,EAAMqR,OAAQ,MAAMrR,EAAMgI,MAE/B,IAAIN,EAAO,EAAKqN,oBAAoB,EAAKlO,MAAMmO,aAC/C,IAAKtN,EAAK2J,OAAQ,MAAM3J,EAAKM,MAE7B,IAAI+F,EAAQ,EAAKkH,qBAAqB,EAAKpO,MAAMqO,cACjD,IAAKnH,EAAMsD,OAAQ,MAAMtD,EAAM/F,MAE/B,IAAI7G,EAAS,EAAK0F,MAAM1F,OACxBA,EAAO2M,UAAUjE,KAAK,CAClB7J,MAAO,EAAK6G,MAAMiO,aAClBpN,KAAM,EAAKb,MAAMmO,YACjBjH,MAAO2B,OAAO,EAAK7I,MAAMqO,aAAa1F,QAAQ,WAAY,IAAIA,QAAQ,+BAA+B,IAAIA,QAAQ,MAAO,OAE5H,EAAKlJ,SAAS,CAACnF,OAAQA,EAAQwT,KAAK,EAAOG,aAAc,GAAIE,YAAa,GAAIE,aAAc,KAC5F,EAAK5O,SAAS,CAACwD,UAAU,IAC3B,MAAO9B,GACL,EAAKrI,MAAMgb,gBAAgB3S,KAtUhB,EA2UnBwN,QAAU,SAAC5L,GAMP,OALgB,EAAK/C,MAAMgN,WAAWjK,GAAOuK,OAAOlQ,QAAO,SAAAkQ,GACvD,IAAsB,IAAlBA,EAAOC,OACP,OAAOD,EAAOE,SAGL5K,QAjVF,EAmVnByR,SAAW,WACP,OAAwC,IAApC,EAAKrU,MAAM1F,OAAOga,OAAO9J,OAErB,kBAAC,IAAD,CAAMhF,WAAS,GAAf,oyBAIA,kBAAC,IAAD,CACI2B,aAAc,kBAAC,IAAD,CACVxH,KAAM,UACNmE,SAAU,EAAKsB,QACf6J,QAAS,EAAKjP,MAAM1F,OAAO8K,WAJnC,wJA1VO,EAqWnBoJ,YAAc,SAAAhP,GACV,IAAME,EAASF,EAAME,OACf+O,EAAW/O,EAAOC,KAClB+O,EAAchP,EAAO+D,GACvBuJ,EAAa,EAAKhN,MAAMgN,WAC5BA,EAAWyB,GAAUnB,OAAOoB,GAAanB,QAAU,EAAKvN,MAAMgN,WAAWyB,GAAUnB,OAAOoB,GAAanB,OACvG,EAAK9N,SAAS,CAACuN,WAAYA,KA3WZ,EAwXnBuH,cAAgB,WACZ,OAA4C,IAAxC,EAAKvU,MAAM1F,OAAOM,WAAW4P,OACtB,uEAC8B,IAA9B,EAAKxK,MAAM1F,OAAO8K,QAClB,gLAEA,8JA5XX,EAAKpF,MAAQ,CACTwU,MAAO,WACPC,SAAS,EACTC,OAAQ,KACR1a,MAAO,GACP4U,MAAO,CACH+F,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EACjBC,eAAgB,EAChBC,gBAAiB,EACjBC,WAAY,EACZC,eAAgB,GAEpBlb,SAAU,GACV8I,QAAQ,EACRoN,UAAU,EACVjM,SAAU,KACViK,aAAc,GACdE,YAAa,GACbE,aAAc,GACd2F,cAAe,GACfC,aAAc,GACdC,cAAe,GACfjR,UAAU,EACVzF,KAAM,kFACNoI,MAAO,IA5BI,E,gEAgCE,IAAD,QACgB,IAA7BxB,KAAKtL,MAAMyB,KAAK0V,WACiB,OAA5B7L,KAAKtL,MAAMwB,OAAOsL,OAAgBxB,KAAK3E,SAAS,CAACmG,MAAOxB,KAAKtL,MAAMwB,OAAOsL,QAC9ExB,KAAK3E,SAAS,CAACnF,OAAQ8J,KAAKtL,MAAMwB,OAAQ+L,YAAajC,KAAKtL,MAAMwB,OAAO+L,YAAa7I,KAAM4G,KAAKtL,MAAMwB,OAAOkD,OAC9G2C,MAAM7G,EAAQS,SAASwB,QAClByF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgM,GACF,EAAKvN,SAAS,CAACuN,WAAYA,IAC3BA,EAAW3I,KAAI,SAAAtK,GACX,EAAK0F,SAAL,eAAgB1F,EAASsG,KAAM,OAEnC,EAAK6U,UAAW,EAAKpc,MAAMwB,OAAO0S,WAAWM,WAEhDhM,OAAM,SAAAC,GACH,EAAK9B,SAAS,CAAC0V,gBAAgB,OAEnC/Q,KAAKtL,MAAMwB,OAAO8a,SAAQhR,KAAK3E,SAAS,CAACwD,UAAU,O,6CAe3DmB,KAAKwP,cACLxP,KAAKtL,MAAM4T,SAAS,Q,yCAGLvD,EAAWC,EAAWC,GACrC,GAAIF,EAAUjN,aAAekI,KAAKtL,MAAMoD,WAAW,CAC/C,IAAI5B,EAAS8J,KAAKpE,MAAM1F,OACxBA,EAAOmT,SAASE,KAAOvJ,KAAKtL,MAAMoD,WAClCkI,KAAK3E,SAAS,CAACnF,OAAQA,O,gCA0BrBgT,GAAQ,IAAD,OACT+H,MAAMC,QAAQhI,KACdlJ,KAAKpE,MAAMgN,WAAW3I,KAAI,SAAAtK,GACtB,EAAK0F,SAAL,eAAgB1F,EAASsG,KAAM,IAC/BtG,EAASuT,OAAOjJ,KAAI,SAAAiJ,GACZ,EAAKtN,MAAM1F,OAAO0S,WAAWM,OAAO5K,SAAS4K,EAAOjN,OACpDiN,EAAOC,QAAS,SAI5BnJ,KAAK3E,SAAS,CAACoD,QAAQ,O,kCAgCS,IAAD,OAA7B0B,EAA6B,uDAAvB,GAAInE,EAAmB,uDAAJ,GAsB/B,OArBA9C,QAAQC,IAAI6C,GACZgE,KAAKpE,MAAMgN,WAAW3I,KAAI,SAAAtK,GACtB,IAAI6U,EAAQ7U,EAASuT,OAAOlQ,QAAO,SAAAkQ,GAAM,OAAsB,IAAlBA,EAAOC,UAAiB3K,OACrE7I,EAASwT,OAASqB,EAAQ,KAE9BxO,EAAaiG,YAAcjC,KAAKpE,MAAMqG,YACtCjG,EAAa4M,WAAa,CACtBM,OAAQ,GACRvT,SAAU,IAEVqK,KAAKpE,MAAMgN,WAAW3I,KAAI,SAAAtK,IACE,IAApBA,EAASwT,QACTnN,EAAa4M,WAAWjT,SAASiJ,KAAK,CAACS,GAAI1J,EAASsG,IAAKmN,MAAOzT,EAASyT,QAE7EzT,EAASuT,OAAOjJ,KAAI,SAAAiJ,IACM,IAAlBA,EAAOC,QACPnN,EAAa4M,WAAWM,OAAOtK,KAAKsK,EAAOjN,WAKpDF,MAAMoE,EAAK,CACdjE,OAAQ,QACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF3D,QAAQC,IAAI,0DACZD,QAAQC,IAAI0D,GACZ,EAAKnI,MAAMuE,UAAU4D,EAAI3G,WAG5BgH,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,EAAE5H,c,uCA+CfgL,GAAO,IAAD,OACfP,KAAKpE,MAAMgE,UAAUI,KAAK3E,SAAS,CAACuE,SAAU,OAClDI,KAAK3E,SAAS,CACVuE,SACI,kBAAC,IAAD,CACI7B,OAAQ,kBAAC,KAAD,MACR0C,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAACuE,SAAU,SAEvCW,O,gCAIPA,GAAO,IAAD,OACRP,KAAKpE,MAAMgE,UAAUI,KAAK3E,SAAS,CAACuE,SAAU,OAClDI,KAAK3E,SAAS,CACVuE,SACI,kBAAC,IAAD,CACIa,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAACuE,SAAU,SAEvCW,O,2CAKIsJ,GACjB,YAAqBc,IAAjBd,EACO,CAACzD,QAAQ,EAAOrJ,MAAO,gLAE1B8M,EAAatF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAG7CqL,EAAatF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,EAF9C,CAAC4H,QAAQ,EAAOrJ,MAAO,mKAKnB,CAACqJ,QAAQ,K,0CAMZ2D,GAChB,YAAoBY,IAAhBZ,EACO,CAAC3D,QAAQ,EAAOrJ,MAAO,gLAE1BgN,EAAYxF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,KAG5CuL,EAAYxF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,EAF7C,CAAC4H,QAAQ,EAAOrJ,MAAO,6JAKnB,CAACqJ,QAAQ,K,2CAMX6D,GACjB,YAAqBU,IAAjBV,EACO,CAAC7D,QAAQ,EAAOrJ,MAAO,sLAE1BkN,EAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAiC,IAAIA,QAAQ,MAAO,IAAIwE,OAAOvK,OAAS,GAGjHyL,EAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAiC,IAAIA,QAAQ,MAAO,IAAIwE,OAAOvK,OAAS,EAFlH,CAAC4H,QAAQ,EAAOrJ,MAAO,8WAKtB0H,OAAOwF,EAAa1F,QAAQ,WAAY,IAAIA,QAAQ,iCAAiC,IAAIA,QAAQ,MAAO,KAAO,EACxG,CAAC6B,QAAQ,EAAOrJ,MAAO,0NAEvB,CAACqJ,QAAQ,K,+BAuF1B,IAAD,OACL,OAAIpG,KAAKpE,MAAMmV,eAEP,kBAAC,IAAM9P,SAAP,KACI,kBAAC,GAAD,CAAU3L,WAAY,kBAAI,EAAKZ,MAAMY,gBACrC,kBAAC,IAAD,CACIyV,WAAS,EACTjK,KAAM,kBAAC,KAAD,MACNxB,OAAQ,oEAHZ,2KAUoB,IAAtBU,KAAKpE,MAAM6C,OAEb,kBAAC,IAAMwC,SAAP,KACI,kBAAC,EAAD,CACIlM,MAAM,yDACND,OAAQ,kBAAI,EAAKJ,MAAMI,OAAO,SAElC,kBAAC,IAAD,CACIiW,WAAS,EACTjK,KAAM,kBAAC,IAAD,CAASF,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,MAChDzB,OAAQ,0DAKS,IAA7BU,KAAKtL,MAAMyB,KAAK0V,SACT,KAGC,kBAAC,IAAM5K,SAAP,KACI,kBAAC,EAAD,CACIlM,MAAM,yDACND,OAAQ,WACJ,IACI,GAAI,EAAK8G,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,GAAI,KAAM,6OACzE,GAAI,EAAK5C,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAAK,KAAM,2PAC1E,GAAI,EAAK5C,MAAM1F,OAAO2M,UAAUrE,OAAS,EAAG,KAAM,yYAClD,EAAK9J,MAAMI,OAAO,MACrB,MAAMqI,GACH,EAAKzI,MAAMgb,gBAAgBvS,OAI/B,kBAAC,IAAD,CACIyD,KAAK,IACLqB,YAAajC,KAAKmQ,gBAClBpS,OAAQ,kBAAC,IAAD,CAAQ4C,IAAKX,KAAKpE,MAAM1F,OAAO+G,WAAY2D,KAAM,MAExDZ,KAAKpE,MAAM1F,OAAOwL,UAAY,IAAM1B,KAAKpE,MAAM1F,OAAOyL,UAE3D,kBAAC,IAAD,CACIC,YAAU,EACV/M,QAAS,WACL,IACI,GAAI,EAAK+G,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,GAAI,KAAM,6OACzE,GAAI,EAAK5C,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAAK,KAAM,2PAC1E,GAAI,EAAK5C,MAAM1F,OAAO2M,UAAUrE,OAAS,EAAG,KAAM,yYAClD,EAAK9J,MAAMY,aACd,MAAM6H,GACH,EAAKzI,MAAMgb,gBAAgBvS,KAInC2E,UAAW9B,KAAKpE,MAAM1F,OAAOmT,SAASE,cAAgB4H,OAAS,0DAAenR,KAAKpE,MAAM1F,OAAOmT,SAASE,KAAKxU,OAblH,qDAiBA,kBAAC,IAAD,KACKiL,KAAKiQ,YAEV,kBAAC,IAAD,CAAOlb,MAAO,2DAC8B,IAAvCiL,KAAKpE,MAAM1F,OAAO2M,UAAUrE,QAC7B,kBAAC,IAAD,CAAM4C,WAAS,GAAf,ufAEA,kBAAC,IAAD,KACKpB,KAAKpE,MAAM1F,OAAO2M,UAAU5C,KAAI,SAACC,EAAMvB,GAAP,OAC7B,kBAAC,IAAD,CAAMiC,KAAK,IAAIzE,KAAK,SAASmG,IAAK3D,GAC9B,kBAAC,IAAD,CAAMyC,WAAS,GACX,kBAAC,IAAD,CACIa,YAAY,2GAER,EAAKrG,MAAMoU,OAASrR,EAChB,kBAAC,IAAD,CACIpD,KAAK,gBACLmE,SAAU,EAAKvE,aACfiW,aAAc,EAAKxV,MAAM1F,OAAO2M,UAAUlE,GAAO5J,MACjDyG,MAAO,EAAKI,MAAMgU,cAClBxJ,QAAuE,IAA/D,EAAKwD,qBAAqB,EAAKhO,MAAMgU,eAAexJ,OAAkB,QAAU,UAE5F,EAAKxK,MAAM1F,OAAO2M,UAAUlE,GAAO5J,OAG/C,kBAAC,IAAD,CAAMkN,YAAY,qJACZb,WAAS,GAEP,EAAKxF,MAAMoU,OAASrR,EAChB,kBAAC,IAAD,CACIpD,KAAK,eACLmE,SAAU,EAAKvE,aACfiW,aAAc,EAAKxV,MAAM1F,OAAO2M,UAAUlE,GAAOlC,KACjDjB,MAAO,EAAKI,MAAMiU,aAClBzJ,OAAQ,EAAK0D,oBAAoB,EAAKlO,MAAMiU,cAAczJ,OAAS,QAAU,UAEjF,EAAKxK,MAAM1F,OAAO2M,UAAUlE,GAAOlC,MAG/C,kBAAC,IAAD,CACIwF,YAAY,iJAER,EAAKrG,MAAMoU,OAASrR,EAChB,kBAAC,IAAD,CACIpD,KAAK,gBACLnC,KAAK,SACLsG,SAAU,EAAKvE,aACfiW,aAAc,EAAKxV,MAAM1F,OAAO2M,UAAUlE,GAAOmE,MACjDtH,MAAO,EAAKI,MAAMkU,cAAcvL,QAAQ,WAAY,IAAIA,QAAQ,+BAA+B,IAAIA,QAAQ,MAAO,IAClH6B,OAAQ,EAAK4D,qBAAqB,EAAKpO,MAAMkU,cAAcvL,QAAQ,WAAY,IAAIA,QAAQ,+BAA+B,IAAIA,QAAQ,MAAO,KAAK6B,OAAS,QAAU,UAEzK,EAAKxK,MAAM1F,OAAO2M,UAAUlE,GAAOmE,OAI3C,EAAKlH,MAAMoU,OAASrR,EAChB,kBAAC,IAAD,CAAKrB,MAAO,CAAC2G,QAAS,SAClB,kBAAC,IAAD,CACI8G,WAAS,EAETzN,MAAO,CAAEG,YAAa,GACtB5I,QAAS,kBAAM,EAAKwG,SAAS,CAAC2U,KAAM,QACpCpP,KAAK,IACLzE,KAAK,eANT,oDAQA,kBAAC,IAAD,CACIyE,KAAK,IACLmK,WAAS,EACTlW,QAAS,kBAAI,EAAK8a,SAAShR,IAC3BxC,KAAK,aAJT,2DAQJ,kBAAC,IAAD,CAAKmB,MAAO,CAAC2G,QAAS,SAClB,kBAAC,IAAD,CACI8G,WAAS,EAETzN,MAAO,CAAEG,YAAa,GACtB5I,QAAS,kBAAM,EAAKwT,gBAAgB1J,IACpCiC,KAAK,IACLzE,KAAK,eANT,8CAQA,kBAAC,IAAD,CACIyE,KAAK,IACLmK,WAAS,EACTlW,QAAS,WACL,EAAKwG,SAAS,CAACuU,cAAc,EAAKhU,MAAM1F,OAAO2M,UAAUlE,GAAO5J,MAAO8a,aAAa,EAAKjU,MAAM1F,OAAO2M,UAAUlE,GAAOlC,KAAMqT,cAAcqB,OAAO,EAAKvV,MAAM1F,OAAO2M,UAAUlE,GAAOmE,OAAQkN,KAAMrR,EAAO+K,KAAK,KAEnNvN,KAAK,aANT,yFAe3B6D,KAAKpE,MAAM8N,IACZ,kBAAC,IAAD,CAAKpM,MAAO,CAAC4I,iBAAkB,OAAQC,WAAY,SAC/C,kBAAC,IAAD,CAAMlE,YAAY,qJAA6Bb,WAAS,GACpD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMa,YAAajC,KAAKpE,MAAMiO,aAAatF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAO,OACzE,kBAAC,IAAD,CACIsM,SAAO,EACP1E,OACIpG,KAAKpE,MAAMiO,aAAarL,OAAS,GAC6B,IAA9DwB,KAAK4J,qBAAqB5J,KAAKpE,MAAMiO,cAAczD,OAAkB,QAAU,QAC3E,KAER7K,KAAK,eACLnC,KAAK,OACLoC,MAAOwE,KAAKpE,MAAMiO,aAClBtD,YAAa,8FACb7G,SAAUM,KAAK7E,gBAEvB,kBAAC,IAAD,CAAM8G,YAAajC,KAAKpE,MAAMmO,YAAYxF,QAAQ,MAAO,KAAKwE,OAAOvK,OAAO,QACxE,kBAAC,IAAD,CACIsM,SAAO,EACP1E,OACIpG,KAAKpE,MAAMmO,YAAYvL,OAAS,EAChCwB,KAAK8J,oBAAoB9J,KAAKpE,MAAMmO,aAAa3D,OAAS,QAAU,QAChE,KAER7K,KAAK,cACLC,MAAOwE,KAAKpE,MAAMmO,YAClBxD,YAAa,8FACb7G,SAAUM,KAAK7E,gBAEvB,kBAAC,IAAD,CAAM8G,YAAajC,KAAKpE,MAAMqO,aAAa1F,QAAQ,WAAY,IAAIA,QAAQ,+BAA+B,IAAIA,QAAQ,MAAO,IAAIwE,OAAOvK,OAAO,MAC3I,kBAAC,IAAD,CACIsM,SAAO,EACP1E,OACIpG,KAAKpE,MAAMqO,aAAa1F,QAAQ,WAAY,IAAIA,QAAQ,+BAA+B,IAAIA,QAAQ,MAAO,IAAI/F,OAAS,EACvHwB,KAAKgK,qBAAqBhK,KAAKpE,MAAMqO,aAAa1F,QAAQ,WAAY,IAAIA,QAAQ,+BAA+B,IAAIA,QAAQ,MAAO,KAAK6B,OAAS,QAAU,QACxJ,KAER7K,KAAK,eACLnC,KAAK,SAASoC,MAAOwE,KAAKpE,MAAMqO,aAAa1F,QAAQ,WAAY,IAAIA,QAAQ,+BAA+B,IAAIA,QAAQ,MAAO,IAC/HgC,YAAa,sEACb7G,SAAUM,KAAK7E,kBAI/B,kBAAC,IAAD,CAAKmC,MAAO,CAAC2G,QAAS,OAAQiC,iBAAkB,OAAQC,WAAY,SAChE,kBAAC,IAAD,CAAQvF,KAAK,IAAImK,WAAS,EAAC5O,KAAK,cAAcmB,MAAO,CAACG,YAAa,GAC3D5I,QAAS,kBAAM,EAAKwG,SAAS,CAACqO,KAAK,MAD3C,oDAEA,kBAAC,IAAD,CAAQ9I,KAAK,IAAImK,WAAS,EAClBlW,QAAS,kBAAM,EAAK8U,aAD5B,4DAIJ,kBAAC,IAAD,CACA9U,QAAS,kBAAM,EAAKwG,SAAS,CAACqO,KAAK,EAAMsG,KAAM,QAC/CjS,OAAQ,kBAAC,KAAD,OAFR,4GAYR,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIxC,KAAM,cACN6K,OAAQpG,KAAKpE,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAAMwB,KAAKpE,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAAM,QAAU,QACpJ6H,OAAQrG,KAAKpE,MAAMqG,YAAYsC,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,EAAI,GAAK,mMAC5E8H,IAAI,kCACJ9K,MAAOwE,KAAKpE,MAAMqG,YAClBvC,SAAUM,KAAK7E,eACvB,kBAAC,IAAD,CAAiBmL,IAAI,0GACJD,OAAO,mbACPhH,GAAI,YAEbW,KAAKpE,MAAMgN,WAAW3I,KAAI,SAACtK,EAAUoO,GACjC,OACI,kBAAC,IAAD,CAAOzB,IAAK3M,EAASsG,KACjB,kBAAC,IAAD,CAAMV,KAAM5F,EAASsG,IACfpH,QAAS,kBAAM,EAAKwG,SAAL,eAAgB1F,EAASsG,KAAO,EAAKL,MAAMjG,EAASsG,QACnE6F,UACI,+CAAc,EAAKyI,QAAQxG,GAE/BhB,aAAc,EAAKnH,MAAMjG,EAASsG,KAAO,kBAAC,KAAD,MAAe,kBAAC,KAAD,OAEzDtG,EAASyT,OAEb,EAAKxN,MAAMjG,EAASsG,MACrB,kBAAC,IAAD,CAAKqB,MAAO,CAAC4I,iBAAkB,OAAQC,WAAY,SAE3CxQ,EAASuT,OAAOjJ,KAAI,SAAC2K,EAAajM,EAAOhJ,GACrC,OACI,kBAAC,IAAD,CACI2M,IAAK3D,EACLoE,aACI,kBAAC,IAAD,CACIxH,KAAMwI,EACN1E,GAAIV,EACJe,SAAU,SAACtE,GAAS,EAAKC,SAAS,CAACwD,UAAU,IAAQ,EAAKuL,YAAYhP,IACtEyP,QAASD,EAAYzB,UAE5ByB,EAAYxB,gBAYjD,kBAAC,IAAD,CACI7N,KAAM,OACN+K,IAAI,sJACJ9K,MAAOwE,KAAKpE,MAAMxC,KAClBiN,OAAQrG,KAAKpE,MAAMxC,KAAO,GAAK,8MAC/BsG,SAAUM,KAAK7E,cAEf,4BAAQK,MAAM,mFAAd,mFACA,4BAAQA,MAAM,sEAAd,uEAGoB,uEAApBwE,KAAKpE,MAAMxC,MACX,kBAAC,IAAD,CAAiBkN,IAAI,gTACjB,kBAAC,IAAD,CACI/K,KAAM,QACNnC,KAAK,OACLgN,OACIpG,KAAKpE,MAAM4F,MAAMhD,OAAS,EACtBwB,KAAKpE,MAAM4F,MAAMhD,OAAS,GAAK,QAAU,QACzC,KAERhD,MAAOwE,KAAKpE,MAAM4F,MAClB9B,SAAUM,KAAK7E,kBAM1C6E,KAAKtL,MAAM2c,gB,GA5rBdrO,IAAMC,YAotBblN,gBAfS,SAAC6F,GACrB,MAAO,CACH9D,WAAY8D,EAAM9D,WAClB3B,KAAMyF,EAAMzF,KACZD,OAAQ0F,EAAM1F,OACdmB,OAAQuE,EAAMvE,WAII,SAAC6L,GACvB,MAAO,CACHjK,UAAWkK,YAAmBlK,EAAWiK,MAIlCnN,CAA4CsZ,YAAsBC,K,wCChoBlEgC,G,kDA/GX,WAAY5c,GAAQ,IAAD,8BACf,cAAMA,IAYV6c,gBAAkB,SAACvb,GAEf,IAAI2O,EAAM,CAACA,IAAK3O,GAChB+F,MAAM7G,EAAQM,QAAQM,UAAW,CAC7BoG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUgI,KAEpB/H,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAoP,GACF,EAAK3Q,SAAS,CAAC2Q,WAAYA,EAAYwF,UAAU,OAEpDtU,OAAM,SAAAuU,GACHvY,QAAQC,IAAIsY,GACZ,EAAKpW,SAAS,CAACmW,UAAU,QAjCjC,EAAK5V,MAAQ,CACTmQ,QAAS,GACTC,WAAY,GACZwF,UAAU,GALC,E,gEAUfxR,KAAKuR,gBAAgBvR,KAAKtL,MAAMyB,KAAKH,Q,+BA6B/B,IAAD,OACL,OAA4B,IAAxBgK,KAAKpE,MAAM4V,SAEP,kBAAC,IAAMvQ,SAAP,KACI,kBAAC,EAAD,CACIlM,MAAM,yDACND,OAAQ,kBAAI,EAAKJ,MAAMI,YAE/B,kBAAC,IAAD,CACIiW,WAAS,EACTjK,KAAM,kBAAC,IAAD,CAASF,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,MAChDzB,OAAQ,0DAKbU,KAAKpE,MAAMoQ,WAAWjP,MAEjB,kBAAC,IAAMkE,SAAP,KACI,kBAAC,EAAD,CACIlM,MAAM,yDACND,OAAQ,kBAAI,EAAKJ,MAAMI,YAE3B,kBAAC,IAAD,CACIiW,WAAS,EACTjK,KAAM,kBAAC,KAAD,MACNxB,OAAQU,KAAKpE,MAAMoQ,WAAWzW,SAHlC,0aAUJ,kBAAC,IAAM0L,SAAP,KACI,kBAAC,EAAD,CACIlM,MAAM,yDACND,OAAQ,kBAAI,EAAKJ,MAAMI,YAE3B,kBAAC,IAAD,CAAOoM,UAAU,QAETlB,KAAKpE,MAAMoQ,WAAW/L,KAAI,SAAA/J,GACtB,GAAgB,OAAXA,EACD,OACI,kBAAC,IAAM+K,SAAP,KACI,kBAAC,IAAD,CAAUqB,IAAKpM,EAAOuL,OAClB,kBAAC,IAAD,CAAMb,KAAK,IAAIzE,KAAK,UAChB,kBAAC,IAAD,CACImG,IAAKpM,EAAO+F,IACZ8B,OAAQ,kBAAC,IAAD,CAAQ6C,KAAM,GAAID,IAAKzK,EAAO+G,aACtCsD,KAAMrK,EAAOkD,KACbmG,QAASrJ,EAAOmT,SAASE,KAAKxU,MAC9B2L,MAAO,kBAAC,KAAD,MACP7L,QAAS,kBAAM,EAAKH,MAAMgd,kBAAkBxb,KAE3CA,EAAOwL,UARZ,IAQwBxL,EAAOyL,gBAS/D,kBAAC,IAAD,CAAQrE,MAAO,CAAC4I,iBAAkB,OAAQC,WAAY,SAAtD,+IAA8FnG,KAAKpE,MAAMoQ,WAAWxN,OAApH,W,GAvGAwE,IAAMC,W,oBCPf,SAAS0O,GAASjd,GAC7B,OACI,kBAAC,IAAD,CAAU4N,IAAK5N,EAAM4N,KACjB,kBAAC,IAAD,CAAM1B,KAAK,KACP,kBAAC,IAAD,CACIO,UAAQ,EAERpD,OAAQ,kBAAC,IAAD,CAAQ6C,KAAM,GAAID,IAAKjM,EAAMkd,KAAK3U,aAC1CsC,QAAS7K,EAAMyQ,KACfkB,OAAQ,kBAAC,IAAD,KAAU3R,EAAMkd,KAAKC,MAC7B9K,QACI,kBAAC,IAAM9F,SAAP,KACI,kBAAC,IAAD,CAAQ9E,KAAK,UAAUtH,QAAS,kBAAIH,EAAMod,eAAepd,EAAMkd,KAAKG,YAApE,8GAIPrd,EAAMkd,KAAKlQ,UAZhB,IAY4BhN,EAAMkd,KAAKjQ,UAEvC,kBAAC,IAAD,CAAMP,WAAS,GACV1M,EAAMkd,KAAKnV,MAEhB,kBAAC,IAAD,CAAUa,MAAO,CAACiE,aAAc,KAExB7M,EAAMkd,KAAKvR,OAAOJ,KAAI,SAACoD,EAAMU,GACzB,OACI,kBAAC,IAAD,CACIzG,MAAO,CAACE,QAAS,EAAG4E,aAAc,GAAIC,OAAQ,GAC9CzB,KAAK,IACLzE,KAAK,SACLmG,IAAKyB,GAEL,yBAAKzG,MAAO,CAAC8E,aAAc,GAAIxE,OAAQ,GAAI4E,gBAAiB,OAAOa,EAAM,IAAKZ,eAAgB,kBC7BlI,SAASiD,GAAQR,GACb,GAAgB,4DAAZA,EACA,OAAOA,EAEP,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAQF,EAAKG,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUJ,EAAKK,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQN,EAAKO,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQR,EAAKS,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAIR,EAAKU,cAAc,WAAMR,EAAM,IAAIE,EAoBvD,SAASyM,GAAStd,GAC7B,OAA6B,IAAzBA,EAAMud,QAAQzT,OAEV,kBAAC,IAAD,CACIsC,KAAM,kBAAC,KAAD,MACNxB,OAAO,0GACPmJ,OAAQ,kBAAC,IAAD,CAAQ5T,QAASH,EAAMuJ,MAAO2C,KAAK,KAAnC,iEAHZ,gIAK8BlM,EAAMyB,KAAKkT,SAASE,KAAKxU,MALvD,+qBAWAL,EAAMud,QAAQhS,KAAI,SAAA2R,GACd,OACI,kBAACD,GAAD,CACIxM,KAAMO,GAAQkM,EAAKzM,MACnB7C,IAAKsP,EAAK3V,IACV2V,KAAMA,EACNE,eAAgBpd,EAAMod,oB,IC9CxCI,G,kDACF,WAAYxd,GAAQ,IAAD,8BACf,cAAMA,IA4BVyd,SAAW,WACHpW,MAAM7G,EAAQkB,UAAUE,OAAS,EAAK5B,MAAMyB,KAAKkT,SAASC,QAAQjK,GAAK,IAAM,EAAK3K,MAAMoD,WAAWuH,IAC9FzC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgV,GACF,EAAKld,MAAMqF,qBAAqB6X,GAChC,EAAKvW,SAAS,CAAC4W,QAASL,EAAMnT,QAAQ,OAEzCvB,OAAM,SAAAC,GAAC,OAAE,EAAK9B,SAAS,CAAC0V,gBAAgB,QApClC,EAuCnB9S,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,gCACjCvB,MAAK,SAAAwB,GACkB,wBAAhBA,EAAOhF,MACP,EAAK4D,gBAAgB,+KAAoC,EAAKpB,MAAMI,aAAaiB,gBAzC7F,EAAKrB,MAAQ,CACT6C,QAAQ,GAHG,E,gEAME,IAAD,OACwB,IAArCuB,KAAKtL,MAAMsD,eAAewG,OACzBwB,KAAKmS,WAELnS,KAAK3E,SAAS,CAAC4W,QAASjS,KAAKtL,MAAMsD,eAAgByG,QAAQ,IAAO,WAC1D,EAAK/J,MAAMuD,sBACX6H,OAAOC,SAAS,EAAG,EAAKrL,MAAMuD,2B,yCAO3B8M,EAAWC,EAAWC,GAAW,IAAD,OAC5CF,EAAUjN,aAAekI,KAAKtL,MAAMoD,YACnCkI,KAAK3E,SAAS,CAACoD,QAAQ,IAAO,kBAAI,EAAK0T,gB,6CAK3CnS,KAAKtL,MAAMuF,2BAA2B6F,OAAOsS,KAAKC,e,+BAqB7C,IAAD,OACJ,OAAIrS,KAAKpE,MAAMmV,eAEP,kBAAC,IAAM9P,SAAP,KACI,kBAAC,GAAD,CAAU3L,WAAY,kBAAI,EAAKZ,MAAMY,gBAC7B,kBAAC,IAAD,CACIyV,WAAS,EACTjK,KAAM,kBAAC,KAAD,MACNxB,OAAQ,oEAHZ,yKAQCU,KAAKpE,MAAMgE,WAGC,IAAtBI,KAAKpE,MAAM6C,OAEd,kBAAC,IAAMwC,SAAP,KACI,kBAAC,GAAD,CACI3L,WAAY,kBAAI,EAAKZ,MAAMY,gBAE/B,kBAAC,IAAD,CAASsL,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,OAK9C,kBAAC,IAAME,SAAP,KACI,kBAAC,GAAD,CACI3L,WAAY,kBAAI,EAAKZ,MAAMY,gBAE/B,kBAAC0c,GAAD,CACIC,QAASjS,KAAKpE,MAAMqW,QACpBhU,MAAO+B,KAAK/B,MACZ9H,KAAM6J,KAAKtL,MAAMyB,KACjB2b,eAAgB9R,KAAKtL,MAAMod,iBAE/B,kBAAC,IAAD,W,GArFI9O,IAAMC,WA4GflN,gBAhBS,SAAC6F,GACrB,MAAO,CACH9D,WAAY8D,EAAM9D,WAClB3B,KAAMyF,EAAMzF,KACZ8B,qBAAsB2D,EAAM3D,qBAC5BD,eAAgB4D,EAAM5D,mBAIJ,SAACkL,GACvB,MAAO,CACHnJ,qBAAsBoJ,YAAmBpJ,EAAsBmJ,GAC/DjJ,2BAA4BkJ,YAAmBlJ,EAA4BiJ,MAIpEnN,CAA4Cmc,I,gBCnGrDI,G,kDACF,WAAY5d,GAAQ,IAAD,8BACf,cAAMA,IAkCV6d,UAAY,SAACpS,GACT,IACI,GAAI,EAAKvE,MAAM2W,UAAUjU,SAAS6B,GAAK,CACnC,IAAIoS,EAAY,EAAK3W,MAAM2W,UACvB5T,EAAQ4T,EAAUzT,QAAQqB,GAC1BxB,GAAS,EACT4T,EAAUxT,OAAOJ,EAAO,GACrB4T,EAAUxT,OAAO,EAAGJ,GAC3B,EAAKtD,SAAS,CAACkX,UAAWA,QACvB,CACH,IAAIA,EAAY,EAAK3W,MAAM2W,UAC3B,GAAGA,EAAU/T,OAAQ,EAAG,KAAM,uLAC9B+T,EAAU3T,KAAKuB,GACf,EAAK9E,SAAS,CAACkX,UAAWA,KAEjC,MAAMpV,GACH,EAAK0Q,UAAU1Q,KAnDJ,EAmEnBqV,mBAAqB,SAACpX,GAClB,EAAKC,SAAS,CAACoX,YAAarX,EAAME,OAAOE,SApE1B,EAuEnBL,aAAe,SAACC,GAAW,IAAD,EACFA,EAAME,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAKH,SAAL,eAAgBE,EAAOC,KAzER,EA2EnBkX,KAAK,WACD,IACI,GAA0D,IAAtD,EAAK9W,MAAMa,KAAK8H,QAAQ,MAAO,KAAKwE,OAAOvK,OAAc,KAAM,kKACnE,GAAI,EAAK5C,MAAMa,KAAK8H,QAAQ,MAAO,KAAKwE,OAAOvK,OAAS,IAAK,KAAM,yNACnE,GAAG,EAAK5C,MAAM2W,UAAU/T,OAAS,EAAG,KAAM,8OAC1C,GAA8B,iGAA3B,EAAK5C,MAAM6W,YAAqC,KAAM,yWACzD,GAA8B,KAA3B,EAAK7W,MAAM6W,YAAoB,KAAM,yWAOxC,IAA4B,IAAxB,EAAK7W,MAAM+W,SAAmB,CAC9B,IAAIf,EAAO,EAAKhW,MAAMuW,SACtBP,EAAKnV,KAAO,EAAKb,MAAMa,KACvBmV,EAAKvR,OAAS,EAAKzE,MAAM2W,UACzBX,EAAKC,KAAO,EAAKjW,MAAM6W,YACvBb,EAAK5Q,QAAU,EAAKpF,MAAMoF,QAC1B4Q,EAAKva,OAAS,EAAK3C,MAAM2C,OACzB,EAAKoY,UAAUva,EAAQkB,UAAUH,IAAI,EAAK2F,MAAMuW,SAASlW,IAAK2V,OAC3D,CACH,IAAIA,EAAM,EAAKhW,MAAMuW,SACrBP,EAAKnV,KAAO,EAAKb,MAAMa,KAMvBmV,EAAKvR,OAAS,EAAKzE,MAAM2W,UACzBX,EAAKC,KAAO,EAAKjW,MAAM6W,YACvBb,EAAK5Q,QAAU,EAAKpF,MAAMoF,QAC1B4Q,EAAKva,OAAS,EAAK3C,MAAM2C,OACrB0E,MAAM7G,EAAQkB,UAAUH,IAAK,CACzBiG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUiV,KAEpBhV,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKxB,SAAS,CAAC8W,SAAUtV,EAAI+U,KAAMe,UAAU,KACzB,IAAhB9V,EAAI+V,SACJ,EAAKvX,SAAS,CAAC2F,SAAS,IACxB,EAAK6M,UAAU,qsBAEf,EAAKA,UAAU,2OAGtB3Q,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,OAGpC,MAAMA,GACJ,EAAK0Q,UAAU1Q,KApInB,EAAKvB,MAAQ,CACTI,aAAc,GACdS,KAAM,GACN+U,UAAU,EACVmB,UAAU,EACV5V,MAAO,GACP4P,SAAS,EACTtM,OAAQ,GACR8R,SAAU,CACN9R,OAAQ,IAEZoS,YAAa,+FACbzR,SAAS,EACTuR,UAAW,IAfA,E,gEAkBE,IAAD,OAChBxW,MAAM7G,EAAQkB,UAAUC,WAAW2J,KAAKtL,MAAMwB,OAAO+F,KAChDW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgV,GACF,GAAIA,EAAKpT,OAAS,EAAG,CACjB,IAAI+T,EAAY,GAChBX,EAAK,GAAGvR,OAAOJ,KAAI,SAAAuH,GACX,EAAK9S,MAAMwB,OAAOgM,OAAO5D,SAASkJ,IAAQ+K,EAAU3T,KAAK4I,MAEjE,EAAKnM,SAAS,CAACkX,UAAWA,EAAWJ,SAAUP,EAAK,GAAInV,KAAKmV,EAAK,GAAGnV,KAAMuE,QAAQ4Q,EAAK,GAAG5Q,QAAUjE,MAAO,GAAIyU,UAAU,EAAMiB,YAAab,EAAK,GAAGC,KAAMc,UAAU,QAClK,CACH,IAAI5V,EAAQ,kBAAC,IAAD,CAAMqE,WAAS,GAAf,kLACZ,EAAK/F,SAAS,CAAC0B,MAAOA,EAAOyU,UAAU,U,gCAyB5CjR,GAAO,IAAD,OACTP,KAAKpE,MAAMgE,UACfI,KAAK3E,SAAS,CAAEuE,SACR,kBAAC,IAAD,CACIa,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAAEuE,SAAU,SAExCW,O,kCA2Ee,IAAD,OAArBJ,EAAqB,uDAAf,GAAInF,EAAW,uDAAJ,GACvB,OAAOe,MAAMoE,EAAK,CACdjE,OAAQ,QACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAiE,GAAQ,OAAEA,EAAS/D,UACxBF,MAAK,SAAAwB,GACF,EAAKyP,UAAU,sKAElB3Q,OAAM,SAAAC,GACH,EAAK0Q,UAAU,kJACf3U,QAAQC,IAAIgE,Q,8BAGhB+H,GACJ,GAAgB,4DAAZA,EACA,OAAOA,EAEP,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAQF,EAAKG,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUJ,EAAKK,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQN,EAAKO,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQR,EAAKS,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAIR,EAAKU,cAAc,WAAMR,EAAM,IAAIE,I,iCAGvC,IAAD,OAArBpF,EAAqB,uDAAf,GAAInF,EAAW,uDAAJ,GAEtBe,MAAMoE,EAAK,CACPjE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAiE,GAAQ,OAAEA,EAAS/D,UACxBF,MAAK,SAAAwB,GACF,EAAK/C,SAAS,CAAC8W,SAAU/T,EAAQuU,UAAU,S,+BAa9C,IAAD,OACJ,OAA4B,IAAxB3S,KAAKpE,MAAM4V,SACH,kBAAC,IAAD,CAAS5Q,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,MAG9C,kBAAC,IAAME,SAAP,KACY,kBAAC,IAAD,CACI3B,OAAO,qGACPwH,UAAU,0GACVvG,KAAK,sqCAET,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIhF,KAAM,OACN+K,IAAI,0GACJ9K,MAAOwE,KAAKpE,MAAMa,KAClBiD,SAAUM,KAAK7E,eAIX6E,KAAKtL,MAAMwB,OAAOgM,OAAO1D,OAAS,EAC9B,kBAAC,IAAD,CAAKlB,MAAO,CAAC4I,iBAAkB,OAAQC,WAAY,SAC/C,kBAAC,IAAD,qJACA,kBAAC,IAAD,KAEQnG,KAAKtL,MAAMwB,OAAOgM,OAAOjC,KAAI,SAACkC,EAAUxD,GACpC,OACI,kBAAC,IAAD,CACIrB,MAAO,CAACE,QAAS,EAAG4E,aAAc,GAAIC,OAAQ,GAC9CzB,KAAK,IACLzE,KAAK,SACLmG,IAAK3D,EACL9J,QAAS,kBAAM,EAAK0d,UAAUpQ,KAG1B,EAAKvG,MAAM2W,UAAUjU,SAAS6D,GAC9B,yBAAK7E,MAAO,CAACK,MAAO,IAAKC,OAAQ,GAAI4E,gBAAiB,OAAOL,EAAS,IAAKM,eAAgB,QAASL,aAAc,KAAK,yBAAK9E,MAAO,CAACgK,gBAAiB,OAAQlF,aAAc,gBAAiBwM,UAAW,WAAhF,+CACvH,yBAAKtR,MAAO,CAACK,MAAO,IAAKC,OAAQ,GAAI4E,gBAAiB,OAAOL,EAAS,IAAKM,eAAgB,QAASL,aAAc,YAQ9I,kBAAC,IAAD,CAAMhB,WAAS,GAAf,whBAkBZ,kBAAC,IAAD,CAAQ5F,MAAOwE,KAAKpE,MAAM6W,YAAa/S,SAAUM,KAAKwS,mBAAoBlM,IAAI,oDAAYC,YAAY,sGAClG,4BAAQ/K,MAAM,4CAAd,4CACA,4BAAQA,MAAM,4GAAd,4GACA,4BAAQA,MAAM,0DAAd,2DAEJ,kBAAC,IAAD,CACIuH,aAAc,kBAAC,IAAD,CACVrD,SAAU,YACsC,IAAxC,EAAKhL,MAAMwB,OAAOM,WAAW4P,OAC7B,EAAK/K,SAAS,CAAC2F,SAAU,EAAKpF,MAAMoF,UAEpC,EAAK6M,UAAU,wqBAGvBhD,SAAiD,IAAxC7K,KAAKtL,MAAMwB,OAAOM,WAAW4P,QAAkBpG,KAAKpE,MAAMoF,WAT3E,yKAYJ,kBAAC,IAAD,CAAQJ,KAAK,KAAK/L,QAASmL,KAAK0S,MAAhC,2DAEA,kBAAC,IAAD,CAAWpV,MAAO,CAAE+E,OAAQ,YAExBrC,KAAKpE,MAAM+W,UACX,kBAAC,IAAM1R,SAAP,KACI,kBAAC,IAAD,CAAMgB,YAAa,kFAAnB,yJACA,kBAAC0P,GAAD,CACIxM,KAAMnF,KAAK0F,QAAQ1F,KAAKpE,MAAMuW,SAAShN,MACvC7C,IAAKtC,KAAKpE,MAAMuW,SAASlW,IACzB2V,KAAM5R,KAAKpE,MAAMuW,SACjBL,eAAgB9R,KAAKtL,MAAMod,kBAIvC,kBAAC,IAAD,MACC9R,KAAKpE,MAAMgE,c,GA/SVoD,IAAMC,WAqUrBlN,gBAdS,SAAC6F,GACrB,MAAO,CACHzF,KAAMyF,EAAMzF,KACZD,OAAQ0F,EAAM1F,OACdmB,OAAQuE,EAAMvE,WAII,SAAC6L,GACvB,MAAO,KAKInN,CAA4Cuc,IC7T5CO,G,kDAxBX,WAAYne,GAAQ,IAAD,8BACf,cAAMA,IACDkH,MAAQ,GAFE,E,uLAOTsC,IAAOC,KAAK,yBAA0B,IAAIvB,MAAK,SAAA5B,GAAI,OAAE9B,QAAQC,IAAI6B,M,gIAGlE,IAAD,OACJ,OACI,kBAAC,IAAMiG,SAAP,KACI,kBAAC,IAAD,CACI3B,OAAO,4JAEPwH,UAAU,ikCACVC,QAAS,kBAAC,IAAD,CAAQlS,QAAS,kBAAI,EAAKie,mBAA1B,2I,GAlBN9P,IAAMC,W,oBCEvB8P,G,kDAEF,WAAYre,GAAQ,IAAD,8BACf,cAAMA,IAuDVse,eAAiB,WACb,OAAI,EAAKpX,MAAMoT,OAAOxQ,OAAS,EAEvB,kBAAC,IAAD,KACK,EAAK5C,MAAMoT,OAAO/O,KAAI,SAAAsJ,GAAI,OACvB,kBAAC,IAAD,CACItH,YAAasH,EAAK6F,QAAU,GAC5Bva,QAAS,kBAAI,EAAKH,MAAMY,WAAW,CAACiU,KAAMA,EAAMD,QAAS,EAAK1N,MAAM7D,iBACpEuK,IAAKiH,EAAKlK,IAETkK,EAAKxU,WAOlB,kBAAC,IAAD,CACI+L,KAAM,kBAAC,KAAD,MACNxB,OAAO,oFAFX,sQAvER,EAAK1D,MAAQ,CACTmT,OAAQ,GACRtQ,QAAQ,EACRuQ,OAAQ,GACRiE,YAAa,GACblb,cAAe,MAEnB,EAAK2H,SAAW,EAAKA,SAASG,KAAd,gBATD,E,gEAYE,IAAD,OACZG,KAAKtL,MAAMyB,KAAKkT,SAASC,SAAStJ,KAAK3E,SAAS,CAACtD,cAAeiI,KAAKtL,MAAMyB,KAAKkT,SAASC,UAAU,kBAAI,EAAKzS,UAAU,EAAK+E,MAAMmT,OAAQ,EAAKnT,MAAM7D,kBACxJiI,KAAKlJ,iB,qCAGM,IAAD,OACViF,MAAM7G,EAAQuB,MAAMK,cACf8F,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACF,EAAKxB,SAAS,CAAC4X,YAAapW,EAAIoW,YAAaxU,QAAQ,OAExDvB,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,Q,gCAGpBnE,EAAQsQ,GAAU,IAAD,OACvBtJ,KAAK3E,SAAS,CAACsR,SAAS,IACxB,IAAM3R,EAAO,CACT+T,OAAQ/V,EAAOiW,cACfC,WAAY5F,EAAQjK,IAExBtD,MAAM7G,EAAQuB,MAAMI,UAAU,CAC1BqF,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU3B,KAEpB4B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACEA,EAAIE,MACJ7D,QAAQC,IAAI0D,EAAIE,OAEhB,EAAK1B,SAAS,CAAC2T,OAAQnS,EAAIsS,SAAU1Q,QAAQ,EAAMkO,SAAS,OAGnEzP,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,Q,+BA8BrBA,GACL6C,KAAK3E,SAAS,CAAC0T,OAAQ5R,EAAE7B,OAAOE,QAChCwE,KAAKnJ,UAAUsG,EAAE7B,OAAOE,MAAOwE,KAAKpE,MAAM7D,iB,+BAGpC,IAAD,OACL,OAAyB,IAAtBiI,KAAKpE,MAAM6C,OACF,kBAAC,IAAD,CAASmC,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,MAGtC,kBAAC,IAAME,SAAP,KACI,kBAAC,IAAD,KAEQjB,KAAKpE,MAAMsX,cACP,kBAAC,IAAD,CACIxT,SAAU,SAACvC,GACP,IAAMmM,EAAU,EAAK1N,MAAMqX,YAAYhT,KAAI,SAAAqJ,GACvC,GAAIA,EAAQjK,KAAOoF,OAAOtH,EAAE7B,OAAOE,OAAQ,OAAO8N,KAEtD,EAAKjO,SAAS,CAACtD,cAAeuR,EAAQtQ,OAAOma,SAAS,GAAID,eAAe,IAAQ,kBAAK,EAAKrc,UAAU,EAAK+E,MAAMmT,OAAQ,EAAKnT,MAAM7D,mBAEvIwO,YAAa,yFAGTvG,KAAKpE,MAAMqX,YAAYhT,KAAI,SAAAqJ,GACvB,OAAIA,EAAQjK,KAAO,EAAK3K,MAAMyB,KAAKkT,SAASC,QAAQjK,IAChDnG,QAAQC,IAAImQ,EAAQjK,KAAO,EAAK3K,MAAMyB,KAAKkT,SAASC,QAAQjK,IACrD,4BAAQ7D,MAAO8N,EAAQjK,GAAI+T,UAAQ,GAAE9J,EAAQvU,QAE7C,4BAAQyG,MAAO8N,EAAQjK,IAAKiK,EAAQvU,WAK3D,kBAAC,IAAD,CAAM+M,UAAW9B,KAAKpE,MAAM7D,cAAgBiI,KAAKpE,MAAM7D,cAAchD,MAAQiL,KAAKtL,MAAMyB,KAAKkT,SAASC,QAAQvU,MAAOF,QAAS,kBAAI,EAAKwG,SAAS,CAAC6X,eAAe,MAAhK,oCAIqB,OAA7BlT,KAAKpE,MAAM7D,cACP,kBAAC,IAAMkJ,SAAP,KACI,kBAAC,IAAD,CAAQzF,MAAOwE,KAAKpE,MAAMmT,OAAQrP,SAAUM,KAAKN,SAAUgB,MAAO,OAE9DV,KAAKpE,MAAM+Q,QACP,kBAAC,IAAD,CAAS/L,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,MAC9Cf,KAAKgT,kBAGjB,kBAAC,IAAD,CACAlS,KAAM,kBAAC,KAAD,MACNxB,OAAO,yFAFP,oQ,GApIT0D,IAAMC,WAuJdlN,gBANS,SAAC6F,GACrB,MAAO,CACHzF,KAAMyF,EAAMzF,QAILJ,CAA0Bgd,ICjJnCM,G,kDACF,WAAa3e,GAAQ,IAAD,8BAChB,cAAMA,IAWVyG,aAAe,SAACC,GAAW,IAAD,EACFA,EAAME,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAKH,SAAL,eAAgBE,EAAOC,KAdP,EAqDpB8X,KAAO,SAACjU,EAAIV,GACR,IAAIhH,EAAc,EAAKiE,MAAMjE,YACzBgH,GAAS,EACThH,EAAYoH,OAAOJ,EAAO,GACvBhH,EAAYoH,OAAO,EAAGJ,GAC7B,EAAKtD,SAAS,CAAC1D,YAAaA,IAC5B,IAAInB,EAAa,CACb6I,GAAIA,EACJ+G,QAAQ,EACRoF,QAAS,GACTnU,OAAQ,EAAK3C,MAAM2C,QAEvB0E,MAAM7G,EAAQqC,MAAM,OAAQ,CACxB2E,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUnG,KAEpBoG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBI,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,OA9EV,EAiFpBoW,IAAM,SAAClU,EAAIV,GACP,IAAIhH,EAAc,EAAKiE,MAAMjE,YAKzB6T,EAAU,GACdA,EAAQ5M,KAAK,EAAKhD,MAAM6P,QACxB9T,EAAYgH,GAAOnI,WAAWgV,QAAUA,EACxC,IAAIhV,EAAa,CACb6I,GAAIA,EACJ+G,QAAQ,EACRoF,QAASA,EACTnU,OAAQ,EAAK3C,MAAM2C,QAEvB0E,MAAM7G,EAAQqC,MAAM,MAAO,CACvB2E,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUnG,KAEpBoG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBI,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,OA7GV,EAiHpBqW,YAAc,SAACnU,EAAIV,GACf,IAAIqD,EAAW,EAAKpG,MAAMoG,SACtBrD,GAAS,EACTqD,EAASjD,OAAOJ,EAAO,GACpBqD,EAASjD,OAAO,EAAGJ,GAC1B,EAAKtD,SAAS,CAAC2G,SAAUA,IACzB,IAAIxL,EAAa,CACb6I,GAAIA,EACJhI,OAAQ,EAAK3C,MAAM2C,QAEvB0E,MAAM7G,EAAQsC,SAAS,OAAQ,CAC3B0E,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUnG,KAEpBoG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAE3D,QAAQC,IAAI0D,MACtBK,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,OAzIV,EA4IpBsW,WAAa,SAACpU,EAAIV,GACd,IAAIqD,EAAW,EAAKpG,MAAMoG,SACtBrD,GAAS,EACTqD,EAASjD,OAAOJ,EAAO,GACpBqD,EAASjD,OAAO,EAAGJ,GAC1B,EAAKtD,SAAS,CAAC2G,SAAUA,IACzB,IAAIxL,EAAa,CACb6I,GAAIA,EACJhI,OAAQ,EAAK3C,MAAM2C,QAEvB0E,MAAM7G,EAAQsC,SAAS,MAAO,CAC1B0E,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUnG,KAEpBoG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAE3D,QAAQC,IAAI0D,MACtBK,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,OAlK1B,EAAKvB,MAAQ,CACTjE,YAAa,GACb+b,UAAW,UACX1R,SAAU,GACV2R,aAAc,EACdC,WAAY,EACZnV,QAAQ,GARI,E,qMAkBV1C,MAAM7G,EAAQqC,MAAO,CACvB2E,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUqD,KAAKtL,MAAM2C,UAE/BuF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAjF,GACF,EAAK0D,SAAS,CAAC1D,YAAaA,OAE/BuF,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,M,uBACpBpB,MAAM7G,EAAQqB,QAAQC,WAAW,CACnC0F,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUqD,KAAKtL,MAAM2C,UAE/BuF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAoF,GACF,EAAK3G,SAAS,CAAC2G,SAAUA,EAAUvD,QAAQ,O,6IAsHrC,IAAD,OACb,OAAmC,IAA/BuB,KAAKpE,MAAMoG,SAASxD,OAEhB,kBAAC,IAAD,CACIsC,KAAM,kBAAC,KAAD,MACNxB,OAAO,uEAFX,oFAODU,KAAKpE,MAAMoG,SAAS/B,KAAI,SAAC1J,EAASoI,GACrC,OAAgB,OAAZpI,EAAyB,MAC7B2C,QAAQC,IAAI5C,GAER,kBAAC,IAAD,CAAU+L,IAAK3D,EAAOrB,MAAO,CAACE,QAAS,IACnC,kBAAC,IAAD,CAAMoD,KAAK,IAAIzE,KAAK,UAChB,kBAAC,IAAD,CACIgF,UAAQ,EACRC,WAAS,EACT2F,QACI,kBAAC,IAAM9F,SAAP,KACI,kBAAC,IAAD,CAAQpM,QAAS,kBAAI,EAAK2e,YAAYjd,EAAQ0F,IAAK0C,KAAnD,oDACA,kBAAC,IAAD,CAAQ9J,QAAS,kBAAI,EAAK4e,WAAWld,EAAQ0F,IAAK0C,IAAQxC,KAAK,eAA/D,gDAIP5F,EAAQkG,MAEb,kBAAC,IAAD,CAAMsB,OAAS,kBAAC,IAAD,CAAQ6C,KAAM,GAAID,IAAKpK,EAAQJ,KAAK8G,cAAnD,WAA6E1G,EAAQJ,KAAKuL,UAAY,IAAMnL,EAAQJ,KAAKwL,UACzH,kBAAC,IAAD,aAAapL,EAAQsd,GAAGtY,c,sCAO3B,IAAD,OACZ,OAAyB,IAAtByE,KAAKpE,MAAM6C,OAEN,kBAAC,IAAD,CACIqC,KAAM,kBAAC,KAAD,MACNxB,OAAO,uDAFX,oFAMoC,IAAlCU,KAAKpE,MAAMjE,YAAY6G,OAEzB,kBAAC,IAAD,CACIsC,KAAM,kBAAC,KAAD,MACNxB,OAAO,uEAFX,oFAOGU,KAAKpE,MAAMjE,YAAYsI,KAAI,SAAC/J,EAAQyI,GACvC,OACI,kBAAC,IAAD,CAAU2D,IAAKpM,EAAOuL,MAAOnE,MAAO,CAACE,QAAS,IAC1C,kBAAC,IAAD,CAAMoD,KAAK,IAAIzE,KAAK,UAChB,kBAAC,IAAD,CACIgF,UAAQ,EACRC,WAAS,EACTrD,OAAQ,kBAAC,IAAD,CAAQlJ,QAAS,kBAAM,EAAKH,MAAMof,WAAW5d,IAASyK,IAAKzK,EAAO+G,WAAY2D,KAAM,KAC5FrB,QAASrJ,EAAOmT,SAASE,KAAKxU,MAC9BgS,QACI,kBAAC,IAAM9F,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQpM,QAAS,kBAAI,EAAKye,KAAKpd,EAAO+F,IAAK0C,KAA3C,oDACA,kBAAC,IAAD,CAAQ9J,QAAS,kBAAI,EAAKwG,SAAL,eAAgBnF,EAAOuL,OAAQ,KAAQtF,KAAK,aAAjE,6DAKXjG,EAAOwL,UAdZ,IAcwBxL,EAAOyL,UAG3BzL,EAAOM,WAAWgV,QAAQhN,OAAS,GACnC,kBAAC,IAAD,KAEQtI,EAAOM,WAAWgV,QAAQvL,KAAI,SAAAwL,GAC1B,OAAOA,OAMU,IAA7B,EAAK7P,MAAM1F,EAAOuL,QAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUlG,KAAK,SAASC,MAAO,EAAKI,MAAM6P,OAAQ/L,SAAU,SAACtE,GACzDlC,QAAQC,IAAI,EAAKyC,MAAM6P,QACvB,EAAKpQ,SAAS,CAACoQ,OAAQrQ,EAAME,OAAOE,WAGxC,kBAAC,IAAD,CAAQ3G,QAAS,WACb,EAAK0e,IAAIrd,EAAO+F,IAAK0C,GACrB,EAAKtD,SAAL,eAAgBnF,EAAOuL,OAAQ,KAChCtF,KAAK,aAHR,kE,+BAavB,IAAD,OACJ,MAAqC,cAAjC6D,KAAKtL,MAAM2C,OAAOqX,WAEd,kBAAC,IAAD,CAAOrP,GAAG,SACN,kBAAC,IAAD,iGAKJ,kBAAC,IAAD,CAAOA,GAAG,SACN,kBAAC,EAAD,CACItK,MAAO,yDACPD,OAAQ,kBAAM,EAAKJ,MAAMI,YAE7B,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACID,QAAS,kBAAM,EAAKwG,SAAS,CAAEqY,UAAW,aAC1CN,SAAmC,YAAzBpT,KAAKpE,MAAM8X,WAFzB,8CAMA,kBAAC,IAAD,CACI7e,QAAS,kBAAM,EAAKwG,SAAS,CAAEqY,UAAW,cAC1CN,SAAmC,aAAzBpT,KAAKpE,MAAM8X,WAFzB,uEAQyB,YAAzB1T,KAAKpE,MAAM8X,UAA0B1T,KAAK+T,gBAAkB/T,KAAKgU,uB,GA/SzEhR,IAAMC,WAsUXlN,gBAdS,SAAC6F,GACrB,MAAO,CACHzF,KAAMyF,EAAMzF,KACZD,OAAQ0F,EAAM1F,OACdmB,OAAQuE,EAAMvE,WAII,SAAC6L,GACvB,MAAO,KAKInN,CAA4Csd,I,oBCzTrDY,G,kDACF,WAAYvf,GAAQ,IAAD,8BACf,cAAMA,IA2FVwf,UAAY,SAACnS,EAAM1C,GACf,OAAI0C,EAAKC,SAAW,EAEZ,kBAAC,IAAD,CACI1E,MAAO,CAACE,QAAS,EAAG6E,OAAQ,GAC7B3B,MACI,EAAKhM,MAAMyB,KAAKH,KAAKsI,SAASe,GAAM,yBAAK/B,MAAO,CAAC+E,OAAQ,IAAI,kBAAC,IAAD,CAAY1E,MAAO,GAAIC,OAAQ,GAAIC,KAAK,SAAgB,MAGxH,yBAAKP,MAAO,CAAC2G,QAAS,gBAAgB,kBAAC,KAAD,MAAgB,0BAAM3G,MAAO,CAAC+E,OAAQ,SAAUN,EAAKC,UAAgB,0BAAM1E,MAAO,CAAC6W,WAAY,KAAK,kBAAC,GAAD,CAAanQ,WAAYjC,EAAKsC,YAS5K,kBAAC,IAAD,CAAK/G,MAAO,CAAC+E,OAAQ,EAAG7E,QAAS,EAAGwI,SAAU,GAAIC,MAAO,UAAWC,iBAAkB,OAAQC,WAAY,SAA1G,4GA9GO,EAqHnBlI,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,gCACjCvB,MAAK,SAAAwB,GACkB,wBAAhBA,EAAOhF,MACP,EAAK1E,MAAMmZ,UAAU,iOAvHjC,EAAKjS,MAAQ,CACTmM,MAAO,MAHI,E,gEAOE,IAAD,OAChB/H,KAAKoU,SAASpU,KAAKtL,MAAMiD,YAAY6G,QACrC,IACI,GAAwB,4DAApBwB,KAAKtL,MAAM6U,KAAuB,KAAM,0DAC5C,GAAsC,IAAlCvJ,KAAKtL,MAAMiD,YAAY6G,OAAc,KAAM,mFACjD,MAAOrB,GACL6C,KAAK3E,SAAS,CAAC0B,MAAOI,IAE1Be,IAAO+J,WAAU,SAAA9K,GACb,GAAKA,EAAE+K,OAAP,CADgB,MAKO/K,EAAE+K,OAAjB9O,EALQ,EAKRA,KAAM4B,EALE,EAKFA,KAED,yBAAT5B,GAEA,EAAKiC,SAAS,CAAC0M,MAAO/M,QAI9BkD,IAAOC,KAAK,iBAAkB,IACzBvB,MAAK,SAAA5B,GAAI,OAAE9B,QAAQC,IAAI,UACvB+D,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,Q,yCAGX4H,EAAWC,EAAWC,GACrC,GAAGF,IAAc/E,KAAKtL,MAAM,CACxBsL,KAAK3E,SAAS,CAAC0B,MAAO,OACtB,IACI,GAAwB,4DAApBiD,KAAKtL,MAAM6U,KAAuB,KAAM,0DAC5C,GAAsC,IAAlCvJ,KAAKtL,MAAMiD,YAAY6G,OAAc,KAAM,mFACjD,MAAOrB,GACL6C,KAAK3E,SAAS,CAAC0B,MAAOI,Q,+BAKzBqN,QACSG,IAAVH,EACAxK,KAAK3E,SAAS,CAACtG,MAAO,6KAEtBiL,KAAK3E,SAAS,CAACtG,MAAO,gGAAqByV,M,sCAIlC,IAAD,OACRzG,EAAI,EACR,OAAO/D,KAAKtL,MAAMiD,YAAYsI,KAAI,SAAA/J,GAG9B,OAFU,IAAN6N,IAASA,EAAI,GACjBA,IAEI,kBAAC,IAAD,CAAUzB,IAAKpM,EAAOuL,OAClB,kBAAC,IAAD,CAAMb,KAAK,IAAIzE,KAAK,UAChB,kBAAC,IAAD,CACImB,MAAO,CAAC8E,aAAc,uBACtBR,YAAU,EACR4F,MAAM,kEACNvF,YACI,kBAAC,IAAMhB,SAAP,KAEQ/K,EAAO0S,WAAWjT,SAASsK,KAAI,SAACtK,EAAUgJ,GACtC,OAAIA,EAAQzI,EAAO0S,WAAWjT,SAAS6I,OAAO,EACnC,0BAAMlB,MAAO,CAAC2G,QAAS,gBAAiBtO,EAASyT,MAAM,kBAAC,KAAD,OAEvDzT,EAASyT,UAMpCiL,cACI,EAAKH,UAAUhe,EAAO6L,KAAM7L,EAAO+F,KAEvC8B,OAAQ,kBAAC,IAAD,CAAQ4C,IAAKzK,EAAO+G,WAAY2D,KAAM,KAC9CA,KAAK,IACL/L,QAAS,kBAAM,EAAKH,MAAM4f,gBAAgBpe,KAC9CA,EAAOwL,UAvBT,IAuBqBxL,EAAOyL,iB,+BA0CtC,IAAD,OACL,MAAyB,4DAArB3B,KAAKpE,MAAMmB,MAEP,kBAAC,IAAD,CACI+D,KAAM,kBAAC,KAAD,MACNxB,OAAO,oCAFX,wSAOwB,qFAArBU,KAAKpE,MAAMmB,MAEd,kBAAC,IAAD,CACI+D,KAAM,kBAAC,KAAD,MACNxB,OAAO,0GACPmJ,OAAQ,kBAAC,IAAD,CAAQ5T,QAAS,kBAAM,EAAKoJ,SAAS2C,KAAK,KAA1C,iEAHZ,m9BAYA,kBAAC,IAAD,CAAOM,UAAU,OAAO5B,OAAQ,kBAAC,IAAD,CAAQnD,KAAK,aAAa6D,KAAKpE,MAAM7G,QAChEiL,KAAK+T,gBACN,kBAAC,IAAD,oJAAuC/T,KAAKtL,MAAMiD,YAAY6G,OAA9D,KAEyB,OAArBwB,KAAKpE,MAAMmM,MACP,kBAAC,IAAD,CAAMnH,KAAK,IAAIzE,KAAK,UAChB,kBAAC,IAAD,CAAagM,WAAanI,KAAKpE,MAAMmM,SAEzC,U,GA/JF/E,IAAMC,WA6KjBlN,gBANS,SAAC6F,GACrB,MAAO,CACHzF,KAAMyF,EAAMzF,QAILJ,CAAyBke,ICnMxC,SAASM,GAAYlV,EAAG3K,GACpB,IAAI8V,EAAQ,EAMZ,OALA9V,EAAMiD,YAAYsI,KAAI,SAAC/J,GACfA,EAAO0S,WAAWM,QACfhT,EAAO0S,WAAWM,OAAO5K,SAASe,IAAMmL,OAG5CA,EAGX,IA4BegK,GA5BM,SAAC9f,GAClB,MAA8B,QAA3BA,EAAMmD,eAAeoE,IAEhB,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEQvH,EAAMmD,eAAeqR,OAAOjJ,KAAI,SAAAiJ,GAC5B,OACI,kBAAC,IAAD,CACIxI,MAAO,kBAAC,IAAD,CAASE,KAAK,KAAK2T,GAAYrL,EAAOjN,IAAKvH,IAClD4N,IAAK4G,EAAOjN,IACZoD,GAAI6J,EAAOjN,IACXpH,QAASH,EAAM0V,YACfgJ,SAAU1e,EAAMsE,OAAOsF,SAAS4K,EAAOjN,MAEtCiN,EAAOE,YAS7B,MCpBTqL,G,kDACF,WAAY/f,GAAQ,IAAD,8BACf,cAAMA,IAgCVggB,SAAW,WACP,EAAKhgB,MAAMuG,UAAU,IACa,KAA9B,EAAKvG,MAAMmD,eACXkE,MAAM7G,EAAQM,QAAQG,SAAW,OAAS,EAAKjB,MAAMyB,KAAKkT,SAASC,QAAQjK,GAAK,IAAM,EAAK3K,MAAMoD,WAAWuH,IACvGzC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAjF,GACF,EAAKjD,MAAM6E,kBAAkB5B,GAC7B,EAAKqB,YAERkE,OAAM,SAAAC,GAAC,OAAI,EAAK9B,SAAS,CAAC0V,gBAAgB,OAE/ChV,MAAM7G,EAAQM,QAAQG,SAAW,EAAKjB,MAAMmD,eAAeoE,IAAM,IAAM,EAAKvH,MAAMyB,KAAKkT,SAASC,QAAQjK,GAAK,IAAM,EAAK3K,MAAMoD,WAAWuH,IACpIzC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAjF,GACF,EAAKjD,MAAM6E,kBAAkB5B,GAC7B,EAAKqB,YAERkE,OAAM,SAAAC,GAAC,OAAI,EAAK9B,SAAS,CAAC0V,gBAAgB,QAlDpC,EAsDnB3G,YAAc,SAACjN,GACX,GAAI,EAAKzI,MAAMsE,OAAOsF,SAASnB,EAAEwX,cAActV,IAAK,CAChD,IAAIV,EAAQ,EAAKjK,MAAMsE,OAAO8F,QAAQ3B,EAAEwX,cAActV,IAClDrG,EAAS,EAAKtE,MAAMsE,OACpB2F,GAAS,EACT3F,EAAO+F,OAAOJ,EAAO,GAClB3F,EAAO+F,OAAO,EAAGJ,GACxB,EAAKtD,SAAS,CAACrC,OAAQA,IAAS,kBAAM,EAAKA,gBACxC,CACH,IAAIA,EAAS,EAAKtE,MAAMsE,OACxBA,EAAO4F,KAAKzB,EAAEwX,cAActV,IAC5B,EAAK3K,MAAMuG,UAAUjC,GACrB,EAAKA,WAhET,EAAK4C,MAAQ,CACT6C,QAAQ,EACRzF,OAAQ,IAJG,E,gEASuB,IAAlCgH,KAAKtL,MAAMiD,YAAY6G,OACvBwB,KAAK0U,WAEL1U,KAAK3E,SAAS,CAACuZ,aAAc5U,KAAKtL,MAAMiD,YAAa8G,QAAQ,M,2CAK7DuB,KAAKtL,MAAMkD,mBACXkI,OAAOC,SAAS,EAAGC,KAAKtL,MAAMkD,qB,6CAMlCoI,KAAKtL,MAAMmF,wBAAwBiG,OAAOsS,KAAKC,e,yCAGhCtN,EAAWC,EAAWC,GAAW,IAAD,OAC3CF,EAAUjN,aAAekI,KAAKtL,MAAMoD,YACpCkI,KAAK3E,SAAS,CAACoD,QAAQ,IAAQ,kBAAM,EAAKiW,gB,+BA0CxC,IAAD,OACL,GAAiC,IAA7B1U,KAAKtL,MAAMsE,OAAOwF,OAClBwB,KAAK3E,SAAS,CAACuZ,aAAc5U,KAAKtL,MAAMiD,YAAa8G,QAAQ,QAC1D,CACH,IAAImW,EAAe5U,KAAKtL,MAAMiD,YAAYqB,QAAO,SAAA9C,GAC7C,IAAI6N,EAAI,EAQR,GAPA,EAAKrP,MAAMsE,OAAO6b,SAAQ,SAAA7b,GACtB,IAAI9C,EAAO0S,WAAWM,OAGlB,OAAO,EAFHhT,EAAO0S,WAAWM,OAAO5K,SAAStF,IAAS+K,OAKnDA,EAAI,EAAG,OAAO,KAEtB/D,KAAK3E,SAAS,CAACuZ,aAAcA,EAAcnW,QAAQ,O,+BAIjD,IAAD,OACL,GAAIuB,KAAKpE,MAAMmV,eACX,OACI,kBAAC,IAAM9P,SAAP,KACI,kBAAC,GAAD,CAAU3L,WAAY,kBAAM,EAAKZ,MAAMY,gBACvC,kBAAC,IAAD,CACIyV,WAAS,EACTjK,KAAM,kBAAC,KAAD,MACNxB,OAAQ,oEAHZ,yKAQCU,KAAKpE,MAAMgE,UAGhB,IAAD,EAC4BI,KAAKtL,MAA7BmD,EADJ,EACIA,eAAgB1B,EADpB,EACoBA,KACvB,OAEI,kBAAC,IAAD,CAAOkJ,GAAG,eACN,kBAAC,IAAD,mDACA,kBAAC,GAAD,CAAU/J,WAAY,kBAAM,EAAKZ,MAAMY,gBACvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIgR,IAAI,0GACJC,YAAY,8KACZ1R,QAAgC,8EAAvBsB,EAAKkT,SAASE,KACnBvJ,KAAKtL,MAAMmZ,UAAU,8HACrB7N,KAAKtL,MAAMogB,gBAEjBjd,EAAeuR,OAEbvR,GAAkBmI,KAAKpE,MAAM6C,QAC7B,kBAAC,GAAD,CACI5G,eAAgBA,EAChBF,YAAaqI,KAAKtL,MAAMiD,YACxByS,YAAa,SAACjN,GAAD,OAAO,EAAKiN,YAAYjN,IACrCnE,OAAQgH,KAAKtL,MAAMsE,UAK3BgH,KAAKpE,MAAM6C,OACP,kBAAC,GAAD,CACIoP,UAAW7N,KAAKtL,MAAMmZ,UACtBlW,YAAaqI,KAAKpE,MAAMgZ,aACxBjf,SAAUkC,EACV0R,KAAMpT,EAAKkT,SAASE,KACpB+K,gBAAiBtU,KAAKtL,MAAM4f,kBAEhC,kBAAC,IAAD,CAAS1T,KAAK,QAAQtD,MAAO,CAACyD,UAAW,MAEhDf,KAAKtL,MAAMkL,c,GAhJVoD,IAAMC,WA6KblN,gBArBS,SAAC6F,GACrB,MAAO,CACHjE,YAAaiE,EAAMjE,YACnBE,eAAgB+D,EAAM/D,eACtBC,WAAY8D,EAAM9D,WAClBF,kBAAmBgE,EAAMhE,kBACzBzB,KAAMyF,EAAMzF,KACZ6C,OAAQ4C,EAAM5C,WAII,SAACkK,GACvB,MAAO,CACH3J,kBAAmB4J,YAAmB5J,EAAmB2J,GACzDzJ,qBAAsB0J,YAAmB1J,EAAsByJ,GAC/DvJ,iBAAkBwJ,YAAmBxJ,EAAkBuJ,GACvDrJ,wBAAyBsJ,YAAmBtJ,EAAyBqJ,GACrEjI,UAAWkI,YAAmBlI,GAAWiI,MAIlCnN,CAA4C0e,ICxLrDM,G,kDACF,WAAYrgB,GAAQ,IAAD,8BACf,cAAMA,IAUVsgB,eAAiB,WACbjZ,MAAM7G,EAAQS,SAASwB,QAClByF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgM,GACFA,EAAWqF,QAAQ,CAAChS,IAAK,MAAOmN,MAAO,+HACvC,EAAK/N,SAAS,CAACuN,WAAYA,EAAYnK,QAAQ,OAElDvB,OAAM,SAAAH,GACH7D,QAAQC,IAAI4D,OAjBpB,EAAKnB,MAAQ,CACT6C,QAAQ,GAHG,E,gEAQfuB,KAAKgV,mB,+BAeC,IAAD,OACL,OAA0B,IAAtBhV,KAAKpE,MAAM6C,OAEP,yBAAKnB,MAAO,CAAE2G,QAAS,OAAQ6B,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAASnF,KAAK,QAAQtD,MAAO,CAAEyD,UAAW,OAK9C,kBAAC,IAAD,KAEQf,KAAKpE,MAAMgN,WAAW3I,KAAI,SAAAtK,GACtB,OACI,kBAAC,IAAD,CACI2M,IAAK3M,EAASsG,IACdpH,QAAS,kBAAI,EAAKH,MAAMugB,YAAYtf,IACpCoN,aAAc,EAAKrO,MAAMmD,iBAAmBlC,EACxC,kBAAC,KAAD,CAAYkI,KAAK,kBAAoB,MAExClI,EAASyT,e,GA3CjBpG,IAAMC,WA4DpBlN,gBANS,SAAC6F,GACrB,MAAO,CACH/D,eAAgB+D,EAAM/D,kBAIf9B,CAAyBgf,ICCzBG,G,kDA7DX,WAAYxgB,GAAQ,IAAD,8BACf,cAAMA,IACDkH,MAAQ,GAFE,E,qDAQf,OACI,kBAAC,IAAD,CAAK0B,MAAO,CAAC2I,MAAO,SAApB,iGAEQ,6BAFR,mSAGQ,6BAHR,g2DAIQ,6BAJR,04BAKQ,6BALR,48BAMQ,6BANR,4jBAOI,6BACA,6BACI,6BATR,+EAUQ,6BAVR,woCAWI,6BACA,6BACI,6BAbR,mJAcQ,6BAdR,m/CAeQ,6BAfR,q4FAgBQ,6BAhBR,01BAiBQ,6BAjBR,ygGAkBQ,6BAlBR,yxCAmBQ,6BAnBR,+8CAoBI,6BACA,6BACI,6BAtBR,qLAuBQ,6BAvBR,whEAwBQ,6BAxBR,opEAyBQ,6BAzBR,g/EA0BQ,6BA1BR,u9BA2BQ,6BA3BR,s/CA4BQ,6BA5BR,ygCA6BI,6BACA,6BACI,6BA/BR,wJAgCQ,6BAhCR,6yCAiCQ,6BAjCR,mxCAkCQ,6BAlCR,q3EAmCQ,6BAnCR,wpFAoCQ,6BApCR,mqCAqCQ,6BArCR,i1BAsCI,6BACA,6BACI,6BAxCR,iJAyCQ,6BAzCR,kwBA0CQ,6BA1CR,gwBA2CQ,6BA3CR,gpCA4CQ,6BA5CR,q4DA6CQ,6BA7CR,42CA8CQ,6BA9CR,wrC,GAVQjD,IAAMC,WCgEpBkS,G,kDACF,WAAYzgB,GAAQ,IAAD,8BACf,cAAMA,IA2DVU,KAAO,SAACiC,GACJ0E,MAAM7G,EAAQC,MAAMC,KAAM,CACtB8G,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CAAC,eAAgB,oBAC1BC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUtF,KAEpBuF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5B,IACgC,IAA9B,EAAKY,MAAMmV,gBACX,EAAK1V,SAAS,CAAC0V,gBAAgB,EAAOnR,SAAU,OAEpD,EAAKvE,SAAS,CAAC+Z,mBAAmB,IAClC,EAAK1gB,MAAM4E,UAAU0B,EAAK7E,MACN,OAAhB6E,EAAK9E,QACL,EAAKxB,MAAMuE,UAAU+B,EAAK9E,WAGjCgH,OAAM,SAAAC,GACHjE,QAAQC,IAAIgE,GACZ,EAAK9B,SAAS,CACVuE,SACI,kBAAC,IAAD,CACIY,SAAS,OACTC,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAACuE,SAAU,QACxC7B,OAAQ,kBAAC,KAAD,OAJZ,2rBAWR,EAAK1C,SAAS,CAAC0V,gBAAgB,QAjGxB,EA0InBe,eAAiB,SAACC,GACdhW,MAAM7G,EAAQM,QAAQE,KAAOqc,GACxBnV,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA1G,GACEA,EAAO6G,QAAO7G,EAAS,MAC3B,EAAKxB,MAAMyF,4BAA4BjE,GACvC,EAAKsE,KAAK,UAAW,kBAhJd,EAoJnB6a,mBAAqB,SAACtD,GAClBhW,MAAM7G,EAAQM,QAAQE,KAAOqc,GACxBnV,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA1G,GACF,EAAKxB,MAAM2F,+BAA+BnE,GAC1C,EAAKsE,KAAK,YAAa,kBAzJhB,EAkMnB8Q,YAAc,SAACjM,GACXnB,IAAOC,KAAK,uBAAwB,CAChC,gBAAoB,QACpB,IAAQ,qFACR,QAAU,EACV,SAAY,CACR,CACI,aAAgB,aAChB,QAAW,CACP,UAAa,CACT,eAAkB,GAClB,cAAiB,KAErB,WAAc,EACd,aAAgB,QAChB,IAAO,qFACP,gBAAmB,CACf,CAEI,YAAe,OACf,OAAU,CACN,KAAQ,sCAAsCkB,EAC9C,iBAAoB,qBAMxB,eAAkB,CACd,CACI,EAAK,EACL,EAAK,GAET,CACI,EAAK,IACL,EAAK,GAET,CACI,EAAK,IACL,EAAK,KAET,CACI,EAAK,EACL,EAAK,cA7OtB,EAuPnBmK,SAAW,SAACtT,GACR6F,MAAM7G,EAAQM,QAAQC,IAAK,CACvByG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CAAC,eAAgB,oBAC1BC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUzG,KAEpB0G,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA0Y,GACEA,EAAUvY,MACV,EAAK8Q,UAAUyH,EAAUvY,QAEzB,EAAKrI,MAAMuE,UAAUqc,GACrB,EAAK9a,KAAK,KAAM,MAChB,EAAK8Q,YAAYgK,EAAUrZ,SAIlCiB,OAAM,SAAAC,GACHjE,QAAQC,IAAIgE,GACZ,EAAK0Q,UAAU1Q,EAAE5H,aA/QV,EAwRnBiF,KAAO,SAACC,EAAOC,GACXoF,OAAOyV,QAAQC,UAAU,CAAC9a,MAAOA,GAAQA,GACzC,EAAKhG,MAAM8F,KAAKC,EAAOC,GACZ,EAAKhG,MAAM+F,EAAQ,YA3Rf,EA8RnB3F,OAAS,SAAC2F,GAEN,GADAvB,QAAQC,IAAI,eAAM,EAAKzE,MAAM+F,EAAQ,YACQ,IAAzC,EAAK/F,MAAM+F,EAAQ,WAAW+D,OAC9BN,IAAOC,KAAK,gBAAiB,CAAC,OAAU,gBACrC,CACH,EAAKzJ,MAAMiG,UAAUF,GACV,EAAK/F,MAAM+F,EAAQ,WAC9BvB,QAAQC,IAAI,iCAAS,EAAKzE,MAAM+F,EAAQ,cArS7B,EAySnBgb,mBAAqB,SAACla,GAClB,EAAKF,SAAS,CAACoa,mBAAoBla,KA1SpB,EA6SnBma,UAAY,SAACC,GACT,EAAKta,SAAS,CAACxC,YAAa8c,KA3S5B,EAAK/Z,MAAQ,CACTga,SAAU,KACVC,aAAc,KACdhd,YAAa,OACbid,sBAAuB,YACvBL,mBAAoB,cACpBM,eAAgB,GAChBC,kBAAmB,cACnBld,aAAc,KACdmd,cAAe,KACfC,eAAgB,eAChBC,WAAY,GACZC,WAAY,GACZjX,YAAa,KACbkX,aAAc,GACdve,WAAY,0DACZwe,YAAa,QACbC,OAAQ,eACRxF,gBAAgB,EAChByF,aAAc,KACdC,UAAW,KACXC,QAAS,KACTC,eAAgB,MAEpB,EAAKC,cAAgB,EAAKA,cAAc/W,KAAnB,gBA3BN,E,gEA8BE,IAAD,OAChB3B,IAAO+J,WAAU,YAA6B,IAAD,IAA1BC,OAAS9O,EAAiB,EAAjBA,KAAM4B,EAAW,EAAXA,KACjB,yBAAT5B,IACA,EAAKiC,SAAS,CAACkb,OAAQvb,EAAKub,SACR,eAAhBvb,EAAKub,QAAyBrY,IAAOC,KAAK,0BAA2B,CAAC,iBAAoB,UAC1E,iBAAhBnD,EAAKub,QAA2BrY,IAAOC,KAAK,0BAA2B,CAAC,iBAAoB,UAEvF,mCAAT/E,GACA2C,MAAM7G,EAAQuB,MAAMS,QAAQ8D,EAAK6b,wBAGJlM,IAAjC3K,KAAKtL,MAAMoiB,aAAaC,MACxB/W,KAAK3E,SAAS,CAAC+Z,mBAAmB,IAClClc,QAAQC,IAAI,+FACZ6G,KAAKtL,MAAM6F,mBAAmByF,KAAKtL,MAAMoiB,cACzC9W,KAAK5K,KAAK4K,KAAKtL,MAAMoiB,gBAErB9W,KAAK3E,SAAS,CAAC+Z,mBAAmB,IAClCpV,KAAK6N,UAAU,2MAGf7N,KAAKtL,MAAMsiB,WAAWC,WACtBjX,KAAK8R,eAAe9R,KAAKtL,MAAMsiB,WAAWC,UAC1CjX,KAAKtL,MAAMkG,YAAY,YAE3BkF,OAAOoX,WAAa,WAChB,EAAKpiB,OAAO,EAAKJ,MAAMmE,gB,gCA6CrB0H,GAAO,IAAD,OAIRP,KAAKpE,MAAMgE,UAAUI,KAAK3E,SAAS,CAACuE,SAAU,OAClDI,KAAK3E,SAAS,CACVuE,SACI,kBAAC,IAAD,CACIY,SAAS,OACTC,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAACuE,SAAU,QACxC7B,OAAQ,kBAAC,IAAD,CAAQ6C,KAAM,GAAItD,MAVf,CACnBgK,gBAAiB,kBASwC,kBAAC,IAAD,CAAYzJ,KAAK,OAAOF,MAAO,GACnBC,OAAQ,OAEpE2C,O,sCAKDA,GAAO,IAAD,OAIdP,KAAKpE,MAAM+a,gBAAgB3W,KAAK3E,SAAS,CAACsb,eAAgB,OAC9D3W,KAAK3E,SAAS,CACVsb,eACI,kBAAC,IAAD,CACInW,SAAS,OACTC,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAACsb,eAAgB,QAC9C5Y,OAAQ,kBAAC,KAAD,OAEPwC,O,kCAwBLA,GAAO,IAAD,OAIVP,KAAKpE,MAAMyV,YAAYrR,KAAK3E,SAAS,CAACgW,WAAY,OACtDrR,KAAK3E,SAAS,CACVgW,WACI,kBAAC,IAAD,CACI7Q,SAAS,OACTC,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAACgW,WAAY,QAC1CtT,OAAQ,kBAAC,IAAD,CAAQ6C,KAAM,GAAItD,MAVf,CACnBgK,gBAAiB,kBASwC,kBAAC,IAAD,CAAYzJ,KAAK,OAAOF,MAAO,GACnBC,OAAQ,OAEpE2C,O,yCAKEA,GAAO,IAAD,OAIjBP,KAAKpE,MAAMyV,YAAYrR,KAAK3E,SAAS,CAACgW,WAAY,OACtDrR,KAAK3E,SAAS,CACVgW,WACI,kBAAC,IAAD,CACI7Q,SAAS,OACTC,OAAO,WACPrB,QAAS,kBAAM,EAAK/D,SAAS,CAACgW,WAAY,QAC1CtT,OAAQ,kBAAC,KAAD,OAEPwC,O,oCAoHHpD,GACV6C,KAAK3E,SAAS,CAACxC,YAAasE,EAAEwX,cAAcwC,QAAQ1c,U,uCAGvC2c,GACb,IAAIjhB,EAAO6J,KAAKtL,MAAMyB,KAKlB,OAJJA,EAAKkT,SAASE,KAAO6N,EAAI7N,KACzBpT,EAAKkT,SAASC,QAAU8N,EAAI9N,QAC5BtJ,KAAKtL,MAAMiF,iBAAiByd,EAAI7N,MAChCpT,EAAKkB,OAAS2I,KAAKtL,MAAM2C,OACd0E,MAAM7G,EAAQC,MAAMG,WAAY,CACnC4G,OAAQ,QACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CAAC,eAAgB,oBAC1BC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUxG,KAEpByG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF3D,QAAQC,IAAI,SAEf+D,OAAM,SAAAC,GAAC,OAAEjE,QAAQC,IAAIgE,Q,+BAGxB,IAAD,SACuB6C,KAAKtL,MAA1ByB,EADF,EACEA,KAAMuB,EADR,EACQA,YACb,OAAkC,IAA9BsI,KAAKpE,MAAMmV,eAEP,kBAAC,IAAD,CAAgBwF,OAAQvW,KAAKpE,MAAM2a,QAC/B,kBAAC,IAAD,CAAMlX,GAAG,UAAUgY,YAAY,WAC3B,kBAAC,IAAD,CAAOhY,GAAG,WACN,kBAAC,IAAD,CACI0L,WAAS,EACTjK,KAAM,kBAAC,KAAD,MACNxB,OAAQ,mEACRmJ,OAAQ,kBAAC,IAAD,CAAQ7H,KAAK,IAAI/L,QAAS,kBAAM,EAAKO,KAAK,EAAKV,MAAMoiB,gBAArD,8HAJZ,yKASC9W,KAAKpE,MAAMgE,aAKY,IAAjCI,KAAKpE,MAAMwZ,kBAEd,kBAAC,IAAD,CAAgBmB,OAAQvW,KAAKpE,MAAM2a,QAC/B,kBAAC,IAAD,CAAMlX,GAAG,OAAOgY,YAAY,QACxB,kBAAC,IAAD,CAAOhY,GAAG,QACN,kBAAC,IAAD,CACIyB,KAAM,kBAAC,IAAD,CAASF,KAAK,QAAQtD,MAAO,CAACyD,UAAW,OADnD,+HAKCf,KAAKpE,MAAMgE,aAKL,IAAhBlI,EAEH,kBAAC,IAAD,CAAgB6e,OAAQvW,KAAKpE,MAAM2a,QAC/B,kBAAC,IAAD,CAAMlX,GAAG,UAAUgY,YAAY,WAC3B,kBAAC,IAAD,CAAOhY,GAAG,WACN,kBAAC,IAAD,CACI0L,WAAS,EACTjK,KAAM,kBAAC,IAAD,CAASF,KAAK,QAAQtD,MAAO,CAACyD,UAAW,MAC/CzB,OAAO,kGAHX,qLAKKU,KAAKpE,MAAMgE,aAQ5B,kBAAC,IAAD,CAAgB2W,OAAQvW,KAAKpE,MAAM2a,QAC/B,kBAAC,IAAD,CAAM1d,YAAamH,KAAKtL,MAAMmE,YAAaye,OACvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIziB,QAAS,WAC0B,SAA3B,EAAKH,MAAMmE,YACX,EAAK2B,KAAK,OAAQ,QAElB,EAAK9F,MAAMkG,YAAY,SAG/BwY,SAAqC,SAA3BpT,KAAKtL,MAAMmE,YACrB0e,aAAW,OACXhX,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI1L,QAAS,WAC0B,YAA3B,EAAKH,MAAMmE,YACX,EAAK2B,KAAK,UAAW,eAErB,EAAK9F,MAAMkG,YAAY,YAG/BwY,SAAqC,YAA3BpT,KAAKtL,MAAMmE,YACrB0e,aAAW,UACXhX,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI1L,QAAS,WAC0B,cAA3B,EAAKH,MAAMmE,YACX,EAAK2B,KAAK,YAAa,aAEvB,EAAK9F,MAAMkG,YAAY,cAG/BwY,SAAqC,cAA3BpT,KAAKtL,MAAMmE,YACrB0e,aAAW,YACXhX,KAAK,2DACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI1L,QAAS,WACL,EAAKwG,SAAS,CAACgW,WAAY,OACI,OAA3B,EAAK3c,MAAMmE,YACX,EAAK2B,KAAK,KAAM,MAEhB,EAAK9F,MAAMkG,YAAY,OAG/BwY,SAAqC,OAA3BpT,KAAKtL,MAAMmE,YACrB0e,aAAW,KACXhX,KAAK,8CACR,kBAAC,IAAD,SAGL,kBAAC,IAAD,CAAMlB,GAAG,OAAOkW,QAASvV,KAAKtL,MAAM+D,YAAa+e,YAAa,kBAAM,EAAK1iB,OAAO,SAC1EuiB,YAAarX,KAAKtL,MAAM+D,YAAYuH,KAAKtL,MAAM+D,YAAY+F,OAAS,IACtE,kBAAC,GAAD,CACIa,GAAG,OACHhI,OAAQ2I,KAAKtL,MAAM2C,OACnBqQ,QAAS,WACL,EAAKhT,MAAMkG,YAAY,MACvB,EAAKJ,KAAK,KAAM,iBAKpBkb,UAAW1V,KAAK0V,UAChBvf,KAAM6J,KAAKtL,MAAMyB,KAEjBsR,UAAW,kBAAM,EAAKjN,KAAK,OAAQ,YAEvC,kBAAC,GAAD,CACI6E,GAAG,QACHvK,OAAQ,kBAAM,EAAKA,OAAO,SAC1BqB,KAAM6J,KAAKpE,MAAMzF,KACjB2d,WAAY,SAAC5d,GACT,EAAKmF,SAAS,CAACW,aAAc9F,IAC7B,EAAKsE,KAAK,OAAQ,iBAI1B,kBAAC,IAAD,CAAO6E,GAAG,cACN,kBAAC,GAAD,CACIvK,OAAQ,kBAAM,EAAKA,OAAO,SAC1B8N,UAAW,iBAAM,QACjBf,aAAc,iBAAM,QACpB7F,aAAcgE,KAAKpE,MAAMI,aACzByb,gBAAiB,SAACvhB,GAAD,OAAY,EAAKmF,SAAS,CAACW,aAAc9F,KAC1DwF,UAAW,SAACgc,GACR,EAAKrc,SAAS,CAACmb,aAAckB,SAK7C,kBAAC,IAAD,CAAMrY,GAAG,UAAUsY,MAAO3X,KAAKpE,MAAM4a,aAC/Ba,YAAarX,KAAKtL,MAAMgE,eAAesH,KAAKtL,MAAMgE,eAAe8F,OAAS,GAC1E+W,QAASvV,KAAKtL,MAAMgE,eAAgB8e,YAAa,kBAAM,EAAK1iB,OAAO,aACrE,kBAAC,GAAD,CACIuK,GAAG,cAEH/J,WAAY,kBAAM,EAAKkF,KAAK,UAAW,eACvCqT,UAAW,SAAC9Y,GAAD,OAAW,EAAK8Y,UAAU9Y,IAErC+f,eAAgB,kBAAM,EAAKta,KAAK,UAAW,cAC3C8Z,gBAAiB,SAACpe,GACd,EAAKxB,MAAMyF,4BAA4BjE,GACvC,EAAKsE,KAAK,UAAW,eAEzBoF,SAAUI,KAAKpE,MAAMgE,WAEzB,kBAAC,IAAD,CAAOP,GAAG,cACN,kBAAC,EAAD,CAAMtK,MAAO,sEACPD,OAAQ,kBAAM,EAAKA,OAAO,cAChC,kBAAC,GAAD,CACIuK,GAAG,aAEHvK,OAAQ,kBAAM,EAAKA,OAAO,YAC1BQ,WAAY,SAACiU,GACT,EAAK5P,iBAAiB4P,GACtB,EAAKzU,OAAO,eAKxB,kBAAC,IAAD,CAAOuK,GAAG,cACN,kBAAC,GAAD,CACIA,GAAG,aAEHvK,OAAQ,kBAAM,EAAKA,OAAO,YAG1B8N,UAAW,kBAAM,EAAKpI,KAAK,UAAW,gBACtCqH,aAAc,kBAAM,EAAKrH,KAAK,UAAW,mBACzCwB,aAAcgE,KAAKtL,MAAMwD,sBACzBwD,UAAW,SAACgc,GACR,EAAKrc,SAAS,CAACmb,aAAckB,QAMzC,kBAAC,IAAD,CAAOrY,GAAG,eACN,kBAAC,EAAD,CACItK,MAAO,yDAEPD,OAAQ,kBAAM,EAAKA,OAAO,cAE9B,kBAAC,GAAD,CAEIA,OAAQ,kBAAM,EAAKA,OAAO,YAC1BkH,aAAcgE,KAAKtL,MAAMwD,yBAIjC,kBAAC,IAAD,CAAOmH,GAAG,kBACN,kBAAC,EAAD,CACItK,MAAO,uCACPD,OAAQ,kBAAM,EAAKA,OAAO,cAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,YAC1BkH,aAAcgE,KAAKtL,MAAMwD,yBAIjC,kBAAC,IAAD,CAAOmH,GAAG,aACN,kBAAC,EAAD,CACItK,MAAO,wFACPD,OAAQ,kBAAM,EAAKA,OAAO,cAE9B,kBAAC,IAAD,KACI,kBAAC,GAAD,CACImgB,YAAa,SAACtf,GACV,EAAKjB,MAAM+E,qBAAqB9D,GAChC,EAAKb,OAAO,iBAOhC,kBAAC,IAAD,CACIuK,GAAG,YACHgY,YAAarX,KAAKtL,MAAMiE,iBAAiBqH,KAAKtL,MAAMiE,iBAAiB6F,OAAS,GAC9E+W,QAASvV,KAAKtL,MAAMiE,iBAAkB6e,YAAa,kBAAM,EAAK1iB,OAAO,cACrE6iB,MAAO3X,KAAKpE,MAAM6a,WAElB,kBAAC,IAAD,CAAOpX,GAAG,aACN,kBAAC,IAAD,gEACA,kBAAC,GAAD,CAEIyS,eAAgB,SAACC,GAAD,OAAc,EAAKsD,mBAAmBtD,IAEtDzc,WAAY,kBAAM,EAAKkF,KAAK,YAAa,kBAGjD,kBAAC,IAAD,CAAO6E,GAAG,cACN,kBAAC,EAAD,CAAMtK,MAAO,sEACPD,OAAQ,kBAAM,EAAKA,OAAO,gBAChC,kBAAC,GAAD,CACIuK,GAAG,aACHvK,OAAQ,kBAAM,EAAKA,OAAO,cAC1BQ,WAAY,SAACiU,GACT,EAAK5P,iBAAiB4P,GACtB,EAAKzU,OAAO,iBAIxB,kBAAC,IAAD,CAAOuK,GAAG,cACN,kBAAC,GAAD,CACIA,GAAG,aACHvK,OAAQ,kBAAM,EAAKA,OAAO,cAC1B8N,UAAW,kBAAM,EAAKpI,KAAK,YAAa,gBACxCwB,aAAcgE,KAAKtL,MAAMyD,yBACzB0J,aAAc,kBAAM,EAAKrH,KAAK,YAAa,mBAC3CkB,UAAW,SAACgc,GACR,EAAKrc,SAAS,CAACob,UAAWiB,QAKtC,kBAAC,IAAD,CAAOrY,GAAG,eACN,kBAAC,EAAD,CACItK,MAAO,yDACPD,OAAQ,kBAAM,EAAKA,OAAO,gBAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,cAC1BkH,aAAcgE,KAAKtL,MAAMyD,4BAIjC,kBAAC,IAAD,CAAOkH,GAAG,kBACN,kBAAC,EAAD,CACItK,MAAO,uCACPD,OAAQ,kBAAM,EAAKA,OAAO,gBAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,cAC1BkH,aAAcgE,KAAKtL,MAAMyD,6BAKrC,kBAAC,IAAD,CAAMkH,GAAG,KAAKvE,WAAYkF,KAAKtL,MAAMoE,aAAc6e,MAAO3X,KAAKpE,MAAM8a,SACjE,kBAAC,IAAD,CAAMrX,GAAG,KAAKiR,OAAQtQ,KAAKpE,MAAMga,SAC3ByB,YAAarX,KAAKtL,MAAMkE,UAAUoH,KAAKtL,MAAMkE,UAAU4F,OAAS,GAChE+W,QAASvV,KAAKtL,MAAMkE,UAAW4e,YAAa,kBAAM,EAAK1iB,OAAO,QAChE,kBAAC,IAAD,CAAOuK,GAAG,MACN,kBAAC,IAAD,CAAa6B,WAAW,GAAxB,8CACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIrM,QAAS,kBAAM,EAAKwG,SAAS,CAACib,YAAa,WAC3ClD,SAAqC,UAA3BpT,KAAKpE,MAAM0a,aAFzB,mFAMA,kBAAC,IAAD,CACIzhB,QAAS,kBAAM,EAAKwG,SAAS,CAACib,YAAa,cAC3ClD,SAAqC,aAA3BpT,KAAKpE,MAAM0a,aAFzB,2DAOJ,kBAAC,IAAD,MAE+B,UAA3BtW,KAAKpE,MAAM0a,YACP,kBAAC,GAAD,CACIpgB,OAAQ8J,KAAKtL,MAAMwB,OACnBC,KAAMA,EACN+V,YAAa,kBAAM,EAAK1R,KAAK,KAAM,YACnC2R,cAAe,kBAAM,EAAK3R,KAAK,KAAM,cACrC6R,cAAe,kBAAM,EAAK7R,KAAK,KAAM,cACrC4R,gBAAiB,kBAAM,EAAK5R,KAAK,KAAM,cACvC6C,YAAa2C,KAAKtL,MAAM2C,OAAO2Q,iBAEnC,kBAAC,GAAD,MAEPhI,KAAKpE,MAAMyV,YAEhB,kBAAC,IAAD,CAAOhS,GAAG,WACN,kBAAC,GAAD,CACIiJ,SAAU,SAACsP,GAAD,OAAW,EAAKvc,SAAS,CAACua,SAAUgC,KAC9ChY,SAAU,SAACrK,GAAD,OAAa,EAAKsiB,YAAYtiB,IACxCma,gBAAiB,SAACna,GAAD,OAAa,EAAKuiB,mBAAmBviB,IACtDwiB,UAAW/X,KAAK+X,UAChB5Y,YAAaa,KAAKpE,MAAMuD,YACxB7J,WAAY,kBAAM,EAAKkF,KAAK,KAAM,eAClC1F,OAAQ,kBAAM,EAAKA,OAAO,OAC1Buc,WAAYrR,KAAKpE,MAAMyV,cAG/B,kBAAC,IAAD,CAAOhS,GAAG,cACN,kBAAC,EAAD,CAAMtK,MAAO,sEACPD,OAAQ,kBAAM,EAAKA,OAAO,SAChC,kBAAC,GAAD,CACIuK,GAAG,aACHvK,OAAQ,kBAAM,EAAKA,OAAO,OAC1BQ,WAAY,SAAC8hB,GACT,IAAIlhB,EAAS,EAAKxB,MAAMwB,OACxBA,EAAOmT,SAASE,KAAO6N,EAAI7N,KAC3BrT,EAAOmT,SAASC,QAAU8N,EAAI9N,QAC9BpT,EAAO8a,SAAU,EACjB,EAAKtc,MAAMuE,UAAU/C,GACrB,EAAKpB,OAAO,UAIxB,kBAAC,IAAD,CAAOuK,GAAG,aACN,kBAAC,GAAD,CACIvK,OAAQ,kBAAM,EAAKA,OAAO,OAC1BqB,KAAMA,EACNub,kBAAmB,SAACxb,GAChB,EAAKxB,MAAM4F,yBAAyBpE,GACpC,EAAKsE,KAAK,KAAM,kBAI5B,kBAAC,IAAD,CAAO6E,GAAG,cACN,kBAAC,GAAD,CACIvK,OAAQ,kBAAM,EAAKA,OAAO,OAC1B8N,UAAW,kBAAM,EAAKpI,KAAK,KAAM,gBACjCrE,KAAMA,EACN6F,aAAcgE,KAAKtL,MAAM0D,mBACzByJ,aAAc,kBAAM,EAAKrH,KAAK,KAAM,mBACpCid,gBAAiB,SAACvhB,GAAD,OAAY,EAAKmF,SAAS,CAACW,aAAc9F,KAC1DwF,UAAW,SAACgc,GACR,EAAKrc,SAAS,CAACqb,QAASgB,QAIpC,kBAAC,IAAD,CAAOrY,GAAG,eACN,kBAAC,EAAD,CACItK,MAAO,yDACPD,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKuG,SAAS,CAAC4a,cAAe,gBAC5Cja,aAAcgE,KAAKtL,MAAM0D,sBAIjC,kBAAC,IAAD,CAAOiH,GAAG,aACN,kBAAC,EAAD,CACItK,MAAO,yDACPD,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACIwT,SAAU,SAACsP,GAAD,OAAW,EAAKvc,SAAS,CAACua,SAAUgC,KAC9C9iB,OAAQ,kBAAM,EAAKA,OAAO,OAC1BqB,KAAMA,KAGd,kBAAC,IAAD,CAAOkJ,GAAG,kBACN,kBAAC,EAAD,CACItK,MAAM,uCACND,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,OAC1BqB,KAAMA,EACN6F,aAAcgE,KAAKtL,MAAM0D,sBAIjC,kBAAC,IAAD,CAAOiH,GAAG,aACN,kBAAC,EAAD,CACItK,MAAM,0DACND,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,OAC1BqB,KAAMA,EAAMma,OAAQtQ,KAAKgY,aAKjC,kBAAC,IAAD,CAAO3Y,GAAG,gBACN,kBAAC,EAAD,CACItK,MAAO,qEACPD,OAAQ,WACJ,EAAKA,OAAO,SAIpB,kBAAC,GAAD,CACIwT,SAAU,SAACsP,GAAD,OAAW,EAAKvc,SAAS,CAACua,SAAUgC,KAC9C9iB,OAAQ,kBAAM,EAAKJ,MAAMmG,mBAAmB,OAC5C2O,SAAUxJ,KAAKwJ,SACflU,WAAY,kBAAM,EAAKkF,KAAK,KAAM,kBAClCwQ,UAAW,kBAAM,EAAKxQ,KAAK,KAAM,UACjCoF,SAAU,SAACrK,GAAD,OAAa,EAAK0iB,gBAAgB1iB,MAE/CyK,KAAKpE,MAAM+a,gBAEhB,kBAAC,IAAD,CAAOtX,GAAG,SACN,kBAAC,EAAD,CACItK,MAAM,+DACND,OAAQ,kBAAM,EAAKA,OAAO,SAE9B,kBAAC,GAAD,CACIA,OAAQ,kBAAM,EAAKA,OAAO,UAGlC,kBAAC,IAAD,CAAOuK,GAAG,iBACN,kBAAC,EAAD,CAAMtK,MAAO,sEACPD,OAAQ,kBAAM,EAAKA,OAAO,SAChC,kBAAC,GAAD,CACIuK,GAAG,gBACHvK,OAAQ,kBAAM,EAAKA,OAAO,OAC1BQ,WAAY,SAACiU,GACT,EAAK5P,iBAAiB4P,GACtB,EAAKzU,OAAO,kB,GA/xBtCkO,IAAMC,WAo2BTlN,gBApDS,SAAC6F,GACrB,MAAO,CACHjE,YAAaiE,EAAMjE,YACnBE,eAAgB+D,EAAM/D,eACtBC,WAAY8D,EAAM9D,WAClBF,kBAAmBgE,EAAMhE,kBACzBI,eAAgB4D,EAAM5D,eACtBC,qBAAsB2D,EAAM3D,qBAC5B9B,KAAMyF,EAAMzF,KACZuB,YAAakE,EAAMlE,YACnBxB,OAAQ0F,EAAM1F,OACdgC,sBAAuB0D,EAAM1D,sBAC7BC,yBAA0ByD,EAAMzD,yBAChCC,mBAAoBwD,EAAMxD,mBAC1Bf,OAAQuE,EAAMvE,OACdgB,gBAAiBuD,EAAMvD,gBACvBC,mBAAoBsD,EAAMtD,mBAC1BC,qBAAsBqD,EAAMrD,qBAC5BC,cAAeoD,EAAMpD,cACrBK,YAAa+C,EAAM/C,YACnBJ,YAAamD,EAAMnD,YACnBC,eAAgBkD,EAAMlD,eACtBC,iBAAkBiD,EAAMjD,iBACxBC,UAAWgD,EAAMhD,UACjBE,aAAc8C,EAAM9C,aACpBof,wBAAyBtc,EAAMsc,wBAC/BC,oBAAqBvc,EAAMuc,wBAIT,SAACjV,GACvB,MAAO,CACH3J,kBAAmB4J,YAAmB5J,EAAmB2J,GACzDzJ,qBAAsB0J,YAAmB1J,EAAsByJ,GAC/DvJ,iBAAkBwJ,YAAmBxJ,EAAkBuJ,GACvDrJ,wBAAyBsJ,YAAmBtJ,EAAyBqJ,GACrEnJ,qBAAsBoJ,YAAmBpJ,EAAsBmJ,GAC/DjJ,2BAA4BkJ,YAAmBlJ,EAA4BiJ,GAC3E5J,UAAW6J,YAAmB7J,EAAW4J,GACzCjK,UAAWkK,YAAmBlK,EAAWiK,GACzC/I,4BAA6BgJ,YAAmBhJ,GAA6B+I,GAC7E7I,+BAAgC8I,YAAmB9I,GAAgC6I,GACnF5I,yBAA0B6I,YAAmB7I,GAA0B4I,GACvE3I,mBAAoB4I,YAAmB5I,GAAoB2I,GAC3DtI,YAAauI,YAAmBvI,GAAasI,GAC7C1I,KAAM2I,YAAmB3I,GAAM0I,GAC/BvI,UAAWwI,YAAmBxI,GAAWuI,GACzCrI,mBAAoBsI,YAAmBtI,GAAoBqI,MAKpDnN,CAA4Cof,IC75BvChC,QACW,cAA7BrT,OAAOuJ,SAAS+O,UAEe,UAA7BtY,OAAOuJ,SAAS+O,UAEhBtY,OAAOuJ,SAAS+O,SAASlL,MACvB,2DCRNpC,EAAQ,KAAUuN,SAGlB,IAAMC,GAAQC,a7BsCa,WAAmC,IAAD,IAAjC3c,EAAiC,uDAAzBnE,EAAcgR,EAAW,uCAEzD,OAAQA,EAAOrP,MACX,IAtDkC,6BAuD9B,OAAO,2BAAIwC,GAAX,IAAkBjE,YAAa8Q,EAAOpP,UAC1C,IAvDqC,gCAwDjC,OAAO,2BAAIuC,GAAX,IAAkB/D,eAAgB4Q,EAAOpP,QAAS1B,YAAa,KACnE,IAxDiC,4BAyD7B,IAAIrC,EAAasG,EAAMzF,KAEvB,OADAb,EAAW+T,SAASE,KAAOd,EAAOpP,QAC3B,2BAAIuC,GAAX,IAAkB9D,WAAY2Q,EAAOpP,QAAS1B,YAAa,GAAIK,eAAgB,GAAI7B,KAAMb,IAC7F,IA1DwC,mCA2DpC,OAAO,2BAAIsG,GAAX,IAAkBhE,kBAAmB6Q,EAAOpP,UAChD,IA3DqC,gCA4DjC,OAAO,2BAAIuC,GAAX,IAAkB5D,eAAgByQ,EAAOpP,UAC7C,IA5DuC,kCA6DnC,OAAO,2BAAIuC,GAAX,IAAkB3D,qBAAsBwQ,EAAOpP,UACnD,IA1DkB,aA2Dd,OAAO,2BAAIuC,GAAX,IAAkBlE,aAAa,EAAMvB,KAAMsS,EAAOpP,QAASvB,gBAAwC6S,IAA5BlC,EAAOpP,QAAQgQ,SAAyBZ,EAAOpP,QAAQgQ,SAASE,KAAO,CAAClK,GAAI,EAAGtK,MAAO,0CACjK,IA3DkB,aA4Dd,IAAIyjB,EAAiB5c,EAAMzF,KAE3B,OADAqiB,EAAe3M,UAAW,EACnB,2BAAIjQ,GAAX,IAAkB1F,OAAQuS,EAAOpP,QAASlD,KAAMqiB,IACpD,IAnE8C,yCAoE1C,OAAO,2BAAI5c,GAAX,IAAkB1D,sBAAuBuQ,EAAOpP,UACpD,IApEiD,4CAqE7C,OAAO,2BAAIuC,GAAX,IAAkBzD,yBAA0BsQ,EAAOpP,UACvD,IArE2C,sCAsEvC,OAAO,2BAAIuC,GAAX,IAAkBxD,mBAAoBqQ,EAAOpP,UACjD,IApEyB,oBAqErB,OAAO,2BAAIuC,GAAX,IAAkBvE,OAAQoR,EAAOpP,UACrC,IArEa,QAsET,IAAIkc,EAAU3Z,EAAM6M,EAAOpP,QAAQoB,MAAM,WAGzC,OAFI8a,EAAQA,EAAQ/W,OAAO,KAAOiK,EAAOpP,QAAQqB,OAAO6a,EAAQ3W,KAAK6J,EAAOpP,QAAQqB,OAChF+N,EAAOpP,QAAQqB,QAAU6a,EAAQ,KAAIA,EAAU,CAAC9M,EAAOpP,QAAQqB,QAC5D,2BAAIkB,GAAX,uBAAmB,cAAc6M,EAAOpP,QAAQoB,MAAQgO,EAAOpP,QAAQqB,OAAvE,cAA+E+N,EAAOpP,QAAQoB,MAAM,UAAY8a,GAAhH,4BAAsI9M,EAAOpP,QAAQoB,OAArJ,IACJ,IAzEkB,aA0Ed,IAAIge,EAAa7c,EAAM6M,EAAOpP,QAAQoB,MAAM,WAE5C,OADAge,EAAWC,MACJ,2BAAI9c,GAAX,uBAAmB6M,EAAOpP,QAAQoB,MAAM,UAAYge,GAApD,cAAiE,cAAchQ,EAAOpP,QAAQoB,MAAQge,EAAWA,EAAWja,OAAQ,IAApI,4BAAqJiK,EAAOpP,QAAQoB,OAApK,IACJ,IA5EoB,eA6EhB,OAAO,2BAAImB,GAAX,IAAkB/C,YAAa4P,EAAOpP,UAC1C,IA7E6B,wBA8EzB,OAAO,2BAAIuC,GAAX,IAAkB9C,aAAc2P,EAAOpP,UAC3C,IA9Ee,UA+EX,OAAO,2BAAIuC,GAAX,IAAkB7C,OAAQ0P,EAAOpP,UACrC,IA/EkB,aAgFd,OAAO,2BAAIuC,GAAX,IAAkB5C,OAAQyP,EAAOpP,UAGzC,OAAOuC,K6BvFXsC,IAAOC,KAAK,eAAgB,IAE5B,IAAI6Y,GAAclX,OACbuJ,SACAsP,KACApU,QAAQ,IAAI,IACZqU,MAAM,KACNC,QACG,SAASC,EAAE3b,GACP,IAAI+B,EAAI/B,EAAEyb,MAAM,KAEhB,OADAE,EAAGC,mBAAmB7Z,EAAE,KAAO6Z,mBAAmB7Z,EAAE,IAC7C4Z,IAEX,IAGJzhB,GAASyI,OACRuJ,SACA0F,OACAxK,QAAQ,IAAI,IACZqU,MAAM,KACNC,QACG,SAASC,EAAE3b,GACP,IAAI+B,EAAI/B,EAAEyb,MAAM,KAEhB,OADAE,EAAGC,mBAAmB7Z,EAAE,KAAO6Z,mBAAmB7Z,EAAE,IAC7C4Z,IAEX,IAGRE,IAASC,OAAO,kBAAC,IAAD,CAAUX,MAAOA,IACb,kBAAC,GAAD,CAAKxB,aAAczf,GAAQ2f,WAAYA,MAC9BjK,SAASC,eAAe,SDmF/C,kBAAmBkM,WACrBA,UAAUC,cAAcC,MAAMxc,MAAK,SAAAyc,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.136c9789.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","const BACK_LINK = process.env.REACT_APP_BACK_LINK;\r\n\r\nexport const BACKEND = {\r\n    users: {\r\n        auth: BACK_LINK+'users/auth/',\r\n        like: BACK_LINK+'users/like/',\r\n        changeCity: BACK_LINK+'users/changeCity/'\r\n    },\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/',\r\n        connect: BACK_LINK+'masters/connect/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/',\r\n        getCities: BACK_LINK+'vkapi/getCities',\r\n        getCountries: BACK_LINK+'vkapi/getCountries',\r\n        isMember: BACK_LINK+'vkapi/isMember',\r\n        getAlbum: BACK_LINK+'vkapi/getAlbum',\r\n        delPhoto: BACK_LINK+'vkapi/delPhoto/',\r\n        stories: BACK_LINK+'vkapi/stories/',\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    moder: BACK_LINK+'masters/moderation/',\r\n    moderCom: BACK_LINK+'comment/moderation/',\r\n};","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST'\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY'\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY'\r\nexport const ACTION_CHANGE_TARGET_COUNTRY= 'ACTION_CHANGE_TARGET_COUNTRY'\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL'\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST'\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL'\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS'\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS'\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS'\r\nexport const LOGIN_USER = 'LOGIN_USER'\r\nexport const SET_MASTER = 'SET_MASTER'\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS'\r\nexport const GO_TO = 'GO_TO'\r\nexport const GO_FORWARD = 'GO_FORWARD'\r\nexport const CHANGE_STORY = 'CHANGE_STORY'\r\nexport const CHANGE_ACTIVE_VIEW_LK = 'CHANGE_ACTIVE_VIEW_LK'\r\nexport const REG_SET = 'REG_SET'\r\nexport const SET_FILTER = 'SET_FILTER'\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: null,\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    targetCountry: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null,\r\n    activePanelnews: 'news',\r\n    activePanelmasters: 'mastersList',\r\n    activePanelfindmodel: 'findmodel',\r\n    activePanellk: 'lk',\r\n    //activePanelregistration: 'registration',\r\n    newsHistory: ['news'],\r\n    mastersHistory: ['mastersList'],\r\n    findmodelHistory: ['findmodel'],\r\n    lkHistory: ['lk'],\r\n    //registrationHistory: ['registration'],\r\n    activeStory: 'news',\r\n    activeViewLk: 'lk',\r\n    regSet: null,\r\n    filter: []\r\n}\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload}\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []}\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user\r\n            changeCity.location.city = action.payload\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity}\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload}\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload}\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload}\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity: action.payload.location !== undefined ? action.payload.location.city : {id: 1, title: 'Москва'}}\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user\r\n            changeIsMaster.isMaster = true\r\n            return {...state, master: action.payload, user: changeIsMaster}\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload}\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload}\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload}\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload}\r\n        case GO_TO:\r\n            let history = state[action.payload.story+'History']\r\n            if (history[history.length-1] !== action.payload.panel) history.push(action.payload.panel)\r\n            if (action.payload.panel === history[0]) history = [action.payload.panel]\r\n            return {...state, ['activePanel'+action.payload.story]: action.payload.panel, [action.payload.story+'History']: history, activeStory: action.payload.story}\r\n        case GO_FORWARD:\r\n            let newhistory = state[action.payload.story+'History']\r\n            newhistory.pop()\r\n            return {...state, [action.payload.story+'History']: newhistory, ['activePanel'+action.payload.story]: newhistory[newhistory.length -1], activeStory: action.payload.story}\r\n        case CHANGE_STORY:\r\n            return {...state, activeStory: action.payload}\r\n        case CHANGE_ACTIVE_VIEW_LK:\r\n            return {...state, activeViewLk: action.payload}\r\n        case REG_SET:\r\n            return {...state, regSet: action.payload}\r\n        case SET_FILTER:\r\n            return {...state, filter: action.payload}\r\n\r\n    }\r\n    return state\r\n}","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_TARGET_COUNTRY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS,\r\n    GO_TO,\r\n    GO_FORWARD,\r\n    CHANGE_STORY,\r\n    CHANGE_ACTIVE_VIEW_LK,\r\n    REG_SET,\r\n    SET_FILTER\r\n} from \"./reducers\"\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER')\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    }\r\n}\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER')\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST')\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    }\r\n}\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY')\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    }\r\n}\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY')\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    }\r\n}\r\n\r\nexport const changeTargetCountry = (newTargetCountry) => {\r\n    console.log('in ACTION_CHANGE_TARGET_COUNTRY')\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_COUNTRY,\r\n        payload: newTargetCountry\r\n    }\r\n}\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL')\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    }\r\n}\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST')\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    }\r\n}\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL')\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    }\r\n}\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS')\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    }\r\n}\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS')\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    }\r\n}\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS')\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    }\r\n}\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS')\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    }\r\n}\r\n\r\nexport const goTo = (story, panel) => {\r\n    return {\r\n        type: GO_TO,\r\n        payload: {story: story, panel: panel}\r\n    }\r\n}\r\n\r\nexport const goForward = (story) => {\r\n    return {\r\n        type: GO_FORWARD,\r\n        payload: {story: story}\r\n    }\r\n}\r\n\r\nexport const changeStory = (story) => {\r\n    return {\r\n        type: CHANGE_STORY,\r\n        payload: story\r\n    }\r\n}\r\n\r\nexport const changeActiveViewLk = (activeView) => {\r\n    return {\r\n        type: CHANGE_ACTIVE_VIEW_LK,\r\n        payload: activeView\r\n    }\r\n}\r\n\r\nexport const regSetInvite = (data) => {\r\n    return {\r\n        type: REG_SET,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const setFilter = (filter) => {\r\n    return {\r\n        type: SET_FILTER,\r\n        payload: filter\r\n    }\r\n}","import React from 'react'\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner,\r\n    Header,\r\n    Card,\r\n    CardGrid,\r\n    CardScroll,\r\n    Button,\r\n    FormLayout,\r\n    RichCell,\r\n    CellButton,\r\n    Placeholder,\r\n    Panel,\r\n    SimpleCell, Input, ModalCard, ModalRoot, Caption\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask'\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like'\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline'\r\nimport {BACKEND} from '../func/func'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {patchData, postData} from \"../elements/functions\"\r\nimport {connect} from \"react-redux\"\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline'\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone'\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline'\r\nimport Head from \"../elements/panelHeader\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {loginUser, changeMastersList, changeActiveMasterOnFindModels} from \"../store/actions\"\r\nimport Icon56AccessibilityOutline from '@vkontakte/icons/dist/56/accessibility_outline'\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down'\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up'\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false,\r\n            activeMaster: {},\r\n            phone: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0,0)\r\n        this.setState({activeMaster: this.props.activeMaster}, ()=> {\r\n           if (this.props.activeMaster !== null){\r\n               this.loadFavs()\r\n           }\r\n       })\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        this.props.openModal(null)\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            let mastersList = this.props.mastersList\r\n            let newMastersList = mastersList.map(master=>{\r\n                if (master._id === this.state.activeMaster._id){\r\n                    if (master.subscribers.includes(this.props.user._id)){\r\n                        master.subscribers = master.subscribers.filter(item => item !== this.props.user._id)\r\n                    } else {\r\n                        master.subscribers.push(this.props.user._id)\r\n                    }\r\n                    return master\r\n                } else {\r\n                    return master\r\n                }\r\n            })\r\n            this.props.changeMastersList(newMastersList)\r\n            if (this.props.activeMasterOnFindModels._id === this.state.activeMaster._id){\r\n                let master = this.props.activeMasterOnFindModels\r\n                if (master.subscribers.includes(this.props.user._id)){\r\n                    master.subscribers = master.subscribers.filter(item => item !== this.props.user._id)\r\n                } else {\r\n                    master.subscribers.push(this.props.user._id)\r\n                }\r\n                this.props.changeActiveMasterOnFindModels(master)\r\n            }\r\n            postData(BACKEND.users.like+this.state.activeMaster._id, this.props.params)\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    changeNumber = (event) => {\r\n\r\n        this.setState({[event.target.name]: event.target.value}, this.openModal)\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data))\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let data = {\r\n            params: this.props.params,\r\n            title: this.state.sendtitle,\r\n            phone: this.state.phone\r\n        }\r\n        fetch(BACKEND.masters.connect+this.state.activeMaster._id, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar(res.error, this.state.activeMaster.avatarLink)\r\n                } else {\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n            .catch(e=> {\r\n                this.props.openModal(null)\r\n                this.openSnackAvatar(e.message, this.state.activeMaster.avatarLink)\r\n            })\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <CellButton\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.enterNumber(title)}\r\n            >Записаться\r\n            </CellButton>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938#masterid='+this.state.activeMaster._id})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null})\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true})\r\n            } else {\r\n                this.setState({isFavourite: false})\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers.length, isLoad: true})\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user\r\n            user.favs.push(this.state.activeMaster._id)\r\n            this.props.loginUser(user)\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink))\r\n        } else {\r\n            let user = this.props.user\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id)\r\n            let favs = this.props.user.favs\r\n            if (index > -1) {\r\n                favs.splice(index, 1)\r\n            } else favs.splice(0, index)\r\n            this.props.loginUser(user)\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink))\r\n        }\r\n\r\n    };\r\n\r\n    getPhone = () => {\r\n       console.log('Запрашиваю номер')\r\n       bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({phone: result.phone_number}, ()=> this.openModal())\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.openModal()\r\n            })\r\n    };\r\n\r\n    enterNumber = async (title) => {\r\n        this.setState({sendtitle: title})\r\n        this.openModal()\r\n    };\r\n\r\n    openModal = () => {\r\n        console.log('Открываю модалку')\r\n\r\n        this.props.openModal(\r\n            <ModalRoot\r\n                activeModal={'phoneNumber'}\r\n                onClose={()=>this.props.openModal(null)}\r\n            >\r\n                <ModalCard\r\n                    id={'phoneNumber'}\r\n                    onClose={() => this.props.openModal(null)}\r\n                    header=\"Укажите номер телефона\"\r\n                    caption={\r\n                        <FormLayout>\r\n                            <Div className=\"FormField Input Input--center\">\r\n                                <InputMask\r\n                                    className=\"Input__el\"\r\n                                    //mask=\"7 (999) 999-99-99\"\r\n                                    name=\"phone\"\r\n                                    type=\"number\"\r\n                                    //defaultValue={number || ''}\r\n                                    align=\"center\"\r\n                                    value={this.state.phone}\r\n                                    onChange={this.changeNumber}\r\n                                    novalidate\r\n                                />\r\n                                <Div className=\"FormField__border\"></Div>\r\n                            </Div>\r\n                            {\r\n                                this.state.phone === '' &&\r\n                                <CellButton onClick={()=>{\r\n                                    this.getPhone()\r\n                                }}>Запросить номер</CellButton>\r\n                            }\r\n                            <p>Укажите номер телефона, начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                            <Button onClick={this.sendMessage}>Отправить</Button>\r\n                        </FormLayout>\r\n                    }\r\n                >\r\n\r\n                </ModalCard>\r\n            </ModalRoot>\r\n        )\r\n    }\r\n    // enterNumber = (number) => {\r\n    //     if (number){\r\n    //         this.setState({phone: number})\r\n    //     } else {\r\n    //         this.setState({phone: null})\r\n    //     }\r\n    //     this.setState({ snackbar:\r\n    //             <Snackbar\r\n    //                 duration='99999999999999'\r\n    //                 layout=\"vertical\"\r\n    //                 onClose={() => this.setState({ snackbar: null })}\r\n    //             >\r\n    //                 <h2>Укажите номер телефона</h2>\r\n    //                 <FormLayout>\r\n    //                 <Div className=\"FormField Input Input--center\">\r\n    //                     <InputMask\r\n    //                         className=\"Input__el\"\r\n    //                         //mask=\"7 (999) 999-99-99\"\r\n    //                         name=\"phone\"\r\n    //                         type=\"number\"\r\n    //                         //defaultValue={number || ''}\r\n    //                         align=\"center\"\r\n    //                         value={this.state.phone}\r\n    //                         onChange={this.handleChange}\r\n    //                     />\r\n    //                     <Div className=\"FormField__border\"></Div>\r\n    //                 </Div>\r\n    //                 <p>Укажите номер телефона начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n    //                 <Button onClick={this.sendMessage}>Отправить</Button>\r\n    //                 </FormLayout>\r\n    //             </Snackbar>\r\n    //     });\r\n    // };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log('ok')) // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if (this.props.activeMaster === null){\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Мы не знаем таких мастеров.\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else if (this.props.activeMaster.error){\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Тут никого нет :)\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        }\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Тут никого нет :)\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер предпочел скрыть свой профиль.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                <React.Fragment>\r\n                        <Group separator={'hide'}>\r\n                            <CardGrid>\r\n                                <Card size=\"l\">\r\n                                    <RichCell\r\n                                        disabled\r\n                                        multiline\r\n                                        before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                                        text={\r\n                                            <Caption level=\"2\" weight=\"regular\" style={{ marginBottom: 15 }}>\r\n                                                {this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}\r\n                                            </Caption>\r\n                                        }\r\n                                        caption={\r\n                                            <React.Fragment>\r\n                                                <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                                {\r\n                                                    this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                                        ?\r\n                                                        null\r\n                                                        :\r\n                                                        this.favStatus()\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        //after={this.props.master !== null && <Icon24Write onClick={this.props.openSetting}/>}\r\n                                    >\r\n                                        {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                                    </RichCell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                        </Group>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.props.openComments()} indicator={this.state.activeMaster.meta.comments || 0}\r\n                                description={'Подписчиков: ' + this.state.countFavs}\r\n                            >\r\n                                Отзывы\r\n                            </Cell>\r\n                            {/*{this.subscribers()}*/}\r\n                            {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                        </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Group header={<Header mode=\"secondary\">Выполненые работы мастера</Header>}>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover',\r\n                                                            backgroundPosition: 'center 35%',\r\n                                                            backgroundRepeat: 'no-repeat',\r\n                                                            borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Group> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Запись к мастеру</Header>} description={'Выберите необходимую процедуру и нажмите на кнопку записи к мастеру. Мастер свяжется с Вами.'}>\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    // <Cell\r\n                                    //     style={{borderRadius: '10px 10px 10px 10px'}}\r\n                                    //     key={index}\r\n                                    //     multiline\r\n                                    //     onClick={() => this.changeVisible(index)}\r\n                                    // >\r\n                                        <CardGrid key={index}>\r\n                                            <Card size=\"l\" onClick={() => this.changeVisible(index)}>\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" руб.\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    asideContent={this.state[index] ? <Icon16Up /> : <Icon16Down />}\r\n                                                    indicator=\"\"\r\n                                                >\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <React.Fragment>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                            {this.connectStatus(this.state.activeMaster.priceList[index].title)}\r\n                                                        </React.Fragment>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    // </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params,\r\n        mastersList: state.mastersList,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MastersCard)","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log('ok');\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos, isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            let imgArr = this.state.images;\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        imgArr.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{\r\n                                        height: 96,\r\n                                        backgroundImage: 'url('+image+')',\r\n                                        backgroundSize: 'cover',\r\n                                        backgroundPosition: 'center 35%',\r\n                                        backgroundRepeat: 'no-repeat',\r\n                                        borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React, {useState, useEffect} from 'react'\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline'\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite'\r\nimport {Div} from \"@vkontakte/vkui\"\r\n\r\nfunction RatingStars(props){\r\n    const [stars, setStars] = useState([])\r\n    const activeStar = <Icon24Favorite width={22} height={22} fill={'ffbb00'} />\r\n    const inactiveStar = <Icon24FavoriteOutline width={22} height={22} fill={'ffbb00'} />\r\n    useEffect(()=>{\r\n        let starsArr = []\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= props.countStars){\r\n                starsArr.push(activeStar)\r\n            } else {\r\n                starsArr.push(inactiveStar)\r\n            }\r\n        }\r\n        setStars(starsArr)\r\n    }, [])\r\n    return (\r\n        <Div style={{display: 'inline-flex', padding: 0}}>\r\n            {\r\n                stars.map(star=> {\r\n                    return star\r\n                })\r\n            }\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default RatingStars","import React from 'react'\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\"\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline'\r\nimport {connect} from \"react-redux\"\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline'\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite'\r\nimport RatingStars from '../elements/items/ratingStars'\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: [],\r\n            onModer: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars()\r\n        // this.props.activeMaster.comments.map(comment => {\r\n        //     if (comment !== null && comment.user === this.props.user._id) {\r\n        //         this.setState({isCommended: true})\r\n        //     }\r\n        // });\r\n        //let count = this.props.activeMaster.comments.length;\r\n        fetch(BACKEND.comment.onMasterId+this.props.activeMaster._id)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ids.includes(this.props.user._id)){\r\n                    this.setState({isCommended: true})\r\n                }\r\n                this.setState({commentsArr: res.comments, countComments: res.comments.length, isLoad: true, onModer: res.onModer})\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = []\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />)\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />)\r\n            }\r\n        }\r\n        this.setState({stars: stars})\r\n    };\r\n\r\n    validCommentText = (text) => {\r\n        return !!(this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length < 101 & this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length > 19)\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера.'\r\n            if (this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите Ваши впечатления подробнее.'\r\n            if (this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length > 100) throw 'Длина отзыва ограничена 100 символами.'\r\n            let comment = {\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body.replace(/(\\r?\\n){2,}/g, '$1'),\r\n                moderation: false,\r\n                params: this.props.params\r\n            }\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST')\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            })\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                // let arr = this.state.commentsArr;\r\n                // data.date = \"Комментарий отправлен на проверку\";\r\n                // arr.push(data);\r\n                if (data.error){\r\n                    console.log(data.error)\r\n                } else {\r\n                    this.setState({isCommended: true, onModer: this.state.onModer +1, snackbar:\r\n                            <Snackbar\r\n                                layout=\"vertical\"\r\n                                onClose={() => this.setState({ snackbar: null })}\r\n                            >\r\n                                Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                            </Snackbar>})\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                if (this.state.snackbar) this.setState({snackbar: null})\r\n                this.setState({ snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({snackbar: null })}\r\n                        >\r\n                            {e.message}\r\n                        </Snackbar>\r\n                })\r\n                })\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate\r\n        } else {\r\n            let date = new Date(comDate)\r\n            let hours = date.getHours()\r\n            if (hours < 10) hours = '0'+hours\r\n            let minutes = date.getMinutes()\r\n            if (minutes < 10) minutes = '0'+minutes\r\n            let date1 = date.getDate()\r\n            if (date1 < 10) date1 = '0'+date1\r\n            let month = date.getMonth()\r\n            if (month < 10) month = '0'+month\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </Div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={<RatingStars countStars={comment.rating}/>}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            })\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray', webkitUserSelect: 'none', userSelect: 'none'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray', webkitUserSelect: 'none', userSelect: 'none'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            status={\r\n                                this.state.body.length > 0 ?\r\n                                this.validCommentText(this.state.body) === true ? 'valid' : 'error' :\r\n                                    null\r\n                            }\r\n                            value={this.state.body}\r\n                            bottom={'Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target\r\n        this.setState({[name]: value})\r\n    };\r\n    render(){\r\n        return (\r\n                <React.Fragment>\r\n                    {\r\n                        this.state.onModer !== 0 ?\r\n                            <Cell indicator={this.state.onModer} before={<Icon24CommentOutline/>}>Отзывов на модерации</Cell> : null\r\n                    }\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps)(MastersComments)","import React from 'react'\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel, Footer, PromoBanner\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {connect} from \"react-redux\"\r\nimport {BACKEND} from \"../func/func\"\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0,\r\n            promo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0,0)\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers})\r\n            })\r\n        bridge.subscribe(e=>{\r\n            if (!e.detail) {\r\n                return\r\n            }\r\n\r\n            const { type, data } = e.detail\r\n\r\n            if (type === 'VKWebAppGetAdsResult') {\r\n                // Reading result of the Code Reader\r\n                this.setState({promo: data})\r\n            }\r\n\r\n        })\r\n        bridge.send(\"VKWebAppGetAds\", {})\r\n            .then(data=>console.log('ads'))\r\n            .catch(e=>console.log(e))\r\n    }\r\n    // countCities: data.countCities, cities: data.cities.sort()\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранное</Button>}\r\n                />\r\n            )\r\n        } else {\r\n            return <Footer />\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        const data = {\r\n            user_id: this.props.user.vkUid,\r\n            params: this.props.params\r\n        }\r\n        fetch(BACKEND.vkapi.isMember,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ingroup === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {this.props.master === null &&\r\n                    <Cell\r\n                        style={{borderRadius: '0 0 10px 10px'}}\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если Вы — мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <React.Fragment>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        {/*<Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>*/}\r\n                        {/*<Cell multiline>*/}\r\n                        {/*    {*/}\r\n                        {/*        this.state.cities &&*/}\r\n                        {/*        this.state.cities.map((city, index)=>{*/}\r\n                        {/*            if (index + 1 !== this.state.cities.length){*/}\r\n                        {/*                return city+', '*/}\r\n                        {/*            } else {*/}\r\n                        {/*                return city*/}\r\n                        {/*            }*/}\r\n                        {/*        })*/}\r\n                        {/*    }*/}\r\n                        {/*</Cell>*/}\r\n                    </React.Fragment>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                    <Group>\r\n                        <Placeholder\r\n                            icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                            header=\"Привет!\"\r\n                        >\r\n                            У нас можно найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                        </Placeholder>\r\n                        {this.userInfo(user)}\r\n                        {this.nowCounter()}\r\n                        {this.isMember()}\r\n                        {this.favApp()}\r\n                        {/*{this.feedList()}*/}\r\n                        {/*<FixedLayout*/}\r\n                        {/*    vertical=\"bottom\"*/}\r\n                        {/*    style={{marginBottom: 5}}*/}\r\n                        {/*>*/}\r\n                        {/*    */}\r\n                        {/*</FixedLayout>*/}\r\n                        {\r\n                            this.state.promo !== null ?\r\n                                <Card size=\"l\" mode=\"shadow\">\r\n                                    <PromoBanner bannerData={ this.state.promo } />\r\n                                </Card> :\r\n                                null\r\n                        }\r\n                    </Group>\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News)","import React from 'react'\r\nimport {\r\n    Alert,\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardGrid,\r\n    Cell,\r\n    CellButton,\r\n    Checkbox,\r\n    Div,\r\n    Footer,\r\n    FormLayout,\r\n    FormLayoutGroup,\r\n    Group,\r\n    Input,\r\n    Link,\r\n    List,\r\n    Select,\r\n    Switch,\r\n    Textarea\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\"\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {changeTargetCity, regSetInvite} from \"../store/actions\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add'\r\nimport {connect} from \"react-redux\"\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down'\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up'\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: [],\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            qapi: false,\r\n            type: 'Частный мастер',\r\n            brand: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        this.permMessage()\r\n        if (this.props.regSet !== null) {\r\n            this.setState({\r\n                checkLicense: this.props.regSet.checkLicense,\r\n                description: this.props.regSet.description,\r\n                priceList: this.props.regSet.priceList,\r\n                type: this.props.regSet.type,\r\n                categories: this.props.regSet.categories,\r\n                brand: this.props.regSet.brand\r\n            })\r\n        } else {\r\n            this.getCategories()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const data = {}\r\n        data.checkLicense = this.state.checkLicense\r\n        data.description = this.state.description\r\n        data.priceList = this.state.priceList\r\n        data.type = this.state.type\r\n        data.categories = this.state.categories\r\n        data.brand = this.state.brand\r\n        this.props.regSetInvite(data)\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.props.setAlert(\r\n            <Alert\r\n                actionsLayout=\"vertical\"\r\n                actions={[{\r\n                    title: 'Удалить процедуру',\r\n                    autoclose: true,\r\n                    mode: 'destructive',\r\n                    action: () => this.onRemove(index),\r\n                }, {\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    mode: 'cancel'\r\n                }]}\r\n                onClose={() => this.props.setAlert(null)}\r\n            >\r\n                <h2>Подтвердите действие</h2>\r\n                <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n            </Alert>\r\n        )\r\n    };\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories})\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false})\r\n                })\r\n            })\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.state.type === 'Частный мастер') this.setState({brand: ''})\r\n            if (this.props.targetCity === 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.'\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20-ти символов.'\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать менее 200 символов.'\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.'\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.'\r\n            if (this.state.brand !== \"\") {\r\n                if (this.state.brand.length > 25) throw 'Длина названия организации ограничена 25 символами.'\r\n            }\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.'\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            }\r\n            let categories = this.state.categories\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function (subcat) {\r\n                        if (subcat.active === true) {\r\n                            cat.subcat.push(subcat._id)\r\n                            return subcat.active\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                )\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label})\r\n                    category.active = true\r\n                } else {\r\n                    category.active = false\r\n                }\r\n            })\r\n            let master = {\r\n                description: this.state.description,\r\n                type: this.state.type,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                priceList: this.state.priceList,\r\n                params: this.props.params\r\n            }\r\n            this.props.closeReg(master)\r\n        } catch (error) {\r\n            console.log(error)\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    validateNewProdTitle(newProdTitle) {\r\n        if (newProdTitle === undefined) {\r\n            return {status: false, error: 'Не заполнено название процедуры.'}\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20) {\r\n                return {status: false, error: 'Недопустимая длина заголовка.'}\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2) {\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'}\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody) {\r\n        if (newProdBody === undefined) {\r\n            return {status: false, error: 'Не заполнено описание процедуры.'}\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250) {\r\n                return {status: false, error: 'Недопустимая длина описания.'}\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5) {\r\n                    return {status: false, error: 'Недопустимая длина описания.'}\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice) {\r\n        if (newProdPrice === undefined) {\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'}\r\n        } else {\r\n            if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').trim().length > 5) {\r\n                return {\r\n                    status: false,\r\n                    error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'\r\n                }\r\n            } else {\r\n                if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').trim().length < 1) {\r\n                    return {\r\n                        status: false,\r\n                        error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'\r\n                    }\r\n                } else {\r\n                    if (Number(newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')) < 0) {\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'}\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle)\r\n            if (!title.status) throw title.error\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody)\r\n            if (!body.status) throw body.error\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice)\r\n            if (!price.status) throw price.error\r\n\r\n            let priceList = this.state.priceList\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice.replace(/^0+/, ''))\r\n            })\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''})\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)]\r\n        this.setState({priceList: priceList})\r\n    };\r\n    permMessage = () => {\r\n        bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                this.setState({statusMessage: result.result})\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target\r\n        const indexCat = target.name\r\n        const indexSubcat = target.id\r\n        let categories = this.state.categories\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active\r\n        this.setState({categories: categories})\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function (item) {\r\n                if (item.active === true) {\r\n                    return item.active\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        )\r\n        return countMass.length\r\n    };\r\n\r\n    handleChange(event) {\r\n        let {name, value} = event.target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Group>\r\n                <Group>\r\n                    <CardGrid>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={this.props.changeCity}\r\n                                indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                            >\r\n                                Ваш город\r\n                            </Cell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                    {\r\n                        this.state.statusMessage === false ?\r\n                            <Cell\r\n                                multiline\r\n                                asideContent={<Button mode=\"outline\" onClick={this.permMessage}>Разрешить</Button>}\r\n                                bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                            >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                            </Cell> :\r\n                            null\r\n                        // <Cell\r\n                        //     multiline\r\n                        //     asideContent={<Button mode=\"commerce\">Разрешён</Button>}\r\n                        //     bottom={'Можете продолжить регистрацию'}\r\n                        // >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                        // </Cell>\r\n                    }\r\n                </Group>\r\n                <FormLayout>\r\n                    <Textarea\r\n                        name={'description'}\r\n                        bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                        top=\"О себе\"\r\n                        status={\r\n                            this.state.description.replace(/ +/g, ' ').trim().length > 0 ?\r\n                                this.state.description.replace(/ +/g, ' ').trim().length > 19 && this.state.description.replace(/ +/g, ' ').trim().length < 201 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        value={this.state.description}\r\n                        onChange={this.handleChange}/>\r\n                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                     bottom=\"Укажите вид работы, в соответствии с тем, что Вы выполняете. Так Вас будет проще найти.\"\r\n                                     id={'category'}>\r\n                        {\r\n                            this.state.categories.map((category, i) => {\r\n                                return (\r\n                                    <Group key={category._id}>\r\n                                        <Cell name={category._id}\r\n                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                              indicator={\r\n                                                  'Выбрано: ' + this.counter(i)\r\n                                              }\r\n                                              asideContent={this.state[category._id] ? <Icon16Up/> : <Icon16Down/>}\r\n                                        >\r\n                                            {category.label}\r\n                                        </Cell>\r\n                                        {this.state[category._id] &&\r\n                                        <Div>\r\n                                            {\r\n                                                category.subcat.map((subcategory, index, category) => {\r\n                                                    return (\r\n                                                        <Cell\r\n                                                            key={index}\r\n                                                            asideContent={\r\n                                                                <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                            }>\r\n                                                            {subcategory.label}\r\n                                                        </Cell>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </Div>\r\n                                        }\r\n                                    </Group>\r\n                                )\r\n                            })\r\n                        }\r\n                    </FormLayoutGroup>\r\n                </FormLayout>\r\n                <Group title={'Прайс-лист'}>\r\n                    {this.state.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут\r\n                        связаться с Вами.</Cell>\r\n                    }\r\n                    <CardGrid>\r\n                        {this.state.priceList.map((item, index) => (\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell\r\n                                    key={item}\r\n                                    multiline\r\n                                    // removable\r\n                                    // onRemove={() => {\r\n                                    //     this.onRemove(index)\r\n                                    // }}\r\n                                >\r\n                                    <Cell\r\n                                        description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                    <Cell description=\"Краткое описание процедуры\"\r\n                                          multiline>{this.state.priceList[index].body}</Cell>\r\n                                    <Cell\r\n                                        description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                    <Button\r\n                                        //before={<Icon24Dismiss/>}\r\n                                        onClick={() => {\r\n                                            this.deleteProcedure(index)\r\n                                        }}\r\n                                        size=\"xl\"\r\n                                        mode=\"destructive\"\r\n                                    >Удалить</Button>\r\n                                </Cell>\r\n                            </Card>\r\n                        ))}\r\n                    </CardGrid>\r\n                    {this.state.add ?\r\n                        <Div>\r\n                            <Cell description=\"Добавления нового элемента\" multiline>\r\n                                <List>\r\n                                    <Cell\r\n                                        description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length + \"/20\"}>\r\n                                        <Input\r\n                                            require\r\n                                            status={\r\n                                                this.state.newProdTitle.length > 0 ?\r\n                                                    this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error' :\r\n                                                    null\r\n                                            }\r\n                                            name=\"newProdTitle\"\r\n                                            type=\"text\"\r\n                                            value={this.state.newProdTitle}\r\n                                            placeholder={'Введите название'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        description={this.state.newProdBody.replace(/ +/g, ' ').trim().length + \"/250\"}>\r\n                                        <Textarea\r\n                                            require\r\n                                            status={\r\n                                                this.state.newProdBody.length > 0 ?\r\n                                                    this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error' :\r\n                                                    null\r\n                                            }\r\n                                            name=\"newProdBody\"\r\n                                            value={this.state.newProdBody}\r\n                                            placeholder={'Укажите описание'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                    <Cell\r\n                                        description={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').trim().length + \"/5\"}>\r\n                                        <Input\r\n                                            require\r\n                                            status={\r\n                                                this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '').length > 0 ?\r\n                                                    this.validateNewProdPrice(this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')).status ? 'valid' : 'error' :\r\n                                                    null\r\n                                            }\r\n                                            name=\"newProdPrice\"\r\n                                            type=\"number\"\r\n                                            value={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/^0+/, '')}\r\n                                            placeholder={'Укажите цену'}\r\n                                            onChange={this.handleChange}/>\r\n                                    </Cell>\r\n                                </List>\r\n                            </Cell>\r\n                            <Div style={{display: 'flex'}}>\r\n                                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                        onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                <Button size=\"l\" stretched mode=\"destructive\"\r\n                                        onClick={() => this.addProd(false)}>Отменить</Button>\r\n                            </Div>\r\n                        </Div> :\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    }\r\n                </Group>\r\n                <FormLayout>\r\n                    <Select\r\n                        name={'type'}\r\n                        top=\"Выберите тип оказания услуг\"\r\n                        value={this.state.type}\r\n                        bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <option value=\"Частный мастер\">Частный мастер</option>\r\n                        <option value=\"Организация\">Организация</option>\r\n                    </Select>\r\n                    {\r\n                        this.state.type === 'Организация' &&\r\n                        <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                            <Input\r\n                                name={'brand'}\r\n                                type=\"text\"\r\n                                status={\r\n                                    this.state.brand.length > 0 ?\r\n                                        this.state.brand.length < 26 ? 'valid' : 'error' :\r\n                                        null\r\n                                }\r\n                                value={this.state.brand}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormLayoutGroup>\r\n                    }\r\n                    <Checkbox checked={this.state.checkLicense}\r\n                              onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                        c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                    <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                </FormLayout>\r\n                <Footer/>\r\n            </Group>\r\n        )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params,\r\n        regSet: state.regSet\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        regSetInvite: bindActionCreators(regSetInvite, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite)","import React from 'react'\r\nimport {\r\n    Div,\r\n    Separator,\r\n    CellButton,\r\n    Avatar,\r\n    Cell,\r\n    List,\r\n    Group,\r\n    Banner,\r\n    Button,\r\n    Card,\r\n    CardGrid,\r\n    RichCell,\r\n    Caption, PromoBanner, FixedLayout\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story'\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like'\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search'\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {connect} from \"react-redux\"\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline'\r\nimport Icon24StoryOutline from '@vkontakte/icons/dist/24/story_outline';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            connection: false,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0,\r\n            promo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.subscribe(e=>{\r\n            if (!e.detail) {\r\n                return\r\n            }\r\n\r\n            const { type, data } = e.detail\r\n\r\n            if (type === 'VKWebAppGetAdsResult') {\r\n                this.setState({promo: data})\r\n            }\r\n\r\n            if (type === 'VKWebAppGetAdsFailed') {\r\n                // Reading result of the Code Reader\r\n                console.log(data.error_data)\r\n                //this.setState({promo: data.error_data})\r\n            }\r\n        })\r\n        bridge.send(\"VKWebAppGetAds\", {})\r\n            .then(data=>console.log('Ads'))\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n    wallPost = () => {\r\n        let prodsArr = this.props.master.priceList.map(prod=>{\r\n                return '&#9989;' + prod.title + '\\n'\r\n        })\r\n        let prods = prodsArr.join('')\r\n        bridge.send(\"VKWebAppShowWallPostBox\", {\r\n            \"attachments\": [\r\n                \"https://vk.com/app7170938#masterid=\"+this.props.master._id\r\n            ],\r\n            \"message\": \"&#128522; Приглашаю записаться на: \\n\" + prods + \"по специальным условиям в приложении Навигатор красоты. \\n\"+\r\n                \"https://vk.com/app7170938#masterid=\"+this.props.master._id,\r\n            \"owner_id\": this.props.master.vkUid,\r\n            \"copyright\": \"https://vk.com/app7170938\"\r\n        })\r\n    }\r\n\r\n    storiesPost = () => {\r\n        bridge.send(\"VKWebAppShowStoryBox\", {\r\n            \"background_type\" : \"image\",\r\n            \"url\" : \"https://sun9-76.userapi.com/9CA7Ap-SWJm-bdeu9OWh1iXJP5BkaSbtx3zfKA/jcRS6sqPaP0.jpg\",\r\n            \"locked\": true,\r\n            \"attachment\": {\r\n                \"text\": \"view\",\r\n                \"type\": \"url\",\r\n                \"url\": \"https://vk.com/app7170938#masterid=\"+this.props.master._id\r\n            },\r\n            \"stickers\": [\r\n                {\r\n                    \"sticker_type\": \"renderable\",\r\n                    \"sticker\": {\r\n                        \"transform\": {\r\n                            \"relation_width\": 0.9,\r\n                            \"translation_y\": 0.25\r\n                        },\r\n                        \"can_delete\": 0,\r\n                        \"content_type\": \"image\",\r\n                        \"url\": \"https://sun9-11.userapi.com/W7ljJxZlpaMD9EPafPeujRRV61xv7evo4P3DrA/f1HJkZgc7W0.jpg\",\r\n                        \"clickable_zones\": [\r\n                            {\r\n                                // \"action_type\": \"app\",\r\n                                \"action_type\": \"link\",\r\n                                \"action\": {\r\n                                    \"link\": \"https://vk.com/app7170938#masterid=\"+this.props.master._id,\r\n                                    \"tooltip_text_key\": \"tooltip_open_page\"\r\n                                },\r\n                                // \"action\": {\r\n                                //     \"app_id\": 7170938,\r\n                                //     \"app_context\": \"#masterid=\"+this.props.master._id\r\n                                // },\r\n                                \"clickable_area\": [\r\n                                    {\r\n                                        \"x\": 0,\r\n                                        \"y\": 0\r\n                                    },\r\n                                    {\r\n                                        \"x\": 884,\r\n                                        \"y\": 0\r\n                                    },\r\n                                    {\r\n                                        \"x\": 884,\r\n                                        \"y\": 196\r\n                                    },\r\n                                    {\r\n                                        \"x\": 0,\r\n                                        \"y\": 196\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                }]\r\n        })\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            if (this.props.master.moderation.reasons.length > 0) {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size=\"xl\">\r\n                            <Cell description={'Их необходимо исправить'}>При модерации обнаружены ошибки:</Cell>\r\n                            {\r\n                                this.props.master.moderation.reasons.map((reason, index)=>{\r\n                                    return <Cell key={index}>{reason}</Cell>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size=\"xl\">\r\n                            <Cell multiline>Ваш профиль на проверке. В течение суток он будет доступен в поиске.</Cell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log('ok')) // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data))\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Group separator={'hide'}>\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar src={this.props.user.avatarLink} size={62}/>}\r\n                                text={\r\n                                    <Caption level=\"2\" weight=\"regular\" style={{ marginBottom: 15 }}>\r\n                                        {this.props.master ? this.props.master.type : 'Пользователь'}\r\n                                    </Caption>\r\n                                }\r\n                                caption={this.props.master && this.props.master.location.city.title}\r\n                                after={this.props.master !== null && <Icon24Write onClick={this.props.openSetting}/>}\r\n                            >\r\n                                {this.props.user.firstname+' '+this.props.user.lastname}\r\n                            </RichCell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                </Group>\r\n                {this.props.master !== null && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.props.master !== null &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                        <Cell\r\n                            before={<Icon24ShareOutline />}\r\n                            onClick={()=>this.wallPost()}\r\n                        >Больше просмотров</Cell>\r\n                        <Cell\r\n                            before={<Icon24StoryOutline />}\r\n                            onClick={()=>this.storiesPost()}\r\n                        >Разместить в истории</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n                {/*{*/}\r\n                {/*    this.state.promo !== null ?*/}\r\n                {/*        <FixedLayout vertical=\"bottom\">*/}\r\n                {/*            <PromoBanner onClose={() => this.setState({promo: null})} bannerData={ this.state.promo } />*/}\r\n                {/*        </FixedLayout>*/}\r\n                {/*            :*/}\r\n                {/*        null*/}\r\n                {/*}*/}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Lk)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    File,\r\n    FormLayout,\r\n    CardGrid,\r\n    Card,\r\n    Snackbar,\r\n    Cell,\r\n    PanelSpinner,\r\n    Spinner,\r\n    CellButton, Alert\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24Gallery from '@vkontakte/icons/dist/24/gallery';\r\nimport Icon24Delete from '@vkontakte/icons/dist/24/delete';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon28WriteSquareOutline from '@vkontakte/icons/dist/28/write_square_outline';\r\n\r\nclass Portfolio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: [],\r\n            deleteMode: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.setState({images: this.props.master.photos, isLoad: true});\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(result => {\r\n                if (result.access_token) {\r\n                    this.setState({token: result.access_token, images: this.props.master.photos, isLoad: true})\r\n                } else {\r\n                    this.setState({images: this.props.master.photos, isLoad: true});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.setState({images: this.props.master.photos, isLoad: true});\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    openSnack(text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log('ok'));\r\n    }\r\n\r\n    deletePhoto = (link) => {\r\n        this.props.setAlert(\r\n            <Alert\r\n                actionsLayout=\"vertical\"\r\n                actions={[{\r\n                    title: 'Удалить фотографию',\r\n                    autoclose: true,\r\n                    mode: 'destructive',\r\n                    action: () => setTimeout(this.delete(link), 500),\r\n                }, {\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    mode: 'cancel'\r\n                }]}\r\n                onClose={()=>this.props.setAlert(null)}\r\n            >\r\n                <h2>Подтвердите действие</h2>\r\n                <p>Вы уверены, что хотите удалить выбранную фотографию?</p>\r\n            </Alert>\r\n        );\r\n    }\r\n\r\n    delete = (link) => {\r\n        this.setState({loading: true});\r\n        fetch(BACKEND.vkapi.delPhoto, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify({params: this.props.params, photo: link}), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success'){\r\n                    if (res.master.photos.length === 0) this.setState({deleteMode: false});\r\n                    this.setState({images: res.master.photos, loading: false});\r\n                    this.props.setMaster(res.master)\r\n                    this.props.setAlert(null)\r\n                }\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n     async getAlbum() {\r\n         const user_albums = encodeURI('https://api.vk.com/method/photos.getAlbums?owner_id='+this.props.params.vk_user_id+'&access_token='+this.state.token+'&v=5.103');\r\n         let album_id = null;\r\n         await fetchJsonp(user_albums)\r\n             .then(res=>res.json())\r\n             .then(res=>{\r\n                 if (res.response){\r\n                     res.response.items.map(album=>{\r\n                         if(album.title === \"Навигатор красоты\") {\r\n                             album_id = album.id\r\n                         }\r\n                     })\r\n                 }\r\n             })\r\n             .catch(e=>console.log(e));\r\n         if (album_id === null) {\r\n             console.log('Не получили ИД альбома. Создаем.');\r\n             return {status: 'none'}\r\n         } else {\r\n             console.log('Получили альбом ИД -',album_id);\r\n             return {status: true, album_id: album_id}\r\n         }\r\n    };\r\n\r\n\r\n    uploadPhoto = async () => {\r\n        try {\r\n            if (this.state.token === undefined) throw 'Ошибка. Не получен токен пользователя.';\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            if (!selectedFile.type.match('image.*')) throw 'Допустимо загружать только изображения.';\r\n            let getAlbum = await this.getAlbum();\r\n            if (getAlbum.status === false) throw 'Не получен альбом для загрузки.';\r\n            let album;\r\n            if (getAlbum.status === 'none') {\r\n                //создаем\r\n                const create_album = encodeURI('https://api.vk.com/method/photos.createAlbum?title=Навигатор красоты&access_token=' + this.state.token + '&v=5.103');\r\n                await fetchJsonp(create_album)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        console.log('Создали альбом в ИД ', res.response.id);\r\n                        album = res.response.id;\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            } else {\r\n                album = getAlbum.album_id;\r\n            }\r\n\r\n            const uploadServer = await this.getUploadServer(this.state.token, album);\r\n\r\n            if (uploadServer.status === false) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n            //if (this.state.uploadUrl === undefined) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            formData.append('master', this.props.master.firstname + ' ' + this.props.master.lastname);\r\n            formData.append('uploadUrl', uploadServer.url);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            formData.append('masterId', this.props.master._id);\r\n            console.log('Начинаю отправку фото.');\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        this.setState({loading: false});\r\n                        this.openSnack(res.error);\r\n                    } else {\r\n                        console.log('photo.save', res);\r\n                        fetchJsonp(res.saveUrl, {\r\n                            mode: 'no-cors',\r\n                            method: 'GET'\r\n                        })\r\n                            .then(result => result.json())\r\n                            .then(result => {\r\n                                if (result.error) {\r\n                                    this.setState({loading: false});\r\n                                    this.openSnack('При загрузке фото возникла ошибка.');\r\n                                } else {\r\n                                    console.log('Сохраненное фото: ',result);\r\n                                    let savePh = {\r\n                                        url: result.response[0].sizes[4].url,\r\n                                        params: this.props.params\r\n                                    };\r\n                                    fetch(BACKEND.vkapi.savePhoto, {\r\n                                        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                                        mode: 'cors', // no-cors, cors, *same-origin\r\n                                        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                        credentials: 'same-origin', // include, *same-origin, omit\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json',\r\n                                        },\r\n                                        redirect: 'follow', // manual, *follow, error\r\n                                        referrer: 'no-referrer', // no-referrer, *client\r\n                                        body: JSON.stringify(savePh)\r\n                                    })\r\n                                        .then(res => res.json())\r\n                                        .then(res => {\r\n                                            if (res.error) {\r\n                                                this.setState({loading: false});\r\n                                                this.openSnack(res.error);\r\n                                            } else {\r\n                                                let imgArr = this.state.images;\r\n                                                imgArr.unshift(res.img);\r\n                                                this.openSnack('Фото успешно загружено.');\r\n                                                this.setState({images: imgArr, loading: false});\r\n                                            }\r\n                                        })\r\n                                        .catch(e => {\r\n                                            this.setState({loading: false});\r\n                                            console.log(e)\r\n                                        })\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                this.setState({loading: false});\r\n                                console.log(e)\r\n                            })\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.setState({loading: false});\r\n                    this.openSnack('Ошибка при загрузке.');\r\n                })\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.openSnack('Какая-то ошибка. Попробуем еще разок?');\r\n        }\r\n\r\n    };\r\n\r\n    getUploadServer = async (token, album) => {\r\n        return await bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"album_id\": album, \"v\": \"5.103\", \"access_token\": token}\r\n        })\r\n            .then(result => {\r\n                console.log('Получили сервер для загрузки',result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url});\r\n                return {status: true, url: result.response.upload_url};\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                return {status: false}\r\n            })\r\n\r\n    };\r\n\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(result => {\r\n                if (result.access_token) {\r\n                    this.setState({token: result.access_token})\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={\r\n                                        this.state.deleteMode ?\r\n                                            () => this.deletePhoto(image) :\r\n                                            () => this.openShowImages(this.state.images, index)\r\n                                    }\r\n                                >\r\n                                    <div style={{\r\n                                        height: 96,\r\n                                        backgroundImage: 'url(' + image + ')',\r\n                                        backgroundSize: 'cover',\r\n                                        backgroundPosition: 'center 35%',\r\n                                        backgroundRepeat: 'no-repeat',\r\n                                        borderRadius: 13\r\n                                    }}>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.deleteMode ?\r\n                                            <div style={{color: 'red', textAlign: 'center'}}>Удалить</div> :\r\n                                            null\r\n                                    }\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В Вашем портфолио нет фотографий.</Cell>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                    {\r\n                        this.state.loading ? <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}><Cell multiline>Подождите немного...</Cell><PanelSpinner/></Div> : <Group title=\"\">\r\n                            <FormLayout>\r\n                                {\r\n                                    this.state.token ?\r\n                                        <React.Fragment>\r\n                                            <File\r\n                                                accept=\"image/*\"\r\n                                                top=\"Добавьте фото в портфолио\"\r\n                                                before={<Icon24Camera/>}\r\n                                                size=\"l\"\r\n                                                onChange={this.uploadPhoto}\r\n                                                //onClick={this.getToken}\r\n                                                id=\"input\"\r\n                                            >\r\n                                                Открыть галерею\r\n                                            </File>\r\n                                            {\r\n                                                this.state.images.length > 0 ?\r\n                                                    this.state.deleteMode === false ?\r\n                                                        <CellButton onClick={() => this.setState({deleteMode: true})} before={<Icon28WriteSquareOutline/>}>Редактировать</CellButton> :\r\n                                                        <CellButton onClick={() => this.setState({deleteMode: false})} before={<Icon28WriteSquareOutline/>}>Завершить редактирование</CellButton>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                        </React.Fragment>\r\n                                        :\r\n                                        <React.Fragment>\r\n                                            <CellButton onClick={() => this.getToken()} before={<Icon24Gallery/>}>Разрешить\r\n                                                доступ к фото</CellButton>\r\n                                        </React.Fragment>\r\n\r\n                                }\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Portfolio);","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const data = {\r\n            search: this.state.search.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react'\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    List,\r\n    Alert,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar, Placeholder, Spinner, Select\r\n} from \"@vkontakte/vkui\"\r\nimport '@vkontakte/vkui/dist/vkui.css'\r\nimport {BACKEND} from '../func/func'\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add'\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done'\r\nimport CityListModal from \"../elements/cityListModal\"\r\nimport {connect} from \"react-redux\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {setMaster} from \"../store/actions\"\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss'\r\nimport Head from \"../elements/panelHeader\"\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down'\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up'\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write'\r\nimport HeadCity from \"../elements/headCity\"\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline'\r\n\r\nconst osname = platform()\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null,\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            editProdTitle: '',\r\n            editProdBody: '',\r\n            editProdPrice: '',\r\n            isChange: false,\r\n            type: 'Частный мастер',\r\n            brand: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            if (this.props.master.brand !== null) this.setState({brand: this.props.master.brand})\r\n            this.setState({master: this.props.master, description: this.props.master.description, type: this.props.master.type})\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories})\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false})\r\n                    })\r\n                    this.setActive( this.props.master.categories.subcat)\r\n                })\r\n                .catch(e=>{\r\n                    this.setState({warnConnection: true})\r\n                })\r\n            if (this.props.master.changed)this.setState({isChange: true})\r\n        }\r\n        // window.onpopstate = () => {\r\n        //     try{\r\n        //         if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.';\r\n        //         if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.';\r\n        //         if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.';\r\n        //         this.props.goBack('lk')\r\n        //     }catch(e){\r\n        //         this.props.snackbarDismiss(e)\r\n        //     }\r\n        // };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveChanges()\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            let master = this.state.master\r\n            master.location.city = this.props.targetCity\r\n            this.setState({master: master})\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        try{\r\n            if (this.state.type === 'Частный мастер') this.setState({brand: ''})\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.'\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.'\r\n            if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.'\r\n            if (this.state.brand !== \"\") {\r\n                if (this.state.brand.length > 25) throw 'Длина названия организации ограничена 25 символами.'\r\n            }\r\n              if (this.state.isChange === true){\r\n                  let master = this.state.master\r\n                  master.type = this.state.type\r\n                  master.brand = this.state.brand\r\n                  master.params = this.props.params\r\n                  this.patchData(BACKEND.masters.all + this.state.master._id, master)\r\n                  this.props.setMaster(this.state.master)\r\n              }\r\n        }catch(e){\r\n            this.props.snackbarDismiss(e)\r\n        }\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false})\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true\r\n                    }\r\n                })\r\n            })\r\n            this.setState({isLoad: true})\r\n        }\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.setState({isChange: true})\r\n        this.props.setAlert(\r\n                    <Alert\r\n                        actionsLayout=\"vertical\"\r\n                        actions={[{\r\n                            title: 'Удалить процедуру',\r\n                            autoclose: true,\r\n                            mode: 'destructive',\r\n                            action: () => this.onRemove(index),\r\n                        }, {\r\n                            title: 'Отмена',\r\n                            autoclose: true,\r\n                            mode: 'cancel'\r\n                        }]}\r\n                        onClose={()=>this.props.setAlert(null)}\r\n                    >\r\n                        <h2>Подтвердите действие</h2>\r\n                        <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n                    </Alert>\r\n        )\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n        this.setState({isChange: true})\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        console.log(activeMaster)\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length\r\n            category.active = count > 0\r\n        })\r\n        activeMaster.description = this.state.description\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        }\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id)\r\n                    }\r\n                })\r\n        })\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log('Сохранено')\r\n                console.log(res)\r\n                this.props.setMaster(res.master)\r\n                //this.props.snackbar('Изменения сохранены.');\r\n            })\r\n            .catch(e=>console.log(e.message))\r\n    }\r\n\r\n    saveEdit = (index) => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.editProdTitle)\r\n            if (!title.status) throw title.error\r\n\r\n            let body = this.validateNewProdBody(this.state.editProdBody)\r\n            if (!body.status) throw body.error\r\n\r\n            let price = this.validateNewProdPrice(this.state.editProdPrice)\r\n            if (!price.status) throw price.error\r\n\r\n\r\n            const editProd = {\r\n                title: this.state.editProdTitle,\r\n                body: this.state.editProdBody,\r\n                price: Number(this.state.editProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, ''))\r\n            }\r\n\r\n            let master = this.state.master\r\n            master.priceList.splice(index, 1, editProd)\r\n            this.setState({master: master, editProdTitle: '', editProdBody: '', editProdPrice: '', edit: null})\r\n            this.setState({isChange: true})\r\n        } catch (error) {\r\n            this.props.snackbarDismiss(error)\r\n        }\r\n    };\r\n\r\n    visible = event => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let master = this.state.master\r\n        master[name] = !master[name]\r\n        this.setState({master: master})\r\n        this.props.setMaster(master)\r\n        this.setState({isChange: true})\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)]\r\n        this.setState({master: master})\r\n        this.setState({isChange: true})\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null})\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null})\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    validateNewProdTitle(newProdTitle){\r\n        if (newProdTitle === undefined){\r\n            return {status: false, error: 'Не заполнено название процедуры.'}\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20){\r\n                return {status: false, error: 'Недопустимая длина заголовка.'}\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2){\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'}\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody){\r\n        if (newProdBody === undefined){\r\n            return {status: false, error: 'Не заполнено описание процедуры.'}\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250){\r\n                return {status: false, error: 'Недопустимая длина описания.'}\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5){\r\n                    return {status: false, error: 'Недопустимая длина описания.'}\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice){\r\n        if (newProdPrice === undefined){\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'}\r\n        } else {\r\n            if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').trim().length > 5){\r\n                return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'}\r\n            } else {\r\n                if (newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').trim().length < 1){\r\n                    return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'}\r\n                } else {\r\n                    if (Number(newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.\\/,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')) < 0){\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'}\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle)\r\n            if (!title.status) throw title.error\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody)\r\n            if (!body.status) throw body.error\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice)\r\n            if (!price.status) throw price.error\r\n\r\n            let master = this.state.master\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, ''))\r\n            })\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''})\r\n            this.setState({isChange: true})\r\n        } catch (error) {\r\n            this.props.snackbarDismiss(error)\r\n            //this.openSnackDismiss(error)\r\n        }\r\n    };\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(subcat=> {\r\n            if (subcat.active === true) {\r\n                return subcat.label\r\n            }\r\n        })\r\n        return countMass.length\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target\r\n        const indexCat = target.name\r\n        const indexSubcat = target.id\r\n        let categories = this.state.categories\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active\r\n        this.setState({categories: categories})\r\n    };\r\n    //\r\n    // changeCity = (city) => {\r\n    //     console.log(city)\r\n    //     let master = this.state.master;\r\n    //     master.location.city = city;\r\n    //     this.props.setMaster(master);\r\n    //     this.props.goBack();\r\n    //     this.setState({isChange: true});\r\n    //     //this.props.changeModal('setting');\r\n    // };\r\n\r\n    statusProfile = () => {\r\n        if (this.state.master.moderation.status === false){\r\n            return 'На модерации'\r\n        } else if (this.state.master.visible === false){\r\n            return 'Ваш профиль не выводится в поиске'\r\n        } else {\r\n            return 'Ваш профиль доступен в поиске'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.warnConnection){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56WifiOutline />}\r\n                        header={'Что-то не так!'}\r\n                        //action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить</Button>}\r\n                    >\r\n                        Проверьте интернет-соединение.\r\n                    </Placeholder>\r\n                </React.Fragment>\r\n            )\r\n        } else if(this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title=\"Настройки\"\r\n                        goBack={()=>this.props.goBack('lk')}\r\n                    />\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Spinner size=\"large\" style={{ marginTop: 20 }} />}\r\n                        header={'Загружаю...'}\r\n                    ></Placeholder>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title=\"Настройки\"\r\n                            goBack={() => {\r\n                                try{\r\n                                    if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.'\r\n                                    if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.'\r\n                                    if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.'\r\n                                    this.props.goBack('lk')\r\n                                }catch(e){\r\n                                    this.props.snackbarDismiss(e)\r\n                                }\r\n                            }}\r\n                        />\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={this.statusProfile()}\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => {\r\n                                        try{\r\n                                            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.'\r\n                                            if (this.state.description.replace(/ +/g, ' ').trim().length > 201) throw 'Блок \"О себе\" должен содержать не более 200 символов.'\r\n                                            if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.'\r\n                                            this.props.changeCity()\r\n                                        }catch(e){\r\n                                            this.props.snackbarDismiss(e)\r\n                                        }\r\n                                        }\r\n                                    }\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\" key={index}>\r\n                                                <Cell multiline>\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">\r\n                                                        {\r\n                                                            this.state.edit === index ?\r\n                                                                <Input\r\n                                                                    name=\"editProdTitle\"\r\n                                                                    onChange={this.handleChange}\r\n                                                                    defaultValue={this.state.master.priceList[index].title}\r\n                                                                    value={this.state.editProdTitle}\r\n                                                                    status={this.validateNewProdTitle(this.state.editProdTitle).status === true ? 'valid' : 'error'}\r\n                                                                /> :\r\n                                                                this.state.master.priceList[index].title\r\n                                                        }\r\n                                                    </Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>\r\n                                                        {\r\n                                                            this.state.edit === index ?\r\n                                                                <Input\r\n                                                                    name=\"editProdBody\"\r\n                                                                    onChange={this.handleChange}\r\n                                                                    defaultValue={this.state.master.priceList[index].body}\r\n                                                                    value={this.state.editProdBody}\r\n                                                                    status={this.validateNewProdBody(this.state.editProdBody).status ? 'valid' : 'error'}\r\n                                                                /> :\r\n                                                                this.state.master.priceList[index].body\r\n                                                        }\r\n                                                    </Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">\r\n                                                        {\r\n                                                            this.state.edit === index ?\r\n                                                                <Input\r\n                                                                    name=\"editProdPrice\"\r\n                                                                    type=\"number\"\r\n                                                                    onChange={this.handleChange}\r\n                                                                    defaultValue={this.state.master.priceList[index].price}\r\n                                                                    value={this.state.editProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')}\r\n                                                                    status={this.validateNewProdPrice(this.state.editProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')).status ? 'valid' : 'error'}\r\n                                                                /> :\r\n                                                                this.state.master.priceList[index].price\r\n                                                        }\r\n                                                    </Cell>\r\n                                                    {\r\n                                                        this.state.edit === index ?\r\n                                                            <Div style={{display: 'flex'}}>\r\n                                                                <Button\r\n                                                                    stretched\r\n                                                                    //before={<Icon24Dismiss/>}\r\n                                                                    style={{ marginRight: 8 }}\r\n                                                                    onClick={() => this.setState({edit: null})}\r\n                                                                    size=\"l\"\r\n                                                                    mode=\"destructive\"\r\n                                                                >Отменить</Button>\r\n                                                                <Button\r\n                                                                    size=\"l\"\r\n                                                                    stretched\r\n                                                                    onClick={()=>this.saveEdit(index)}\r\n                                                                    mode=\"secondary\"\r\n                                                                    //before={<Icon24Write/>}\r\n                                                                >Сохранить</Button>\r\n                                                            </Div> :\r\n                                                            <Div style={{display: 'flex'}}>\r\n                                                                <Button\r\n                                                                    stretched\r\n                                                                    //before={<Icon24Dismiss/>}\r\n                                                                    style={{ marginRight: 8 }}\r\n                                                                    onClick={() => this.deleteProcedure(index)}\r\n                                                                    size=\"l\"\r\n                                                                    mode=\"destructive\"\r\n                                                                >Удалить</Button>\r\n                                                                <Button\r\n                                                                    size=\"l\"\r\n                                                                    stretched\r\n                                                                    onClick={()=>{\r\n                                                                        this.setState({editProdTitle:this.state.master.priceList[index].title, editProdBody:this.state.master.priceList[index].body, editProdPrice:String(this.state.master.priceList[index].price), edit: index, add: false})\r\n                                                                    }}\r\n                                                                    mode=\"secondary\"\r\n                                                                    //before={<Icon24Write/>}\r\n                                                                >Редактировать</Button>\r\n                                                            </Div>\r\n                                                    }\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add ?\r\n                                    <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <List>\r\n                                                <Cell description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length+\"/20\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={\r\n                                                            this.state.newProdTitle.length > 0 ?\r\n                                                            this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error' :\r\n                                                                null\r\n                                                        }\r\n                                                        name=\"newProdTitle\"\r\n                                                        type=\"text\"\r\n                                                        value={this.state.newProdTitle}\r\n                                                        placeholder={'Введите название'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdBody.replace(/ +/g, ' ').trim().length+\"/250\"}>\r\n                                                    <Textarea\r\n                                                        require\r\n                                                        status={\r\n                                                            this.state.newProdBody.length > 0 ?\r\n                                                            this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error' :\r\n                                                                null\r\n                                                        }\r\n                                                        name=\"newProdBody\"\r\n                                                        value={this.state.newProdBody}\r\n                                                        placeholder={'Укажите описание'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').trim().length+\"/5\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={\r\n                                                            this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '').length > 0 ?\r\n                                                            this.validateNewProdPrice(this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')).status ? 'valid' : 'error' :\r\n                                                                null\r\n                                                        }\r\n                                                        name=\"newProdPrice\"\r\n                                                        type=\"number\" value={this.state.newProdPrice.replace(/[\\s.,%]/g, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").replace(/^0+/, '')}\r\n                                                        placeholder={'Укажите цену'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                            </List>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex', webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\" style={{marginRight: 8}}\r\n                                                    onClick={() => this.setState({add: false})}>Отменить</Button>\r\n                                            <Button size=\"l\" stretched\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        </Div>\r\n                                    </Div> :\r\n                                        <CellButton\r\n                                        onClick={() => this.setState({add: true, edit: null})}\r\n                                        before={<Icon24Add/>}\r\n                                        >Добавить процедуру</CellButton>\r\n                                    }\r\n                                </Group>\r\n                                {/*<Group>*/}\r\n                                {/*    <CellButton*/}\r\n                                {/*        onClick={() => this.addProd(true)}*/}\r\n                                {/*        before={<Icon24Add/>}*/}\r\n                                {/*    >Добавить процедуру</CellButton>*/}\r\n                                {/*</Group>*/}\r\n                                <Group>\r\n                                    <FormLayout>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description.replace(/ +/g, ' ').trim().length > 19 && this.state.description.replace(/ +/g, ' ').trim().length < 201 ? 'valid' : 'error'}\r\n                                            bottom={this.state.description.replace(/ +/g, ' ').trim().length > 1 ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что Вы выполняете. Так Вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }\r\n                                                              asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                                        >\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={(event)=>{this.setState({isChange: true}); this.checkSubcat(event)}}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                        <Select\r\n                                            name={'type'}\r\n                                            top=\"Выберите тип оказания услуг\"\r\n                                            value={this.state.type}\r\n                                            bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                            onChange={this.handleChange}\r\n                                        >\r\n                                            <option value=\"Частный мастер\">Частный мастер</option>\r\n                                            <option value=\"Организация\">Организация</option>\r\n                                        </Select>\r\n                                        {\r\n                                            this.state.type === 'Организация' &&\r\n                                            <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                                <Input\r\n                                                    name={'brand'}\r\n                                                    type=\"text\"\r\n                                                    status={\r\n                                                        this.state.brand.length > 0 ?\r\n                                                            this.state.brand.length < 26 ? 'valid' : 'error' :\r\n                                                            null\r\n                                                    }\r\n                                                    value={this.state.brand}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </FormLayoutGroup>\r\n                                        }\r\n                                    </FormLayout>\r\n                                </Group>\r\n                        {this.props.snackbarLk}\r\n                    </React.Fragment>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting))","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid, Footer, Group\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\nimport Head from \"../elements/panelHeader\";\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title='Избранное'\r\n                        goBack={()=>this.props.goBack()}\r\n                    />\r\n                <Placeholder\r\n                    stretched\r\n                    icon={<Spinner size=\"large\" style={{ marginTop: 20 }} />}\r\n                    header={'Ищем-ищем...'}\r\n                ></Placeholder>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.error) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title='Избранное'\r\n                            goBack={()=>this.props.goBack()}\r\n                        />\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56LikeOutline/>}\r\n                            header={this.state.mastersArr.message}\r\n                        >Добавить мастера в этот список можно, нажав соответствующую кнопку в его профиле.\r\n                        </Placeholder>\r\n                    </React.Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title='Избранное'\r\n                            goBack={()=>this.props.goBack()}\r\n                        />\r\n                        <Group separator=\"hide\">\r\n                            {\r\n                                this.state.mastersArr.map(master => {\r\n                                    if ((master !== null)) { //если мастер не удален\r\n                                        return (\r\n                                            <React.Fragment>\r\n                                                <CardGrid key={master.vkUid}>\r\n                                                    <Card size=\"l\" mode=\"shadow\">\r\n                                                        <RichCell\r\n                                                            key={master._id}\r\n                                                            before={<Avatar size={72} src={master.avatarLink} />}\r\n                                                            text={master.type}\r\n                                                            caption={master.location.city.title}\r\n                                                            after={<Icon16Chevron/>}\r\n                                                            onClick={() => this.props.openFavMasterOnId(master)}\r\n                                                        >\r\n                                                            {master.firstname} {master.lastname}\r\n                                                        </RichCell>\r\n                                                    </Card>\r\n                                                </CardGrid>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    }\r\n                                })\r\n                            }\r\n                        <Footer style={{webkitUserSelect: 'none', userSelect: 'none'}}>На этом все. Мастеров всего - {this.state.mastersArr.length}.</Footer>\r\n                        </Group>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\n// function renderLastPhoto(arr){\r\n//     for (let i =0; i<arr.length; i++){\r\n//         if (!arr[i]) break;\r\n//         return (\r\n//             <Card\r\n//                 size=\"s\"\r\n//                 mode=\"shadow\"\r\n//                 key={i}\r\n//                 //onClick={() => this.openShowImages(this.state.images, index)}\r\n//             >\r\n//                 <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {BACKEND} from \"../func/func\"\r\nimport FindList from './components/findList'\r\nimport HeadCity from '../elements/headCity'\r\nimport {Button, ConfigProvider, Footer, Panel, Placeholder, Spinner, View} from '@vkontakte/vkui'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {connect} from \"react-redux\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\"\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline'\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoad: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    window.scrollTo(0, this.props.findModelsListScroll)\r\n                    //bridge.send(\"VKWebAppScroll\", {\"top\": this.props.findModelsListScroll, \"speed\": 600});\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset)\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity + this.props.user.location.country.id + '/' + this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    this.props.changeFindModelsList(find)\r\n                    this.setState({findArr: find, isLoad: true})\r\n                })\r\n                .catch(e=>this.setState({warnConnection: true}))\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n    };\r\n    render(){\r\n        if (this.state.warnConnection){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Icon56WifiOutline />}\r\n                                header={'Что-то не так!'}\r\n                                //action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить</Button>}\r\n                            >\r\n                                Проверьте интернет-соединение.\r\n                            </Placeholder>\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            )\r\n        } else if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel)","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch, Div, CardScroll, Placeholder, Footer\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true,\r\n            targetImg: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.findModel.onMasterId+this.props.master._id)\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                if (find.length > 0) {\r\n                    let targetImg = [];\r\n                    find[0].images.map(photo=>{\r\n                        if (this.props.master.photos.includes(photo)) targetImg.push(photo)\r\n                    });\r\n                    this.setState({targetImg: targetImg, loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                } else {\r\n                    let error = <Cell multiline>У Вас нет активных постов о поиске</Cell>;\r\n                    this.setState({error: error, isLoaded: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    targetImg = (url) => {\r\n        try{\r\n            if (this.state.targetImg.includes(url)){\r\n                let targetImg = this.state.targetImg;\r\n                let index = targetImg.indexOf(url);\r\n                if (index > -1) {\r\n                    targetImg.splice(index, 1);\r\n                } else targetImg.splice(0, index);\r\n                this.setState({targetImg: targetImg});\r\n            } else {\r\n                let targetImg = this.state.targetImg;\r\n                if(targetImg.length >2) throw 'Выделить можно только 3 фотографии.';\r\n                targetImg.push(url);\r\n                this.setState({targetImg: targetImg});\r\n            }\r\n        }catch(e){\r\n            this.openSnack(e)\r\n        }\r\n    }\r\n\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length === 0) throw 'Пустое сообщение недопустимо.';\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length > 250) throw 'Максимальная длина сообщения - 250 символов.';\r\n            if(this.state.targetImg.length < 3) throw 'Необходимо выбрать 3 фотографии из портфолио.';\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            // let images = [];\r\n            // this.props.master.photos.map((image,i)=> {\r\n            //     if (i < 3){\r\n            //         images.push(image)\r\n            //     }\r\n            // });\r\n            if (this.state.isActive === true) {\r\n                let find = this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = this.state.targetImg;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                // find.masterId = this.state.activeMaster._id;\r\n                // find.location = this.state.activeMaster.location;\r\n                // find.firstname = this.state.activeMaster.firstname;\r\n                // find.lastname = this.state.activeMaster.lastname;\r\n                // find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = this.state.targetImg;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                    fetch(BACKEND.findModel.new, {\r\n                        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                        mode: 'cors', // no-cors, cors, *same-origin\r\n                        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                        credentials: 'same-origin', // include, *same-origin, omit\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        redirect: 'follow', // manual, *follow, error\r\n                        referrer: 'no-referrer', // no-referrer, *client\r\n                        body: JSON.stringify(find), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res=>{\r\n                            this.setState({loadFind: res.find, isActive: true});\r\n                            if (res.mStatus === false){\r\n                                this.setState({visible: false});\r\n                                this.openSnack('Объявление о поиске модели создано, но пока не показывается. Его можно активировать сразу после прохождения модерации профиля мастера.')\r\n                            } else {\r\n                                this.openSnack('Объявление о поиске модели успешно создано.')\r\n                            }\r\n                        })\r\n                        .catch(e=>console.log(e));\r\n                //this.postData(BACKEND.findModel.new, find);\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                this.openSnack('Информация успешно обновлена.')\r\n            })\r\n            .catch(e=>{\r\n                this.openSnack('Не удалось обновить данные.');\r\n                console.log(e)\r\n            })\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {/*<CardGrid>*/}\r\n                                    {\r\n                                        this.props.master.photos.length > 0 ?\r\n                                            <Div style={{webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                                                <Cell>Выполненые работы мастера</Cell>\r\n                                                <CardScroll>\r\n                                                    {\r\n                                                        this.props.master.photos.map((photoUrl, index) => {\r\n                                                            return (\r\n                                                                <Card\r\n                                                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                                    size=\"s\"\r\n                                                                    mode=\"shadow\"\r\n                                                                    key={index}\r\n                                                                    onClick={() => this.targetImg(photoUrl)}\r\n                                                                >\r\n                                                                    {\r\n                                                                        this.state.targetImg.includes(photoUrl) ?\r\n                                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}}><div style={{backgroundColor: 'grey', borderRadius: '13px 13px 0 0', textAlign: 'center'}}>Выбрано</div></div> :\r\n                                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                                    }\r\n                                                                </Card>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </CardScroll>\r\n                                            </Div> :\r\n                                            <Cell multiline>У Вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий.</Cell>\r\n                                    }\r\n                                {/*{*/}\r\n                                {/*    this.props.master.photos.length > 0 ?*/}\r\n                                {/*    this.props.master.photos.map((image,i)=>{*/}\r\n                                {/*        if (i < 3){*/}\r\n                                {/*            return (*/}\r\n                                {/*                <Card size='s' key={i}>*/}\r\n                                {/*                    <div*/}\r\n                                {/*                        style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}*/}\r\n                                {/*                    >*/}\r\n                                {/*                    </div>*/}\r\n                                {/*                </Card>*/}\r\n                                {/*            )*/}\r\n                                {/*        }*/}\r\n                                {/*    }) : 'У вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий'*/}\r\n                                {/*}*/}\r\n                                {/*</CardGrid>*/}\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>{\r\n                                            if (this.props.master.moderation.status === true){\r\n                                                this.setState({visible: !this.state.visible})\r\n                                            } else {\r\n                                                this.openSnack('Ваш профиль находится на модерации. Вы можете создать объявление уже сейчас, но до завершения проверки пользователи его не увидят.')\r\n                                            }\r\n                                        }}\r\n                                        checked={this.props.master.moderation.status === true ? this.state.visible : false}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <React.Fragment>\r\n                                    <Cell description={'Некликабельно'}>Ваш пост будет выглядеть так:</Cell>\r\n                                    <FindCard\r\n                                        date={this.getDate(this.state.loadFind.date)}\r\n                                        key={this.state.loadFind._id}\r\n                                        find={this.state.loadFind}\r\n                                        openMasterOnId={this.props.openMasterOnId}\r\n                                    />\r\n                                </React.Fragment>\r\n                            }\r\n                            <Footer/>\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModelMaster);","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если Вы являетесь владельцем сообщества с тематикой, схожей с тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react'\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, Select} from '@vkontakte/vkui'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline'\r\nimport {BACKEND} from \"../func/func\"\r\nimport {connect} from \"react-redux\"\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            search: '',\r\n            isLoad: false,\r\n            cities: [],\r\n            countryList: [],\r\n            targetCountry: null\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user.location.country) this.setState({targetCountry: this.props.user.location.country}, ()=>this.getCities(this.state.search, this.state.targetCountry))\r\n        this.getCountries()\r\n    }\r\n\r\n    getCountries(){\r\n        fetch(BACKEND.vkapi.getCountries)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                this.setState({countryList: res.countryList, isLoad: true})\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n    getCities(filter, country) {\r\n        this.setState({loading: true})\r\n        const data = {\r\n            search: filter.toLowerCase(),\r\n            country_id: country.id,\r\n        }\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true, loading: false})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e))\r\n}\r\n\r\n    renderCityList = () => {\r\n        if (this.state.cities.length > 0){\r\n            return (\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeCity({city: city, country: this.state.targetCountry})}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n            )\r\n        } else {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56PlaceOutline />}\r\n                    header=\"Город не найден\"\r\n                >\r\n                    Проверьте опечатки или измените критерии поиска\r\n                </Placeholder>\r\n            )\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value})\r\n        this.getCities(e.target.value, this.state.targetCountry)\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                        <React.Fragment>\r\n                            <Cell>\r\n                                {\r\n                                    this.state.changeCountry ?\r\n                                        <Select\r\n                                            onChange={(e)=>{\r\n                                                const country = this.state.countryList.map(country=>{\r\n                                                    if (country.id === Number(e.target.value)) return country\r\n                                                })\r\n                                                this.setState({targetCountry: country.filter(Boolean)[0], changeCountry: false}, ()=> this.getCities(this.state.search, this.state.targetCountry))\r\n                                            }}\r\n                                            placeholder={'Выберите страну'}\r\n                                        >\r\n                                            {\r\n                                                this.state.countryList.map(country=>{\r\n                                                    if (country.id === this.props.user.location.country.id){\r\n                                                        console.log(country.id === this.props.user.location.country.id)\r\n                                                        return <option value={country.id} selected>{country.title}</option>\r\n                                                    } else {\r\n                                                        return <option value={country.id}>{country.title}</option>\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </Select> :\r\n                                        <Cell indicator={this.state.targetCountry ? this.state.targetCountry.title : this.props.user.location.country.title} onClick={()=>this.setState({changeCountry: true})}>Cтрана</Cell>\r\n                                }\r\n                            </Cell>\r\n                            {\r\n                                this.state.targetCountry !== null ?\r\n                                    <React.Fragment>\r\n                                        <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                                        {\r\n                                            this.state.loading ?\r\n                                                <Spinner size=\"large\" style={{ marginTop: 20 }} /> :\r\n                                            this.renderCityList()\r\n                                        }\r\n                                    </React.Fragment> :\r\n                                <Placeholder\r\n                                icon={<Icon56PlaceOutline />}\r\n                                header=\"Выберите страну\"\r\n                                >\r\n                                Если нужной Вам страны нет в списке - напишите нам!\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps) (CityList)","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel, Textarea, Cell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\n\r\nimport {BACKEND} from \"../func/func\";\r\nimport Head from \"../elements/panelHeader\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0,\r\n            isLoad: true\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            })\r\n            .catch(e=>console.log(e))\r\n        await fetch(BACKEND.comment.moderation,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                this.setState({comments: comments, isLoad: false})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: [],\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        // if (index > -1) {\r\n        //     mastersList.splice(index, 1);\r\n        // } else mastersList.splice(0, index);\r\n        // this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        mastersList[index].moderation.reasons = reasons;\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n        //this.setState({mastersList: mastersList});\r\n    };\r\n\r\n    goodComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moderCom+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    badComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moderCom+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null;\r\n            console.log(comment)\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment._id, index)} mode=\"destructive\">Удалить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment.body}\r\n                        </RichCell>\r\n                        <Cell before={ <Avatar size={25} src={comment.user.avatarLink} /> }> From - {comment.user.firstname + ' ' + comment.user.lastname}</Cell>\r\n                        <Cell >To - {comment.to.name}</Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.isLoad === true) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"Загружаю...\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Cell>\r\n                                            <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                            <Button onClick={()=>this.setState({[master.vkUid]: true})} mode=\"secondary\">Отклонить</Button>\r\n                                        </Cell>\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                            {\r\n                                master.moderation.reasons.length > 0 &&\r\n                                <Cell>\r\n                                    {\r\n                                        master.moderation.reasons.map(reason=>{\r\n                                            return reason\r\n                                        })\r\n                                    }\r\n                                </Cell>\r\n                            }\r\n                            {\r\n                                this.state[master.vkUid] === true &&\r\n                                <Cell>\r\n                                    <Textarea name='reason' value={this.state.reason} onChange={(event)=>{\r\n                                        console.log(this.state.reason);\r\n                                        this.setState({reason: event.target.value})\r\n                                    }\r\n                                    }/>\r\n                                    <Button onClick={()=>{\r\n                                        this.bad(master._id, index);\r\n                                        this.setState({[master.vkUid]: false})\r\n                                    }} mode=\"secondary\">Отклонить</Button>\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        if (this.props.params.vk_user_id !== '199500866'){\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Cell>У Вас нет доступа</Cell>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Head\r\n                        title={'Модерация'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'masters' })}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'comments' })}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Moder);","import React from 'react'\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardGrid,\r\n    Cell,\r\n    Div,\r\n    Group,\r\n    Header,\r\n    Placeholder,\r\n    Footer,\r\n    PromoBanner,\r\n    Counter,\r\n    MiniInfoCell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport {Ads} from \"../elements/ads\"\r\nimport RatingStars from '../elements/items/ratingStars'\r\nimport Icon24Comment from '@vkontakte/icons/dist/24/comment'\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron'\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like'\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            promo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length)\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города'\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли'\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n        bridge.subscribe(e=>{\r\n            if (!e.detail) {\r\n                return\r\n            }\r\n\r\n            const { type, data } = e.detail\r\n\r\n            if (type === 'VKWebAppGetAdsResult') {\r\n                // Reading result of the Code Reader\r\n                this.setState({promo: data})\r\n            }\r\n\r\n        })\r\n        bridge.send(\"VKWebAppGetAds\", {})\r\n            .then(data=>console.log('ads'))\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null})\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города'\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли'\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'})\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count})\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        let i = 0\r\n        return this.props.mastersList.map(master => {\r\n            if (i === 6) i = 0\r\n            i++\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell\r\n                            style={{borderRadius: '10px 10px 10px 10px'}}\r\n                            expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  <React.Fragment>\r\n                                      {\r\n                                          master.categories.category.map((category, index) => {\r\n                                              if (index < master.categories.category.length-1){\r\n                                                  return <span style={{display: 'inline-flex'}}>{category.label}<Icon16Chevron /></span>\r\n                                              } else {\r\n                                                  return category.label\r\n                                              }\r\n                                          })\r\n                                      }\r\n                                  </React.Fragment>\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(master.meta, master._id)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster(master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    setBottom = (meta, id) => {\r\n        if (meta.comments > 0) {\r\n            return (\r\n                <MiniInfoCell\r\n                    style={{padding: 0, margin: 0}}\r\n                   after={\r\n                       this.props.user.favs.includes(id) ? <div style={{margin: 3}}><Icon16Like width={21} height={21} fill=\"red\"/></div> : null\r\n                   }\r\n                >\r\n                    <div style={{display: 'inline-flex'}}><Icon24Comment/><span style={{margin: 'auto'}}>{meta.comments}</span><span style={{marginLeft: 10}}><RatingStars countStars={meta.rating}/></span></div>\r\n                </MiniInfoCell>\r\n                // <Div style={{display: 'inline-flex', margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\", webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                //     {/*Рейтинг {meta.rating} из {meta.comments} отзывов*/}\r\n                //     <Counter><div style={{display: 'inline-flex', margin: 5}}><Icon28Message/><span style={{margin: 'auto'}}>{meta.comments}</span></div></Counter><RatingStars countStars={meta.rating}/>\r\n                // </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\", webkitUserSelect: 'none', userSelect: 'none'}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.props.openSnack('Спасибо, что помогаете сервису в развитии.')\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                    <Footer>На этом все. Мастеров всего - {this.props.mastersList.length}.</Footer>\r\n                    {\r\n                        this.state.promo !== null ?\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <PromoBanner bannerData={ this.state.promo } />\r\n                            </Card> :\r\n                            null\r\n                    }\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps)(MastersList)","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react'\r\nimport HeadCity from \"../elements/headCity\"\r\nimport {Div, Panel, PanelHeader, Placeholder, SelectMimicry, Spinner} from \"@vkontakte/vkui\"\r\nimport MastersList from './mastersList'\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\"\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    changeMastersList,\r\n    changeMasterslistScroll,\r\n    changeTargetCategory,\r\n    changeTargetCity,\r\n    setFilter\r\n} from \"../store/actions\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline'\r\n\r\nclass Masters extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoad: false,\r\n            filter: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.mastersListScroll) {\r\n            window.scrollTo(0, this.props.mastersListScroll)\r\n            //bridge.send(\"VKWebAppScroll\", {\"top\": this.props.mastersListScroll});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false}, () => this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        this.props.setFilter([])\r\n        if (this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category + 'all/' + this.props.user.location.country.id + '/' + this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList)\r\n                    this.filter()\r\n                })\r\n                .catch(e => this.setState({warnConnection: true}))\r\n        } else {\r\n            fetch(BACKEND.masters.category + this.props.targetCategory._id + '/' + this.props.user.location.country.id + '/' + this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList)\r\n                    this.filter()\r\n                })\r\n                .catch(e => this.setState({warnConnection: true}))\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if (this.props.filter.includes(e.currentTarget.id)) {\r\n            let index = this.props.filter.indexOf(e.currentTarget.id)\r\n            let filter = this.props.filter\r\n            if (index > -1) {\r\n                filter.splice(index, 1)\r\n            } else filter.splice(0, index)\r\n            this.setState({filter: filter}, () => this.filter())\r\n        } else {\r\n            let filter = this.props.filter\r\n            filter.push(e.currentTarget.id)\r\n            this.props.setFilter(filter)\r\n            this.filter()\r\n            //this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if (this.props.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master => {\r\n                let i = 0\r\n                this.props.filter.forEach(filter => {\r\n                    if (master.categories.subcat) {\r\n                        if (master.categories.subcat.includes(filter)) i++\r\n                    } else {\r\n                        return false\r\n                    }\r\n                })\r\n                if (i > 0) return true\r\n            })\r\n            this.setState({filteredList: filteredList, isLoad: true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.warnConnection) {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={() => this.props.changeCity()}/>\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56WifiOutline/>}\r\n                        header={'Что-то не так!'}\r\n                        //action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить</Button>}\r\n                    >\r\n                        Проверьте интернет-соединение.\r\n                    </Placeholder>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            const {targetCategory, user} = this.props\r\n            return (\r\n                // <React.Fragment>\r\n                <Panel id=\"mastersList\">\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                    <HeadCity changeCity={() => this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e) => this.checkSubcat(e)}\r\n                                filter={this.props.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                    }\r\n                    {this.props.snackbar}\r\n                    {/*</React.Fragment>*/}\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user,\r\n        filter: state.filter\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        setFilter: bindActionCreators(setFilter, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters)","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react'\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    ConfigProvider,\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Separator,\r\n    Snackbar,\r\n    Spinner,\r\n    Tabbar,\r\n    TabbarItem,\r\n    Tabs,\r\n    TabsItem,\r\n    View\r\n} from '@vkontakte/vkui'\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js'\r\nimport '@vkontakte/vkui/dist/vkui.css'\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline'\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline'\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done'\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search'\r\nimport Head from './js/elements/panelHeader'\r\nimport MasterCard from './js/masters/mastersCard.js'\r\nimport MasterPhoto from './js/masters/mastersPhoto.js'\r\nimport MasterComments from './js/masters/mastersComments.js'\r\nimport News from './js/news/news.js'\r\nimport Invite from './js/lk/invite.js'\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js'\r\nimport Favourite from './js/lk/favourite.js'\r\nimport FindModel from \"./js/findmodel/findModel\"\r\nimport FindModelMaster from \"./js/lk/findModelMaster\"\r\nimport Partners from \"./js/lk/partners\"\r\nimport {BACKEND} from \"./js/func/func\"\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\"\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss'\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport Masters from './js/masters/masters'\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules'\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    changeActiveMasterOnFavs,\r\n    changeActiveMasterOnFindModels,\r\n    changeActiveMasterOnMasters,\r\n    changeActiveViewLk,\r\n    changeFindModelsList,\r\n    changeFindModelsListScroll,\r\n    changeLaunchParams,\r\n    changeMastersList,\r\n    changeMasterslistScroll,\r\n    changeStory,\r\n    changeTargetCategory,\r\n    changeTargetCity,\r\n    goForward,\r\n    goTo,\r\n    loginUser,\r\n    setMaster\r\n} from \"./js/store/actions\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            popoutLk: null,\r\n            popoutInvite: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            warnConnection: false,\r\n            mastersModal: null,\r\n            findModal: null,\r\n            lkModal: null,\r\n            snackbarInvite: null\r\n        }\r\n        this.onStoryChange = this.onStoryChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.subscribe(({detail: {type, data}}) => {\r\n            if (type === 'VKWebAppUpdateConfig') {\r\n                this.setState({scheme: data.scheme})\r\n                if (data.scheme === 'space_gray') bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\"})\r\n                if (data.scheme === 'bright_light') bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"dark\"})\r\n            }\r\n            if (type === 'VKWebAppShowStoryBoxLoadFinish'){\r\n                fetch(BACKEND.vkapi.stories+data.story_owner_id)\r\n            }\r\n        })\r\n        if (this.props.launchParams.sign !== undefined) {\r\n            this.setState({validLaunchParams: true})\r\n            console.log('Параметры пришли')\r\n            this.props.changeLaunchParams(this.props.launchParams)\r\n            this.auth(this.props.launchParams)\r\n        } else {\r\n            this.setState({validLaunchParams: false})\r\n            this.openSnack('Ошибка. Не переданы параметры запуска.')\r\n        }\r\n\r\n        if (this.props.linkParams.masterid) {\r\n            this.openMasterOnId(this.props.linkParams.masterid)\r\n            this.props.changeStory('masters')\r\n        }\r\n        window.onpopstate = () => {\r\n            this.goBack(this.props.activeStory)\r\n        }\r\n    }\r\n\r\n    auth = (params) => {\r\n        fetch(BACKEND.users.auth, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (this.state.warnConnection === true) {\r\n                    this.setState({warnConnection: false, snackbar: null})\r\n                }\r\n                this.setState({validLaunchParams: true})\r\n                this.props.loginUser(data.user)\r\n                if (data.master !== null) {\r\n                    this.props.setMaster(data.master)\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.setState({\r\n                    snackbar:\r\n                        <Snackbar\r\n                            duration=\"3000\"\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({snackbar: null})}\r\n                            before={<Icon24Dismiss/>}\r\n                        >\r\n                            Ошибка подключения к серверу. Страшно, очень страшно, мы не знаем что это такое, если бы мы\r\n                            знали что это такое, то мы бы знали, что это такое.\r\n                        </Snackbar>\r\n                })\r\n                //this.openSnack('Ошибка подключения к серверу. Страшно, очень страшно, мы не знаем что это такое, если бы мы знали что это такое, то мы бы знали, что это такое.');\r\n                this.setState({warnConnection: true})\r\n            })\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        }\r\n        if (this.state.snackbar) this.setState({snackbar: null})\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    openSnackInvite(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        }\r\n        if (this.state.snackbarInvite) this.setState({snackbarInvite: null})\r\n        this.setState({\r\n            snackbarInvite:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarInvite: null})}\r\n                    before={<Icon24Dismiss/>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                if (master.error) master = null\r\n                this.props.changeActiveMasterOnMasters(master)\r\n                this.goTo('masters', 'masterInfo')\r\n            })\r\n    };\r\n\r\n    openFindMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFindModels(master)\r\n                this.goTo('findmodel', 'masterInfo')\r\n            })\r\n    };\r\n\r\n    openSnackLk(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        }\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null})\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    openSnackLkDismiss(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        }\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null})\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    duration=\"3000\"\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Icon24Dismiss/>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        })\r\n    }\r\n\r\n    storiesPost = (id) => {\r\n        bridge.send(\"VKWebAppShowStoryBox\", {\r\n            \"background_type\" : \"image\",\r\n            \"url\" : \"https://sun9-76.userapi.com/9CA7Ap-SWJm-bdeu9OWh1iXJP5BkaSbtx3zfKA/jcRS6sqPaP0.jpg\",\r\n            \"locked\": true,\r\n            \"stickers\": [\r\n                {\r\n                    \"sticker_type\": \"renderable\",\r\n                    \"sticker\": {\r\n                        \"transform\": {\r\n                            \"relation_width\": 0.9,\r\n                            \"translation_y\": 0.25\r\n                        },\r\n                        \"can_delete\": 0,\r\n                        \"content_type\": \"image\",\r\n                        \"url\": \"https://sun9-11.userapi.com/W7ljJxZlpaMD9EPafPeujRRV61xv7evo4P3DrA/f1HJkZgc7W0.jpg\",\r\n                        \"clickable_zones\": [\r\n                            {\r\n                                // \"action_type\": \"app\",\r\n                                \"action_type\": \"link\",\r\n                                \"action\": {\r\n                                    \"link\": \"https://vk.com/app7170938#masterid=\"+id,\r\n                                    \"tooltip_text_key\": \"tooltip_open_page\"\r\n                                },\r\n                                // \"action\": {\r\n                                //     \"app_id\": 7170938,\r\n                                //     \"app_context\": \"#masterid=\"+this.props.master._id\r\n                                // },\r\n                                \"clickable_area\": [\r\n                                    {\r\n                                        \"x\": 0,\r\n                                        \"y\": 0\r\n                                    },\r\n                                    {\r\n                                        \"x\": 884,\r\n                                        \"y\": 0\r\n                                    },\r\n                                    {\r\n                                        \"x\": 884,\r\n                                        \"y\": 196\r\n                                    },\r\n                                    {\r\n                                        \"x\": 0,\r\n                                        \"y\": 196\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                }]\r\n        })\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                if (newMaster.error) {\r\n                    this.openSnack(newMaster.error)\r\n                } else {\r\n                    this.props.setMaster(newMaster)\r\n                    this.goTo('lk', 'lk')\r\n                    this.storiesPost(newMaster._id)\r\n                }\r\n                //this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.openSnack(e.message)\r\n                //this.setState({activeViewLk: 'lk'});\r\n            })\r\n    };\r\n\r\n    // openMasterOnLink = (masterId) => {\r\n    //     this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n    // };\r\n\r\n    goTo = (story, panel) => {\r\n        window.history.pushState({panel: panel}, panel)\r\n        this.props.goTo(story, panel)\r\n        let hist = this.props[story + 'History']\r\n    };\r\n\r\n    goBack = (story) => {\r\n        console.log('до', this.props[story + 'History'])\r\n        if (this.props[story + 'History'].length === 1) {\r\n            bridge.send('VKWebAppClose', {'status': 'sucsess'})\r\n        } else {\r\n            this.props.goForward(story)\r\n            let hist = this.props[story + 'History']\r\n            console.log('после', this.props[story + 'History'])\r\n        }\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name})\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(geo) {\r\n        let user = this.props.user\r\n        user.location.city = geo.city\r\n        user.location.country = geo.country\r\n        this.props.changeTargetCity(geo.city)\r\n        user.params = this.props.params\r\n            return fetch(BACKEND.users.changeCity, {\r\n                method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'cors', // no-cors, cors, *same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'same-origin', // include, *same-origin, omit\r\n                headers: {'Content-Type': 'application/json',},\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrer: 'no-referrer', // no-referrer, *client\r\n                body: JSON.stringify(user), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('ok')\r\n                })\r\n                .catch(e=>console.log(e))\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props\r\n        if (this.state.warnConnection === true) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"loading\" activePanel=\"loading\">\r\n                        <Panel id=\"loading\">\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Icon56WifiOutline/>}\r\n                                header={'Что-то не так!'}\r\n                                action={<Button size=\"l\" onClick={() => this.auth(this.props.launchParams)}>Повторить\r\n                                    авторизацию</Button>}\r\n                            >\r\n                                Проверьте интернет-соединение.\r\n                            </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{marginTop: 40}}/>}\r\n                            >\r\n                                Всё, беда! Вы все сломали :(\r\n                            </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"loading\" activePanel=\"loading\">\r\n                        <Panel id=\"loading\">\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Spinner size=\"large\" style={{marginTop: 40}}/>}\r\n                                header=\"Выполняется вход...\"\r\n                            >Это может занять несколько секунд\r\n                                {this.state.snackbar}\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <Epic activeStory={this.props.activeStory} tabbar={\r\n                        <Tabbar>\r\n                            <TabbarItem\r\n                                onClick={() => {\r\n                                    if (this.props.activeStory === 'news') {\r\n                                        this.goTo('news', 'news')\r\n                                    } else {\r\n                                        this.props.changeStory('news')\r\n                                    }\r\n                                }}\r\n                                selected={this.props.activeStory === 'news'}\r\n                                data-story=\"news\"\r\n                                text=\"Новости\"\r\n                            ><Icon28FireOutline/></TabbarItem>\r\n                            <TabbarItem\r\n                                onClick={() => {\r\n                                    if (this.props.activeStory === 'masters') {\r\n                                        this.goTo('masters', 'mastersList')\r\n                                    } else {\r\n                                        this.props.changeStory('masters')\r\n                                    }\r\n                                }}\r\n                                selected={this.props.activeStory === 'masters'}\r\n                                data-story=\"masters\"\r\n                                text=\"Мастера\"\r\n                            ><Icon28ServicesOutline/></TabbarItem>\r\n                            <TabbarItem\r\n                                onClick={() => {\r\n                                    if (this.props.activeStory === 'findmodel') {\r\n                                        this.goTo('findmodel', 'findmodel')\r\n                                    } else {\r\n                                        this.props.changeStory('findmodel')\r\n                                    }\r\n                                }}\r\n                                selected={this.props.activeStory === 'findmodel'}\r\n                                data-story=\"findmodel\"\r\n                                text=\"Ищу модель\"\r\n                            ><Icon28Search/></TabbarItem>\r\n                            <TabbarItem\r\n                                onClick={() => {\r\n                                    this.setState({snackbarLk: null})\r\n                                    if (this.props.activeStory === 'lk') {\r\n                                        this.goTo('lk', 'lk')\r\n                                    } else {\r\n                                        this.props.changeStory('lk')\r\n                                    }\r\n                                }}\r\n                                selected={this.props.activeStory === 'lk'}\r\n                                data-story=\"lk\"\r\n                                text=\"Кабинет\"\r\n                            ><Icon28More/></TabbarItem>\r\n                        </Tabbar>\r\n                    }>\r\n                        <View id=\"news\" history={this.props.newsHistory} onSwipeBack={() => this.goBack('news')}\r\n                              activePanel={this.props.newsHistory[this.props.newsHistory.length - 1]}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={() => {\r\n                                    this.props.changeStory('lk')\r\n                                    this.goTo('lk', 'registration')\r\n                                    //this.props.changeStory('lk');\r\n                                    //this.props.changeActiveViewLk('registration');\r\n                                }}\r\n                                //openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                // openModer={() => this.goForwardNews('moder')}\r\n                                openModer={() => this.goTo('news', 'moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBack('news')}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master})\r\n                                    this.goTo('news', 'masterInfo')\r\n                                    //this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('news')}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master) => this.setState({activeMaster: master})}\r\n                                    openModal={(content) => {\r\n                                        this.setState({mastersModal: content})\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View id=\"masters\" modal={this.state.mastersModal}\r\n                              activePanel={this.props.mastersHistory[this.props.mastersHistory.length - 1]}\r\n                              history={this.props.mastersHistory} onSwipeBack={() => this.goBack('masters')}>\r\n                            <Masters\r\n                                id=\"mastersList\"\r\n                                //changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                changeCity={() => this.goTo('masters', 'changeCity')}\r\n                                openSnack={(title) => this.openSnack(title)}\r\n                                //changeCategory={()=>this.setState({activePanelMasters: 'masterCat'})}\r\n                                changeCategory={() => this.goTo('masters', 'masterCat')}\r\n                                openPanelMaster={(master) => {\r\n                                    this.props.changeActiveMasterOnMasters(master)\r\n                                    this.goTo('masters', 'masterInfo')\r\n                                }}\r\n                                snackbar={this.state.snackbar}\r\n                            />\r\n                            <Panel id=\"changeCity\">\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('masters')}/>\r\n                                <CityList\r\n                                    id=\"changeCity\"\r\n                                    // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    changeCity={(city) => {\r\n                                        this.changeTargetCity(city)\r\n                                        this.goBack('masters')\r\n                                        //this.setState({activePanelMasters: 'mastersList'})\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    //onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    //openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openPhoto={() => this.goTo('masters', 'masterPhoto')}\r\n                                    openComments={() => this.goTo('masters', 'masterComments')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    openModal={(content) => {\r\n                                        this.setState({mastersModal: content})\r\n                                    }}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <Head\r\n                                    title={'Выбор категории'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category)\r\n                                            this.goBack('masters')\r\n                                            //this.setState({activePanelMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                        <View\r\n                            id=\"findmodel\"\r\n                            activePanel={this.props.findmodelHistory[this.props.findmodelHistory.length - 1]}\r\n                            history={this.props.findmodelHistory} onSwipeBack={() => this.goBack('findmodel')}\r\n                            modal={this.state.findModal}\r\n                        >\r\n                            <Panel id=\"findmodel\">\r\n                                <PanelHeader>Ищу модель</PanelHeader>\r\n                                <FindModel\r\n                                    //openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                    openMasterOnId={(masterId) => this.openFindMasterOnId(masterId)}\r\n                                    // changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                                    changeCity={() => this.goTo('findmodel', 'changeCity')}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"changeCity\">\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('findmodel')}/>\r\n                                <CityList\r\n                                    id=\"changeCity\"\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                    changeCity={(city) => {\r\n                                        this.changeTargetCity(city)\r\n                                        this.goBack('findmodel')\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                    openPhoto={() => this.goTo('findmodel', 'masterPhoto')}\r\n                                    activeMaster={this.props.activeMasterOnFindModels}\r\n                                    openComments={() => this.goTo('findmodel', 'masterComments')}\r\n                                    openModal={(content) => {\r\n                                        this.setState({findModal: content})\r\n                                    }}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                    activeMaster={this.props.activeMasterOnFindModels}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('findmodel')}\r\n                                    activeMaster={this.props.activeMasterOnFindModels}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <Root id=\"lk\" activeView={this.props.activeViewLk} modal={this.state.lkModal}>\r\n                            <View id=\"lk\" popout={this.state.popoutLk}\r\n                                  activePanel={this.props.lkHistory[this.props.lkHistory.length - 1]}\r\n                                  history={this.props.lkHistory} onSwipeBack={() => this.goBack('lk')}>\r\n                                <Panel id=\"lk\">\r\n                                    <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                    <Tabs>\r\n                                        <TabsItem\r\n                                            onClick={() => this.setState({activeTabLk: 'about'})}\r\n                                            selected={this.state.activeTabLk === 'about'}\r\n                                        >\r\n                                            О пользователе\r\n                                        </TabsItem>\r\n                                        <TabsItem\r\n                                            onClick={() => this.setState({activeTabLk: 'partners'})}\r\n                                            selected={this.state.activeTabLk === 'partners'}\r\n                                        >\r\n                                            Партнёрам\r\n                                        </TabsItem>\r\n                                    </Tabs>\r\n                                    <Separator/>\r\n                                    {\r\n                                        this.state.activeTabLk === 'about' ?\r\n                                            <Lk\r\n                                                master={this.props.master}\r\n                                                user={user}\r\n                                                openSetting={() => this.goTo('lk', 'setting')}\r\n                                                openFavourite={() => this.goTo('lk', 'favourite')}\r\n                                                openFindModel={() => this.goTo('lk', 'findModel')}\r\n                                                openMasterPhoto={() => this.goTo('lk', 'portfolio')}\r\n                                                isFavourite={this.props.params.vk_is_favorite}\r\n                                            /> :\r\n                                            <Partners/>\r\n                                    }\r\n                                    {this.state.snackbarLk}\r\n                                </Panel>\r\n                                <Panel id=\"setting\">\r\n                                    <Setting\r\n                                        setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                        snackbar={(message) => this.openSnackLk(message)}\r\n                                        snackbarDismiss={(message) => this.openSnackLkDismiss(message)}\r\n                                        modalBack={this.modalBack}\r\n                                        activeModal={this.state.activeModal}\r\n                                        changeCity={() => this.goTo('lk', 'changeCity')}\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        snackbarLk={this.state.snackbarLk}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"changeCity\">\r\n                                    <Head title={'Выбор города'}\r\n                                          goBack={() => this.goBack('lk')}/>\r\n                                    <CityList\r\n                                        id=\"changeCity\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        changeCity={(geo) => {\r\n                                            let master = this.props.master\r\n                                            master.location.city = geo.city\r\n                                            master.location.country = geo.country\r\n                                            master.changed = true\r\n                                            this.props.setMaster(master)\r\n                                            this.goBack('lk')\r\n                                        }}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"favourite\">\r\n                                    <Favourite\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        user={user}\r\n                                        openFavMasterOnId={(master) => {\r\n                                            this.props.changeActiveMasterOnFavs(master)\r\n                                            this.goTo('lk', 'masterInfo')\r\n                                        }}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"masterInfo\">\r\n                                    <MasterCard\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        openPhoto={() => this.goTo('lk', 'masterPhoto')}\r\n                                        user={user}\r\n                                        activeMaster={this.props.activeMasterOnFavs}\r\n                                        openComments={() => this.goTo('lk', 'masterComments')}\r\n                                        setActiveMaster={(master) => this.setState({activeMaster: master})}\r\n                                        openModal={(content) => {\r\n                                            this.setState({lkModal: content})\r\n                                        }}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"masterPhoto\">\r\n                                    <Head\r\n                                        title={'Портфолио'}\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <MasterPhoto\r\n                                        goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                        activeMaster={this.props.activeMasterOnFavs}\r\n                                        //activeMaster={this.state.activeMaster}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"portfolio\">\r\n                                    <Head\r\n                                        title={'Портфолио'}\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <Portfolio\r\n                                        setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        user={user}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"masterComments\">\r\n                                    <Head\r\n                                        title=\"Отзывы\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <MasterComments\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        user={user}\r\n                                        activeMaster={this.props.activeMasterOnFavs}\r\n                                        //activeMaster={this.state.activeMaster}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"findModel\">\r\n                                    <Head\r\n                                        title=\"Ищу модель\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <FindModelMaster\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        user={user} popout={this.openAlert}\r\n                                    />\r\n                                </Panel>\r\n\r\n                                {/*reg*/}\r\n                                <Panel id=\"registration\">\r\n                                    <Head\r\n                                        title={'Регистрация'}\r\n                                        goBack={() => {\r\n                                            this.goBack('lk')\r\n                                            //this.props.changeActiveViewLk('lk')\r\n                                        }}\r\n                                    />\r\n                                    <Invite\r\n                                        setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                        goBack={() => this.props.changeActiveViewLk('lk')}\r\n                                        closeReg={this.closeReg}\r\n                                        changeCity={() => this.goTo('lk', 'changeCityReg')}\r\n                                        openRules={() => this.goTo('lk', 'rules')}\r\n                                        snackbar={(message) => this.openSnackInvite(message)}\r\n                                    />\r\n                                    {this.state.snackbarInvite}\r\n                                </Panel>\r\n                                <Panel id=\"rules\">\r\n                                    <Head\r\n                                        title=\"Соглашение\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                    <Rules\r\n                                        goBack={() => this.goBack('lk')}\r\n                                    />\r\n                                </Panel>\r\n                                <Panel id=\"changeCityReg\">\r\n                                    <Head title={'Выбор города'}\r\n                                          goBack={() => this.goBack('lk')}/>\r\n                                    <CityList\r\n                                        id=\"changeCityReg\"\r\n                                        goBack={() => this.goBack('lk')}\r\n                                        changeCity={(city) => {\r\n                                            this.changeTargetCity(city)\r\n                                            this.goBack('lk')\r\n                                        }}\r\n                                    />\r\n                                </Panel>\r\n                            </View>\r\n\r\n                            {/*<View activePanel={this.props.activePanelregistration} popout={this.state.popoutInvite} id='registration'>*/}\r\n                            {/*    */}\r\n                            {/*</View>*/}\r\n                        </Root>\r\n                    </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs,\r\n        params: state.params,\r\n        activePanelnews: state.activePanelnews,\r\n        activePanelmasters: state.activePanelmasters,\r\n        activePanelfindmodel: state.activePanelfindmodel,\r\n        activePanellk: state.activePanellk,\r\n        activeStory: state.activeStory,\r\n        newsHistory: state.newsHistory,\r\n        mastersHistory: state.mastersHistory,\r\n        findmodelHistory: state.findmodelHistory,\r\n        lkHistory: state.lkHistory,\r\n        activeViewLk: state.activeViewLk,\r\n        activePanelregistration: state.activePanelregistration,\r\n        registrationHistory: state.registrationHistory\r\n    }\r\n}\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch),\r\n        changeStory: bindActionCreators(changeStory, dispatch),\r\n        goTo: bindActionCreators(goTo, dispatch),\r\n        goForward: bindActionCreators(goForward, dispatch),\r\n        changeActiveViewLk: bindActionCreators(changeActiveViewLk, dispatch)\r\n\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nrequire('dotenv').config();\r\n\r\n\r\nconst store = createStore(rootReducer);\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App launchParams={params} linkParams={linkParams}/>\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n// import(\"./eruda.js\").then(({ default: eruda }) => {}); //runtime download\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}