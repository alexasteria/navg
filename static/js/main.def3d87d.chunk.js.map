{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/elements/functions.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/elements/spinner.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/elements/modalPage.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","store/reducers.js","store/actions.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["osname","platform","Head","theme","left","onClick","this","props","goBack","IOS","addon","title","React","Component","BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","subscribers","onarrayid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getAll","logs","params","postData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","patchData","response","console","log","MastersCard","handleChange","event","setState","target","name","value","state","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","getPhone","share","bridge","send","activeMaster","_id","result","openSnackAvatar","avatarLink","loadFavs","includes","countFavs","isLoad","changeVisible","index","push","isChange","indexOf","splice","sendMessage","firstname","lastname","sendtitle","phone","vkUid","Math","random","snackbar","mess","userId","userVkUid","masterId","masterVkUid","catch","e","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","activeMasterId","setActiveMaster","count","text","after","src","size","marginTop","photo","description","brand","bottomContent","before","expandable","openComments","indicator","comments","length","photos","slice","map","photoUrl","key","backgroundImage","backgroundSize","openPhoto","separator","priceList","item","multiline","price","header","images","reverse","start_index","image","openShowImages","gridPhoto","sendComment","rating","Number","isCommended","bodyComment","commentsArr","countComments","arr","date","comDate","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","step","min","max","top","status","bottom","replace","placeholder","commentList","validate","News","addFav","group_id","inGroup","feedList","icon","action","feed","vertical","isMaster","openReg","Invite","regMaster","targetCity","checkLicense","statusMessage","cat","subcat","categories","filter","active","id","label","sex","location","country","city","closeReg","error","permMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","i","subcategory","asideContent","checked","Lk","addToFavApp","connection","tmpUser","isUser","favsArr","mastersArr","openSetting","margin","openFavourite","activePanel","subheader","actions","openMasterPhoto","openFindModel","Spin","spinner","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","CityListModal","search","cities","getCities","toLowerCase","items","updateModalHeight","Fragment","region","changeTargetCity","withModalRootContext","saveChanges","visible","onRemove","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","checkBan","banned","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","prevProps","prevState","snapshot","Array","isArray","modalBack","activeModal","dynamicContentHeight","ANDROID","right","String","removable","require","stretched","onSubmit","handleSubmit","Favourite","loadFavsMasters","ids","isLoaded","err","openFavMasterOnId","FindList","findArr","find","openMasterOnId","HeadCity","FindModel","loadFind","changeFindModelsList","findModelsList","scroll","window","scrollTo","changeFindModelsListScroll","self","pageYOffset","userCity","FindModelMaster","findId","save","isActive","f","img","Partners","asideMode","addToCommunity","CityList","Modal","pageId","leftButton","rightButton","content","MastersList","setBottom","setTitle","mastersList","undefined","ratingArr","reduce","a","b","openPanelMaster","renderMasters","countSubcat","ScrollSubcat","subcatStyle","flexShrink","targetCategory","Masters","loadList","changeMastersList","buttonSubcat","currentTarget","backgroundColor","filteredList","changeMasterslistScroll","forEach","changeCategory","CategoriesList","loadCategories","setCategory","initialState","mastersListScroll","findModelsListScroll","newMastersList","payload","changeTargetCategory","newTargetCategory","newTargetCity","newScroll","newFindModelsList","newFindModelsListScroll","App","verifiedUser","vkUser","usersArr","regNewUser","first_name","last_name","photo_200","openAlert","actionsLayout","autoclose","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeStory","activeViewMasters","activePanelLk","openStory","storyName","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","onStoryChange","setActiveModal","linkParams","masterid","dataset","story","tabbar","selected","data-story","activeView","modal","vk_is_favorite","connect","dispatch","bindActionCreators","Boolean","hostname","match","store","createStore","hash","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.def3d87d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, IOS, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nconst osname = platform();\r\n\r\nclass Head extends React.Component {\r\n    render(){\r\n        return (\r\n            <PanelHeader\r\n                theme=\"light\"\r\n                left={<PanelHeaderButton onClick={this.props.goBack}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                addon={<PanelHeaderButton onClick={this.props.goBack}>Назад</PanelHeaderButton>}\r\n            >{this.props.title}\r\n            </PanelHeader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head;","//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    }\r\n};","import {BACKEND} from \"../func/func\";\r\nimport {Snackbar} from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\n\r\nfunction postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }); // парсит JSON ответ в Javascript объект\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, Alert, Input,FormLayout\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData} from \"../elements/functions\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(BACKEND.masters.onID + this.props.activeMasterId);\r\n        fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.setActiveMaster(master);\r\n                this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            patchData(BACKEND.users+'/'+this.state.user._id, this.state.user);\r\n            if (this.state.isFavourite === true) {\r\n                let count = {count: 1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //прибавляем счетчик мастера\r\n            } else {\r\n                let count = {count: -1};\r\n                patchData(BACKEND.masters.subscribers+this.state.activeMaster._id, count);\r\n                //убавляем счетчик\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        console.log(this.state);\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button onClick={() => this.getPhone(title)}>Записаться</Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        console.log(this.state.activeMaster);\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Вы подписались на обновления мастера.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange, user: user}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранного.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({phone: result.phone_number});\r\n                //this.sendMessage();\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                <Cell>\r\n                                    {this.favStatus()}\r\n                                    <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card size=\"s\">\r\n                                                        <div key={index} style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover'}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div>\r\n                        }\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={'От ' + item.price + \" рублей\"}\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                    <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                    </Cell>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout, Snackbar\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 3,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({commentsArr: this.props.activeMaster.comments, countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 200) throw 'Длина отзыва ограничена 200 символами.';\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n            this.setState({isCommended: true});\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.sendMessage(data.body);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    sendMessage = (bodyComment) => {\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        let message = \"Привет! У тебя новый отзыв: \"+bodyComment;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={this.getDate(comment.date)}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={1}\r\n                            max={5}\r\n                            value={Number(this.state.rating)}\r\n                            onChange={rating=>this.setState({rating})}\r\n                            top=\"Оцените работу мастера\"\r\n                        />\r\n                        <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            value={this.state.body}\r\n                            status={this.state.body.length > 20 ? 'valid' : 'error'}\r\n                            bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Символов: '+this.state.body.replace(/ /g, \"\").length+' из 50' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar, PanelSpinner, Spinner, FixedLayout,CardGrid,Card,Button\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        }).then(result=>this.setState({inGroup: result}));\r\n    }\r\n\r\n    addFav = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        }).then(result=>this.setState({inGroup: result}));\r\n    };\r\n    feedList = () => {\r\n        if(this.state.inGroup){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                    header=\"Привет!\"\r\n                >\r\n                    Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return(\r\n                <Placeholder\r\n                    icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                    header=\"Привет!\"\r\n                    action={<Button onClick={this.addFav} size=\"l\">Вступить в группу</Button>}\r\n                >\r\n                    Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным. Вступайте в нашу группу Вконтакте, чтобы не пропустить важные обновления!\r\n                </Placeholder>\r\n            )\r\n        }\r\n\r\n\r\n            // this.state.feed.map(feed=>{\r\n            //     return (\r\n            //         <CardGrid>\r\n            //             <Card key={feed} size=\"l\" mode=\"shadow\">\r\n            //                 <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n            //             </Card>\r\n            //         </CardGrid>\r\n            //     )\r\n            // })\r\n    };\r\n    render(){\r\n        return (\r\n            <Group>\r\n                <FixedLayout vertical=\"bottom\">\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <Cell\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                  description={\r\n                                      this.props.user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                                  }\r\n                                  //bottomContent={}\r\n                                  before={<Avatar src={this.props.user.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                            >{this.props.user.firstname} {this.props.user.lastname}\r\n                            </Cell>\r\n                            {this.props.user.isMaster === false &&\r\n                                <Cell\r\n                                    multiline\r\n                                    onClick={this.props.openReg}\r\n                                    before={<Icon24UserOutgoing/>}\r\n                                    expandable\r\n                                >\r\n                                    Если вы - мастер, пройдите простую процедуру регистрации\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                </FixedLayout>\r\n                {this.feedList()}\r\n            </Group>\r\n            // <Div>\r\n            //         <Group>\r\n            //             {\r\n            //                 this.props.user.firstname === '???' ?\r\n            //                     <Placeholder >\r\n            //                         <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            //                     </Placeholder> :\r\n            //                     <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n            //                         Привет, {this.props.user.firstname}!\r\n            //                     </Placeholder>\r\n            //             }\r\n            //             <Cell multiline>\r\n            //                 Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по\r\n            //                 любой области косметологии или предложить свои услуги.\r\n            //             </Cell>\r\n            //         </Group>\r\n            //     {this.props.user.isMaster === false &&\r\n            //     <FixedLayout vertical=\"bottom\">\r\n            //         <Cell\r\n            //             multiline\r\n            //             onClick={this.props.openReg}\r\n            //             before={<Icon24UserOutgoing/>}\r\n            //             expandable\r\n            //         >\r\n            //             Если вы - мастер, пройдите простую процедуру регистрации\r\n            //         </Cell>\r\n            //     </FixedLayout>\r\n            //     }\r\n            //     <Separator wide />\r\n            // </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar, Input} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.permMessage();\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n                console.log('State on load', this.state)\r\n            });\r\n\r\n    }\r\n\r\n    regMaster = () => {\r\n        console.log('click');\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                firstname: this.props.user.firstname,\r\n                lastname: this.props.user.lastname,\r\n                description: this.state.description,\r\n                vkUid: this.props.user.vkUid,\r\n                type: this.state.type,\r\n                avatarLink: this.props.user.avatarLink,\r\n                sex: this.props.user.sex,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                //categories: this.state.categories,\r\n                categories: cat,\r\n                brand: this.state.brand\r\n            };\r\n            master.location.city = this.props.targetCity;\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    // permPhoto = () => {\r\n    //     bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n    //         .then(data => {\r\n    //             console.log(data);\r\n    //             this.setState({statusPhoto: data.result})\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    console.log(result);\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    multiline*/}\r\n                            {/*    onClick={this.permPhoto}*/}\r\n                            {/*    description=\"Для загрузки фото в портфолио\"*/}\r\n                            {/*    bottom={this.state.statusPhoto === false && 'Доступ обязателен для регистрации'}*/}\r\n                            {/*>Доступ к загрузке фотографий в альбом приложения - {this.state.statusPhoto === true ? 'Разрешен' : 'Не разрешен'}</Cell>*/}\r\n                            <Cell\r\n                                expandable\r\n                                onClick={this.props.changeCity}\r\n                                indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                            >\r\n                                Ваш город\r\n                            </Cell>\r\n                            <Cell\r\n                                expandable\r\n                                multiline\r\n                                onClick={this.permMessage}\r\n                                description=\"Для получения уведомлений о заявках\"\r\n                                status={this.state.statusMessage === true ? 'valid' : 'error'}\r\n                                bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                            >Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? 'Разрешен' : 'Не разрешен'}</Cell>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    bottomContent={this.state.user.isMaster && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport spinner from \"./img/spinner.svg\";\r\n\r\nexport default function Spin(props){\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n            <img src={spinner}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spin/>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    Spinner,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\n\r\nconst osname = platform();\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n                    .then(res => res.json())\r\n                    .then(activeMaster => {\r\n                        if (activeMaster.length === 0) {\r\n                            this.setState({isLoad: true});\r\n                            return null\r\n                        } else {\r\n                            console.log(activeMaster[0]);\r\n                            this.setState({\r\n                                activeMaster: activeMaster[0],\r\n                                description: activeMaster[0].description,\r\n                                isMaster: true,\r\n                                isLoad: true\r\n                            }, () =>this.setActive(activeMaster[0].categories.subcat));\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            console.log('город был изменен');\r\n            let activeMaster = this.state.activeMaster;\r\n            activeMaster.location.city = this.props.targetCity;\r\n            this.setState({activeMaster: activeMaster})\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        console.log('saving');\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster);\r\n        this.props.snackbar('Изменения сохранены');\r\n    };\r\n\r\n    setActive(subcat){\r\n        console.log(subcat);\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.activeMaster.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        //activeMaster.location.city = this.props.targetCity;\r\n        console.log(activeMaster);\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.modalBack();\r\n                this.props.snackbar('Изменения сохранены');\r\n                //this.props.popout();\r\n                //console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    };\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        console.log('Active master ',this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.activeMaster.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.activeMaster.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        // if (this.counter(indexCat) > 0) {\r\n        //     this.state.categories[indexCat].active = true;\r\n        // } else {\r\n        //     this.state.categories[indexCat].active = false;\r\n        // }\r\n        this.setState({categories: categories},()=>console.log(this.state))\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.activeMaster;\r\n        master.location.city = city;\r\n        this.setState({activeMaster: master});\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return null\r\n        } else if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <ModalRoot\r\n                        activeModal={this.props.activeModal}\r\n                        onClose={this.saveChanges}\r\n                    >\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'setting'}\r\n                                   onClose={this.saveChanges}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={this.saveChanges}>{'Сохранить'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={this.saveChanges}>{osname === IOS ? 'Сохранить' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Настройки\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={\r\n                                        this.state.activeMaster.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                                    }\r\n                                    before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.props.changeModal('changeCity')}\r\n                                    indicator={this.state.activeMaster.location.city === typeof String ? 'Не выбрано' : this.state.activeMaster.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.activeMaster.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.activeMaster.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\">\r\n                                                <Cell\r\n                                                    key={item}\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    removable\r\n                                                    onRemove={() => {\r\n                                                        this.onRemove(index)\r\n                                                    }}>\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add &&\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdTitle\"\r\n                                                type=\"text\"\r\n                                                value={this.state.newProdTitle}\r\n                                                placeholder={'Введите название'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Textarea\r\n                                                require\r\n                                                name=\"newProdBody\"\r\n                                                value={this.state.newProdBody}\r\n                                                placeholder={'Укажите описание'}\r\n                                                onChange={this.handleChange}/>\r\n                                            <Input\r\n                                                require\r\n                                                name=\"newProdPrice\"\r\n                                                type=\"number\" value={this.state.newProdPrice}\r\n                                                placeholder={'Укажите цену'}\r\n                                                onChange={this.handleChange}/>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div>\r\n                                    }\r\n                                </Group>\r\n                                <Group>\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                </Group>\r\n                                <Group>\r\n                                    <FormLayout onSubmit={this.handleSubmit}>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    </ FormLayout>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={this.checkSubcat}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                </Group>\r\n                            </Div>\r\n                        </ModalPage>\r\n                        <ModalPage dynamicContentHeight\r\n                                   id={'changeCity'}\r\n                                   onClose={() => this.props.changeModal('setting')}\r\n                                   header={\r\n                                       <ModalPageHeader\r\n                                           left={osname === ANDROID &&\r\n                                           <PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{'Назад'}</PanelHeaderButton>}\r\n                                           right={<PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{osname === IOS ? 'Назад' :\r\n                                               <Icon24Done/>}</PanelHeaderButton>}\r\n                                       >\r\n                                           Выбор города\r\n                                       </ModalPageHeader>\r\n                                   }\r\n                        >\r\n                            <CityListModal dynamicContentHeight\r\n                                           changeTargetCity={(city) => this.changeCity(city)}\r\n                            />\r\n                        </ModalPage>\r\n                    </ModalRoot>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport default withModalRootContext (Lk);","import React from 'react';\r\nimport {\r\nCell, Avatar, Card, CardGrid\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (<Spin/>)\r\n        } else {\r\n            if(this.state.mastersArr.message === 'Список избранного пуст') {\r\n                return (\r\n                        <CardGrid>\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell multiline align=\"center\">\r\n                                    {this.state.mastersArr.message}\r\n                                </Cell>\r\n                            </Card>\r\n                        </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master._id}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                              photo={master.avatarLink}\r\n                                              description={master.type}\r\n                                              before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                              onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >{master.firstname} {master.lastname}\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Button, Cell, Group, Placeholder, Separator,CardGrid,Card} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport {BACKEND} from \"../../func/func\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\nfunction renderLastPhoto(arr){\r\n    for (let i =0; i<arr.length; i++){\r\n        if (!arr[i]) break;\r\n        return (\r\n            <Card\r\n                size=\"s\"\r\n                mode=\"shadow\"\r\n                key={i}\r\n                //onClick={() => this.openShowImages(this.state.images, index)}\r\n            >\r\n                <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function FindList(props){\r\n    console.log(props);\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <CardGrid key={find._id}>\r\n                        <Card size=\"l\">\r\n                                <Cell expandable\r\n                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                      description={getDate(find.date)}\r\n                                      before={<Avatar src={find.avatarLink} size={50}/>}\r\n                                      size=\"l\"\r\n                                      onClick={() => props.openMasterOnId(find.masterId)}\r\n                                      bottom=\"\"\r\n                                >{find.firstname} {find.lastname}\r\n                                </Cell>\r\n                                <Cell multiline>\r\n                                    {find.body}\r\n                                </Cell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nexport default function HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport Spin from '../elements/spinner'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.scroll){\r\n                    console.log('scroll');\r\n                    window.scrollTo(0, this.props.scroll)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            console.log('chnge city');\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    this.setState({findArr: find, isLoad: true});\r\n                    this.props.changeFindModelsList(find);\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spin/>)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        userCity={this.props.user.location.city}\r\n                        targetCity={this.props.targetCity}\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={()=>this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner, CardGrid, Card, File, Snackbar, Div, PanelSpinner\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0]});\r\n                fetch(BACKEND.findModel.onMasterId+activeMaster[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        if (find.length > 0) {\r\n                            this.setState({body:find[0].body, error: '', isLoaded: true, isActive: true, loadFind: find[0]});\r\n                        } else {\r\n                            let error = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({error: error, isLoaded: true});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.openSnack(response.message);\r\n                //console.log(response);\r\n                fetchJsonp(response.saveUrl, {\r\n                    mode: 'no-cors',\r\n                    method: 'GET'\r\n                })\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        //console.log(result);\r\n                        let newImg = result.response[0].sizes[2].url;\r\n                        let imgArr = this.state.images;\r\n                        imgArr.unshift(newImg);\r\n                        this.setState({images: imgArr});\r\n                        let data = {\r\n                            findId: this.state.loadFind,\r\n                            newImg: newImg\r\n                        };\r\n                        //console.log(data);\r\n                        fetch(BACKEND.vkapi.savePhotoFindModels, {\r\n                            mode: 'cors', // no-cors, cors, *same-origin\r\n                            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                            credentials: 'same-origin', // include, *same-origin, omit\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                            },\r\n                            method: 'POST',\r\n                            body: JSON.stringify(data),\r\n                            redirect: 'follow', // manual, *follow, error\r\n                            referrer: 'no-referrer', // no-referrer, *client\r\n                        })\r\n                            .then(result => result.json())\r\n                            .then(result => {\r\n                                this.openSnack(result.message);\r\n                                console.log(result.url);\r\n                                let loadFind = this.state.loadFind;\r\n                                loadFind.images.push(result.url);\r\n                                this.setState({loading: false, loadFind: loadFind});\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n\r\n                    })\r\n                    .catch(error => this.openSnack(error))\r\n            })\r\n            .catch(error => this.openSnack(error))\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.activeMaster._id,\r\n            body: this.state.body,\r\n            location: this.state.activeMaster.location,\r\n            firstname: this.state.activeMaster.firstname,\r\n            lastname: this.state.activeMaster.lastname,\r\n            avatarLink: this.state.activeMaster.avatarLink\r\n        };\r\n        if (this.state.isActive === true) {\r\n            let f =this.state.loadFind;\r\n            f.body = this.state.body;\r\n            this.setState({loadFind: f});\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.props.popout();\r\n            })\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spin />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                {\r\n                    this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div> :\r\n                        <FormLayout>\r\n                            <FormLayoutGroup>\r\n                                <Cell>Добавить / изменить</Cell>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Добавить фото\r\n                                </File>\r\n                            </FormLayoutGroup>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <CardGrid>\r\n                                    <Cell>Ваш активный поиск:</Cell>\r\n                                    <Card size='l'>\r\n                                        <Cell expandable\r\n                                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                              description={'Так будет выглядеть запрос в ленте'}\r\n                                              before={<Avatar src={this.state.loadFind.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                        >{this.state.loadFind.firstname} {this.state.loadFind.lastname}\r\n                                        </Cell>\r\n                                        <Cell multiline>\r\n                                            {this.state.body}\r\n                                        </Cell>\r\n                                        {\r\n                                            Array.isArray(this.state.loadFind.images) &&\r\n                                            this.state.loadFind.images.map(img=>{\r\n                                                return <Avatar src={img} size={50}/>\r\n                                            })\r\n                                        }\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            }\r\n                            {this.state.snackbar}\r\n                        </FormLayout>\r\n                }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    asideMode=\"dismiss\"\r\n                    subheader=\"Если вы являетесь владельцем сообщества со схожей тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: true,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 1, title: 'Другой город'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items, isLoad: true}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                    {this.state.cities.length > 0 &&\r\n                    <List>\r\n                        {this.state.cities.map(city =>\r\n                            <Cell\r\n                                description={city.region || ''}\r\n                                onClick={()=>this.props.changeCity(city)}\r\n                                key={city.id}\r\n                            >\r\n                                {city.title}\r\n                            </Cell>\r\n                        )}\r\n                    </List>\r\n                    }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {ANDROID, IOS, ModalPage, ModalPageHeader, ModalRoot, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nconst osname = platform();\r\n\r\nexport default function Modal(props){\r\n    return(\r\n        <ModalRoot\r\n            activeModal={props.activeModal}\r\n            onClose={props.onClose}\r\n        >\r\n            <ModalPage dynamicContentHeight\r\n                       id={props.pageId}\r\n                       onClose={props.onClose}\r\n                       header={\r\n                           <ModalPageHeader\r\n                               left={osname === ANDROID && props.leftButton &&\r\n                               <PanelHeaderButton onClick={props.onClose}>{'Сохранить'}</PanelHeaderButton>}\r\n                               right={props.rightButton && <PanelHeaderButton onClick={props.onClose}>{osname === IOS  ? 'Сохранить' :\r\n                                   <Icon24Done/>}</PanelHeaderButton>}\r\n                           >\r\n                               {props.header}\r\n                           </ModalPageHeader>\r\n                       }\r\n            >\r\n                {props.content}\r\n            </ModalPage>\r\n        </ModalRoot>\r\n    )\r\n}","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArr = master.comments.map(comment => {\r\n                return Number(comment.rating)\r\n            });\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Counter, HorizontalScroll} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nexport default function ScrollSubcat(props){\r\n    console.log(props);\r\n    const subcatStyle = {\r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        fontSize: 10\r\n    };\r\n    if(props.targetCategory._id!=='all'){\r\n        return(\r\n            <HorizontalScroll>\r\n                <div style={{display: 'flex'}}>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <div style={{subcatStyle}} key={subcat._id}>\r\n                                    <Button\r\n                                        after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                        id={subcat._id}\r\n                                        onClick={props.checkSubcat}\r\n                                        style={{margin: '4px 4px 0px 0px'}}\r\n                                        mode=\"outline\"\r\n                                    >\r\n                                        {subcat.label}\r\n                                    </Button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {Group, Header, PanelHeader, SelectMimicry, Cell, Spinner} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\n\r\nexport default class Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('store',this.props);\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.scroll){\r\n                    console.log('scroll');\r\n                    window.scrollTo(0, this.props.scroll)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            console.log('chnge city');\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        let buttonSubcat = document.getElementById(e.currentTarget.id);\r\n        if(buttonSubcat.style.backgroundColor==='lavender'){\r\n            buttonSubcat.style.backgroundColor='#fff';\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            buttonSubcat.style.backgroundColor='lavender';\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <PanelHeader>Мастера</PanelHeader>\r\n                <HeadCity\r\n                    targetCity={this.props.targetCity}\r\n                    changeCity={()=>this.props.changeCity()}\r\n                />\r\n                <SelectMimicry\r\n                    top=\"Выберите категорию\"\r\n                    placeholder=\"Показаны мастера всех категорий\"\r\n                    onClick={this.props.user.location.city === 'Не определено' ?\r\n                        this.props.openSnack('Сначала выберите город') :\r\n                        this.props.changeCategory\r\n                    }\r\n                >{this.props.targetCategory.label}</SelectMimicry>\r\n                {\r\n                    this.props.targetCategory && this.state.isLoad &&\r\n                    <ScrollSubcat\r\n                        targetCategory={this.props.targetCategory}\r\n                        mastersList={this.props.mastersList}\r\n                        checkSubcat={(e)=>this.checkSubcat(e)}\r\n                    />\r\n                }\r\n                    {\r\n                        this.state.isLoad ?\r\n                        <MastersList\r\n                            openSnack={this.props.openSnack}\r\n                            mastersList={this.state.filteredList}\r\n                            category={this.props.targetCategory}\r\n                            city={this.props.user.location.city}\r\n                            openPanelMaster={this.props.openPanelMaster}\r\n                        /> :\r\n                            <Spin/>\r\n                    }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nexport default class CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\n\r\nconst initialState = {\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            return {...state, targetCity: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL\r\n} from \"./reducers\";\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST', newMastersList);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY', newTargetCategory);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY', newTargetCity);\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL', newScroll);\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST', newFindModelsList);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL', newFindModelsListScroll);\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Alert,\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './/js/masters/mastersComments.js';\r\n//import Idea from './js/ideaidea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Modal from './js/elements/modalPage'\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport CityListModal from \"./js/elements/cityListModal\";\r\nimport {postData, patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport spinner from './js/elements/img/spinner.svg'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll} from \"./store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            user: '',\r\n            mastersList: null,\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ],\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about'\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.modalBack = () => {\r\n            this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data => {\r\n                //console.log(data);\r\n                //this.setState({vkuser: data});\r\n                this.verifiedUser(data);\r\n            });\r\n        if (this.props.params) {\r\n            postData(BACKEND.logs.params, this.props.params);\r\n        }\r\n        if (this.props.linkParams.masterid) {\r\n            console.log('В параметры пришел мастер');\r\n            this.openMasterOnLink(this.props.linkParams.masterid)\r\n        }\r\n    }\r\n\r\n    verifiedUser = (vkUser) => {\r\n         fetch(BACKEND.users + '/vkuid/' + vkUser.id)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0) {\r\n                    this.regNewUser();\r\n                } else {\r\n                    let targetCity = typeof usersArr[0].location.city !== 'object' ? 'Не выбрано' : usersArr[0].location.city;\r\n                    this.props.changeTargetCity(targetCity);\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.openSnack('Отсутствует соединение с базой пользователей.');\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    }\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n\r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    regNewUser = () => {\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => {\r\n            console.log('Данные с моста', data);\r\n            const user = {\r\n                vkUid: data.id,\r\n                firstname: data.first_name,\r\n                lastname: data.last_name,\r\n                avatarLink: data.photo_200,\r\n                sex: data.sex,\r\n                location: {\r\n                    country: data.country || 'Не определен',\r\n                    city: data.city || 'Не определен'\r\n                },\r\n                isMaster: false\r\n            };\r\n            this.setState({user: user});\r\n            postData(BACKEND.users, user); //регитрируем\r\n        });\r\n    };\r\n\r\n    openAlert = (title, body, action) => {\r\n        this.setState({\r\n            popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={() => this.setState({popout: null})}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    // closeAlert = () => {\r\n    //     this.setState({ popout: null });\r\n    // };\r\n    closeReg = (master) => {\r\n        console.log(master);\r\n        postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({user: user, activeViewLk: 'lk'});\r\n        // //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n    };\r\n    // change = (story, view, panel) => {\r\n    //     this.setState({ story: story });\r\n    //     this.setState({ story: story });\r\n    //     this.setState({ story: story });\r\n    // };\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({activeMaster: master, activeMasterId: master._id, activePanelMasters: panelName});\r\n    };\r\n    // openMaster = (master) => {\r\n    //     this.setState({ activeViewMasters: 'mastersList' });\r\n    //     this.setState({ activeStory: 'masters' });\r\n    //     this.setState({ activePanelMasters: 'masterInfo' });\r\n    //     this.setState({ activeMaster: master });\r\n    // };\r\n    openMasterOnId = (masterId) => {\r\n        this.setState({activePanelFindModels: 'masterInfo', activeMasterId: masterId});\r\n    };\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        this.setState({activeMasterId: masterId, activePanelLk: 'masterInfo'});\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.state.user;\r\n        user.location.city = city;\r\n        this.setState({user:user}, () => this.setActiveModal(null));\r\n        patchData(BACKEND.users+'/'+user._id, user);\r\n        this.props.changeTargetCity(city);\r\n    }\r\n\r\n    render() {\r\n        const {mastersList} = this.props;\r\n        if (this.state.user === '') {\r\n            return (\r\n                // <Placeholder icon={<Spinner size=\"large\" style={{marginTop: 20}}/>}>\r\n                <Placeholder icon={<img src={spinner}/>}>\r\n                    Выполняется вход...\r\n                    {this.state.snackbar}\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"News\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" activePanel=\"news\">\r\n                        <Panel id=\"news\">\r\n                            <PanelHeader>Навигатор красоты</PanelHeader>\r\n                            <News openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                  user={this.state.user} openStory={this.openStory}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <Root\r\n                        id=\"masters\"\r\n                        activeView={this.state.activeViewMasters}\r\n                        modal={\r\n                            <Modal\r\n                                header={'Выбор города'}\r\n                                activeModal={this.state.activeModal}\r\n                                pageId={'cityList'}\r\n                                onClose={()=>this.setActiveModal(null)}\r\n                                content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                                leftButton={false}\r\n                                rightButton={false}\r\n                            />\r\n                        }\r\n                    >\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <Masters\r\n                                    user={this.state.user}\r\n                                    changeCity={() => this.setActiveModal('cityList')}\r\n                                    targetCity={this.props.targetCity}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    changeCategory={()=>this.setState({activeViewMasters: 'masterCat'})}\r\n                                    targetCategory={this.props.targetCategory}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                    mastersList={mastersList}\r\n                                    changeMastersList={(newMastersList)=>this.props.changeMastersList(newMastersList)}\r\n                                    changeMasterslistScroll={(scroll)=>this.props.changeMasterslistScroll(scroll)}\r\n                                    scroll={this.props.mastersListScroll}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head title={'О мастере'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'mastersList'})}/>\r\n                                <MasterCard\r\n                                    openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    user={this.state.user}\r\n                                    openComments={() => this.setState({activePanelMasters: 'masterComments'})}\r\n                                    activeMasterId={this.state.activeMasterId}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'masterInfo'})}/>\r\n                                <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                />\r\n                                <MasterComments\r\n                                    user={this.state.user}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        targetCategory={this.props.targetCategory}\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.setState({activeViewMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.state.activePanelFindModels}\r\n                        modal={\r\n                            <Modal\r\n                                header={'Выбор города'}\r\n                                activeModal={this.state.activeModal}\r\n                                pageId={'cityList'}\r\n                                onClose={()=>this.setActiveModal(null)}\r\n                                content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                                leftButton={false}\r\n                                rightButton={false}\r\n                            />\r\n                        }\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                            <FindModel\r\n                                openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                user={this.state.user}\r\n                                changeCity={() => this.setActiveModal('cityList')}\r\n                                targetCity={this.props.targetCity}\r\n                                changeFindModelsList={(find)=>this.props.changeFindModelsList(find)}\r\n                                findModelsList={this.props.findModelsList}\r\n                                scroll={this.props.findModelsListScroll}\r\n                                changeFindModelsListScroll={(scroll)=>this.props.changeFindModelsListScroll(scroll)}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head\r\n                                title={'О мастере'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'findmodel'})}\r\n                            />\r\n                            <MasterCard\r\n                                openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                user={this.state.user}\r\n                                activeMasterId={this.state.activeMasterId}\r\n                                openComments={() => this.setState({activePanelFindModels: 'masterComments'})}\r\n                                setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}\r\n                            />\r\n                            <MasterComments\r\n                                user={this.state.user}\r\n                                activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout} modal={\r\n                            <Setting\r\n                                snackbar={(message) => this.openSnack(message)}\r\n                                modalBack={this.modalBack}\r\n                                activeModal={this.state.activeModal}\r\n                                user={this.state.user}\r\n                                changeModal={(name) => this.setActiveModal(name)}\r\n                            />\r\n                        }>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader>Личный кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнерам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            user={this.state.user}\r\n                                            openSetting={() => this.setActiveModal('setting')}\r\n                                            //openSetting={() => this.setState({activePanelLk: 'setting'})}\r\n                                            openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                            openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                            openMasterPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head\r\n                                    title={'Избранное'}\r\n                                    goBack={() => this.setState({activePanelLk: 'lk'})}\r\n                                />\r\n                                <Favourite\r\n                                    user={this.state.user}\r\n                                    openFavMasterOnId={this.openFavMasterOnId}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head\r\n                                    title={'О мастере'}\r\n                                    goBack={() => this.setState({activePanelLk: 'favourite'})}\r\n                                />\r\n                                <MasterCard\r\n                                    openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                    user={this.state.user}\r\n                                    activeMasterId={this.state.activeMasterId}\r\n                                    openComments={() => this.setState({activePanelLk: 'masterComments'})}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Portfolio user={this.state.user}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head title={'Мастер ищет модель'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                            </Panel>\r\n                            {/*<Panel id='setting'>*/}\r\n                            {/*    <Head title={'Настройки'} goBack={() => this.setState({activePanelLk: 'lk'})}/>*/}\r\n                            {/*    <Setting*/}\r\n                            {/*        targetCity={this.props.targetCity}*/}\r\n                            {/*        user={this.state.user}*/}\r\n                            {/*        popout={this.openAlert}*/}\r\n                            {/*        changeCity={() => this.setState({activePanelLk: 'changeCity'})}*/}\r\n                            {/*    />*/}\r\n                            {/*</Panel>*/}\r\n                            {/*<Panel id='changeCity'>*/}\r\n                            {/*    <Head title={'Выбор города'}*/}\r\n                            {/*          goBack={() => this.setState({activePanelLk: 'setting'})}/>*/}\r\n                            {/*    <CityList changeCity={(city) => this.setState({*/}\r\n                            {/*        targetCity: city,*/}\r\n                            {/*        activePanelLk: 'setting'*/}\r\n                            {/*    })}/>*/}\r\n                            {/*</Panel>*/}\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id=\"registration\">\r\n                            <Panel id='registration'>\r\n                                <Head title={'Регистрация'} goBack={() => this.setState({activeViewLk: 'lk'})}/>\r\n                                <Invite targetCity={this.props.targetCity}\r\n                                        user={this.state.user}\r\n                                        closeReg={this.closeReg}\r\n                                        changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                        snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelReg: 'registration'})}/>\r\n                                <CityList changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.setState({activePanelReg: 'registration'})\r\n                                }}/>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./store/reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nbridge.send(\"VKWebAppInit\", {})\r\n    .then(data => console.log('Инициализировали апи вк? '+data.result));\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}><App linkParams={linkParams} params={params} /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}