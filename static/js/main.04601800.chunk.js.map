{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/masters/panelMasterList.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/elements/cityList.js","js/elements/modalPage.js","js/elements/functions.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["osname","platform","Head","theme","left","onClick","this","props","goBack","IOS","addon","title","React","Component","BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","getAll","logs","params","subcatStyle","flexShrink","display","flexDirection","alignItems","fontSize","MastersCard","handleChange","event","setState","target","name","value","console","log","state","favStatus","isFavourite","status","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","getPhone","share","bridge","send","activeMaster","_id","then","result","openSnackAvatar","avatarLink","loadFavs","fetch","res","json","favsArr","count","length","countFavs","isLoad","map","fav","userId","id","changeVisible","index","userVkUid","vkUid","masterId","masterVkUid","postData","sendMessage","firstname","lastname","sendtitle","phone","Math","random","snackbar","mess","catch","e","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","activeMasterId","priceList","text","after","src","size","url","data","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","marginTop","photo","description","brand","bottomContent","before","expandable","openComments","indicator","comments","photos","slice","photoUrl","key","backgroundImage","backgroundSize","openPhoto","separator","item","multiline","price","header","images","reverse","start_index","image","openShowImages","gridPhoto","sendComment","rating","Number","isCommended","bodyComment","author","date","Date","now","commentsArr","countComments","arr","push","comDate","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","color","step","min","max","top","bottom","replace","placeholder","commentList","validate","News","addFav","group_id","feedList","icon","action","feed","vertical","isMaster","openReg","Invite","regMaster","targetCity","checkLicense","statusMessage","cat","subcat","categories","filter","active","label","sex","location","country","city","closeReg","error","permMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","i","subcategory","asideContent","checked","Lk","connection","tmpUser","isUser","mastersArr","openSetting","margin","openFavourite","activePanel","openMasterPhoto","openFindModel","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","CityListModal","search","cities","getCities","toLowerCase","items","updateModalHeight","Fragment","region","changeTargetCity","withModalRootContext","saveChanges","patchData","visible","onRemove","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","checkBan","banned","changeModal","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","prevProps","prevState","snapshot","includes","modalBack","activeModal","dynamicContentHeight","ANDROID","right","String","removable","require","stretched","onSubmit","handleSubmit","Favourite","loadFavsMasters","isLoaded","openFavMasterOnId","FindList","findArr","find","openMasterOnId","HeadCity","userCity","FindModel","mastersList","FindModelMaster","save","loadFind","f","activeFind","CityList","Modal","pageId","leftButton","rightButton","content","MastersList","setBottom","ratingArr","reduce","a","b","openPanelMaster","renderMasters","countSubcat","ScrollSubcat","targetCategory","Masters","loadList","setTitle","buttonSubcat","currentTarget","backgroundColor","indexOf","splice","undefined","filteredList","forEach","changeCategory","spinner","CategoriesList","loadCategories","setCategory","App","verifiedUser","vkUser","usersArr","regNewUser","Object","first_name","last_name","photo_200","openAlert","actionsLayout","actions","autoclose","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeStory","activeViewMasters","activePanelLk","openStory","storyName","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","activePanelReg","baseCities","searchCity","modalHistory","onStoryChange","setActiveModal","linkParams","masterid","dataset","story","setting","tabbar","selected","data-story","activeView","modal","Boolean","window","hostname","match","hash","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.04601800.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, IOS, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nconst osname = platform();\r\n\r\nclass Head extends React.Component {\r\n    render(){\r\n        return (\r\n            <PanelHeader\r\n                theme=\"light\"\r\n                left={<PanelHeaderButton onClick={this.props.goBack}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                addon={<PanelHeaderButton onClick={this.props.goBack}>Назад</PanelHeaderButton>}\r\n            >{this.props.title}\r\n            </PanelHeader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head;","//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    }\r\n};","import React from 'react';\r\nimport {\r\n    Spinner,\r\n    Separator,\r\n    Avatar,\r\n    Button,\r\n    Cell,\r\n    Div,\r\n    Group,\r\n    List,\r\n    Header,\r\n    CardGrid,\r\n    Card,\r\n    Placeholder, Counter, HorizontalScroll\r\n} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nconst subcatStyle = {\r\n    flexShrink: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    fontSize: 10\r\n};\r\n\r\nclass MasterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: null,\r\n            title: '',\r\n            isLoad: false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadList()\r\n        }\r\n\r\n        componentDidUpdate(prevProps, prevState, snapshot) {\r\n            if (prevProps.city !== this.props.city || prevProps.category !== this.props.category) {\r\n                console.log(prevProps, this.props);\r\n                this.loadList()\r\n            }\r\n        }\r\n\r\n    checkSubcat = (e) => {\r\n        let buttonSubcat = document.getElementById(e.currentTarget.id);\r\n        if(buttonSubcat.style.backgroundColor==='lavender'){\r\n            buttonSubcat.style.backgroundColor='#fff';\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            console.log('filter: ', filter);\r\n            this.setState({filter: filter});\r\n        } else {\r\n            buttonSubcat.style.backgroundColor='lavender';\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            console.log('filter: ', filter);\r\n            this.setState({filter: filter});\r\n        }\r\n    };\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            return this.state.mastersList\r\n        } else {\r\n            return this.state.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            })\r\n        }\r\n    }\r\n    loadList = () => {\r\n            if(this.props.category === '') {\r\n                console.log(BACKEND.masters.category+'all/'+this.props.city.id);\r\n                fetch(BACKEND.masters.category+'all/'+this.props.city.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                        console.log(mastersList);\r\n                        this.setState({mastersList: mastersList, isLoad: true});\r\n                        this.setTitle(this.state.mastersList.length);\r\n                    });\r\n            } else {\r\n                console.log(BACKEND.masters.category+this.props.category._id+'/'+this.props.city.id);\r\n                fetch(BACKEND.masters.category+this.props.category._id+'/'+this.props.city.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                        console.log(mastersList);\r\n                        this.setState({mastersList: mastersList, isLoad: true});\r\n                        this.setTitle(this.state.mastersList.length);\r\n                    });\r\n            }\r\n        }\r\n    countSubcat = (id) => {\r\n        let count = 0;\r\n        this.state.mastersList.map((master)=>{\r\n            //console.log(master.categories.subcat, id);\r\n            if (master.categories.subcat){\r\n                if(master.categories.subcat.includes(id)) {\r\n                    //console.log('совпало');\r\n                    count++\r\n                }\r\n            }\r\n        });\r\n        return count\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    setTitle(count) {\r\n        if (count===undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n    renderMaster() {\r\n        if(Array.isArray(this.state.mastersList)) {\r\n            if(this.state.isLoad === false) {\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                        <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (this.props.city==='Не выбрано') {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Где вы?\"\r\n                        >\r\n                            Нам не удалось определить Ваш город, укажите его вручную.\r\n                        </Placeholder>\r\n                    )\r\n                } else if (this.filter().length === 0) {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Не расстраивайтесь\"\r\n                            action={<Button onClick={this.share} size=\"l\">Поделиться</Button>}\r\n                        >\r\n                            В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                            Поделитесь приложением с мастерами, которых Вы знаете.\r\n                        </Placeholder>\r\n                    );\r\n                } else {\r\n                    return this.filter().map(master => {\r\n                        let ratingArr = master.comments.map(comment =>{\r\n                            return Number(comment.rating)\r\n                        });\r\n                        let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n                        let rating = sum/ratingArr.length;\r\n                        //console.log(rating);\r\n                        return (\r\n                                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                                      description={\r\n                                                          master.categories.category.map(category => {\r\n                                                              return category.label+\" \"\r\n                                                          })\r\n                                                      }\r\n                                                      bottomContent={\r\n                                                          this.setBottom(rating, ratingArr.length)\r\n                                                      }\r\n                                                      before={<Avatar src={master.avatarLink} size={70}/>}\r\n                                                      size=\"l\"\r\n                                                      onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                                                >{master.firstname} {master.lastname}\r\n                                                </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HorizontalScroll>\r\n                        <div style={{display: 'flex'}}>\r\n                            {\r\n                                this.props.category &&\r\n                                this.props.category._id !== 'all' ?\r\n                                    this.props.category.subcat.map(subcat=>{\r\n                                        return (\r\n                                            <div style={{subcatStyle}} key={subcat._id}>\r\n                                                <Button\r\n                                                    after={<Counter size='s'>{this.countSubcat(subcat._id)}</Counter>}\r\n                                                    id={subcat._id}\r\n                                                    onClick={this.checkSubcat}\r\n                                                    style={{margin: '4px 4px 0px 0px'}}\r\n                                                    mode=\"outline\"\r\n                                                >\r\n                                                    {subcat.label}\r\n                                                </Button>\r\n                                            </div>\r\n                                        )\r\n                                    }) : null\r\n                            }\r\n                        </div>\r\n                    </HorizontalScroll>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                        {this.renderMaster()}\r\n                        </Group>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MasterList","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, Alert, Input,FormLayout\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {\r\n                priceList: []\r\n            },\r\n            favsArr: [\r\n                {vkUid:12523452}\r\n            ],\r\n            isFavourite: {\r\n                status: false\r\n            },\r\n            isLoad: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.setState({activeMaster: this.props.activeMaster});\r\n        this.loadFavs();\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        console.log(this.state);\r\n    };\r\n    favStatus = () => {\r\n        if(this.state.isFavourite.status === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button onClick={() => this.getPhone(title)}>Записаться</Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        //console.log(BACKEND.favs.master+this.props.activeMaster._id);\r\n        fetch(BACKEND.favs.master+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                this.setState({favsArr: favsArr});\r\n                let count = favsArr.length;\r\n                this.setState({countFavs: count});\r\n                this.setState({isLoad: true})\r\n                this.state.favsArr.map(fav => {\r\n                    if (fav.userId === this.props.user._id) {\r\n                        this.setState({isFavourite: {status: true, id: fav._id}});\r\n                        //console.log('У тебя в избранном');\r\n                    } else {\r\n                        this.setState({isFavourite: {status: false}})\r\n                        //console.log('Нет в избранном');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    }\r\n    checkFavs = () => {\r\n        console.log('прежний статус '+this.state.isFavourite.status);\r\n        if (this.state.isFavourite.status === false) {\r\n            let fav = {\r\n                userId: this.props.user._id,\r\n                userVkUid: this.props.user.vkUid,\r\n                masterId: this.state.activeMaster._id,\r\n                masterVkUid: this.state.activeMaster.vkUid\r\n            };\r\n            this.postData(BACKEND.favs.new, fav, 'POST');\r\n            this.setState({isFavourite: {status: true}});\r\n            this.setState({countFavs: this.state.countFavs+1});\r\n            this.openSnackAvatar('Вы подписались на обновления мастера. Отменить подписку можно во вкладке Кабинет, в разделе Избранное.', this.state.activeMaster.avatarLink);\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({phone: result.phone_number});\r\n                //this.sendMessage();\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    {/*<Input*/}\r\n                    {/*    mask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    inputmask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    name='phone'*/}\r\n                    {/*    type=\"text\"*/}\r\n                    {/*    defaultValue={number || ''}*/}\r\n                    {/*    align=\"center\"*/}\r\n                    {/*    value={this.state.phone}*/}\r\n                    {/*    onChange={this.handleChange}*/}\r\n                    {/*/>*/}\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                <Cell>\r\n                                    {this.favStatus()}\r\n                                    <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card size=\"s\">\r\n                                                        <div key={index} style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover'}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div>\r\n                        }\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={'От ' + item.price + \" рублей\"}\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                    <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                    </Cell>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout, Snackbar\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: {\r\n                id: '1',\r\n                body: 'ТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТест',\r\n                author: 'Тест Тестович',\r\n                date: Date.now()\r\n            },\r\n            body: '',\r\n            commentsArr: [],\r\n            isLoad: false,\r\n            rating: 3,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({commentsArr: this.props.activeMaster.comments});\r\n        //console.log('comments ',   this.props.activeMaster.comments);\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.body.length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.length > 200) throw 'Длина отзыва ограничена 200 символами.';\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n            this.setState({isCommended: true});\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n        // if (this.state.body.length < 50) {\r\n        //     this.setState({ snackbar:\r\n        //             <Snackbar\r\n        //                 layout=\"vertical\"\r\n        //                 onClose={() => this.setState({ snackbar: null })}\r\n        //             >\r\n        //                 Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.\r\n        //             </Snackbar>\r\n        //     });\r\n        // } else {\r\n        //     let comment = {\r\n        //         user: {\r\n        //             userId: this.props.user._id,\r\n        //             firstname: this.props.user.firstname,\r\n        //             lastname: this.props.user.lastname,\r\n        //             avatarLink: this.props.user.avatarLink\r\n        //         },\r\n        //         rating: Number(this.state.rating),\r\n        //         body: this.state.body\r\n        //     };\r\n        //         this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n        //         this.setState({isCommended: true});\r\n        // }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.sendMessage(data.body);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    sendMessage = (bodyComment) => {\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        let message = \"Привет! У тебя новый комментарий: \"+bodyComment;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={this.getDate(comment.date)}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        //console.log(this.props.activeMaster.vkUid, this.props.user.vkUid);\r\n        if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n            )\r\n        }\r\n        else if (this.state.isCommended === true) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <Slider\r\n                        step={1}\r\n                        min={1}\r\n                        max={5}\r\n                        value={Number(this.state.rating)}\r\n                        onChange={rating => this.setState({rating})}\r\n                        top=\"Оцените работу мастера\"\r\n                    />\r\n                    <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                    <Textarea\r\n                        name={'body'}\r\n                        value={this.state.body}\r\n                        status={this.state.body.length > 20 ? 'valid' : 'error'}\r\n                        bottom={this.state.body.length > 20 ? '' : 'Опишите подробнее. Символов: '+this.state.body.replace(/ /g, \"\").length+' из 50' }\r\n                        top={\"Добавление отзыва\"}\r\n                        placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                </FormLayout>\r\n            )\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar, PanelSpinner, Spinner, FixedLayout,CardGrid,Card,Button\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9]\r\n        };\r\n    }\r\n    addFav = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        });\r\n    };\r\n    feedList = () => {\r\n        return(\r\n            <Placeholder\r\n                icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                header=\"Привет!\"\r\n                action={<Button onClick={this.addFav} size=\"l\">Вступить в группу</Button>}\r\n            >\r\n            Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным. Вступайте в нашу группу Вконтакте, чтобы не пропустить важные обновления!\r\n            </Placeholder>\r\n            // this.state.feed.map(feed=>{\r\n            //     return (\r\n            //         <CardGrid>\r\n            //             <Card key={feed} size=\"l\" mode=\"shadow\">\r\n            //                 <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n            //             </Card>\r\n            //         </CardGrid>\r\n            //     )\r\n            // })\r\n        )\r\n    };\r\n    render(){\r\n        return (\r\n            <Group>\r\n                <FixedLayout vertical=\"bottom\">\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <Cell\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                  description={\r\n                                      this.props.user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                                  }\r\n                                  //bottomContent={}\r\n                                  before={<Avatar src={this.props.user.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                            >{this.props.user.firstname} {this.props.user.lastname}\r\n                            </Cell>\r\n                            {this.props.user.isMaster === false &&\r\n                                <Cell\r\n                                    multiline\r\n                                    onClick={this.props.openReg}\r\n                                    before={<Icon24UserOutgoing/>}\r\n                                    expandable\r\n                                >\r\n                                    Если вы - мастер, пройдите простую процедуру регистрации\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                </FixedLayout>\r\n                {this.feedList()}\r\n            </Group>\r\n            // <Div>\r\n            //         <Group>\r\n            //             {\r\n            //                 this.props.user.firstname === '???' ?\r\n            //                     <Placeholder >\r\n            //                         <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            //                     </Placeholder> :\r\n            //                     <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n            //                         Привет, {this.props.user.firstname}!\r\n            //                     </Placeholder>\r\n            //             }\r\n            //             <Cell multiline>\r\n            //                 Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по\r\n            //                 любой области косметологии или предложить свои услуги.\r\n            //             </Cell>\r\n            //         </Group>\r\n            //     {this.props.user.isMaster === false &&\r\n            //     <FixedLayout vertical=\"bottom\">\r\n            //         <Cell\r\n            //             multiline\r\n            //             onClick={this.props.openReg}\r\n            //             before={<Icon24UserOutgoing/>}\r\n            //             expandable\r\n            //         >\r\n            //             Если вы - мастер, пройдите простую процедуру регистрации\r\n            //         </Cell>\r\n            //     </FixedLayout>\r\n            //     }\r\n            //     <Separator wide />\r\n            // </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar, Input} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.permMessage();\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n                console.log('State on load', this.state)\r\n            });\r\n\r\n    }\r\n\r\n    regMaster = () => {\r\n        console.log('click');\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.length < 50) throw 'Блок \"О себе\" должен содержать более 50-ти символов.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                firstname: this.props.user.firstname,\r\n                lastname: this.props.user.lastname,\r\n                description: this.state.description,\r\n                vkUid: this.props.user.vkUid,\r\n                type: this.state.type,\r\n                avatarLink: this.props.user.avatarLink,\r\n                sex: this.props.user.sex,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                //categories: this.state.categories,\r\n                categories: cat,\r\n                brand: this.state.brand\r\n            };\r\n            master.location.city = this.props.targetCity;\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    // permPhoto = () => {\r\n    //     bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n    //         .then(data => {\r\n    //             console.log(data);\r\n    //             this.setState({statusPhoto: data.result})\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    console.log(result);\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    multiline*/}\r\n                            {/*    onClick={this.permPhoto}*/}\r\n                            {/*    description=\"Для загрузки фото в портфолио\"*/}\r\n                            {/*    bottom={this.state.statusPhoto === false && 'Доступ обязателен для регистрации'}*/}\r\n                            {/*>Доступ к загрузке фотографий в альбом приложения - {this.state.statusPhoto === true ? 'Разрешен' : 'Не разрешен'}</Cell>*/}\r\n                            <Cell\r\n                                expandable\r\n                                onClick={this.props.changeCity}\r\n                                indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                            >\r\n                                Ваш город\r\n                            </Cell>\r\n                            <Cell\r\n                                expandable\r\n                                multiline\r\n                                onClick={this.permMessage}\r\n                                description=\"Для получения уведомлений о заявках\"\r\n                                status={this.state.statusMessage === true ? 'valid' : 'error'}\r\n                                bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                            >Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? 'Разрешен' : 'Не разрешен'}</Cell>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.user);\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    bottomContent={this.state.user.isMaster && <CellButton\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Write />}\r\n                    >Редактировать</CellButton>}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        {/*<Cell*/}\r\n                        {/*    //expandable*/}\r\n                        {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                        {/*    user={this.state.user}*/}\r\n                        {/*    indicator={this.state.user.location.city.title}*/}\r\n                        {/*>Ваш город</Cell>*/}\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    Spinner,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\n\r\nconst osname = platform();\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n                    .then(res => res.json())\r\n                    .then(activeMaster => {\r\n                        console.log(activeMaster);\r\n                        if (activeMaster.length !== 0) {\r\n                            this.setState({\r\n                                activeMaster: activeMaster[0],\r\n                                description: activeMaster[0].description,\r\n                                isMaster: true,\r\n                                isLoad: true\r\n                            }, () =>this.setActive());\r\n                        } else {\r\n                            this.setState({isLoad: true})\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.targetCity !== this.props.targetCity){\r\n            console.log('город был изменен');\r\n            let activeMaster = this.state.activeMaster;\r\n            activeMaster.location.city = this.props.targetCity\r\n            this.setState({activeMaster: activeMaster})\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        console.log('saving');\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster);\r\n        this.props.snackbar('Изменения сохранены');\r\n    };\r\n\r\n    setActive(){\r\n        this.state.categories.map(category => {\r\n            this.setState({[category._id]: false});\r\n            category.subcat.map(subcat => {\r\n                if (this.state.activeMaster.categories.subcat.includes(subcat._id)){\r\n                    subcat.active = true;\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        //activeMaster.location.city = this.props.targetCity;\r\n        console.log(activeMaster);\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.modalBack();\r\n                this.props.snackbar('Изменения сохранены');\r\n                //this.props.popout();\r\n                //console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    // openSnack (text) {\r\n    //     const blueBackground = {\r\n    //         backgroundColor: 'var(--accent)'\r\n    //     };\r\n    //     if (this.state.snackbar) return;\r\n    //     this.setState({ snackbar:\r\n    //             <Snackbar\r\n    //                 layout=\"vertical\"\r\n    //                 onClose={() => this.setState({ snackbar: null })}\r\n    //                 before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n    //             >\r\n    //                 {text}\r\n    //             </Snackbar>\r\n    //     });\r\n    // }\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    };\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        console.log('Active master ',this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.activeMaster.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.activeMaster.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        // if (this.counter(indexCat) > 0) {\r\n        //     this.state.categories[indexCat].active = true;\r\n        // } else {\r\n        //     this.state.categories[indexCat].active = false;\r\n        // }\r\n        this.setState({categories: categories},()=>console.log(this.state))\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.activeMaster;\r\n        master.location.city = city;\r\n        this.setState({activeMaster: master});\r\n        this.props.changeModal('setting');\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 120}}/>\r\n                </div>\r\n            )\r\n        } else if (this.isMaster === false) {\r\n            return null\r\n        } else {\r\n            return (\r\n                <ModalRoot\r\n                    activeModal={this.props.activeModal}\r\n                    onClose={this.saveChanges}\r\n                >\r\n                    <ModalPage dynamicContentHeight\r\n                        id={'setting'}\r\n                        onClose={this.saveChanges}\r\n                        header={\r\n                            <ModalPageHeader\r\n                                left={osname === ANDROID &&\r\n                                <PanelHeaderButton onClick={this.saveChanges}>{'Сохранить'}</PanelHeaderButton>}\r\n                                right={<PanelHeaderButton onClick={this.saveChanges}>{osname === IOS ? 'Сохранить' :\r\n                                    <Icon24Done/>}</PanelHeaderButton>}\r\n                            >\r\n                                Настройки\r\n                            </ModalPageHeader>\r\n                        }\r\n                    >\r\n                <Div>\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={\r\n                            this.state.activeMaster.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                        }\r\n                        before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                    </Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.props.changeModal('changeCity')}\r\n                        indicator={this.state.activeMaster.location.city === typeof String ? 'Не выбрано' : this.state.activeMaster.location.city.title}\r\n                    >\r\n                        Ваш город\r\n                    </Cell>\r\n                    <Group>\r\n                        {this.checkBan()}\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                    {this.state.activeMaster.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                    }\r\n                        <CardGrid>\r\n                    {this.state.activeMaster.priceList.map((item, index) => (\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell\r\n                                    key={item}\r\n                                    multiline\r\n                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                    removable\r\n                                    onRemove={() => {\r\n                                        this.onRemove(index)\r\n                                    }}>\r\n                                    <Cell\r\n                                        description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                    <Cell description=\"Краткое описание процедуры\"\r\n                                          multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                    <Cell\r\n                                        description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                                </Cell>\r\n                            </Card>\r\n                    ))}\r\n                        </CardGrid>\r\n                    {this.state.add &&\r\n                    <Div>\r\n                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdTitle\"\r\n                                type=\"text\"\r\n                                value={this.state.newProdTitle}\r\n                                placeholder={'Введите название'}\r\n                                onChange={this.handleChange}/>\r\n                            <Textarea\r\n                                require\r\n                                name=\"newProdBody\"\r\n                                value={this.state.newProdBody}\r\n                                placeholder={'Укажите описание'}\r\n                                onChange={this.handleChange}/>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdPrice\"\r\n                                type=\"number\" value={this.state.newProdPrice}\r\n                                placeholder={'Укажите цену'}\r\n                                onChange={this.handleChange}/>\r\n                        </Cell>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                        </Div>\r\n                    </Div>\r\n                    }\r\n                    </Group>\r\n                    <Group>\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                        </ FormLayout>\r\n                        <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                         bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                         id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                        name={i}\r\n                                                                        id={index}\r\n                                                                        onChange={this.checkSubcat}\r\n                                                                        checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </FormLayoutGroup>\r\n                    </Group>\r\n                </Div>\r\n                    </ModalPage>\r\n                    <ModalPage dynamicContentHeight\r\n                        id={'changeCity'}\r\n                        onClose={() => this.props.changeModal('setting')}\r\n                        header={\r\n                            <ModalPageHeader\r\n                                left={osname === ANDROID &&\r\n                                <PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{'Назад'}</PanelHeaderButton>}\r\n                                right={<PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{osname === IOS ? 'Назад' :\r\n                                    <Icon24Done/>}</PanelHeaderButton>}\r\n                            >\r\n                                Выбор города\r\n                            </ModalPageHeader>\r\n                        }\r\n                    >\r\n                        <CityListModal dynamicContentHeight\r\n                            changeTargetCity={(city) => this.changeCity(city)}\r\n                        />\r\n                    </ModalPage>\r\n                </ModalRoot>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (Lk);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div, Separator, Cell, Avatar, Spinner, Card, CardGrid, FixedLayout\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadFavsMasters(this.props.user);\r\n    }\r\n\r\n    loadFavsMasters = (user) => {\r\n        fetch(BACKEND.favs.user + user._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                if(favsArr.length === 0){\r\n                    this.setState({isLoaded: true});\r\n                } else {\r\n                    favsArr.map(fav => {\r\n                        fetch(BACKEND.masters.onID + fav.masterId)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                let mastersArr = this.state.mastersArr;\r\n                                mastersArr.push(master);\r\n                                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n                            });\r\n                        //this.setState({isLoaded: true});\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.length === 0) {\r\n                return (\r\n                        <CardGrid>\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell multiline align=\"center\">\r\n                                    Список избранного пуст\r\n                                </Cell>\r\n                            </Card>\r\n                        </CardGrid>\r\n                )\r\n            } else {\r\n                console.log(this.state.mastersArr);\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null) && (master.visible === true)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master._id}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                              photo={master.avatarLink}\r\n                                              description={master.type}\r\n                                              before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                              onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >{master.firstname} {master.lastname}\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Button, Cell, Group, Placeholder, Separator} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\n\r\nexport default function FindList(props){\r\n    console.log(props);\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={this.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {this.props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <Group key={find._id}>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            // description={'Место под категории'}\r\n                              before={<Avatar src={find.avatarLink} size={50}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openMasterOnId(find.masterId)}\r\n                              bottom=\"\"\r\n                        >{find.firstname} {find.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>\r\n                            {find.body}\r\n                        </Cell>\r\n                    </Group>\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\n\r\nexport default function HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={props.userCity === 'Не определено' ? props.targetCity : props.userCity.title}><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}","import React from 'react';\r\nimport {Avatar, Cell, Div, Group, Separator, Spinner, Placeholder, Button} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: [],\r\n            title: '',\r\n            master: {\r\n                vkUid: 9999999999,\r\n                avatarLink: \"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\",\r\n                firstname: 'Евгения',\r\n                lastname: 'Плюхова'\r\n            },\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(BACKEND.findModel.onCity+this.props.user.location.city.id);\r\n        if(!this.state.findArr){\r\n            fetch(BACKEND.findModel.onCity+this.props.user.location.city.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {this.setState({findArr: find, isLoad: true});});\r\n        }\r\n    }\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        userCity={this.props.user.location.city}\r\n                        targetCity={this.props.targetCity}\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            master: '',\r\n            body: '',\r\n            isLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({master: master[0]});\r\n                fetch(BACKEND.findModel.onMasterId+master[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        this.setState({findArr: find, isLoaded: true});\r\n                        if (find.length > 0) {\r\n                            this.setState({body: find[0].body, loadFind: find[0]});\r\n                            let activeFind =\r\n                                <Group>\r\n                                    <Cell>Ваш активный поиск</Cell>\r\n                                    <Separator style={{ margin: '12px 0' }} />\r\n                                    <Cell expandable\r\n                                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                          description={'desf'}\r\n                                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                          size=\"l\"\r\n                                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                                    </Cell>\r\n                                    <Cell multiline>\r\n                                        {this.state.findArr[0].body}\r\n                                    </Cell>\r\n                                </Group>\r\n                            ;\r\n                            this.setState({activeFind: activeFind});\r\n                        } else {\r\n                            let activeFind = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({activeFind: activeFind});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.master._id,\r\n            body: this.state.body,\r\n            location: this.state.master.location,\r\n            firstname: this.state.master.firstname,\r\n            lastname: this.state.master.lastname,\r\n            avatarLink: this.state.master.avatarLink\r\n        };\r\n        console.log(this.state.loadFind);\r\n        if (this.state.loadFind._id) {\r\n            let f =this.state.loadFind;\r\n            f.body = this.state.body;\r\n            this.setState({loadFind: f});\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.props.popout();\r\n            })\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>console.log(result),(result)=>this.setState({loadFind: result}))\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Cell>Добавить / изменить</Cell>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}/>\r\n                    </FormLayoutGroup>\r\n                    <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    {\r\n                        this.state.loadFind &&\r\n                        <Group>\r\n                            <Cell>Ваш активный поиск</Cell>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            <Cell expandable\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                  description={'Так будет выглядеть запрос в ленте'}\r\n                                  before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                            >{this.state.master.firstname} {this.state.master.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>\r\n                                {this.state.loadFind.body}\r\n                            </Cell>\r\n                        </Group>\r\n                    }\r\n                </FormLayout>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {Cell, List, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: false\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items, isLoad: true}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                    {this.state.cities.length > 0 &&\r\n                    <List>\r\n                        {this.state.cities.map(city =>\r\n                            <Cell\r\n                                description={city.region || ''}\r\n                                onClick={()=>this.props.changeCity(city)}\r\n                                key={city.id}\r\n                            >\r\n                                {city.title}\r\n                            </Cell>\r\n                        )}\r\n                    </List>\r\n                    }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {ANDROID, IOS, ModalPage, ModalPageHeader, ModalRoot, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nconst osname = platform();\r\n\r\nexport default function Modal(props){\r\n    return(\r\n        <ModalRoot\r\n            activeModal={props.activeModal}\r\n            onClose={props.onClose}\r\n        >\r\n            <ModalPage dynamicContentHeight\r\n                       id={props.pageId}\r\n                       onClose={props.onClose}\r\n                       header={\r\n                           <ModalPageHeader\r\n                               left={osname === ANDROID && props.leftButton &&\r\n                               <PanelHeaderButton onClick={props.onClose}>{'Сохранить'}</PanelHeaderButton>}\r\n                               right={props.rightButton && <PanelHeaderButton onClick={props.onClose}>{osname === IOS  ? 'Сохранить' :\r\n                                   <Icon24Done/>}</PanelHeaderButton>}\r\n                           >\r\n                               {props.header}\r\n                           </ModalPageHeader>\r\n                       }\r\n            >\r\n                {props.content}\r\n            </ModalPage>\r\n        </ModalRoot>\r\n    )\r\n}","import {BACKEND} from \"../func/func\";\r\nimport {Snackbar} from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\n\r\nfunction postData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(data)\r\n        .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }); // парсит JSON ответ в Javascript объект\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null})\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            let ratingArr = master.comments.map(comment => {\r\n                return Number(comment.rating)\r\n            });\r\n            let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n            let rating = sum / ratingArr.length;\r\n            return (\r\n                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(rating, ratingArr.length)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        })\r\n    };\r\n\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.props.openSnack('Спасибо, что помогаете сервису в развитии.'))\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                this.renderMasters()\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Counter, HorizontalScroll} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nexport default function ScrollSubcat(props){\r\n    const subcatStyle = {\r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        fontSize: 10\r\n    };\r\n    if(props.targetCategory._id!=='all'){\r\n        return(\r\n            <HorizontalScroll>\r\n                <div style={{display: 'flex'}}>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <div style={{subcatStyle}} key={subcat._id}>\r\n                                    <Button\r\n                                        after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                        id={subcat._id}\r\n                                        onClick={props.checkSubcat}\r\n                                        style={{margin: '4px 4px 0px 0px'}}\r\n                                        mode=\"outline\"\r\n                                    >\r\n                                        {subcat.label}\r\n                                    </Button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {Group, Header, PanelHeader, SelectMimicry, Cell} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport spinner from '../elements/img/spinner.svg'\r\n\r\nexport default class Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.loadList()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.user.location.city !== this.props.user.location.city || prevProps.category !== this.props.category) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.user.location.city.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.setState({mastersList: mastersList}, ()=> this.filter());\r\n                    this.setTitle(mastersList.length)\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.user.location.city.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.setState({mastersList: mastersList}, ()=> this.filter());\r\n                    this.setTitle(mastersList.length)\r\n                });\r\n        }\r\n    };\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    checkSubcat = (e) => {\r\n        let buttonSubcat = document.getElementById(e.currentTarget.id);\r\n        if(buttonSubcat.style.backgroundColor==='lavender'){\r\n            buttonSubcat.style.backgroundColor='#fff';\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            console.log('filter: ', filter);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            buttonSubcat.style.backgroundColor='lavender';\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            console.log('filter: ', filter);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.state.mastersList,isLoad: true}, ()=>this.setTitle(this.state.mastersList.length))\r\n        } else {\r\n            let filteredList = this.state.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true}, ()=>this.setTitle(filteredList.length));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <HeadCity\r\n                    userCity={this.props.user.location.city}\r\n                    changeCity={()=>this.props.changeCity()}\r\n                />\r\n                <SelectMimicry\r\n                    top=\"Выберите категорию\"\r\n                    placeholder=\"Показаны мастера всех категорий\"\r\n                    onClick={this.props.user.location.city === 'Не определено' ?\r\n                        this.props.openSnack('Сначала выберите город') :\r\n                        this.props.changeCategory\r\n                    }\r\n                >{this.props.targetCategory.label}</SelectMimicry>\r\n                {\r\n                    this.props.targetCategory && this.state.isLoad &&\r\n                    <ScrollSubcat\r\n                        targetCategory={this.props.targetCategory}\r\n                        mastersList={this.state.mastersList}\r\n                        checkSubcat={(e)=>this.checkSubcat(e)}\r\n                    />\r\n                }\r\n                <PanelHeader>Мастера</PanelHeader>\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {\r\n                        this.state.isLoad ?\r\n                        <MastersList\r\n                            openSnack={this.props.openSnack}\r\n                            mastersList={this.state.filteredList}\r\n                            category={this.props.targetCategory}\r\n                            city={this.props.user.location.city}\r\n                            openPanelMaster={this.props.openPanelMaster}\r\n                        /> :\r\n                            <img src={spinner}/>\r\n                    }\r\n                </Group>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nexport default class CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Alert,\r\n    Cell,\r\n    Epic,\r\n    FormLayout,\r\n    Group,\r\n    List,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Search,\r\n    SelectMimicry,\r\n    Spinner,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, ModalRoot, ModalPage, ModalPageHeader, PanelHeaderButton, IOS, ANDROID, platform, Snackbar, Avatar,ModalCard,HorizontalScroll,Button,Counter\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\n//import Sale from './js/sale/sale.js';\r\nimport PanelMasterList from './js/masters/panelMasterList.js';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\n//import Idea from './js/idea/idea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Modal from './js/elements/modalPage'\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport CityListModal from \"./js/elements/cityListModal\";\r\nimport {postData, patchData} from './js/elements/functions'\r\nimport HeadCity from \"./js/elements/headCity\";\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport spinner from './js/elements/img/spinner.svg'\r\n\r\nconst osname = platform();\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            user: '',\r\n            mastersList: null,\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ],\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано'\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.modalBack = () => {\r\n            this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data => {\r\n                //console.log(data);\r\n                //this.setState({vkuser: data});\r\n                this.verifiedUser(data);\r\n            });\r\n        if (this.props.params) {\r\n            postData(BACKEND.logs.params, this.props.params);\r\n        }\r\n        if (this.props.linkParams.masterid) {\r\n            console.log('В параметры пришел мастер');\r\n            this.openMasterOnLink(this.props.linkParams.masterid)\r\n        }\r\n    }\r\n\r\n    verifiedUser = (vkUser) => {\r\n        return fetch(BACKEND.users + '/vkuid/' + vkUser.id)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0) {\r\n                    console.log('Пользователь зашел впервые');\r\n                    this.regNewUser();\r\n                } else {\r\n                    console.log('Пользователь уже заходил в приложение');\r\n                    let targetCity = usersArr[0].city !== typeof Object ? 'Не выбрано' : usersArr[0].city;\r\n                    this.setState({user: usersArr[0], targetCity: targetCity});\r\n                    console.log('Таргет город '+this.state.targetCity)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    }\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n\r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    regNewUser = () => {\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => {\r\n            console.log('Данные с моста', data);\r\n            const user = {\r\n                vkUid: data.id,\r\n                firstname: data.first_name,\r\n                lastname: data.last_name,\r\n                avatarLink: data.photo_200,\r\n                sex: data.sex,\r\n                location: {\r\n                    country: data.country || 'Не определен',\r\n                    city: data.city || 'Не определен'\r\n                },\r\n                isMaster: false\r\n            };\r\n            this.setState({user: user});\r\n            postData(BACKEND.users, user); //регитрируем\r\n        });\r\n    };\r\n\r\n    openAlert = (title, body, action) => {\r\n        this.setState({\r\n            popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={() => this.setState({popout: null})}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    // closeAlert = () => {\r\n    //     this.setState({ popout: null });\r\n    // };\r\n    closeReg = (master) => {\r\n        console.log(master);\r\n        postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({user: user, activeViewLk: 'lk'});\r\n        // //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n    };\r\n    // change = (story, view, panel) => {\r\n    //     this.setState({ story: story });\r\n    //     this.setState({ story: story });\r\n    //     this.setState({ story: story });\r\n    // };\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({activePanelMasters: panelName});\r\n        this.setState({activeMaster: master});\r\n    };\r\n    // openMaster = (master) => {\r\n    //     this.setState({ activeViewMasters: 'mastersList' });\r\n    //     this.setState({ activeStory: 'masters' });\r\n    //     this.setState({ activePanelMasters: 'masterInfo' });\r\n    //     this.setState({ activeMaster: master });\r\n    // };\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({activeMaster: master});\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({activePanelFindModels: 'masterInfo'});\r\n            });\r\n    };\r\n    openMasterOnLink = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({activeMaster: master});\r\n                this.setState({activeStory: 'masters'});\r\n                this.setState({activeViewMasters: 'mastersList'});\r\n                this.setState({activePanelMasters: 'masterInfo'});\r\n            });\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({activeMaster: master});\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({activePanelLk: 'masterInfo'});\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.state.user;\r\n        user.location.city = city;\r\n        this.setState({targetCity: city, user:user}, () => this.setActiveModal(null));\r\n        patchData(BACKEND.users+'/'+user._id, user).then(result=>console.log(result));\r\n    }\r\n\r\n    render() {\r\n        const setting = (\r\n            <Setting\r\n                snackbar={(message) => this.openSnack(message)}\r\n                modalBack={this.modalBack}\r\n                activeModal={this.state.activeModal}\r\n                user={this.state.user}\r\n                changeModal={(name) => this.setActiveModal(name)}\r\n            />\r\n        );\r\n        const searchFilter = (\r\n            <ModalRoot\r\n                activeModal={this.state.activeModal}\r\n                onClose={()=>this.setActiveModal(null)}\r\n            >\r\n                <ModalPage dynamicContentHeight\r\n                           id={'cityChange'}\r\n                           onClose={()=>this.setActiveModal(null)}\r\n                           header={<ModalPageHeader>Выберите город</ModalPageHeader>}\r\n                >\r\n                    <CityListModal changeTargetCity={(city)=>this.changeTargetCity(city)}/>\r\n                </ModalPage>\r\n                <ModalCard\r\n                    id={'filter'}\r\n                    onClose={() => this.setActiveModal(null)}\r\n                    //icon={<Icon56NotificationOutline />}\r\n                    header=\"Фильтры1\"\r\n                    actions={[{\r\n                        title: 'Запретить',\r\n                        mode: 'secondary',\r\n                        action: () => this.setActiveModal(null)\r\n                    }, {\r\n                        title: 'Разрешить',\r\n                        mode: 'primary',\r\n                        action: () => this.setActiveModal(null)\r\n                    }]}\r\n                />\r\n            </ModalRoot>\r\n        );\r\n        if (this.state.user === '') {\r\n            return (\r\n                // <Placeholder icon={<Spinner size=\"large\" style={{marginTop: 20}}/>}>\r\n                <Placeholder icon={<img src={spinner}/>}>\r\n                    Выполняется вход...\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"News\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" activePanel=\"news\">\r\n                        <Panel id=\"news\">\r\n                            <PanelHeader>Навигатор красоты</PanelHeader>\r\n                            <News openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                  user={this.state.user} openStory={this.openStory}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <Root\r\n                        id=\"masters\"\r\n                        activeView={this.state.activeViewMasters}\r\n                        modal={\r\n                            <Modal\r\n                                header={'Выбор города'}\r\n                                activeModal={this.state.activeModal}\r\n                                pageId={'cityList'}\r\n                                onClose={()=>this.setActiveModal(null)}\r\n                                content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                                leftButton={false}\r\n                                rightButton={false}\r\n                            />\r\n                        }\r\n                    >\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <Masters\r\n                                    user={this.state.user}\r\n                                    changeCity={() => this.setActiveModal('cityList')}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    changeCategory={()=>this.setState({activeViewMasters: 'masterCat'},()=>console.log('ok'))}\r\n                                    targetCategory={this.state.targetCategory}\r\n                                    openPanelMaster={this.openPanelMaster}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head title={'О мастере'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'mastersList'})}/>\r\n                                <MasterCard openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                            user={this.state.user} activeMaster={this.state.activeMaster}\r\n                                            openComments={() => this.setState({activePanelMasters: 'masterComments'})}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'masterInfo'})}/>\r\n                                <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'masterInfo'})}/>\r\n                                <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        targetCategory={this.state.targetCategory}\r\n                                        setCategory={(category) => this.setState({\r\n                                            targetCategory: category,\r\n                                            activeViewMasters: 'mastersList'\r\n                                        })}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.state.activePanelFindModels}\r\n                        modal={\r\n                            <Modal\r\n                                header={'Выбор города'}\r\n                                activeModal={this.state.activeModal}\r\n                                pageId={'cityList'}\r\n                                onClose={()=>this.setActiveModal(null)}\r\n                                content={<CityList changeCity={(city)=>this.changeTargetCity(city)}/>}\r\n                                leftButton={false}\r\n                                rightButton={false}\r\n                            />\r\n                        }\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                            <FindModel\r\n                                openMasterOnId={this.openMasterOnId}\r\n                                user={this.state.user}\r\n                                changeCity={() => this.setActiveModal('cityList')}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head title={'О мастере'}\r\n                                  goBack={() => this.setState({activePanelFindModels: 'findmodel'})}/>\r\n                            <MasterCard openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                        user={this.state.user} activeMaster={this.state.activeMaster}\r\n                                        openComments={() => this.setState({activePanelFindModels: 'masterComments'})}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head title={'Портфолио'}\r\n                                  goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}/>\r\n                            <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head title={'Отзывы'} goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}/>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                    </View>\r\n\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout} modal={setting}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader>Личный кабинет</PanelHeader>\r\n                                <Lk\r\n                                    user={this.state.user}\r\n                                    openSetting={() => this.setActiveModal('setting')}\r\n                                    //openSetting={() => this.setState({activePanelLk: 'setting'})}\r\n                                    openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                    openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                    openMasterPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head title={'Избранное'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Favourite user={this.state.user} openFavMasterOnId={this.openFavMasterOnId}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head title={'О мастере'} goBack={() => this.setState({activePanelLk: 'favourite'})}/>\r\n                                <MasterCard openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                            user={this.state.user} activeMaster={this.state.activeMaster}\r\n                                            openComments={() => this.setState({activePanelLk: 'masterComments'})}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Portfolio user={this.state.user}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head title={'Мастер ищет модель'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Head title={'Настройки'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Setting\r\n                                    targetCity={this.state.targetCity}\r\n                                    user={this.state.user}\r\n                                    popout={this.openAlert}\r\n                                    changeCity={() => this.setState({activePanelLk: 'changeCity'})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelLk: 'setting'})}/>\r\n                                <CityList changeTargetCity={(city) => this.setState({\r\n                                    targetCity: city,\r\n                                    activePanelLk: 'setting'\r\n                                })}/>\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id=\"registration\">\r\n                            <Panel id='registration'>\r\n                                <Head title={'Регистрация'} goBack={() => this.setState({activeViewLk: 'lk'})}/>\r\n                                <Invite targetCity={this.state.targetCity}\r\n                                        user={this.state.user}\r\n                                        closeReg={this.closeReg}\r\n                                        changeCity={() => this.setState({activePanelReg: 'changeCity'})}\r\n                                        snackbar={(message) => this.openSnack(message)}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelReg: 'registration'})}/>\r\n                                <CityList changeTargetCity={(city) => this.setState({\r\n                                    targetCity: city,\r\n                                    activePanelReg: 'registration'\r\n                                })}/>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nbridge.send(\"VKWebAppInit\", {})\r\n    .then(data => console.log('Инициализировали апи вк? '+data.result));\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nconsole.log(params);\r\n\r\n\r\nReactDOM.render(<App linkParams={linkParams} params={params} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}