{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/store/reducers.js","js/store/actions.js","js/masters/mastersCard.js","js/elements/functions.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/components/findCard.js","js/findmodel/components/findList.js","js/elements/headCity.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/lk/partners.js","js/elements/cityList.js","js/news/moder.js","js/masters/mastersList.js","js/elements/scrollSubcat.js","js/masters/masters.js","js/elements/categoriesList.js","js/lk/rules.js","App.js","serviceWorker.js","index.js","js/elements/img/spinner.svg"],"names":["Head","props","theme","left","onClick","goBack","title","BACK_LINK","process","BACKEND","users","auth","like","message","masters","all","onID","category","vkuid","subscribers","onarrayid","connect","favs","new","master","user","findModel","onMasterId","onCity","comment","moderation","vkapi","uploadPhoto","savePhoto","savePhotoFindModels","getCities","isMember","getAll","logs","params","sendmessage","moder","moderCom","initialState","loginStatus","mastersList","mastersListScroll","targetCategory","targetCity","findModelsList","findModelsListScroll","activeMasterOnMasters","activeMasterOnFindModels","activeMasterOnFavs","activePanelnews","activePanelmasters","activePanelfindmodel","activePanellk","activePanelregistration","newsHistory","mastersHistory","findmodelHistory","lkHistory","registrationHistory","activeStory","activeViewLk","setMaster","console","log","type","payload","loginUser","changeMastersList","newMastersList","changeTargetCategory","newTargetCategory","changeTargetCity","newTargetCity","changeMasterslistScroll","newScroll","changeFindModelsList","newFindModelsList","changeFindModelsListScroll","newFindModelsListScroll","changeActiveMasterOnMasters","NewActiveMaster","changeActiveMasterOnFindModels","changeActiveMasterOnFavs","changeLaunchParams","goTo","story","panel","goForward","changeStory","changeActiveViewLk","activeView","MastersCard","handleChange","event","target","name","value","setState","state","changeNumber","openModal","sendMessage","data","sendtitle","phone","fetch","activeMaster","_id","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","res","json","error","openSnackAvatar","avatarLink","catch","e","favStatus","isFavourite","style","float","padding","marginRight","checkFavs","width","height","fill","connectStatus","before","getPhone","share","bridge","send","result","loadFavs","includes","countFavs","length","isLoad","changeVisible","index","push","isChange","indexOf","splice","enterNumber","phone_number","number","activeModal","onClose","id","header","caption","className","align","onChange","snackbar","bind","this","map","filter","item","url","postData","images","start_index","text","duration","layout","after","src","size","response","icon","marginTop","visible","Fragment","separator","disabled","multiline","brand","vkUid","firstname","lastname","expandable","openComments","indicator","meta","comments","description","photos","photoUrl","borderRadius","margin","key","openShowImages","backgroundImage","backgroundSize","openPhoto","priceList","price","React","Component","dispatch","bindActionCreators","reverse","image","gridPhoto","MastersComments","changeStars","stars","i","rating","validCommentText","replace","sendComment","Number","onModer","ids","isCommended","commentsArr","countComments","prevProps","prevState","snapshot","comDate","date","Date","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","display","alignItems","flexDirection","fontSize","color","star","status","bottom","top","placeholder","commentList","validate","News","addToFav","isFav","favApp","subheader","actions","user_id","ingroup","joinGroup","group_id","feedList","feed","backgroundColor","userInfo","photo","openModer","openReg","nowCounter","countUsers","countMasters","countCities","inGroup","window","scrollTo","vk_is_favorite","cities","sort","Invite","deleteProcedure","setAlert","actionsLayout","autoclose","action","onRemove","getCategories","categories","regMaster","checkLicense","statusMessage","trim","cat","subcat","active","label","location","country","city","closeReg","addProd","add","saveProd","validateNewProdTitle","newProdTitle","validateNewProdBody","newProdBody","validateNewProdPrice","newProdPrice","slice","permMessage","qapi","checkSubcat","indexCat","indexSubcat","counter","count","statusPhoto","undefined","changeCity","asideContent","checked","subcategory","require","stretched","openRules","Lk","checkModeration","reasons","reason","addToFavApp","connection","tmpUser","isMaster","isUser","favsArr","mastersArr","openSetting","openFavourite","openMasterPhoto","openFindModel","Portfolio","uploadUrl","token","loading","formData","FormData","selectedFile","document","getElementById","files","match","append","openSnack","fetchJsonp","saveUrl","savePh","sizes","imgArr","img","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","accept","CityListModal","search","toLowerCase","country_id","cityList","region","withModalRootContext","Setting","platform","saveChanges","patchData","snackbarDismiss","openSnackDismiss","checkBan","banned","statusProfile","about","tooltip","popout","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","changed","Array","isArray","String","Favourite","loadFavsMasters","isLoaded","err","openFavMasterOnId","FindCard","find","sale","openMasterOnId","masterId","marginBottom","FindList","findArr","FindModel","loadFind","self","pageYOffset","FindModelMaster","handleChangeSelect","selectvalue","save","isActive","mStatus","Partners","addToCommunity","CityList","onpopstate","Moder","good","bad","goodComment","badComment","activeTab","mastersCount","usersCount","to","openMaster","vk_user_id","selected","renderMasters","renderComments","MastersList","setBottom","setTitle","bottomContent","openPanelMaster","countSubcat","scrollSubcat","Masters","loadList","currentTarget","filteredList","forEach","changeCategory","CategoriesList","loadCategories","unshift","setCategory","Rules","App","warnConnection","validLaunchParams","openFindMasterOnId","newMaster","openMasterOnLink","activeMasterId","activeViewMasters","activePanelMasters","history","pushState","openStory","storyName","popoutLk","popoutInvite","activePanelFindModels","activePanelLk","activePanelReg","baseCities","searchCity","modalHistory","activeTabLk","scheme","mastersModal","findModal","lkModal","snackbarInvite","onStoryChange","subscribe","detail","launchParams","sign","linkParams","masterid","snackbarLk","dataset","activePanel","tabbar","data-story","onSwipeBack","setActiveMaster","modal","content","alert","openSnackLk","openSnackLkDismiss","modalBack","openAlert","openSnackInvite","Boolean","hostname","config","store","createStore","changeIsMaster","newhistory","pop","hash","split","reduce","p","a","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3b846e15.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <PanelHeader\r\n            theme=\"light\"\r\n            left={<PanelHeaderBack onClick={props.goBack} />}\r\n        >{props.title}\r\n        </PanelHeader>\r\n    )\r\n};\r\n\r\nexport default Head;","const BACK_LINK = process.env.REACT_APP_BACK_LINK;\r\n\r\nexport const BACKEND = {\r\n    users: {\r\n        auth: BACK_LINK+'users/auth/',\r\n        like: BACK_LINK+'users/like/'\r\n    },\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/',\r\n        subscribers: BACK_LINK+'masters/subscribe/',\r\n        onarrayid: BACK_LINK+'masters/onarrayid/',\r\n        connect: BACK_LINK+'masters/connect/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/',\r\n        moderation: BACK_LINK+'comment/moderation/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/',\r\n        savePhotoFindModels: BACK_LINK+'vkapi/savePhotoFindModels/',\r\n        getCities: BACK_LINK+'vkapi/getCities',\r\n        isMember: BACK_LINK+'vkapi/isMember'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    },\r\n    sendmessage: BACK_LINK+'sendmessage',\r\n    moder: BACK_LINK+'masters/moderation/',\r\n    moderCom: BACK_LINK+'comment/moderation/',\r\n};","export const ACTION_CHANGE_MASTERS_LIST = 'ACTION_CHANGE_MASTERS_LIST';\r\nexport const ACTION_CHANGE_TARGET_CATEGORY = 'ACTION_CHANGE_TARGET_CATEGORY';\r\nexport const ACTION_CHANGE_TARGET_CITY = 'ACTION_CHANGE_TARGET_CITY';\r\nexport const ACTION_CHANGE_MASTERSLIST_SCROLL = 'ACTION_CHANGE_MASTERSLIST_SCROLL';\r\nexport const ACTION_CHANGE_FINDMODELS_LIST = 'ACTION_CHANGE_FINDMODELS_LIST';\r\nexport const ACTION_CHANGE_FINDMODELS_SCROLL = 'ACTION_CHANGE_FINDMODELS_SCROLL';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS';\r\nexport const ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS = 'ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const SET_MASTER = 'SET_MASTER';\r\nexport const SET_LAUNCH_PARAMS = 'SET_LAUNCH_PARAMS';\r\nexport const GO_TO = 'GO_TO';\r\nexport const GO_FORWARD = 'GO_FORWARD';\r\nexport const CHANGE_STORY = 'CHANGE_STORY';\r\nexport const CHANGE_ACTIVE_VIEW_LK = 'CHANGE_ACTIVE_VIEW_LK';\r\n\r\nconst initialState = {\r\n    loginStatus: false,\r\n    user: {},\r\n    master: null,\r\n    mastersList: [],\r\n    mastersListScroll: 0,\r\n    targetCategory: '',\r\n    targetCity: '',\r\n    findModelsList: [],\r\n    findModelsListScroll: 0,\r\n    activeMasterOnMasters: {},\r\n    activeMasterOnFindModels: {},\r\n    activeMasterOnFavs: {},\r\n    params: null,\r\n    activePanelnews: 'news',\r\n    activePanelmasters: 'mastersList',\r\n    activePanelfindmodel: 'findmodel',\r\n    activePanellk: 'lk',\r\n    activePanelregistration: 'registration',\r\n    newsHistory: ['news'],\r\n    mastersHistory: ['mastersList'],\r\n    findmodelHistory: ['findmodel'],\r\n    lkHistory: ['lk'],\r\n    registrationHistory: ['registration'],\r\n    activeStory: 'news',\r\n    activeViewLk: 'lk'\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_MASTERS_LIST:\r\n            return {...state, mastersList: action.payload};\r\n        case ACTION_CHANGE_TARGET_CATEGORY:\r\n            return {...state, targetCategory: action.payload, mastersList: []};\r\n        case ACTION_CHANGE_TARGET_CITY:\r\n            let changeCity = state.user;\r\n            changeCity.location.city = action.payload;\r\n            return {...state, targetCity: action.payload, mastersList: [], findModelsList: [], user: changeCity};\r\n        case ACTION_CHANGE_MASTERSLIST_SCROLL:\r\n            return {...state, mastersListScroll: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_LIST:\r\n            return {...state, findModelsList: action.payload};\r\n        case ACTION_CHANGE_FINDMODELS_SCROLL:\r\n            return {...state, findModelsListScroll: action.payload};\r\n        case LOGIN_USER:\r\n            return {...state, loginStatus: true, user: action.payload, targetCity: action.payload.location !== undefined ? action.payload.location.city : {id: 1, title: 'Москва'}};\r\n        case SET_MASTER:\r\n            let changeIsMaster = state.user;\r\n            changeIsMaster.isMaster = true;\r\n            return {...state, master: action.payload, user: changeIsMaster};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS:\r\n            return {...state, activeMasterOnMasters: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS:\r\n            return {...state, activeMasterOnFindModels: action.payload};\r\n        case ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS:\r\n            return {...state, activeMasterOnFavs: action.payload};\r\n        case SET_LAUNCH_PARAMS:\r\n            return {...state, params: action.payload};\r\n        case GO_TO:\r\n            const history = state[action.payload.story+'History'];\r\n            history.push(action.payload.panel);\r\n            return {...state, ['activePanel'+action.payload.story]: action.payload.panel, [action.payload.story+'History']: history};\r\n        case GO_FORWARD:\r\n            let newhistory = state[action.payload.story+'History'];\r\n            newhistory.pop();\r\n            return {...state, [action.payload.story+'History']: newhistory, ['activePanel'+action.payload.story]: newhistory[newhistory.length -1]};\r\n        case CHANGE_STORY:\r\n            return {...state, activeStory: action.payload};\r\n        case CHANGE_ACTIVE_VIEW_LK:\r\n            return {...state, activeViewLk: action.payload}\r\n\r\n    }\r\n    return state;\r\n};","import {\r\n    ACTION_CHANGE_MASTERS_LIST,\r\n    ACTION_CHANGE_TARGET_CATEGORY,\r\n    ACTION_CHANGE_TARGET_CITY,\r\n    ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n    ACTION_CHANGE_FINDMODELS_LIST,\r\n    ACTION_CHANGE_FINDMODELS_SCROLL,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n    ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n    LOGIN_USER,\r\n    SET_MASTER,\r\n    SET_LAUNCH_PARAMS,\r\n    GO_TO,\r\n    GO_FORWARD,\r\n    CHANGE_STORY,\r\n    CHANGE_ACTIVE_VIEW_LK\r\n} from \"./reducers\";\r\n\r\nexport const setMaster = master => {\r\n    console.log('SET_MASTER');\r\n    return {\r\n        type: SET_MASTER,\r\n        payload: master\r\n    };\r\n};\r\n\r\nexport const loginUser = (user) => {\r\n    console.log('LOGIN_USER');\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const changeMastersList = (newMastersList) => {\r\n    console.log('in ACTION_CHANGE_MASTERS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERS_LIST,\r\n        payload: newMastersList\r\n    };\r\n};\r\n\r\nexport const changeTargetCategory = (newTargetCategory) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CATEGORY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CATEGORY,\r\n        payload: newTargetCategory\r\n    };\r\n};\r\n\r\nexport const changeTargetCity = (newTargetCity) => {\r\n    console.log('in ACTION_CHANGE_TARGET_CITY');\r\n    return {\r\n        type: ACTION_CHANGE_TARGET_CITY,\r\n        payload: newTargetCity\r\n    };\r\n};\r\n\r\nexport const changeMasterslistScroll = (newScroll) => {\r\n    console.log('in ACTION_CHANGE_MASTERSLIST_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_MASTERSLIST_SCROLL,\r\n        payload: newScroll\r\n    };\r\n};\r\n\r\nexport const changeFindModelsList = (newFindModelsList) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_LIST');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_LIST,\r\n        payload: newFindModelsList\r\n    };\r\n};\r\n\r\nexport const changeFindModelsListScroll = (newFindModelsListScroll) => {\r\n    console.log('in ACTION_CHANGE_FINDMODELS_SCROLL');\r\n    return {\r\n        type: ACTION_CHANGE_FINDMODELS_SCROLL,\r\n        payload: newFindModelsListScroll\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnMasters = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_MASTERS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFindModels = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FINDMODELS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeActiveMasterOnFavs = (NewActiveMaster) => {\r\n    console.log('in ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS');\r\n    return {\r\n        type: ACTION_CHANGE_ACTIVE_MASTER_ON_FAVS,\r\n        payload: NewActiveMaster\r\n    };\r\n};\r\n\r\nexport const changeLaunchParams = (params) => {\r\n    console.log('in SET_LAUNCH_PARAMS');\r\n    return {\r\n        type: SET_LAUNCH_PARAMS,\r\n        payload: params\r\n    };\r\n};\r\n\r\nexport const goTo = (story, panel) => {\r\n    return {\r\n        type: GO_TO,\r\n        payload: {story: story, panel: panel}\r\n    };\r\n};\r\n\r\nexport const goForward = (story) => {\r\n    return {\r\n        type: GO_FORWARD,\r\n        payload: {story: story}\r\n    };\r\n};\r\n\r\nexport const changeStory = (story) => {\r\n    return {\r\n        type: CHANGE_STORY,\r\n        payload: story\r\n    };\r\n};\r\n\r\nexport const changeActiveViewLk = (activeView) => {\r\n    return {\r\n        type: CHANGE_ACTIVE_VIEW_LK,\r\n        payload: activeView\r\n    };\r\n};","import React from 'react';\r\nimport {\r\n    Group,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Snackbar,\r\n    Spinner,\r\n    Header,\r\n    Card,\r\n    CardGrid,\r\n    CardScroll,\r\n    Button,\r\n    FormLayout,\r\n    RichCell,\r\n    CellButton,\r\n    Placeholder,\r\n    Panel,\r\n    SimpleCell, Input, ModalCard, ModalRoot\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {patchData, postData} from \"../elements/functions\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Phone from '@vkontakte/icons/dist/24/phone';\r\nimport Icon20UserOutline from '@vkontakte/icons/dist/20/user_outline';\r\nimport Head from \"../elements/panelHeader\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {loginUser, changeMastersList, changeActiveMasterOnFindModels} from \"../store/actions\";\r\nimport Icon56AccessibilityOutline from '@vkontakte/icons/dist/56/accessibility_outline';\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            snackbar: null,\r\n            isChange: false,\r\n            activeMaster: {},\r\n            phone: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n       this.setState({activeMaster: this.props.activeMaster}, ()=> {\r\n           if (this.props.activeMaster !== null){\r\n               this.loadFavs()\r\n           }\r\n       })\r\n       //  fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n       //      .then(res => res.json())\r\n       //      .then(master => {\r\n       //          this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n       //      });\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps !== this.props){\r\n    //         fetch(BACKEND.masters.onID + this.props.activeMasterId)\r\n    //             .then(res => res.json())\r\n    //             .then(master => {\r\n    //                 this.props.setActiveMaster(master);\r\n    //                 this.setState({activeMaster: master}, ()=> this.loadFavs())\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        this.props.openModal(null);\r\n        if (this.state.isChange){ //если были изменения пишем в бд при разрушении ДОМ дерева\r\n            let mastersList = this.props.mastersList;\r\n            let newMastersList = mastersList.map(master=>{\r\n                if (master._id === this.state.activeMaster._id){\r\n                    if (master.subscribers.includes(this.props.user._id)){\r\n                        master.subscribers = master.subscribers.filter(item => item !== this.props.user._id)\r\n                    } else {\r\n                        master.subscribers.push(this.props.user._id)\r\n                    }\r\n                    return master\r\n                } else {\r\n                    return master\r\n                }\r\n            });\r\n            this.props.changeMastersList(newMastersList);\r\n            if (this.props.activeMasterOnFindModels._id === this.state.activeMaster._id){\r\n                let master = this.props.activeMasterOnFindModels;\r\n                if (master.subscribers.includes(this.props.user._id)){\r\n                    master.subscribers = master.subscribers.filter(item => item !== this.props.user._id)\r\n                } else {\r\n                    master.subscribers.push(this.props.user._id)\r\n                }\r\n                this.props.changeActiveMasterOnFindModels(master);\r\n            }\r\n            postData(BACKEND.users.like+this.state.activeMaster._id, this.props.params);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        console.log(event.target.name, event.target.value)\r\n        this.setState({[event.target.name]: event.target.value}, ()=> console.log(this.state));\r\n    };\r\n\r\n    changeNumber = (event) => {\r\n        console.log(event.target.name, event.target.value)\r\n        this.setState({[event.target.name]: event.target.value}, this.openModal);\r\n    };\r\n\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n\r\n    sendMessage = () => {\r\n        let data = {\r\n            params: this.props.params,\r\n            title: this.state.sendtitle,\r\n            phone: this.state.phone\r\n        };\r\n        fetch(BACKEND.masters.connect+this.state.activeMaster._id, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar(res.error, this.state.activeMaster.avatarLink)\r\n                } else {\r\n                    this.props.openModal(null)\r\n                    this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n            .catch(e=> {\r\n                this.props.openModal(null)\r\n                this.openSnackAvatar(e.message, this.state.activeMaster.avatarLink)\r\n            });\r\n    };\r\n\r\n    favStatus = () => {\r\n        if(this.state.isFavourite === false) {\r\n            return (\r\n                            <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'right', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button\r\n                before={<Icon24Phone/>}\r\n                onClick={() => this.getPhone(title)}\r\n                mode=\"outline\"\r\n            >\r\n                Записаться\r\n            </Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        console.log('send VKWebAppShare');\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938#masterid='+this.state.activeMaster._id})\r\n            .then(result => {\r\n                console.log('response', result);\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            });\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    loadFavs = () => {\r\n        if (this.props.user.favs){\r\n            if (this.props.user.favs.includes(this.state.activeMaster._id)){\r\n                this.setState({isFavourite: true});\r\n            } else {\r\n                this.setState({isFavourite: false});\r\n            }\r\n        }\r\n        this.setState({countFavs: this.state.activeMaster.subscribers.length, isLoad: true});\r\n    };\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    };\r\n    checkFavs = () => {\r\n        if (this.state.isFavourite === false) {\r\n            let user = this.props.user;\r\n            user.favs.push(this.state.activeMaster._id);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: true, countFavs: this.state.countFavs+1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер добавлен в список избранных.', this.state.activeMaster.avatarLink));\r\n        } else {\r\n            let user = this.props.user;\r\n            let index = this.props.user.favs.indexOf(this.state.activeMaster._id);\r\n            let favs = this.props.user.favs;\r\n            if (index > -1) {\r\n                favs.splice(index, 1);\r\n            } else favs.splice(0, index);\r\n            this.props.loginUser(user);\r\n            this.setState({isFavourite: false, countFavs: this.state.countFavs-1, isChange: !this.state.isChange}, ()=>\r\n                this.openSnackAvatar('Мастер удален из списка избранных.', this.state.activeMaster.avatarLink));\r\n        }\r\n\r\n    };\r\n\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                // this.setState({phoneNumber: result.phone_number})\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.enterNumber()\r\n            })\r\n    };\r\n\r\n    enterNumber = (number) => {\r\n        if (number){\r\n            this.setState({phone: number}, this.openModal)\r\n        } else {\r\n            this.openModal()\r\n        }\r\n\r\n    }\r\n    openModal = () => {\r\n        this.props.openModal(\r\n            <ModalRoot\r\n                activeModal={'phoneNumber'}\r\n                onClose={()=>this.props.openModal(null)}\r\n            >\r\n                <ModalCard\r\n                    id={'phoneNumber'}\r\n                    onClose={() => this.props.openModal(null)}\r\n                    header=\"Укажите номер телефона\"\r\n                    caption={\r\n                        <FormLayout>\r\n                            <Div className=\"FormField Input Input--center\">\r\n                                <InputMask\r\n                                    className=\"Input__el\"\r\n                                    //mask=\"7 (999) 999-99-99\"\r\n                                    name=\"phone\"\r\n                                    type=\"number\"\r\n                                    //defaultValue={number || ''}\r\n                                    align=\"center\"\r\n                                    value={this.state.phone}\r\n                                    onChange={this.changeNumber}\r\n                                />\r\n                                <Div className=\"FormField__border\"></Div>\r\n                            </Div>\r\n                            <p>Укажите номер телефона начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                            <Button onClick={this.sendMessage}>Отправить</Button>\r\n                        </FormLayout>\r\n                    }\r\n                >\r\n\r\n                </ModalCard>\r\n            </ModalRoot>\r\n        )\r\n    }\r\n    // enterNumber = (number) => {\r\n    //     if (number){\r\n    //         this.setState({phone: number})\r\n    //     } else {\r\n    //         this.setState({phone: null})\r\n    //     }\r\n    //     this.setState({ snackbar:\r\n    //             <Snackbar\r\n    //                 duration='99999999999999'\r\n    //                 layout=\"vertical\"\r\n    //                 onClose={() => this.setState({ snackbar: null })}\r\n    //             >\r\n    //                 <h2>Укажите номер телефона</h2>\r\n    //                 <FormLayout>\r\n    //                 <Div className=\"FormField Input Input--center\">\r\n    //                     <InputMask\r\n    //                         className=\"Input__el\"\r\n    //                         //mask=\"7 (999) 999-99-99\"\r\n    //                         name=\"phone\"\r\n    //                         type=\"number\"\r\n    //                         //defaultValue={number || ''}\r\n    //                         align=\"center\"\r\n    //                         value={this.state.phone}\r\n    //                         onChange={this.handleChange}\r\n    //                     />\r\n    //                     <Div className=\"FormField__border\"></Div>\r\n    //                 </Div>\r\n    //                 <p>Укажите номер телефона начиная с 7 (в формате 7ХХХХХХХХХХ). Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n    //                 <Button onClick={this.sendMessage}>Отправить</Button>\r\n    //                 </FormLayout>\r\n    //             </Snackbar>\r\n    //     });\r\n    // };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if (this.props.activeMaster === null){\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Мы не знаем таких мастеров.\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else if (this.props.activeMaster.error){\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Тут никого нет :)\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер с таким идентификатором не найден.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        }\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } if (this.state.activeMaster.visible === false) {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline />}\r\n                        header=\"Тут никого нет :)\"\r\n                        //action={<Button size=\"l\">На главную</Button>}\r\n                    >\r\n                        Мастер предпочел скрыть свой профиль.\r\n                    </Placeholder>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"masterInfo\">\r\n                    <Head\r\n                        title={'О мастере'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                <React.Fragment>\r\n                        {/*<RichCell*/}\r\n                        {/*    disabled*/}\r\n                        {/*    multiline*/}\r\n                        {/*    before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}*/}\r\n                        {/*    bottom={*/}\r\n                        {/*            <React.Fragment style={{marginLeft: 10, padding: 0}}>*/}\r\n                        {/*                        <Button onClick={() => this.share()}>Поделиться</Button>*/}\r\n                        {/*                {*/}\r\n                        {/*                    this.props.user.vkUid === this.state.activeMaster.vkUid*/}\r\n                        {/*                        ?*/}\r\n                        {/*                        null*/}\r\n                        {/*                        :*/}\r\n                        {/*                        this.favStatus()*/}\r\n                        {/*                }*/}\r\n                        {/*            </React.Fragment>*/}\r\n                        {/*    }*/}\r\n                        {/*>*/}\r\n                        {/*    <SimpleCell description={this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}>{this.state.activeMaster.firstname} {this.state.activeMaster.lastname}</SimpleCell>*/}\r\n                        {/*</RichCell>*/}\r\n                        <Group separator={'hide'}>\r\n                            <CardGrid>\r\n                                <Card size=\"l\">\r\n                                    <RichCell\r\n                                        disabled\r\n                                        multiline\r\n                                        before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                                        text={\r\n                                            <React.Fragment>\r\n                                                {this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        caption={\r\n                                            <React.Fragment>\r\n                                                <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                                {\r\n                                                    this.props.user.vkUid === this.state.activeMaster.vkUid\r\n                                                        ?\r\n                                                        null\r\n                                                        :\r\n                                                        this.favStatus()\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        //after={this.props.master !== null && <Icon24Write onClick={this.props.openSetting}/>}\r\n                                    >\r\n                                        {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                                    </RichCell>\r\n                                </Card>\r\n                            </CardGrid>\r\n                        </Group>\r\n                        <Separator/>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.props.openComments()} indicator={this.state.activeMaster.meta.comments || 0}\r\n                                description={'Подписчиков: ' + this.state.countFavs}\r\n                            >\r\n                                Отзывы\r\n                            </Cell>\r\n                            {/*{this.subscribers()}*/}\r\n                            {/*<Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>*/}\r\n                        </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 ?\r\n                                <Div>\r\n                                    <Cell>Выполненые работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card\r\n                                                        style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                                        size=\"s\"\r\n                                                        mode=\"shadow\"\r\n                                                        key={index}\r\n                                                        onClick={() => this.openShowImages(this.state.activeMaster.photos, index)}\r\n                                                    >\r\n                                                        <div style={{width: 144, height: 96, backgroundImage: 'url('+photoUrl+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={() => this.props.openPhoto()}\r\n                                        description={this.state.activeMaster.photos.length+' фото в портфолио'}\r\n                                        indicator={this.state.activeMaster.photos.length}\r\n                                    >Посмотреть сеткой</Cell>\r\n                                </Div> :\r\n                                <Placeholder\r\n                                    icon={<Icon56GalleryOutline />}\r\n                                    header=\"Нет фотографий\"\r\n                                ></Placeholder>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        style={{borderRadius: '10px 10px 10px 10px'}}\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={\r\n                                                        item.price !== '' ? 'От ' + item.price + \" рублей\" : 'Стоимость не указана'\r\n                                                    }\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                        <React.Fragment>\r\n                                                            <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                                  multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                            </Cell>\r\n                                                        </React.Fragment>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n                </Panel>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params,\r\n        mastersList: state.mastersList,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MastersCard);","function postData(url = '', data = {}) {\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(res => res.json())\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }) // парсит JSON ответ в Javascript объект\r\n        .catch(e=>console.log(e));\r\n}\r\n\r\n\r\n\r\nexport {postData, patchData}","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    Button,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    FormLayout, Snackbar, FormLayoutGroup\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport {connect} from \"react-redux\";\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\n\r\nclass MastersComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            body: '',\r\n            isLoad: false,\r\n            snackbar: null,\r\n            stars: [],\r\n            onModer: 0\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.changeStars();\r\n        // this.props.activeMaster.comments.map(comment => {\r\n        //     if (comment !== null && comment.user === this.props.user._id) {\r\n        //         this.setState({isCommended: true})\r\n        //     }\r\n        // });\r\n        //let count = this.props.activeMaster.comments.length;\r\n        fetch(BACKEND.comment.onMasterId+this.props.activeMaster._id)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ids.includes(this.props.user._id)){\r\n                    this.setState({isCommended: true})\r\n                }\r\n                this.setState({commentsArr: res.comments, countComments: res.comments.length, isLoad: true, onModer: res.onModer});\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.rating !== this.state.rating){\r\n            this.changeStars()\r\n        }\r\n    }\r\n\r\n    changeStars = () => {\r\n        let stars = [];\r\n        for(let i=1; i<=5; i++){\r\n            if (i <= this.state.rating){\r\n                stars.push(<Icon24Favorite width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            } else {\r\n                stars.push(<Icon24FavoriteOutline width={36} height={36} id={i} onClick={()=>this.setState({rating: i})} fill={'ffbb00'} />);\r\n            }\r\n        }\r\n        this.setState({stars: stars});\r\n    };\r\n\r\n    validCommentText = (text) => {\r\n        return !!(this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length < 101 & this.state.body.replace(/\\s+/g, ' ').replace(/(\\r?\\n){2,}/g, '$1').length > 19);\r\n    };\r\n\r\n    sendComment = () => {\r\n        try {\r\n            if (this.state.rating === 0) throw 'Укажите оценку работы мастера.';\r\n            if (this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length < 20) throw 'Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.';\r\n            if (this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length > 100) throw 'Длина отзыва ограничена 100 символами.';\r\n            let comment = {\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body.replace(/(\\r?\\n){2,}/g, '$1'),\r\n                moderation: false,\r\n                params: this.props.params\r\n            };\r\n            this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        {e}\r\n                    </Snackbar>\r\n            });\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                // let arr = this.state.commentsArr;\r\n                // data.date = \"Комментарий отправлен на проверку\";\r\n                // arr.push(data);\r\n                if (data.error){\r\n                    console.log(data.error)\r\n                } else {\r\n                    this.setState({isCommended: true, onModer: this.state.onModer +1, snackbar:\r\n                            <Snackbar\r\n                                layout=\"vertical\"\r\n                                onClose={() => this.setState({ snackbar: null })}\r\n                            >\r\n                                Комментарий отправлен на модерацию. После проверки он появится в профиле мастера.\r\n                            </Snackbar>});\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                if (this.state.snackbar) this.setState({snackbar: null});\r\n                this.setState({ snackbar:\r\n                        <Snackbar\r\n                            layout=\"vertical\"\r\n                            onClose={() => this.setState({snackbar: null })}\r\n                        >\r\n                            {e.message}\r\n                        </Snackbar>\r\n                })\r\n                });\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === \"Комментарий отправлен на проверку\") {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <Div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </Div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                    return (\r\n                        <Group key={comment._id} separator={'hide'}>\r\n                            <Cell\r\n                                description={this.getDate(comment.date)}\r\n                                before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                            >\r\n                                {comment.user.firstname+' '+comment.user.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>{\r\n                                comment.moderation === true ? comment.body :\r\n                                    <Cell before={<Icon24CommentOutline/>}>Отзыв находится на модерации</Cell>\r\n                            }\r\n                            </Cell>\r\n                            <Cell indicator={comment.rating+` из 5`}>Оценка</Cell>\r\n                            <Separator/>\r\n                        </Group>\r\n                    )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        if (this.state.isLoad === true){\r\n            if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n                )\r\n            }\r\n            else if (this.state.isCommended === true) {\r\n                return (\r\n                    <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Cell\r\n                                description={'Поставьте оценку мастеру'}\r\n                            >\r\n                                    <Div style={{display: 'inline-flex'}}>\r\n                                        {\r\n                                            this.state.stars.map(star=> {\r\n                                                return star\r\n                                            })\r\n                                        }\r\n                                    </Div>\r\n                            </Cell>\r\n                        </FormLayoutGroup>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            status={this.validCommentText(this.state.body) === true ? 'valid' : 'error'}\r\n                            value={this.state.body}\r\n                            bottom={'Отзыв должен состоять от 20 до 100 символов. Сейчас '+this.state.body.replace(/\\s+/g,' ').replace(/(\\r?\\n){2,}/g, '$1').length+' из 100.' }\r\n                            top={\"Добавление отзыва\"}\r\n                            placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            mode=\"primary\"\r\n                            onClick={() => this.sendComment()}\r\n                        >\r\n                            Добавить отзыв\r\n                        </Button>\r\n                    </FormLayout>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <React.Fragment>\r\n                    {\r\n                        this.state.onModer !== 0 ?\r\n                            <Cell indicator={this.state.onModer} before={<Icon24CommentOutline/>}>Отзывов на модерации</Cell> : null\r\n                    }\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(MastersComments);","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Group,\r\n    Cell,\r\n    Avatar, Spinner, CardGrid, Card, Button, CellButton, Banner, Counter, PanelHeader, Panel\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9],\r\n            inGroup: false,\r\n            isFav: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0,0);\r\n        if (this.props.params){\r\n            this.setState({isFav: Number(this.props.params.vk_is_favorite)})\r\n        }\r\n        fetch('https://mysterious-garden-57052.herokuapp.com/info/landing')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({countMasters: data.countMasters, countUsers: data.countUsers, countCities: data.countCities, cities: data.cities.sort()})\r\n            });\r\n    }\r\n\r\n    addToFav = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {})\r\n            .then(data => {\r\n                if (data.result === true){\r\n                    this.setState({isFav: 1})\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    favApp = () => {\r\n        if (this.state.isFav === 0){\r\n            return (\r\n                <Banner\r\n                    subheader=\"Добавьте Навигатор красоты в список избранных приложений - все мастера будут всегда под рукой\"\r\n                    actions={<Button onClick={()=>this.addToFav()}>В избранное</Button>}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    isMember = () => {\r\n        const data = {\r\n            user_id: this.props.user.vkUid,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.vkapi.isMember,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.ingroup === 1){\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <Banner\r\n                            header=\"Будь в курсе новостей!\"\r\n                            subheader=\"Подпишись на наше сообщество ВКонтакте и следи за нововведениями\"\r\n                            actions={<Button onClick={()=>this.joinGroup()}>Подписаться</Button>}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    };\r\n\r\n    joinGroup = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        })\r\n            .then(this.isMember)\r\n            .catch(e => console.log(e))\r\n    };\r\n\r\n    feedList = () => {\r\n        return (\r\n            this.state.feed.map(feed=>{\r\n                return (\r\n                    <CardGrid>\r\n                        <Card key={feed} size=\"l\" mode=\"shadow\">\r\n                            <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    userInfo = (user) => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\">\r\n                    <Cell\r\n                        photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                        description={\r\n                            this.props.master === null ? 'Пользователь' : 'Авторизованный мастер'\r\n                        }\r\n                        //bottomContent={}\r\n                        before={<Avatar src={user.avatarLink} size={50}/>}\r\n                        size=\"l\"\r\n                    >{user.firstname} {user.lastname}\r\n                    </Cell>\r\n                    {\r\n                        user.vkUid === '199500866' &&\r\n                        //user.vkUid === '2314852' &&\r\n                        <CellButton onClick={this.props.openModer}>Модерация</CellButton>\r\n                    }\r\n                    {this.props.master === null &&\r\n                    <Cell\r\n                        style={{borderRadius: '0 0 10px 10px'}}\r\n                        multiline\r\n                        onClick={this.props.openReg}\r\n                        before={<Icon24UserOutgoing/>}\r\n                        expandable\r\n                    >\r\n                        Если вы — мастер, пройдите простую процедуру регистрации\r\n                    </Cell>\r\n                    }\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    nowCounter = () => {\r\n        return (\r\n            <CardGrid>\r\n                <Card size=\"l\" mode=\"shadow\">\r\n                    <React.Fragment>\r\n                        <Cell>Уже с нами:</Cell>\r\n                        <Cell indicator={this.state.countUsers ? <Counter>{this.state.countUsers}</Counter> : <Spinner size=\"small\"/>}>Пользователей</Cell>\r\n                        <Cell indicator={this.state.countMasters ? <Counter>{this.state.countMasters}</Counter> : <Spinner size=\"small\"/>}>Мастеров</Cell>\r\n                        <Cell indicator={this.state.countCities ? <Counter>{this.state.countCities}</Counter> : <Spinner size=\"small\"/>}>Городов</Cell>\r\n                        {/*<Cell multiline>*/}\r\n                        {/*    {*/}\r\n                        {/*        this.state.cities &&*/}\r\n                        {/*        this.state.cities.map((city, index)=>{*/}\r\n                        {/*            if (index + 1 !== this.state.cities.length){*/}\r\n                        {/*                return city+', '*/}\r\n                        {/*            } else {*/}\r\n                        {/*                return city*/}\r\n                        {/*            }*/}\r\n                        {/*        })*/}\r\n                        {/*    }*/}\r\n                        {/*</Cell>*/}\r\n                    </React.Fragment>\r\n                </Card>\r\n            </CardGrid>\r\n        )\r\n    };\r\n\r\n    render(){\r\n        const {user} = this.props;\r\n        return (\r\n            <Panel id=\"news\">\r\n                <PanelHeader>Новости</PanelHeader>\r\n                    <Group>\r\n                        <Placeholder\r\n                            icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                            header=\"Привет!\"\r\n                        >\r\n                            У нас можно найти бьюти-мастера или предложить свои услуги. База мастеров в разных городах пополняется ежедневно.\r\n                        </Placeholder>\r\n                        {this.userInfo(user)}\r\n                        {this.nowCounter()}\r\n                        {this.isMember()}\r\n                        {this.favApp()}\r\n                        {/*{this.feedList()}*/}\r\n                        {/*<FixedLayout*/}\r\n                        {/*    vertical=\"bottom\"*/}\r\n                        {/*    style={{marginBottom: 5}}*/}\r\n                        {/*>*/}\r\n                        {/*    */}\r\n                        {/*</FixedLayout>*/}\r\n                    </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(News);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Select,\r\n    Cell,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Link,\r\n    Button,\r\n    Checkbox,\r\n    Textarea,\r\n    FormLayout,\r\n    Div,\r\n    Avatar,\r\n    Input,\r\n    CardGrid, Card, CellButton, Alert, List\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeTargetCity} from \"../store/actions\";\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {connect} from \"react-redux\";\r\nimport Icon16Down from '@vkontakte/icons/dist/16/down';\r\nimport Icon16Up from '@vkontakte/icons/dist/16/up';\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false,\r\n            checkLicense: false,\r\n            description: '',\r\n            priceList: [],\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            qapi: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0,0);\r\n        this.getCategories();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAlert(null)\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.props.setAlert(\r\n            <Alert\r\n                actionsLayout=\"vertical\"\r\n                actions={[{\r\n                    title: 'Удалить процедуру',\r\n                    autoclose: true,\r\n                    mode: 'destructive',\r\n                    action: () => this.onRemove(index),\r\n                }, {\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    mode: 'cancel'\r\n                }]}\r\n                onClose={()=>this.props.setAlert(null)}\r\n            >\r\n                <h2>Подтвердите действие</h2>\r\n                <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n            </Alert>\r\n        );\r\n    };\r\n\r\n    getCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n            });\r\n    };\r\n\r\n    regMaster = () => {\r\n        try {\r\n            if (this.props.targetCity=== 'Не выбрано') throw 'Город не выбран. Вас не смогут найти.';\r\n            if (this.state.checkLicense === false) throw 'Примите условия пользовательского соглашения, если желаете зарегистрироваться.';\r\n            if (this.state.statusMessage === false) throw 'Предоставьте доступ на получение сообщений, чтобы мы уведомили вас о заказе.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20-ти символов.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать более 20-ти символов.';\r\n            if (this.state.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к вам.';\r\n            if (!this.state.type) throw 'Укажите тип исполнителя работ: Частное лицо или Организация.';\r\n            let cat = {\r\n                subcat: [],\r\n                category: []\r\n            };\r\n            let categories = this.state.categories;\r\n            categories.map((category, index) => {\r\n                let countCat = category.subcat.filter(\r\n                    function(subcat){\r\n                        if (subcat.active === true){\r\n                            cat.subcat.push(subcat._id);\r\n                            return subcat.active;\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }\r\n                );\r\n                if (countCat.length > 0) {\r\n                    cat.category.push({id: category._id, label: category.label});\r\n                    category.active = true;\r\n                } else {\r\n                    category.active = false;\r\n                }\r\n            });\r\n            let master = {\r\n                description: this.state.description,\r\n                type: this.state.type,\r\n                location: {\r\n                    country: this.props.user.location.country,\r\n                    city: this.props.targetCity\r\n                },\r\n                categories: cat,\r\n                brand: this.state.brand,\r\n                priceList: this.state.priceList,\r\n                params: this.props.params\r\n            };\r\n            this.props.closeReg(master);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    validateNewProdTitle(newProdTitle){\r\n        if (newProdTitle === undefined){\r\n            return {status: false, error: 'Не заполнено название процедуры.'};\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20){\r\n                return {status: false, error: 'Недопустимая длина заголовка.'};\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2){\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody){\r\n        if (newProdBody === undefined){\r\n            return {status: false, error: 'Не заполнено описание процедуры.'};\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250){\r\n                return {status: false, error: 'Недопустимая длина описания.'};\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5){\r\n                    return {status: false, error: 'Недопустимая длина описания.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice){\r\n        if (newProdPrice === undefined){\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'};\r\n        } else {\r\n            if (newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").trim().length > 5){\r\n                return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n            } else {\r\n                if (newProdPrice.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").trim().length < 1){\r\n                    return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n                } else {\r\n                    if (Number(newProdPrice) < 0){\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'};\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle);\r\n            if (!title.status) throw title.error;\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody);\r\n            if (!body.status) throw body.error;\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice);\r\n            if (!price.status) throw price.error;\r\n            //if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры.';\r\n            //if (this.state.newProdTitle.replace(/ +/g, ' ').trim().length > 20 || this.state.newProdTitle.replace(/ +/g, ' ').trim().length < 2) throw 'Недопустимая длина заголовка.';\r\n            //if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры.';\r\n            //if (this.state.newProdBody.replace(/ +/g, ' ').trim().length > 250 || this.state.newProdBody.replace(/ +/g, ' ').trim().length < 5) throw 'Недопустимая длина описания.';\r\n            //if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры.';\r\n            //if (Number(this.state.newProdPrice) < 0) throw 'Нельзя указать отрицательную стоимость.';\r\n            //if (this.state.newProdPrice.replace(/ +/g, ' ').trim().length > 5 || this.state.newProdPrice.replace(/ +/g, ' ').trim().length < 1) throw 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.';\r\n            let priceList = this.state.priceList;\r\n            priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice.replace(/^0+/, ''))\r\n            });\r\n            this.setState({priceList: priceList, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        } catch (error) {\r\n            this.props.snackbar(error)\r\n        }\r\n    };\r\n    onRemove = (index) => {\r\n        let priceList = this.state.priceList;\r\n        priceList = [...this.state.priceList.slice(0, index), ...this.state.priceList.slice(index + 1)];\r\n        this.setState({priceList: priceList});\r\n        this.props.snackbar('Процедура удалена.');\r\n    };\r\n    permMessage = () => {\r\n            if(this.state.qapi === false){\r\n                this.setState({qapi: true});\r\n                bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                    .then(result => {\r\n                        this.setState({statusMessage: result.result, qapi: false})\r\n                    })\r\n                    .catch(e => {\r\n                        this.setState({qapi: false});\r\n                        console.log(e)\r\n                    })\r\n            } else {\r\n                return null\r\n            }\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                            <Group>\r\n                                <CardGrid>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell\r\n                                            size=\"l\"\r\n                                            description=\"Регистрация мастера\"\r\n                                            before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                                        >\r\n                                            {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                                        </Cell>\r\n                                        <Cell\r\n                                            expandable\r\n                                            onClick={this.props.changeCity}\r\n                                            indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                            status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                            bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите город в котором вы работаете'}\r\n                                        >\r\n                                            Ваш город\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                                <Cell\r\n                                    multiline\r\n                                    asideContent={\r\n                                        <Switch\r\n                                            onChange={this.permMessage}\r\n                                            checked={this.state.statusMessage}/>\r\n                                    }\r\n                                    bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                                >Доступ на получение личных сообщений от приложения, для получения уведомлений о заявках\r\n                                </Cell>\r\n                            </Group>\r\n                        <FormLayout>\r\n                                <Textarea\r\n                                    name={'description'}\r\n                                    bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                    top=\"О себе\"\r\n                                    value={this.state.description}\r\n                                    onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что Вы выполняете. Так Вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }\r\n                                                  asideContent={this.state[category._id] ? <Icon16Up /> : <Icon16Down />}\r\n                                            >\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                        </FormLayout>\r\n                            <Group title={'Прайс-лист'}>\r\n                                {this.state.priceList.length === 0 &&\r\n                                <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                }\r\n                                <CardGrid>\r\n                                    {this.state.priceList.map((item, index) => (\r\n                                        <Card size=\"l\" mode=\"shadow\">\r\n                                            <Cell\r\n                                                key={item}\r\n                                                multiline\r\n                                                // removable\r\n                                                // onRemove={() => {\r\n                                                //     this.onRemove(index)\r\n                                                // }}\r\n                                                >\r\n                                                <Cell\r\n                                                    description=\"Название процедуры\">{this.state.priceList[index].title}</Cell>\r\n                                                <Cell description=\"Краткое описание процедуры\"\r\n                                                      multiline>{this.state.priceList[index].body}</Cell>\r\n                                                <Cell\r\n                                                    description=\"Минимальная цена за работу\">{this.state.priceList[index].price}</Cell>\r\n                                            <Button\r\n                                                //before={<Icon24Dismiss/>}\r\n                                                onClick={() => {this.deleteProcedure(index)}}\r\n                                                size=\"xl\"\r\n                                                mode=\"destructive\"\r\n                                            >Удалить</Button>\r\n                                            </Cell>\r\n                                        </Card>\r\n                                    ))}\r\n                                </CardGrid>\r\n                                {this.state.add ?\r\n                                <Div>\r\n                                    <Cell description=\"Добавления нового элемента\" multiline>\r\n                                        <List>\r\n                                            <Cell description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length+\"/20\"}>\r\n                                                <Input\r\n                                                    require\r\n                                                    status={this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error'}\r\n                                                    name=\"newProdTitle\"\r\n                                                    type=\"text\"\r\n                                                    value={this.state.newProdTitle}\r\n                                                    placeholder={'Введите название'}\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Cell>\r\n                                            <Cell description={this.state.newProdBody.replace(/ +/g, ' ').trim().length+\"/250\"}>\r\n                                                <Textarea\r\n                                                    require\r\n                                                    status={this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error'}\r\n                                                    name=\"newProdBody\"\r\n                                                    value={this.state.newProdBody}\r\n                                                    placeholder={'Укажите описание'}\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Cell>\r\n                                            <Cell description={this.state.newProdPrice.replace(/^0+/, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").trim().length+\"/5\"}>\r\n                                                <Input\r\n                                                    require\r\n                                                    status={this.validateNewProdPrice(this.state.newProdPrice.replace(/^0+/, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\")).status ? 'valid' : 'error'}\r\n                                                    name=\"newProdPrice\"\r\n                                                    type=\"number\" value={this.state.newProdPrice.replace(/^0+/, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\")}\r\n                                                    placeholder={'Укажите цену'}\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Cell>\r\n                                        </List>\r\n                                    </Cell>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                        <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                    </Div>\r\n                                </Div> :\r\n                                    <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                    >Добавить процедуру</CellButton>\r\n                                }\r\n                            </Group>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link onClick={this.props.openRules}>условиями использования приложения</Link></Checkbox>\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Invite);","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group, Banner, Button, Card, CardGrid, RichCell} from \"@vkontakte/vkui\"\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    checkModeration = () => {\r\n        if (this.props.master.moderation.status === false) {\r\n            if (this.props.master.moderation.reasons.length > 0) {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size='xl'>\r\n                            <Cell description={'Их необходимо исправить'}>При модерации обнаружены ошибки:</Cell>\r\n                            {\r\n                                this.props.master.moderation.reasons.map((reason, index)=>{\r\n                                    return <Cell key={index}>{reason}</Cell>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            } else {\r\n                return (\r\n                    <CardGrid>\r\n                        <Card size='xl'>\r\n                            <Cell multiline>Ваш профиль на проверке. В течение суток он будет доступен в поиске.</Cell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n\r\n    addToFavApp = () => {\r\n        bridge.send(\"VKWebAppAddToFavorites\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Group separator={'hide'}>\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar src={this.props.user.avatarLink} size={62}/>}\r\n                                text={this.props.master ? this.props.master.type : 'Пользователь'}\r\n                                caption={this.props.master && this.props.master.location.city.title}\r\n                                after={this.props.master !== null && <Icon24Write onClick={this.props.openSetting}/>}\r\n                            >\r\n                                {this.props.user.firstname+' '+this.props.user.lastname}\r\n                            </RichCell>\r\n                        </Card>\r\n                    </CardGrid>\r\n                </Group>\r\n                {this.props.master !== null && this.checkModeration()}\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    before={<Icon24Recent />}*/}\r\n                            {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                            {/*    indicator={'В разработке'}*/}\r\n                            {/*>Мои записи</Cell>*/}\r\n                        </List>\r\n                    </Group>\r\n                {\r\n                    this.props.isFavourite === 0 ?\r\n                        <Banner\r\n                            header=\"Мы избранные\"\r\n                            subheader=\"Добавьте Навигатор красоты в список избранных приложений. Мы всего в одном клике от вас.\"\r\n                            actions={<Button onClick={()=>this.addToFavApp()}>Добавить</Button>}\r\n                        /> :\r\n                        null\r\n                }\r\n                {this.props.master !== null &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24Users />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>Мои заявки</Cell>*/}\r\n                    {/*<Cell*/}\r\n                    {/*    expandable*/}\r\n                    {/*    before={<Icon24UserOutgoing />}*/}\r\n                    {/*    onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*    indicator={'В разработке'}*/}\r\n                    {/*>График</Cell>*/}\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Lk);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    File,\r\n    FormLayout,\r\n    CardGrid,\r\n    Card,\r\n    Snackbar,\r\n    Cell,\r\n    PanelSpinner,\r\n    Spinner,\r\n    CellButton\r\n} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24Gallery from '@vkontakte/icons/dist/24/gallery';\r\n\r\nclass Portfolio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        this.setState({images: this.props.master.photos, isLoad: true});\r\n    }\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        try {\r\n            if (this.state.uploadUrl === undefined) throw 'Ошибка. Не получена ссылка на загрузку фото.';\r\n            if (this.state.token === undefined) throw 'Ошибка. Не получен токен пользователя.';\r\n            this.setState({loading: true});\r\n            const formData = new FormData();\r\n            let selectedFile = document.getElementById('input').files[0];\r\n            if (!selectedFile.type.match('image.*')) throw 'Допустимо загружать только изображения.';\r\n            formData.append('master', this.props.master.firstname+' '+this.props.master.lastname );\r\n            formData.append('uploadUrl', this.state.uploadUrl);\r\n            formData.append('token', this.state.token);\r\n            formData.append('file1', selectedFile);\r\n            formData.append('masterId', this.props.master._id);\r\n            fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error){\r\n                        this.setState({loading: false});\r\n                        this.openSnack(res.error);\r\n                    } else {\r\n                        fetchJsonp(res.saveUrl, {\r\n                            mode: 'no-cors',\r\n                            method: 'GET'\r\n                        })\r\n                            .then(result => result.json())\r\n                            .then(result =>{\r\n                                const savePh = {\r\n                                    url: result.response[0].sizes[2].url,\r\n                                    params: this.props.params\r\n                                };\r\n                                fetch(BACKEND.vkapi.savePhoto, {\r\n                                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                                    mode: 'cors', // no-cors, cors, *same-origin\r\n                                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                    credentials: 'same-origin', // include, *same-origin, omit\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    redirect: 'follow', // manual, *follow, error\r\n                                    referrer: 'no-referrer', // no-referrer, *client\r\n                                    body: JSON.stringify(savePh)\r\n                                })\r\n                                    .then(res => res.json())\r\n                                    .then(res =>{\r\n                                        if (res.error){\r\n                                            this.setState({loading: false});\r\n                                            this.openSnack(res.error);\r\n                                        } else {\r\n                                            let imgArr = this.state.images;\r\n                                            imgArr.push(res.img);\r\n                                            this.openSnack('Фото успешно загружено.');\r\n                                            this.setState({images: imgArr, loading: false});\r\n                                        }\r\n                                    })\r\n                                    .catch(e=>console.log(e))\r\n                            })\r\n                            .catch(e=>console.log(e))\r\n                        // console.log(res);\r\n                        // let imgArr = this.state.images;\r\n                        // imgArr.unshift(res.img);\r\n                        // this.openSnack('Фото успешно загружено');\r\n                        // this.setState({images: imgArr, loading: false});\r\n                    }\r\n                })\r\n                .catch(error => {console.log(error)\r\n                    this.setState({loading: false});\r\n                    this.openSnack(error);\r\n                })\r\n        } catch(e){\r\n            this.openSnack(e);\r\n        }\r\n\r\n    };\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(result => {\r\n                if (result.access_token){\r\n                    this.setState({token: result.access_token})\r\n                    this.getUploadServer(result.access_token)\r\n                    //return result.access_token //this.getUploadServer(data.access_token);\r\n                }\r\n                // if (result.type === 'VKWebAppGetAuthTokenResult'){\r\n                //     this.setState({token: result.data.access_token})\r\n                //     return result.data.access_token //this.getUploadServer(data.access_token);\r\n                // }\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover', borderRadius: 13}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                {\r\n                                    this.state.token ?\r\n                                        <File\r\n                                            accept=\"image/*\"\r\n                                            top=\"Добавьте фото в портфолио\"\r\n                                            before={<Icon24Camera />}\r\n                                            size=\"l\"\r\n                                            onChange={this.uploadPhoto}\r\n                                            //onClick={this.getToken}\r\n                                            id=\"input\"\r\n                                        >\r\n                                            Открыть галерею\r\n                                        </File> :\r\n                                        <CellButton onClick={()=>this.getToken()} before={<Icon24Gallery />}>Разрешить доступ к фото</CellButton>\r\n\r\n                                }\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Portfolio);","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const data = {\r\n            search: this.state.search.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    CardGrid,\r\n    Card,\r\n    List,\r\n    Alert,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext, Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setMaster} from \"../store/actions\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osname = platform();\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: [],\r\n            isLoad: false,\r\n            isMaster: false,\r\n            snackbar: null,\r\n            newProdTitle: '',\r\n            newProdBody: '',\r\n            newProdPrice: '',\r\n            isChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isMaster === true) {\r\n            this.setState({master: this.props.master, description: this.props.master.description});\r\n            fetch(BACKEND.category.getAll)\r\n                .then(res => res.json())\r\n                .then(categories => {\r\n                    this.setState({categories: categories});\r\n                    categories.map(category => {\r\n                        this.setState({[category._id]: false});\r\n                    });\r\n                    this.setActive( this.props.master.categories.subcat);\r\n                });\r\n            if (this.props.master.changed)this.setState({isChange: true})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAlert(null)\r\n        this.saveChanges()\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps.targetCity !== this.props.targetCity){\r\n    //         let master = this.state.master;\r\n    //         master.location.city = this.props.targetCity;\r\n    //         this.setState({master: master});\r\n    //     }\r\n    // }\r\n\r\n    saveChanges = () => {\r\n        try{\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length < 20) throw 'Блок \"О себе\" должен содержать более 20 символов.';\r\n            if (this.state.description.replace(/ +/g, ' ').trim().length > 200) throw 'Блок \"О себе\" должен содержать не более 200 символов.';\r\n            if (this.state.master.priceList.length < 1) throw 'Добавьте как минимум одну процедуру, чтобы клиенты смогли записаться к Вам.';\r\n              if (this.state.isChange === true){\r\n                  const master = this.state.master;\r\n                  master.params = this.props.params;\r\n                  this.patchData(BACKEND.masters.all + this.state.master._id, master);\r\n                  this.props.setMaster(this.state.master);\r\n              }\r\n        }catch(e){\r\n            this.props.snackbarDismiss(e);\r\n        }\r\n    };\r\n\r\n    setActive(subcat){\r\n        if (Array.isArray(subcat)) {\r\n            this.state.categories.map(category => {\r\n                this.setState({[category._id]: false});\r\n                category.subcat.map(subcat => {\r\n                    if (this.state.master.categories.subcat.includes(subcat._id)) {\r\n                        subcat.active = true;\r\n                    }\r\n                })\r\n            });\r\n            this.setState({isLoad: true})\r\n        }\r\n    }\r\n\r\n    deleteProcedure = (index) => {\r\n        this.setState({isChange: true});\r\n        this.props.setAlert(\r\n                    <Alert\r\n                        actionsLayout=\"vertical\"\r\n                        actions={[{\r\n                            title: 'Удалить процедуру',\r\n                            autoclose: true,\r\n                            mode: 'destructive',\r\n                            action: () => this.onRemove(index),\r\n                        }, {\r\n                            title: 'Отмена',\r\n                            autoclose: true,\r\n                            mode: 'cancel'\r\n                        }]}\r\n                        onClose={()=>this.props.setAlert(null)}\r\n                    >\r\n                        <h2>Подтвердите действие</h2>\r\n                        <p>Вы уверены, что хотите удалить выбранную процедуру?</p>\r\n                    </Alert>\r\n        );\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        this.setState({isChange: true});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        this.state.categories.map(category=>{\r\n            let count = category.subcat.filter(subcat => subcat.active === true).length;\r\n            category.active = count > 0;\r\n        });\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.props.snackbar('Изменения сохранены.');\r\n            })\r\n            .catch(e=>console.log(e.message))\r\n    }\r\n\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let master = this.state.master;\r\n        master[name] = !master[name];\r\n        this.setState({master: master});\r\n        this.setState({isChange: true});\r\n    };\r\n    onRemove = (index) => {\r\n        let master = this.state.master;\r\n        master.priceList = [...this.state.master.priceList.slice(0, index), ...this.state.master.priceList.slice(index + 1)];\r\n        this.setState({master: master});\r\n        this.setState({isChange: true});\r\n        //this.patchData(BACKEND.masters.all + this.state.master._id, this.state.master);\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n\r\n    openSnackDismiss(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    before={<Icon24Dismiss/>}\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnack(text) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    validateNewProdTitle(newProdTitle){\r\n        if (newProdTitle === undefined){\r\n            return {status: false, error: 'Не заполнено название процедуры.'};\r\n        } else {\r\n            if (newProdTitle.replace(/ +/g, ' ').trim().length > 20){\r\n                return {status: false, error: 'Недопустимая длина заголовка.'};\r\n            } else {\r\n                if (newProdTitle.replace(/ +/g, ' ').trim().length < 2){\r\n                    return {status: false, error: 'Недопустимая длина заголовка.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdBody(newProdBody){\r\n        if (newProdBody === undefined){\r\n            return {status: false, error: 'Не заполнено описание процедуры.'};\r\n        } else {\r\n            if (newProdBody.replace(/ +/g, ' ').trim().length > 250){\r\n                return {status: false, error: 'Недопустимая длина описания.'};\r\n            } else {\r\n                if (newProdBody.replace(/ +/g, ' ').trim().length < 5){\r\n                    return {status: false, error: 'Недопустимая длина описания.'};\r\n                } else {\r\n                    return {status: true}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validateNewProdPrice(newProdPrice){\r\n        if (newProdPrice === undefined){\r\n            return {status: false, error: 'Не заполнена стоимость процедуры.'};\r\n        } else {\r\n            if (newProdPrice.replace(/ +/g, ' ').trim().length > 5){\r\n                return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n            } else {\r\n                if (newProdPrice.replace(/ +/g, ' ').trim().length < 1){\r\n                    return {status: false, error: 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.'};\r\n                } else {\r\n                    if (Number(newProdPrice) < 0){\r\n                        return {status: false, error: 'Нельзя указать отрицательную стоимость.'};\r\n                    } else {\r\n                        return {status: true}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    saveProd = () => {\r\n        try {\r\n            let title = this.validateNewProdTitle(this.state.newProdTitle);\r\n            if (!title.status) throw title.error;\r\n\r\n            let body = this.validateNewProdBody(this.state.newProdBody);\r\n            if (!body.status) throw body.error;\r\n\r\n            let price = this.validateNewProdPrice(this.state.newProdPrice);\r\n            if (!price.status) throw price.error;\r\n            //if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры.';\r\n            //if (this.state.newProdTitle.replace(/ +/g, ' ').trim().length > 20 || this.state.newProdTitle.replace(/ +/g, ' ').trim().length < 2) throw 'Недопустимая длина заголовка.';\r\n            //if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры.';\r\n            //if (this.state.newProdBody.replace(/ +/g, ' ').trim().length > 250 || this.state.newProdBody.replace(/ +/g, ' ').trim().length < 5) throw 'Недопустимая длина описания.';\r\n            //if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры.';\r\n            //if (Number(this.state.newProdPrice) < 0) throw 'Нельзя указать отрицательную стоимость.';\r\n            //if (this.state.newProdPrice.replace(/ +/g, ' ').trim().length > 5 || this.state.newProdPrice.replace(/ +/g, ' ').trim().length < 1) throw 'Некорректная стоимость. Допустимы целые числа длиной от 1 до 5 символов.';\r\n            let master = this.state.master;\r\n            master.priceList.push({\r\n                title: this.state.newProdTitle,\r\n                body: this.state.newProdBody,\r\n                price: Number(this.state.newProdPrice.replace(/^0+/, ''))\r\n            });\r\n            this.setState({master: master, add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n            this.openSnack('Процедура добавлена.');\r\n            this.setState({isChange: true});\r\n        } catch (error) {\r\n            this.openSnackDismiss(error)\r\n        }\r\n    };\r\n    // saveProd = () => {\r\n    //     try {\r\n    //         if (this.state.newProdTitle === undefined) throw 'Не заполнено название процедуры';\r\n    //         if (this.state.newProdBody === undefined) throw 'Не заполнено описание процедуры';\r\n    //         if (this.state.newProdPrice === undefined) throw 'Не заполнена стоимость процедуры';\r\n    //         let master = this.state.master;\r\n    //         master.priceList.push({\r\n    //             title: this.state.newProdTitle,\r\n    //             body: this.state.newProdBody,\r\n    //             price: this.state.newProdPrice\r\n    //         });\r\n    //         this.setState({master: master});\r\n    //         this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n    //         this.props.snackbar('Процедура добавлена');\r\n    //     } catch (error) {\r\n    //         this.props.snackbar(error)\r\n    //     }\r\n    // };\r\n\r\n    counter = (index) => {\r\n        // let countMass = this.state.categories[index].subcat.map(subcat=>{\r\n        //     if (subcat.active === true){\r\n        //         return subcat.label\r\n        //     }\r\n        // });\r\n        let countMass = this.state.categories[index].subcat.filter(subcat=> {\r\n            if (subcat.active === true) {\r\n                return subcat.label\r\n            }\r\n\r\n            // function(item){\r\n            //     if (item.active === true){\r\n            //         return item.active;\r\n            //     } else {\r\n            //         return null\r\n            //     }\r\n            // }\r\n        });\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.master.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.master.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    changeCity = (city) => {\r\n        let master = this.state.master;\r\n        master.location.city = city;\r\n        this.props.setMaster(master);\r\n        this.props.goBack();\r\n        this.setState({isChange: true});\r\n        //this.props.changeModal('setting');\r\n    };\r\n\r\n    statusProfile = () => {\r\n        if (this.state.master.moderation.status === false){\r\n            return 'На модерации'\r\n        } else if (this.state.master.visible === false){\r\n            return 'Ваш профиль не выводится в поиске'\r\n        } else {\r\n            return 'Ваш профиль доступен в поиске'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false){\r\n            return null\r\n        }\r\n        if (this.props.user.isMaster === false) {\r\n            return null\r\n        } else {\r\n                return (\r\n                    <Div>\r\n                                <Cell\r\n                                    size=\"l\"\r\n                                    description={this.statusProfile()}\r\n                                    before={<Avatar src={this.state.master.avatarLink} size={80}/>}\r\n                                >\r\n                                    {this.state.master.firstname + ' ' + this.state.master.lastname}\r\n                                </Cell>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => {this.props.changeCity()}}\r\n                                    indicator={this.state.master.location.city === typeof String ? 'Не выбрано' : this.state.master.location.city.title}\r\n                                >\r\n                                    Ваш город\r\n                                </Cell>\r\n                                <Group>\r\n                                    {this.checkBan()}\r\n                                </Group>\r\n                                <Group title={'Прайс-лист'}>\r\n                                    {this.state.master.priceList.length === 0 &&\r\n                                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                                    }\r\n                                    <CardGrid>\r\n                                        {this.state.master.priceList.map((item, index) => (\r\n                                            <Card size=\"l\" mode=\"shadow\" key={index}>\r\n                                                <Cell\r\n                                                    multiline\r\n                                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                                    //removable\r\n                                                    // onRemove={() => {\r\n                                                    //     this.onRemove(index)\r\n                                                    // }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        description=\"Название процедуры\">{this.state.master.priceList[index].title}</Cell>\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.master.priceList[index].body}</Cell>\r\n                                                    <Cell\r\n                                                        description=\"Минимальная цена за работу\">{this.state.master.priceList[index].price}</Cell>\r\n                                                    <Button\r\n                                                        //before={<Icon24Dismiss/>}\r\n                                                        onClick={() => this.deleteProcedure(index)}\r\n                                                        size=\"xl\"\r\n                                                        mode=\"destructive\"\r\n                                                    >Удалить</Button>\r\n                                                </Cell>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </CardGrid>\r\n                                    {this.state.add ?\r\n                                    <Div>\r\n                                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                                            <List>\r\n                                                <Cell description={this.state.newProdTitle.replace(/ +/g, ' ').trim().length+\"/20\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={this.validateNewProdTitle(this.state.newProdTitle).status === true ? 'valid' : 'error'}\r\n                                                        name=\"newProdTitle\"\r\n                                                        type=\"text\"\r\n                                                        value={this.state.newProdTitle}\r\n                                                        placeholder={'Введите название'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdBody.replace(/ +/g, ' ').trim().length+\"/250\"}>\r\n                                                    <Textarea\r\n                                                        require\r\n                                                        status={this.validateNewProdBody(this.state.newProdBody).status ? 'valid' : 'error'}\r\n                                                        name=\"newProdBody\"\r\n                                                        value={this.state.newProdBody}\r\n                                                        placeholder={'Укажите описание'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                                <Cell description={this.state.newProdPrice.replace(/^0+/, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").trim().length+\"/5\"}>\r\n                                                    <Input\r\n                                                        require\r\n                                                        status={this.validateNewProdPrice(this.state.newProdPrice.replace(/^0+/, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\")).status ? 'valid' : 'error'}\r\n                                                        name=\"newProdPrice\"\r\n                                                        type=\"number\" value={this.state.newProdPrice.replace(/^0+/, '').replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\")}\r\n                                                        placeholder={'Укажите цену'}\r\n                                                        onChange={this.handleChange}/>\r\n                                                </Cell>\r\n                                            </List>\r\n                                        </Cell>\r\n                                        <Div style={{display: 'flex'}}>\r\n                                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                                        </Div>\r\n                                    </Div> :\r\n                                        <CellButton\r\n                                        onClick={() => this.addProd(true)}\r\n                                        before={<Icon24Add/>}\r\n                                        >Добавить процедуру</CellButton>\r\n                                    }\r\n                                </Group>\r\n                                {/*<Group>*/}\r\n                                {/*    <CellButton*/}\r\n                                {/*        onClick={() => this.addProd(true)}*/}\r\n                                {/*        before={<Icon24Add/>}*/}\r\n                                {/*    >Добавить процедуру</CellButton>*/}\r\n                                {/*</Group>*/}\r\n                                <Group>\r\n                                    <FormLayout>\r\n                                        <Textarea\r\n                                            name={'description'}\r\n                                            status={this.state.description ? 'valid' : 'error'}\r\n                                            bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                            top=\"О себе\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}/>\r\n                                    <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                                     bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                                     id={'category'}>\r\n                                        {\r\n                                            this.state.categories.map((category, i) => {\r\n                                                return (\r\n                                                    <Group key={category._id}>\r\n                                                        <Cell expandable name={category._id}\r\n                                                              onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                              indicator={\r\n                                                                  'Выбрано: ' + this.counter(i)\r\n                                                              }>\r\n                                                            {category.label}\r\n                                                        </Cell>\r\n                                                        {this.state[category._id] &&\r\n                                                        <Div>\r\n                                                            {\r\n                                                                category.subcat.map((subcategory, index, category)=>{\r\n                                                                    return (\r\n                                                                        <Cell\r\n                                                                            key={index}\r\n                                                                            asideContent={\r\n                                                                                <Switch\r\n                                                                                    name={i}\r\n                                                                                    id={index}\r\n                                                                                    onChange={(event)=>{this.setState({isChange: true}); this.checkSubcat(event)}}\r\n                                                                                    checked={subcategory.active}/>\r\n                                                                            }>\r\n                                                                            {subcategory.label}\r\n                                                                        </Cell>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Div>\r\n                                                        }\r\n                                                    </Group>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </FormLayoutGroup>\r\n                                    </FormLayout>\r\n                                </Group>\r\n                        {this.state.snackbar}\r\n                            </Div>\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        setMaster: bindActionCreators(setMaster, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(withModalRootContext (Setting));","import React from 'react';\r\nimport {\r\n    Avatar, RichCell, Spinner, Placeholder, Card, CardGrid, Footer, Group\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\nimport Head from \"../elements/panelHeader\";\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFavsMasters(this.props.user.favs);\r\n    }\r\n\r\n    loadFavsMasters = (favs) => {\r\n        //favs is array masters ID\r\n        let ids = {ids: favs};\r\n        fetch(BACKEND.masters.onarrayid, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(ids), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersArr => {\r\n                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n            })\r\n            .catch(err=> {\r\n                console.log(err);\r\n                this.setState({isLoaded: true});\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Head\r\n                        title='Избранное'\r\n                        goBack={()=>this.props.goBack()}\r\n                    />\r\n                <Placeholder\r\n                    stretched\r\n                    icon={<Spinner size=\"large\" style={{ marginTop: 20 }} />}\r\n                    header={'Ищем-ищем...'}\r\n                ></Placeholder>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.error) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title='Избранное'\r\n                            goBack={()=>this.props.goBack()}\r\n                        />\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56LikeOutline/>}\r\n                            header={this.state.mastersArr.message}\r\n                        >Добавить мастера в этот список можно, нажав соответствующую кнопку в профиле мастера.\r\n                        </Placeholder>\r\n                    </React.Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Head\r\n                            title='Избранное'\r\n                            goBack={()=>this.props.goBack()}\r\n                        />\r\n                        <Group separator=\"hide\">\r\n                            {\r\n                                this.state.mastersArr.map(master => {\r\n                                    if ((master !== null)) { //если мастер не удален\r\n                                        return (\r\n                                            <React.Fragment>\r\n                                                <CardGrid key={master.vkUid}>\r\n                                                    <Card size=\"l\" mode=\"shadow\">\r\n                                                        <RichCell\r\n                                                            key={master._id}\r\n                                                            before={<Avatar size={72} src={master.avatarLink} />}\r\n                                                            text={master.type}\r\n                                                            caption={master.location.city.title}\r\n                                                            after={<Icon16Chevron/>}\r\n                                                            onClick={() => this.props.openFavMasterOnId(master)}\r\n                                                        >\r\n                                                            {master.firstname} {master.lastname}\r\n                                                        </RichCell>\r\n                                                    </Card>\r\n                                                </CardGrid>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    }\r\n                                })\r\n                            }\r\n                        <Footer>На этом все. Мастеров всего - {this.state.mastersArr.length}.</Footer>\r\n                        </Group>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Card, CardGrid, Cell, RichCell, Button, Counter} from \"@vkontakte/vkui\";\r\n\r\nexport default function FindCard(props){\r\n    return (\r\n        <CardGrid key={props.key}>\r\n            <Card size=\"l\">\r\n                <RichCell\r\n                    disabled\r\n                    //after={<Icon28UserAddOutline />}\r\n                    before={<Avatar size={72} src={props.find.avatarLink} />}\r\n                    caption={props.date}\r\n                    bottom={<Counter>{props.find.sale}</Counter>}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button mode=\"outline\" onClick={()=>props.openMasterOnId(props.find.masterId)}>На страницу мастера</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.find.firstname} {props.find.lastname}\r\n                </RichCell>\r\n                <Cell multiline>\r\n                    {props.find.body}\r\n                </Cell>\r\n                <CardGrid style={{marginBottom: 10}}>\r\n                    {\r\n                        props.find.images.map((image,i)=>{\r\n                            return (\r\n                                <Card\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{borderRadius: 13, height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Card>\r\n        </CardGrid>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Placeholder} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport FindCard from \"./findCard\";\r\n\r\nfunction getDate(comDate) {\r\n    if (comDate === 'Только что') {\r\n        return comDate;\r\n    } else {\r\n        let date = new Date(comDate);\r\n        let hours = date.getHours();\r\n        if (hours < 10) hours = '0'+hours;\r\n        let minutes = date.getMinutes();\r\n        if (minutes < 10) minutes = '0'+minutes;\r\n        let date1 = date.getDate();\r\n        if (date1 < 10) date1 = '0'+date1;\r\n        let month = date.getMonth();\r\n        if (month < 10) month = '0'+month;\r\n        return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n    }\r\n}\r\n\r\n// function renderLastPhoto(arr){\r\n//     for (let i =0; i<arr.length; i++){\r\n//         if (!arr[i]) break;\r\n//         return (\r\n//             <Card\r\n//                 size=\"s\"\r\n//                 mode=\"shadow\"\r\n//                 key={i}\r\n//                 //onClick={() => this.openShowImages(this.state.images, index)}\r\n//             >\r\n//                 <div style={{height: 96, backgroundImage: 'url('+arr[i]+')', backgroundSize: 'cover'}} />\r\n//             </Card>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default function FindList(props){\r\n    if (props.findArr.length === 0) {\r\n        return (\r\n            <Placeholder\r\n                icon={<Icon56UsersOutline />}\r\n                header=\"Не расстраивайтесь\"\r\n                action={<Button onClick={props.share} size=\"l\">Поделиться</Button>}\r\n            >\r\n                В данный момент в городе {props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро предложения появятся.\r\n                Поделитесь приложением с мастерами, которых Вы знаете.\r\n            </Placeholder>\r\n        )\r\n    } else {\r\n        return (\r\n            props.findArr.map(find => {\r\n                return (\r\n                    <FindCard\r\n                        date={getDate(find.date)}\r\n                        key={find._id}\r\n                        find={find}\r\n                        openMasterOnId={props.openMasterOnId}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Cell} from \"@vkontakte/vkui\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction indicator(city){\r\n    if(city) {\r\n        return city === 'Не определено' ? city : city.title\r\n    }\r\n\r\n}\r\n\r\nfunction HeadCity(props){\r\n    return(\r\n        <Cell\r\n            style={{fontSize: 12, padding: 0}}\r\n            expandable\r\n            onClick={props.changeCity}\r\n            indicator={indicator(props.targetCity)}\r\n        ><span style={{fontSize: 12}}>Выбранный город</span></Cell>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity\r\n    };\r\n};\r\n\r\n\r\nexport default connect(putStateToProps)(HeadCity);","import React from 'react';\r\nimport {BACKEND} from \"../func/func\";\r\nimport FindList from './components/findList';\r\nimport HeadCity from '../elements/headCity'\r\nimport {Spinner} from '@vkontakte/vkui';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeFindModelsList, changeFindModelsListScroll,} from \"../store/actions\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.findModelsList.length === 0){\r\n            this.loadFind()\r\n        } else {\r\n            this.setState({findArr: this.props.findModelsList, isLoad: true}, ()=>{\r\n                if (this.props.findModelsListScroll){\r\n                    //window.scrollTo(0, this.props.findModelsListScroll)\r\n                    bridge.send(\"VKWebAppScroll\", {\"top\": this.props.findModelsListScroll, \"speed\": 600});\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadFind())\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeFindModelsListScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    loadFind = () =>{\r\n            fetch(BACKEND.findModel.onCity+this.props.targetCity.id)//ловим обьявления по городу юзера\r\n                .then(res => res.json())\r\n                .then(find => {\r\n                    console.log(find);\r\n                    this.props.changeFindModelsList(find);\r\n                    this.setState({findArr: find, isLoad: true});\r\n                });\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.openSnackAvatar('Ссылка на приложение отправлена.', this.state.activeMaster.avatarLink)\r\n                }\r\n            })\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <HeadCity\r\n                        changeCity={()=>this.props.changeCity()}\r\n                    />\r\n                    <FindList\r\n                        findArr={this.state.findArr}\r\n                        share={this.share}\r\n                        user={this.props.user}\r\n                        openMasterOnId={this.props.openMasterOnId}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCity: state.targetCity,\r\n        user: state.user,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        findModelsList: state.findModelsList\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModel);","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Select,\r\n    Textarea,\r\n    Separator,\r\n    CardGrid, Card, File, Snackbar, Spinner, Banner, Switch\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport FindCard from \"../findmodel/components/findCard\";\r\nimport {connect} from \"react-redux\";\r\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: '',\r\n            body: '',\r\n            isLoaded: false,\r\n            isActive: false,\r\n            error: '',\r\n            loading: false,\r\n            images: [],\r\n            loadFind: {\r\n                images: []\r\n            },\r\n            selectvalue: 'Укажите тип акции',\r\n            visible: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.findModel.onMasterId+this.props.master._id)\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                if (find.length > 0) {\r\n                    console.log(find);\r\n                    this.setState({loadFind: find[0], body:find[0].body, visible:find[0].visible,  error: '', isLoaded: true, selectvalue: find[0].sale, isActive: true});\r\n                } else {\r\n                    let error = <Cell>У вас нет активных поисков</Cell>;\r\n                    this.setState({error: error, isLoaded: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    openSnack (text) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    handleChangeSelect = (event) => {\r\n        this.setState({selectvalue: event.target.value});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    save=()=>{\r\n        try {\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length === 0) throw 'Пустое сообщение недопустимо';\r\n            if (this.state.body.replace(/ +/g, ' ').trim().length > 250) throw 'Максимальная длина сообщения - 250 символов';\r\n            if(this.props.master.photos.length < 3) throw 'В портфолио должно быть не менее 3-х фотографий';\r\n            if(this.state.selectvalue === 'Укажите тип акции') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            if(this.state.selectvalue === '') throw 'Вы не выбрали акцию. Размещение не акционных предложений недоступно.';\r\n            let images = [];\r\n            this.props.master.photos.map((image,i)=> {\r\n                if (i < 3){\r\n                    images.push(image)\r\n                }\r\n            });\r\n            if (this.state.isActive === true) {\r\n                let find = this.state.loadFind;\r\n                find.body = this.state.body;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n                this.openSnack('Информация успешно обновлена.')\r\n            } else {\r\n                let find =this.state.loadFind;\r\n                find.body = this.state.body;\r\n                // find.masterId = this.state.activeMaster._id;\r\n                // find.location = this.state.activeMaster.location;\r\n                // find.firstname = this.state.activeMaster.firstname;\r\n                // find.lastname = this.state.activeMaster.lastname;\r\n                // find.avatarLink = this.state.activeMaster.avatarLink;\r\n                find.images = images;\r\n                find.sale = this.state.selectvalue;\r\n                find.visible = this.state.visible;\r\n                find.params = this.props.params;\r\n                    fetch(BACKEND.findModel.new, {\r\n                        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                        mode: 'cors', // no-cors, cors, *same-origin\r\n                        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                        credentials: 'same-origin', // include, *same-origin, omit\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        redirect: 'follow', // manual, *follow, error\r\n                        referrer: 'no-referrer', // no-referrer, *client\r\n                        body: JSON.stringify(find), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res=>{\r\n                            this.setState({loadFind: res.find, isActive: true});\r\n                            if (res.mStatus === false){\r\n                                this.setState({visible: false});\r\n                                this.openSnack('Объявление о поиске модели создано, но пока не показывается. Его можно активировать сразу после прохождения модерации профиля мастера.')\r\n                            } else {\r\n                                this.openSnack('Объявление о поиске модели успешно создано.')\r\n                            }\r\n                        })\r\n                        .catch(e=>console.log(e));\r\n                //this.postData(BACKEND.findModel.new, find);\r\n            }\r\n        } catch(e) {\r\n            this.openSnack(e)\r\n        }\r\n    };\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response=>response.json()) // парсит JSON ответ в Javascript объект\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({loadFind: result, isActive: true})\r\n            })\r\n\r\n    }\r\n\r\n    // deleteImage(index){\r\n    //     let find = this.state.loadFind;\r\n    //     if (index > -1) {\r\n    //         find.images.splice(index, 1);\r\n    //     } else find.images.splice(0, index);\r\n    //     this.setState({activeFind: find}, ()=> this.save())\r\n    // }\r\n\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                            <Banner\r\n                                header=\"Мастер ищет модель\"\r\n                                subheader=\"Правила размещения\"\r\n                                text=\"В данной категории можно разместиться, если вы предлагаете услуги по специальным условиям. Сейчас доступно три варианта: скидка 50%, оплата только за расходные материалы или полностью бесплатно, например, для пополнения портфолио.\"\r\n                            />\r\n                            <FormLayout>\r\n                                <Textarea\r\n                                    name={'body'}\r\n                                    top=\"Основное сообщение\"\r\n                                    value={this.state.body}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <CardGrid>\r\n                                {\r\n                                    this.props.master.photos.length > 0 ?\r\n                                    this.props.master.photos.map((image,i)=>{\r\n                                        if (i < 3){\r\n                                            return (\r\n                                                <Card size='s' key={i}>\r\n                                                    <div\r\n                                                        style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}}\r\n                                                    >\r\n                                                    </div>\r\n                                                </Card>\r\n                                            )\r\n                                        }\r\n                                    }) : 'У вас в портфолио нет фото, разместить объявление о поиске можно, имея в портфолио не менее 3-х фотографий'\r\n                                }\r\n                                </CardGrid>\r\n                                <Select value={this.state.selectvalue} onChange={this.handleChangeSelect} top=\"Тип акции\" placeholder=\"Выберите тип акции\">\r\n                                    <option value=\"Скидка 50%\">Скидка 50%</option>\r\n                                    <option value=\"Оплата за материалы\">Оплата за материалы</option>\r\n                                    <option value=\"Бесплатно\">Бесплатно</option>\r\n                                </Select>\r\n                                <Cell\r\n                                    asideContent={<Switch\r\n                                        onChange={()=>{\r\n                                            if (this.props.master.moderation.status === true){\r\n                                                this.setState({visible: !this.state.visible})\r\n                                            } else {\r\n                                                this.openSnack('Ваш профиль находится на модерации. Вы можете создать объявление уже сейчас, но до завершения проверки пользователи его не увидят.')\r\n                                            }\r\n                                        }}\r\n                                        checked={this.props.master.moderation.status === true ? this.state.visible : false}/>}>\r\n                                    Показывать объявление в поиске\r\n                                </Cell>\r\n                            <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                            </FormLayout>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            {\r\n                                this.state.isActive &&\r\n                                <React.Fragment>\r\n                                    <Cell description={'Некликабельно'}>Ваш пост будет выглядеть так:</Cell>\r\n                                    <FindCard\r\n                                        date={this.getDate(this.state.loadFind.date)}\r\n                                        key={this.state.loadFind._id}\r\n                                        find={this.state.loadFind}\r\n                                        openMasterOnId={this.props.openMasterOnId}\r\n                                    />\r\n                                </React.Fragment>\r\n                            }\r\n                            {this.state.snackbar}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(FindModelMaster);","import React from 'react';\r\nimport {Banner, Button} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Partners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    async addToCommunity() {\r\n        await bridge.send(\"VKWebAppAddToCommunity\", {}).then(data=>console.log(data));\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Banner\r\n                    header=\"Установите в ваше сообщество\"\r\n                    //asideMode=\"dismiss\"\r\n                    subheader=\"Если Вы являетесь владельцем сообщества с тематикой, схожей с тематикой нашего приложения, установите Навигатор красоты в свою группу. Ваши подписчики смогут получить удобный инструмент для поиска мастеров.\"\r\n                    actions={<Button onClick={()=>this.addToCommunity()}>Установить в сообщество</Button>}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import React from 'react';\r\nimport {Cell, List, Panel, Placeholder, Search, Spinner, withModalRootContext} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types'\r\nimport Icon56PlaceOutline from '@vkontakte/icons/dist/56/place_outline';\r\nimport Head from \"./panelHeader\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            isLoad: false,\r\n            cities: [\r\n                {id: 621, title: 'Дзержинск'},\r\n                {id: 49, title: 'Екатеринбург'}\r\n            ]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities('')\r\n        window.onpopstate = () => {\r\n            this.props.goBack()\r\n        };\r\n    }\r\n\r\n    getCities(filter) {\r\n        const data = {\r\n            search: filter.toLowerCase(),\r\n            country_id: 1,\r\n        };\r\n        fetch(BACKEND.vkapi.getCities,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                if (res.error){\r\n                    console.log(res.error)\r\n                } else {\r\n                    this.setState({cities: res.cityList, isLoad: true})\r\n                }\r\n            })\r\n            .catch(e=>console.log(e));\r\n}\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                        <React.Fragment>\r\n                            <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                            {this.state.cities.length > 0 ?\r\n                            <List>\r\n                                {this.state.cities.map(city =>\r\n                                    <Cell\r\n                                        description={city.region || ''}\r\n                                        onClick={()=>this.props.changeCity(city)}\r\n                                        key={city.id}\r\n                                    >\r\n                                        {city.title}\r\n                                    </Cell>\r\n                                )}\r\n                            </List> :\r\n                                <Placeholder\r\n                                    icon={<Icon56PlaceOutline />}\r\n                                    header=\"Город не найден\"\r\n                                >\r\n                                    Проверьте опечатки или измените критерии поиска\r\n                                </Placeholder>\r\n                            }\r\n                        </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    RichCell,\r\n    Avatar, Tabs, CardGrid, Card, Button, TabsItem, Panel, Textarea, Cell\r\n} from \"@vkontakte/vkui\"\r\nimport Icon56LikeOutline from '@vkontakte/icons/dist/56/like_outline';\r\n\r\nimport {BACKEND} from \"../func/func\";\r\nimport Head from \"../elements/panelHeader\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Moder extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: [],\r\n            activeTab: 'masters',\r\n            comments: [],\r\n            mastersCount: 0,\r\n            usersCount: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.moder, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(mastersList => {\r\n                this.setState({mastersList: mastersList})\r\n            })\r\n            .catch(e=>console.log(e))\r\n        fetch(BACKEND.comment.moderation,{\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(this.props.params), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(comments => {\r\n                this.setState({comments: comments})\r\n            });\r\n    }\r\n\r\n    good = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        if (index > -1) {\r\n            mastersList.splice(index, 1);\r\n        } else mastersList.splice(0, index);\r\n        this.setState({mastersList: mastersList});\r\n        let moderation = {\r\n            id: id,\r\n            status: true,\r\n            reasons: [],\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    bad = (id, index) => {\r\n        let mastersList = this.state.mastersList;\r\n        // if (index > -1) {\r\n        //     mastersList.splice(index, 1);\r\n        // } else mastersList.splice(0, index);\r\n        // this.setState({mastersList: mastersList});\r\n        let reasons = [];\r\n        reasons.push(this.state.reason);\r\n        mastersList[index].moderation.reasons = reasons;\r\n        let moderation = {\r\n            id: id,\r\n            status: false,\r\n            reasons: reasons,\r\n            params: this.props.params\r\n        };\r\n        fetch(BACKEND.moder+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e=>console.log(e))\r\n        this.setState({mastersList: mastersList});\r\n    };\r\n\r\n    goodComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'good');\r\n        fetch(BACKEND.moderCom+'good', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    badComment = (id, index) => {\r\n        let comments = this.state.comments;\r\n        if (index > -1) {\r\n            comments.splice(index, 1);\r\n        } else comments.splice(0, index);\r\n        this.setState({comments: comments});\r\n        let moderation = {\r\n            id: id,\r\n            params: this.props.params\r\n        };\r\n        console.log(BACKEND.moderCom+'bad');\r\n        fetch(BACKEND.moderCom+'bad', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(moderation), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    };\r\n\r\n    renderComments() {\r\n        if (this.state.comments.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        }\r\n        return this.state.comments.map((comment, index)=> {\r\n            if (comment === null) return null;\r\n            console.log(comment)\r\n            return (\r\n                <CardGrid key={index} style={{padding: 0}}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <RichCell\r\n                            disabled\r\n                            multiline\r\n                            actions={\r\n                                <React.Fragment>\r\n                                    <Button onClick={()=>this.goodComment(comment._id, index)}>Одобрить</Button>\r\n                                    <Button onClick={()=>this.badComment(comment._id, index)} mode=\"destructive\">Удалить</Button>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            {comment.body}\r\n                        </RichCell>\r\n                        <Cell before={ <Avatar size={25} src={comment.user.avatarLink} /> }> From - {comment.user.firstname + ' ' + comment.user.lastname}</Cell>\r\n                        <Cell >To - {comment.to.name}</Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMasters() {\r\n        if(this.state.mastersList.length === 0){\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56LikeOutline/>}\r\n                    header=\"На модерации\"\r\n                >Пока никого нет\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return this.state.mastersList.map((master, index) => {\r\n                return (\r\n                    <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                        <Card size=\"l\" mode=\"shadow\">\r\n                            <RichCell\r\n                                disabled\r\n                                multiline\r\n                                before={<Avatar onClick={() => this.props.openMaster(master)} src={master.avatarLink} size={70}/>}\r\n                                caption={master.location.city.title}\r\n                                actions={\r\n                                    <React.Fragment>\r\n                                        <Cell>\r\n                                            <Button onClick={()=>this.good(master._id, index)}>Одобрить</Button>\r\n                                            <Button onClick={()=>this.setState({[master.vkUid]: true})} mode=\"secondary\">Отклонить</Button>\r\n                                        </Cell>\r\n                                    </React.Fragment>\r\n                                }\r\n                            >\r\n                                {master.firstname} {master.lastname}\r\n                            </RichCell>\r\n                            {\r\n                                master.moderation.reasons.length > 0 &&\r\n                                <Cell>\r\n                                    {\r\n                                        master.moderation.reasons.map(reason=>{\r\n                                            return reason\r\n                                        })\r\n                                    }\r\n                                </Cell>\r\n                            }\r\n                            {\r\n                                this.state[master.vkUid] === true &&\r\n                                <Cell>\r\n                                    <Textarea name='reason' value={this.state.reason} onChange={(event)=>{\r\n                                        console.log(this.state.reason);\r\n                                        this.setState({reason: event.target.value})\r\n                                    }\r\n                                    }/>\r\n                                    <Button onClick={()=>this.bad(master._id, index)} mode=\"secondary\">Отклонить</Button>\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        if (this.props.params.vk_user_id !== '199500866'){\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Cell>У Вас нет доступа</Cell>\r\n                </Panel>\r\n            )\r\n        } else {\r\n            return (\r\n                <Panel id=\"moder\">\r\n                    <Head\r\n                        title={'Модерация'}\r\n                        goBack={() => this.props.goBack()}\r\n                    />\r\n                    <div>\r\n                        <Tabs>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'masters' })}\r\n                                selected={this.state.activeTab === 'masters'}\r\n                            >\r\n                                Мастера\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'comments' })}\r\n                                selected={this.state.activeTab === 'comments'}\r\n                            >\r\n                                Комментарии\r\n                            </TabsItem>\r\n                        </Tabs>\r\n                        {\r\n                            this.state.activeTab === 'masters' ? this.renderMasters() : this.renderComments()\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        master: state.master,\r\n        params: state.params\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Moder);","import React from 'react';\r\nimport {Avatar, Button, Card, CardGrid, Cell, Div, Group, Header, Placeholder, Footer} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nexport default class MastersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTitle(this.props.mastersList.length);\r\n        try {\r\n            if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n            if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n        } catch (e) {\r\n            this.setState({error: e})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({error: null});\r\n            try {\r\n                if (this.props.city === 'Не выбрано') throw 'Нет города';\r\n                if (this.props.mastersList.length === 0) throw 'Никого не нашли';\r\n            } catch (e) {\r\n                this.setState({error: e})\r\n            }\r\n        }\r\n    }\r\n\r\n    setTitle(count) {\r\n        if (count === undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n\r\n    renderMasters() {\r\n        return this.props.mastersList.map(master => {\r\n            return (\r\n                <CardGrid key={master.vkUid}>\r\n                    <Card size=\"l\" mode=\"shadow\">\r\n                        <Cell\r\n                            style={{borderRadius: '10px 10px 10px 10px'}}\r\n                            expandable\r\n                              photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                              description={\r\n                                  master.categories.category.map(category => {\r\n                                      return category.label + \" \"\r\n                                  })\r\n                              }\r\n                              bottomContent={\r\n                                  this.setBottom(master.meta)\r\n                              }\r\n                              before={<Avatar src={master.avatarLink} size={70}/>}\r\n                              size=\"l\"\r\n                              onClick={() => this.props.openPanelMaster(master)}\r\n                        >{master.firstname} {master.lastname}\r\n                        </Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            );\r\n        });\r\n    }\r\n\r\n    setBottom = (meta) => {\r\n        if (meta.comments > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {meta.rating} из {meta.comments} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n    };\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938'})\r\n            .then(result => {\r\n                if (result.type === 'VKWebAppShareResult'){\r\n                    this.props.openSnack('Спасибо, что помогаете сервису в развитии.')\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.error === 'Нет города') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Где вы?\"\r\n                >\r\n                    Нам не удалось определить Ваш город, укажите его вручную.\r\n                </Placeholder>\r\n            )\r\n        } else if (this.state.error === 'Никого не нашли') {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline/>}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={() => this.share()} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу\r\n                    мастеров, и скоро предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                    {this.renderMasters()}\r\n                    <Footer>На этом все. Мастеров всего - {this.props.mastersList.length}.</Footer>\r\n                </Group>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Counter, HorizontalScroll, Tabs, TabsItem} from \"@vkontakte/vkui\";\r\n\r\nfunction countSubcat(id,props){\r\n    let count = 0;\r\n    props.mastersList.map((master)=>{\r\n        if (master.categories.subcat){\r\n            if(master.categories.subcat.includes(id)) {count++}\r\n        }\r\n    });\r\n    return count\r\n}\r\n\r\nconst scrollSubcat = (props) => {\r\n    if(props.targetCategory._id!=='all') {\r\n        return (\r\n            <HorizontalScroll>\r\n                <Tabs>\r\n                    {\r\n                        props.targetCategory.subcat.map(subcat=>{\r\n                            return (\r\n                                <TabsItem\r\n                                    after={<Counter size='s'>{countSubcat(subcat._id, props)}</Counter>}\r\n                                    key={subcat._id}\r\n                                    id={subcat._id}\r\n                                    onClick={props.checkSubcat}\r\n                                    selected={props.filter.includes(subcat._id)}\r\n                                >\r\n                                    {subcat.label}\r\n                                </TabsItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </HorizontalScroll>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default scrollSubcat;","import React from 'react';\r\nimport HeadCity from \"../elements/headCity\";\r\nimport {PanelHeader, SelectMimicry, Spinner, Div, Panel, View} from \"@vkontakte/vkui\";\r\nimport MastersList from './mastersList';\r\nimport ScrollSubcat from '../elements/scrollSubcat'\r\nimport {BACKEND} from \"../func/func\";\r\nimport Spin from '../elements/spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll} from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nclass Masters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad:false,\r\n            filter: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.mastersList.length === 0) {\r\n            this.loadList()\r\n        } else {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true}, ()=> {\r\n                if (this.props.mastersListScroll){\r\n                    //window.scrollTo(0, this.props.mastersListScroll)\r\n                    bridge.send(\"VKWebAppScroll\", {\"top\": this.props.mastersListScroll, \"speed\": 600});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.changeMasterslistScroll(window.self.pageYOffset);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.targetCity !== this.props.targetCity) {\r\n            this.setState({isLoad: false},()=>this.loadList())\r\n        }\r\n    }\r\n\r\n    loadList = () => {\r\n        if(this.props.targetCategory === '') {\r\n            fetch(BACKEND.masters.category+'all/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        } else {\r\n            fetch(BACKEND.masters.category+this.props.targetCategory._id+'/'+this.props.targetCity.id)\r\n                .then(res => res.json())\r\n                .then(mastersList => {\r\n                    this.props.changeMastersList(mastersList);\r\n                    this.filter();\r\n                });\r\n        }\r\n    };\r\n\r\n    checkSubcat = (e) => {\r\n        if(this.state.filter.includes(e.currentTarget.id)){\r\n            let index = this.state.filter.indexOf(e.currentTarget.id);\r\n            let filter = this.state.filter;\r\n            if (index > -1) {\r\n                filter.splice(index, 1);\r\n            } else filter.splice(0, index);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        } else {\r\n            let filter = this.state.filter;\r\n            filter.push(e.currentTarget.id);\r\n            this.setState({filter: filter}, ()=> this.filter());\r\n        }\r\n    };\r\n\r\n    filter() {\r\n        if(this.state.filter.length === 0) {\r\n            this.setState({filteredList: this.props.mastersList, isLoad: true})\r\n        } else {\r\n            let filteredList = this.props.mastersList.filter(master=> {\r\n                let i = 0;\r\n                this.state.filter.forEach(filter=>{\r\n                    if(master.categories.subcat){\r\n                        if(master.categories.subcat.includes(filter)) i++\r\n                    }else{\r\n                        return false\r\n                    }\r\n                });\r\n                if (i>0) return true\r\n            });\r\n            this.setState({filteredList: filteredList,isLoad: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {targetCategory, user} = this.props;\r\n            return (\r\n                <Panel id=\"mastersList\">\r\n                    <PanelHeader>Мастера</PanelHeader>\r\n                <React.Fragment>\r\n                    <HeadCity changeCity={()=>this.props.changeCity()}/>\r\n                    <Div>\r\n                        <SelectMimicry\r\n                            top=\"Выберите категорию\"\r\n                            placeholder=\"Показаны мастера всех категорий\"\r\n                            onClick={user.location.city === 'Не определено' ?\r\n                                this.props.openSnack('Сначала выберите город') :\r\n                                this.props.changeCategory\r\n                            }\r\n                        >{targetCategory.label}</SelectMimicry>\r\n                        {\r\n                            targetCategory && this.state.isLoad &&\r\n                            <ScrollSubcat\r\n                                targetCategory={targetCategory}\r\n                                mastersList={this.props.mastersList}\r\n                                checkSubcat={(e)=>this.checkSubcat(e)}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        }\r\n                    </Div>\r\n                    {\r\n                        this.state.isLoad ?\r\n                            <MastersList\r\n                                openSnack={this.props.openSnack}\r\n                                mastersList={this.state.filteredList}\r\n                                category={targetCategory}\r\n                                city={user.location.city}\r\n                                openPanelMaster={this.props.openPanelMaster}\r\n                            /> :\r\n                            <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    }\r\n                </React.Fragment>\r\n                    {this.props.snackbar}\r\n                </Panel>\r\n            )\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(Masters);","import React from 'react';\r\nimport {Cell, List, Spinner} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCategories()\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                categories.unshift({_id: 'all', label: 'Мастера всех категорий'});\r\n                this.setState({categories: categories, isLoad: true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoad === false){\r\n            return(\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <List>\r\n                    {\r\n                        this.state.categories.map(category => {\r\n                            return (\r\n                                <Cell\r\n                                    key={category._id}\r\n                                    onClick={()=>this.props.setCategory(category)}\r\n                                    asideContent={this.props.targetCategory === category ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                >\r\n                                    {category.label}\r\n                                </Cell>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        targetCategory: state.targetCategory\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps)(CategoriesList);","import React from 'react';\r\nimport {Div} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass Rules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div style={{color: 'gray' }}>\r\n                1. Основные понятия\r\n                    <br/>1.1. Сайт – сайт, расположенный в сети Интернет по адресу http://vk.com/.\r\n                    <br/>1.2. Разработчик – физическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n                    <br/>1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n                    <br/>1.4. Приложение – программный сервис, именуемый \"Навигатор красоты\" размещенный на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n                    <br/>1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n                <br/>\r\n                <br/>\r\n                    <br/>2. Статус Правил\r\n                    <br/>2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n                <br/>\r\n                <br/>\r\n                    <br/>3. Права и обязанности Сторон\r\n                    <br/>3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n                    <br/>3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n                    <br/>3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n                    <br/>3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n                    <br/>3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n                <br/>\r\n                <br/>\r\n                    <br/>4. Интеллектуальная собственность\r\n                    <br/>4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n                    <br/>4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n                    <br/>4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n                    <br/>4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n                    <br/>4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n                    <br/>4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n                <br/>\r\n                <br/>\r\n                    <br/>5. Гарантии и Ответственность\r\n                    <br/>5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n                    <br/>5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n                    <br/>5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n                    <br/>5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n                    <br/>5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n                    <br/>5.6. Разработчик не несет ответственности за качество оказанных услуг Пользователей Пользователям, а так же за достоверность информации указанной Пользователями.\r\n                <br/>\r\n                <br/>\r\n                    <br/>6. Заключительные положения\r\n                    <br/>6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n                    <br/>6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n                    <br/>6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n                    <br/>6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n                    <br/>6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n                    <br/>6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport {\r\n    Epic,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, Snackbar, Avatar, Tabs, TabsItem, Separator, ConfigProvider, Spinner, Button\r\n} from '@vkontakte/vkui';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Head from './js/elements/panelHeader';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Partners from \"./js/lk/partners\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\nimport Moder from \"./js/news/moder\";\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {patchData} from './js/elements/functions'\r\nimport Masters from './js/masters/masters';\r\nimport CategoriesList from './js/elements/categoriesList'\r\nimport Rules from './js/lk/rules';\r\nimport {connect} from \"react-redux\";\r\nimport {changeMastersList, changeTargetCategory, changeTargetCity, changeMasterslistScroll, changeFindModelsList, changeFindModelsListScroll,\r\n    loginUser, setMaster, changeActiveMasterOnMasters, changeActiveMasterOnFindModels, changeActiveMasterOnFavs, changeLaunchParams, changeStory, goTo, goForward, changeActiveViewLk} from \"./js/store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport HeadCity from \"./js/elements/headCity\";\r\nimport Icon56WifiOutline from '@vkontakte/icons/dist/56/wifi_outline';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popoutLk: null,\r\n            popoutInvite: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано',\r\n            activeTabLk: 'about',\r\n            scheme: \"bright_light\",\r\n            warnConnection: false,\r\n            mastersModal: null,\r\n            findModal: null,\r\n            lkModal: null,\r\n            snackbarInvite: null\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig'){\r\n                this.setState({scheme: data.scheme});\r\n            }\r\n        });\r\n        if (this.props.launchParams.sign !== undefined) {\r\n            this.setState({validLaunchParams: true});\r\n            console.log('Параметры пришли');\r\n            this.props.changeLaunchParams(this.props.launchParams);\r\n            this.auth(this.props.launchParams);\r\n        } else {\r\n            this.setState({validLaunchParams: false});\r\n            this.openSnack('Ошибка. Не переданы параметры запуска.');\r\n        }\r\n\r\n        if (this.props.linkParams.masterid){\r\n            this.openMasterOnId(this.props.linkParams.masterid)\r\n            this.props.changeStory('masters')\r\n        }\r\n        window.onpopstate = () => {\r\n            if (this.props.activeViewLk === 'registration'){\r\n                this.goBack('registration')\r\n            } else {\r\n                this.goBack(this.props.activeStory)\r\n            }\r\n        };window.onpopstate = () => {\r\n            if (this.props.activeViewLk === 'registration'){\r\n                this.goBack('registration')\r\n            } else {\r\n                this.goBack(this.props.activeStory)\r\n            }\r\n        };\r\n    }\r\n\r\n    auth = (params) => {\r\n        this.setState({warnConnection: false});\r\n        fetch(BACKEND.users.auth, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data=>{\r\n                this.openSnack(null);\r\n                this.setState({validLaunchParams: true});\r\n                this.props.loginUser(data.user);\r\n                if (data.master !== null){\r\n                    this.props.setMaster(data.master)\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                this.openSnack('Ошибка подключения к серверу. Страшно, очень страшно, мы не знаем что это такое, если бы мы знали что это такое, то мы бы знали, что это такое.');\r\n                this.setState({warnConnection: true});\r\n            })\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openSnackInvite(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbarInvite) this.setState({snackbarInvite: null});\r\n        this.setState({\r\n            snackbarInvite:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarInvite: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnMasters(master);\r\n                this.goTo('masters', 'masterInfo');\r\n            });\r\n    };\r\n\r\n    openFindMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.props.changeActiveMasterOnFindModels(master);\r\n                this.goTo('findmodel', 'masterInfo');\r\n            });\r\n    };\r\n\r\n    openSnackLk(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null});\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openSnackLkDismiss(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbarLk) this.setState({snackbarLk: null});\r\n        this.setState({\r\n            snackbarLk:\r\n                <Snackbar\r\n                    duration='3000'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbarLk: null})}\r\n                    before={<Icon24Dismiss/>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    closeReg = (master) => {\r\n        fetch(BACKEND.masters.all, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {'Content-Type': 'application/json',},\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify(master)\r\n        })\r\n            .then(res => res.json())\r\n            .then(newMaster => {\r\n                if (newMaster.error){\r\n                    this.openSnack(newMaster.error);\r\n                } else {\r\n                    this.props.setMaster(newMaster);\r\n                    this.props.changeActiveViewLk('lk')\r\n                    this.openSnack('Ваш профиль отправлен на проверку. Не забудьте добавить фотографии в портфолио, так шансы получить заказ намного выше.');\r\n                }\r\n                //this.sendMessage('Благодарим за регистрацию. Ваш профиль будет проходить модерацию в течении часа. Не забудьте добавить фотографии в портфолио в разделе Кабинет->Портфолио. Так же, при необходимости, в разделе Кабинет->Поиск модели - можно создать объявление о поиске модели для пополнения портфолио, либо акционных предложений.');\r\n            })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            this.openSnack(e.message);\r\n            //this.setState({activeViewLk: 'lk'});\r\n        })\r\n    };\r\n\r\n    openMasterOnLink = (masterId) => {\r\n        this.setState({activeMasterId: masterId,activeStory: 'masters',activeViewMasters: 'mastersList',activePanelMasters: 'masterInfo'});\r\n    };\r\n\r\n    goTo = (story, panel) => {\r\n        if (this.props[story+'History'][this.props[story+'History'].length] !== panel){\r\n            window.history.pushState({panel: panel}, panel);\r\n            this.props.goTo(story, panel)\r\n            let hist = this.props[story+'History'];\r\n        } else {\r\n            console.log('Double click')\r\n        }\r\n    };\r\n\r\n    goBack = (story) => {\r\n        if (this.props[story+'History'].length === 1){\r\n            bridge.send('VKWebAppClose', {'status': 'sucsess'});\r\n        } else {\r\n            this.props.goForward(story)\r\n            let hist = this.props[story+'History'];\r\n        }\r\n    };\r\n\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n    };\r\n\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        let user = this.props.user;\r\n        user.location.city = city;\r\n        this.props.changeTargetCity(city);\r\n        user.params = this.props.params;\r\n    }\r\n\r\n    render() {\r\n        const {user, loginStatus} = this.props;\r\n        if (this.state.warnConnection === true){\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id='loading' activePanel=\"loading\">\r\n                        <Panel id='loading'>\r\n                                      <Placeholder\r\n                                          stretched\r\n                                           icon={<Icon56WifiOutline />}\r\n                                          header={'Что-то не так!'}\r\n                                            action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить авторизацию</Button>}\r\n                                        >\r\n                                            Проверьте интернет соединение.\r\n                                        </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n                // <ConfigProvider scheme={this.state.scheme}>\r\n                //     <View id=\"warnConnection\" activePanel=\"warnConnection\">\r\n                //         <Panel id=\"warnConnection\">\r\n                //             <Placeholder\r\n                //                 icon={<Icon56WifiOutline />}\r\n                //                 action={<Button size=\"l\" onClick={()=>this.auth(this.props.launchParams)}>Повторить авторизацию</Button>}\r\n                //             >\r\n                //                 Проверьте интернет соединение.\r\n                //             </Placeholder>\r\n                //         </Panel>\r\n                //     </View>\r\n                // </ConfigProvider>\r\n            )\r\n        } else if (this.state.validLaunchParams === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id=\"warn\" activePanel=\"warn\">\r\n                        <Panel id=\"warn\">\r\n                            <Placeholder\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                            >\r\n                                Всё, беда! Вы все сломали :(\r\n                            </Placeholder>\r\n                            {this.state.snackbar}\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n        } else if (loginStatus === false) {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                    <View id='loading' activePanel=\"loading\">\r\n                        <Panel id='loading'>\r\n                            <Placeholder\r\n                                stretched\r\n                                icon={<Spinner size=\"large\" style={{ marginTop: 40 }} />}\r\n                                header=\"Выполняется вход...\"\r\n                            >Это может занять несколько секунд\r\n                                {this.state.snackbar}\r\n                            </Placeholder>\r\n                        </Panel>\r\n                    </View>\r\n                </ConfigProvider>\r\n            )\r\n      } else {\r\n            return (\r\n                <ConfigProvider scheme={this.state.scheme}>\r\n                <Epic activeStory={this.props.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('news')}\r\n                            selected={this.props.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"Новости\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('masters')}\r\n                            selected={this.props.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>this.props.changeStory('findmodel')}\r\n                            selected={this.props.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Search /></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={()=>{\r\n                                this.setState({snackbarLk: null});\r\n                                this.props.changeStory('lk')\r\n                            }}\r\n                            selected={this.props.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    <View id=\"news\" history={this.props.newsHistory} onSwipeBack={() => this.goBack('news')} activePanel={this.props.activePanelnews}>\r\n                            <News\r\n                                id=\"news\"\r\n                                params={this.props.params}\r\n                                openReg={()=>{\r\n                                    this.props.changeStory('lk');\r\n                                    this.props.changeActiveViewLk('registration');\r\n                                }}\r\n                                //openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                openStory={this.openStory}\r\n                                user={this.props.user}\r\n                                // openModer={() => this.goForwardNews('moder')}\r\n                                openModer={() => this.goTo('news', 'moder')}\r\n                            />\r\n                            <Moder\r\n                                id=\"moder\"\r\n                                goBack={() => this.goBack('news')}\r\n                                user={this.state.user}\r\n                                openMaster={(master) => {\r\n                                    this.setState({activeMaster: master});\r\n                                    this.goTo('news', 'masterInfo');\r\n                                    //this.goForwardNews('masterInfo');\r\n                                }}\r\n                            />\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('news')}\r\n                                    openPhoto={() => 'null'}\r\n                                    openComments={() => 'null'}\r\n                                    activeMaster={this.state.activeMaster}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                    </View>\r\n                        <View id=\"masters\" modal={this.state.mastersModal} activePanel={this.props.activePanelmasters} history={this.props.mastersHistory} onSwipeBack={() => this.goBack('masters')}>\r\n                            <Masters\r\n                                id=\"mastersList\"\r\n                                    //changeCity={()=>this.setState({activePanelMasters: 'changeCity'})}\r\n                                    changeCity={()=> this.goTo('masters', 'changeCity')}\r\n                                    openSnack={(title)=>this.openSnack(title)}\r\n                                    //changeCategory={()=>this.setState({activePanelMasters: 'masterCat'})}\r\n                                    changeCategory={()=>this.goTo('masters', 'masterCat')}\r\n                                    openPanelMaster={(master)=>{\r\n                                        this.props.changeActiveMasterOnMasters(master);\r\n                                        this.goTo('masters', 'masterInfo');\r\n                                    }}\r\n                                    snackbar={this.state.snackbar}\r\n                            />\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('masters')}/>\r\n                                    <CityList\r\n                                            id='changeCity'\r\n                                            // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                            goBack={() => this.goBack('masters')}\r\n                                            changeCity={(city) => {\r\n                                            this.changeTargetCity(city);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'})\r\n                                        }}\r\n                                    />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    id=\"masterInfo\"\r\n                                    // goBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    //onSwipeBack={() => this.setState({activePanelMasters: 'mastersList'})}\r\n                                    //openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                    openPhoto={() => this.goTo('masters', 'masterPhoto')}\r\n                                    openComments={() => this.goTo('masters', 'masterComments')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    openModal={(content)=>{\r\n                                        this.setState({mastersModal: content})\r\n                                    }}\r\n                                    //activeMasterId={this.state.activeMasterId}\r\n                                    //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    // goBack={() => this.setState({activePanelMasters: 'masterInfo'})}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title={'Отзывы'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('masters')}\r\n                                    activeMaster={this.props.activeMasterOnMasters}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterCat\">\r\n                                <Head\r\n                                    title={'Выбор категории'}\r\n                                    goBack={() => this.goBack('masters')}\r\n                                />\r\n                                <Group>\r\n                                    <CategoriesList\r\n                                        setCategory={(category) => {\r\n                                            this.props.changeTargetCategory(category);\r\n                                            this.goBack('masters');\r\n                                            //this.setState({activePanelMasters: 'mastersList'});\r\n                                        }}\r\n                                    />\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    <View\r\n                        id=\"findmodel\"\r\n                        activePanel={this.props.activePanelfindmodel}\r\n                        history={this.props.findmodelHistory} onSwipeBack={() => this.goBack('findmodel')}\r\n                        modal={this.state.findModal}\r\n                    >\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Ищу модель</PanelHeader>\r\n                            <FindModel\r\n                                //openMasterOnId={(masterId)=>this.openMasterOnId(masterId)}\r\n                                openMasterOnId={(masterId)=>this.openFindMasterOnId(masterId)}\r\n                                // changeCity={() => this.setState({activePanelFindModels: 'changeCity'})}\r\n                                changeCity={() => this.goTo('findmodel', 'changeCity')}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='changeCity'>\r\n                            <Head title={'Выбор города'}\r\n                                  goBack={() => this.goBack('findmodel')}/>\r\n                        <CityList\r\n                                id='changeCity'\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                    this.goBack('findmodel')\r\n                            }}\r\n                        />\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <MasterCard\r\n                                id=\"masterInfo\"\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                openPhoto={() => this.goTo('findmodel', 'masterPhoto')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                openComments={() => this.goTo('findmodel', 'masterComments')}\r\n                                openModal={(content)=>{\r\n                                    this.setState({findModal: content})\r\n                                }}\r\n                                //setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head\r\n                                title={'Портфолио'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterPhoto\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head\r\n                                title={'Отзывы'}\r\n                                goBack={() => this.goBack('findmodel')}\r\n                            />\r\n                            <MasterComments\r\n                                goBack={() => this.goBack('findmodel')}\r\n                                activeMaster={this.props.activeMasterOnFindModels}\r\n                                //activeMaster={this.state.activeMaster}\r\n                            />\r\n                        </Panel>\r\n                    </View>\r\n                    <Root id=\"lk\" activeView={this.props.activeViewLk} modal={this.state.lkModal}>\r\n                            <View id=\"lk\" popout={this.state.popoutLk} activePanel={this.props.activePanellk} history={this.props.lkHistory} onSwipeBack={() => this.goBack('lk')}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader separator={false}>Кабинет</PanelHeader>\r\n                                <Tabs>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'about' })}\r\n                                        selected={this.state.activeTabLk === 'about'}\r\n                                    >\r\n                                        О пользователе\r\n                                    </TabsItem>\r\n                                    <TabsItem\r\n                                        onClick={() => this.setState({ activeTabLk: 'partners' })}\r\n                                        selected={this.state.activeTabLk === 'partners'}\r\n                                    >\r\n                                        Партнёрам\r\n                                    </TabsItem>\r\n                                </Tabs>\r\n                                <Separator />\r\n                                {\r\n                                    this.state.activeTabLk === 'about' ?\r\n                                        <Lk\r\n                                            master={this.props.master}\r\n                                            user={user}\r\n                                            openSetting={() => this.goTo('lk', 'setting')}\r\n                                            openFavourite={() => this.goTo('lk', 'favourite')}\r\n                                            openFindModel={() => this.goTo('lk', 'findModel')}\r\n                                            openMasterPhoto={() => this.goTo('lk', 'portfolio')}\r\n                                            isFavourite={this.props.params.vk_is_favorite}\r\n                                        /> :\r\n                                        <Partners />\r\n                                }\r\n                                {this.state.snackbarLk}\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Head\r\n                                    title='Настройки'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Setting\r\n                                    setAlert={(alert) => this.setState({popoutLk: alert})}\r\n                                    snackbar={(message) => this.openSnackLk(message)}\r\n                                    snackbarDismiss={(message) => this.openSnackLkDismiss(message)}\r\n                                    modalBack={this.modalBack}\r\n                                    activeModal={this.state.activeModal}\r\n                                    changeCity={() => this.goTo('lk', 'changeCity')}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('lk')}/>\r\n                                <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    changeCity={(city) => {\r\n                                        let master = this.props.master;\r\n                                        master.location.city = city;\r\n                                        master.changed = true;\r\n                                        this.props.setMaster(master);\r\n                                        this.goBack('lk')\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Favourite\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    openFavMasterOnId={(master)=>{\r\n                                        this.props.changeActiveMasterOnFavs(master);\r\n                                        this.goTo('lk', 'masterInfo');\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <MasterCard\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    openPhoto={() => this.goTo('lk', 'masterPhoto')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    openComments={() => this.goTo('lk', 'masterComments')}\r\n                                    setActiveMaster={(master)=>this.setState({activeMaster: master})}\r\n                                    openModal={(content)=>{\r\n                                        this.setState({lkModal: content})\r\n                                    }}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterPhoto\r\n                                    goBack={() => this.setState({activePanelLk: 'masterInfo'})}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"portfolio\">\r\n                                <Head\r\n                                    title={'Портфолио'}\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <Portfolio\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head\r\n                                    title='Отзывы'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <MasterComments\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user}\r\n                                    activeMaster={this.props.activeMasterOnFavs}\r\n                                    //activeMaster={this.state.activeMaster}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head\r\n                                    title='Ищу модель'\r\n                                    goBack={() => this.goBack('lk')}\r\n                                />\r\n                                <FindModelMaster\r\n                                    goBack={() => this.goBack('lk')}\r\n                                    user={user} popout={this.openAlert}\r\n                                />\r\n                            </Panel>\r\n                        </View>\r\n\r\n                        <View activePanel={this.props.activePanelregistration} popout={this.state.popoutInvite} id='registration'>\r\n                            <Panel id='registration'>\r\n                                <Head\r\n                                    title={'Регистрация'}\r\n                                    goBack={() => this.props.changeActiveViewLk('lk')}\r\n                                />\r\n                                <Invite\r\n                                    setAlert={(alert) => this.setState({popoutInvite: alert})}\r\n                                    goBack={() => this.props.changeActiveViewLk('lk')}\r\n                                    closeReg={this.closeReg}\r\n                                    changeCity={() => this.goTo('registration', 'changeCity')}\r\n                                    openRules={() => this.goTo('registration', 'rules')}\r\n                                    snackbar={(message) => this.openSnackInvite(message)}\r\n                                />\r\n                                {this.state.snackbarInvite}\r\n                            </Panel>\r\n                            <Panel id='rules'>\r\n                                <Head\r\n                                    title='Соглашение'\r\n                                    goBack={() => this.goBack('registration')}\r\n                                />\r\n                                <Rules\r\n                                    goBack={() => this.goBack('registration')}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.goBack('registration')}/>\r\n                            <CityList\r\n                                    id='changeCity'\r\n                                    goBack={() => this.goBack('registration')}\r\n                                    changeCity={(city) => {\r\n                                    this.changeTargetCity(city);\r\n                                        this.goBack('registration')\r\n                                }}\r\n                            />\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n                </ConfigProvider>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        mastersList: state.mastersList,\r\n        targetCategory: state.targetCategory,\r\n        targetCity: state.targetCity,\r\n        mastersListScroll: state.mastersListScroll,\r\n        findModelsList: state.findModelsList,\r\n        findModelsListScroll: state.findModelsListScroll,\r\n        user: state.user,\r\n        loginStatus: state.loginStatus,\r\n        master: state.master,\r\n        activeMasterOnMasters: state.activeMasterOnMasters,\r\n        activeMasterOnFindModels: state.activeMasterOnFindModels,\r\n        activeMasterOnFavs: state.activeMasterOnFavs,\r\n        params: state.params,\r\n        activePanelnews: state.activePanelnews,\r\n        activePanelmasters: state.activePanelmasters,\r\n        activePanelfindmodel: state.activePanelfindmodel,\r\n        activePanellk: state.activePanellk,\r\n        activeStory: state.activeStory,\r\n        newsHistory: state.newsHistory,\r\n        mastersHistory: state.mastersHistory,\r\n        findmodelHistory: state.findmodelHistory,\r\n        lkHistory: state.lkHistory,\r\n        activeViewLk: state.activeViewLk,\r\n        activePanelregistration: state.activePanelregistration,\r\n        registrationHistory: state.registrationHistory\r\n    };\r\n};\r\n\r\nconst putActionsToProps = (dispatch) => {\r\n    return {\r\n        changeMastersList: bindActionCreators(changeMastersList, dispatch),\r\n        changeTargetCategory: bindActionCreators(changeTargetCategory, dispatch),\r\n        changeTargetCity: bindActionCreators(changeTargetCity, dispatch),\r\n        changeMasterslistScroll: bindActionCreators(changeMasterslistScroll, dispatch),\r\n        changeFindModelsList: bindActionCreators(changeFindModelsList, dispatch),\r\n        changeFindModelsListScroll: bindActionCreators(changeFindModelsListScroll, dispatch),\r\n        loginUser: bindActionCreators(loginUser, dispatch),\r\n        setMaster: bindActionCreators(setMaster, dispatch),\r\n        changeActiveMasterOnMasters: bindActionCreators(changeActiveMasterOnMasters, dispatch),\r\n        changeActiveMasterOnFindModels: bindActionCreators(changeActiveMasterOnFindModels, dispatch),\r\n        changeActiveMasterOnFavs: bindActionCreators(changeActiveMasterOnFavs, dispatch),\r\n        changeLaunchParams: bindActionCreators(changeLaunchParams, dispatch),\r\n        changeStory: bindActionCreators(changeStory, dispatch),\r\n        goTo: bindActionCreators(goTo, dispatch),\r\n        goForward: bindActionCreators(goForward, dispatch),\r\n        changeActiveViewLk: bindActionCreators(changeActiveViewLk, dispatch)\r\n\r\n    };\r\n};\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {rootReducer} from \"./js/store/reducers\";\r\nimport {BACKEND} from \"./js/func/func\";\r\nrequire('dotenv').config();\r\n\r\n\r\nconst store = createStore(rootReducer);\r\nbridge.send(\"VKWebAppInit\", {});\r\n\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App launchParams={params} linkParams={linkParams}/>\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.80eb5c68.svg\";"],"sourceRoot":""}