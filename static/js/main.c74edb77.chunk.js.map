{"version":3,"sources":["js/func/func.js","js/masters/panelMasterList.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/idea/idea.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","App.js","serviceWorker.js","index.js"],"names":["BACK_LINK","BACKEND","users","masters","all","onID","category","vkuid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","MasterList","props","setBottom","rating","length","style","margin","padding","fontSize","color","state","mastersList","title","isLoad","console","log","this","fetch","then","res","json","setState","setTitle","id","count","undefined","Array","isArray","display","alignItems","flexDirection","size","marginTop","icon","header","action","map","ratingArr","comments","reduce","a","b","key","vkUid","mode","expandable","photo","description","active","label","bottomContent","before","src","avatarLink","onClick","openPanelMaster","firstname","lastname","separator","renderMaster","React","Component","MastersCard","favStatus","isFavourite","status","checkFavs","width","height","fill","loadFavs","activeMaster","_id","favsArr","countFavs","fav","userId","changeVisible","index","userVkUid","masterId","masterVkUid","postData","openSnackAvatar","activeMasterId","priceList","text","snackbar","layout","onClose","after","url","data","method","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","type","openComments","indicator","openPhoto","photos","slideWidth","align","slice","photoUrl","backgroundImage","backgroundSize","item","multiline","price","images","reverse","bridge","send","start_index","image","openShowImages","gridPhoto","sendComment","Number","isCommended","e","alert","message","handleChange","event","target","name","value","author","date","Date","now","commentsArr","countComments","arr","push","step","min","max","onChange","top","placeholder","commentList","validate","Idea","activeTab","vertical","theme","selected","activePanel","News","openStory","wide","Invite","handleCheck","mass","countMass","filter","checkLicense","hairVisible","manicureVisible","pedicureVisible","eyelashesVisible","eyebrowsVisible","shugaringVisible","cosmeticVisible","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","bind","prevProps","prevState","snapshot","about","sex","city","country","onSubmit","handleSubmit","bottom","subcategory","asideContent","checked","closeReg","Lk","connection","tmpUser","isMaster","isUser","mastersArr","openReg","openFavourite","openMasterPhoto","openFindModel","openSetting","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","result","newImg","sizes","imgArr","unshift","catch","error","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","showProfile","onRemove","patchData","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","tooltip","popout","loadCount","backgroundColor","removable","require","stretched","marginRight","Favourite","loadFavsMasters","isLoaded","openFavMasterOnId","FindModel","findList","findArr","find","openMasterOnId","FindModelMaster","save","loadFind","activeFind","osname","platform","App","regNewUser","first_name","last_name","photo_200","verifiedUser","vkUserId","usersArr","openAlert","actionsLayout","actions","autoclose","closeAlert","activeViewLk","change","story","view","panel","panelName","activePanelMasters","openMaster","activeViewMasters","activeStory","activePanelFindModels","activePanelLk","storyName","targetCategory","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","categories","onStoryChange","currentTarget","dataset","tabbar","data-story","activeView","left","IOS","addon","Boolean","window","location","hostname","match","params","search","replace","split","p","decodeURIComponent","ReactDOM","render","vk_user_id","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c74edb77.chunk.js","sourcesContent":["//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nconst BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/'\r\n    }\r\n};\r\n\r\nexport {BACKEND};","import React from 'react';\r\nimport {\r\n    Spinner,\r\n    Separator,\r\n    Avatar,\r\n    Button,\r\n    Cell,\r\n    Div,\r\n    Group,\r\n    List,\r\n    Header,\r\n    CardGrid,\r\n    Card,\r\n    Placeholder\r\n} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MasterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: null,\r\n            title: '',\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Страница загрузилась');\r\n            if(this.state.category === '') {\r\n                fetch(BACKEND.masters.all)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                            this.setState({isLoad: true});\r\n                    });\r\n            } else {\r\n                fetch(BACKEND.masters.category+this.state.category.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                            this.setState({isLoad: true});\r\n                    });\r\n            }\r\n        }\r\n\r\n    setTitle(count) {\r\n        if (count===undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n    renderMaster() {\r\n        if(Array.isArray(this.state.mastersList)) {\r\n            if(this.state.isLoad === false) {\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (this.state.mastersList.length === 0) {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Не расстраивайтесь\"\r\n                            action={<Button size=\"l\">Поделиться</Button>}\r\n                        >\r\n                            В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                            Поделитесь приложением с мастерами, которых Вы знаете.\r\n                        </Placeholder>\r\n                    );\r\n                } else {\r\n                    return this.state.mastersList.map(master => {\r\n                        let ratingArr = master.comments.map(comment =>{\r\n                            return comment.rating\r\n                        });\r\n                        let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n                        let rating = sum/ratingArr.length;\r\n                        //console.log(rating);\r\n                        return (\r\n                                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                                      description={\r\n                                                          master.category.map(category => {\r\n                                                              if(category.active === true) {\r\n                                                                  return category.label+\" \"\r\n                                                              }\r\n                                                          })\r\n                                                      }\r\n                                                      bottomContent={\r\n                                                          this.setBottom(rating, ratingArr.length)\r\n                                                      }\r\n                                                      before={<Avatar src={master.avatarLink} size={70}/>}\r\n                                                      size=\"l\"\r\n                                                      onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                                                >{master.firstname} {master.lastname}\r\n                                                </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг - {rating} (На основе {length} отзывов)\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                        {this.renderMaster()}\r\n                        </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MasterList","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid\r\n} from \"@vkontakte/vkui\"\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {\r\n                priceList: []\r\n            },\r\n            favsArr: [\r\n                {vkUid:12523452}\r\n            ],\r\n            isFavourite: {\r\n                status: false\r\n            },\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.setState({activeMaster: this.props.activeMaster});\r\n        this.loadFavs();\r\n    }\r\n    favStatus = () => {\r\n        if(this.state.isFavourite.status === false) {\r\n            return (\r\n                        <Cell\r\n                            onClick={this.checkFavs}\r\n                            before={<Icon16LikeOutline width={20} height={20} fill=\"red\"/>}\r\n                           // description=\"на обновления\"\r\n                        >\r\n                            Подписаться\r\n                        </Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid style={{padding: 0}}>\r\n                    <Card size=\"l\">\r\n                        <Cell\r\n                            before={<Icon16Like width={20} height={20} fill=\"red\"/>}\r\n                        >В избранном</Cell>\r\n                    </Card>\r\n                </CardGrid>\r\n            )\r\n        }\r\n    }\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    //action=\"Отменить\"\r\n                    //onActionClick={() => this.setState({ text: 'Сообщение Ивану было отменено.' })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        //console.log(BACKEND.favs.master+this.props.activeMaster._id);\r\n        fetch(BACKEND.favs.master+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                this.setState({favsArr: favsArr});\r\n                let count = favsArr.length;\r\n                this.setState({countFavs: count});\r\n                this.setState({isLoad: true})\r\n                this.state.favsArr.map(fav => {\r\n                    if (fav.userId === this.props.user._id) {\r\n                        this.setState({isFavourite: {status: true, id: fav._id}});\r\n                        //console.log('У тебя в избранном');\r\n                    } else {\r\n                        this.setState({isFavourite: {status: false}})\r\n                        //console.log('Нет в избранном');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    }\r\n    checkFavs = () => {\r\n        console.log('прежний статус '+this.state.isFavourite.status);\r\n        if (this.state.isFavourite.status === false) {\r\n            let fav = {\r\n                userId: this.props.user._id,\r\n                userVkUid: this.props.user.vkUid,\r\n                masterId: this.state.activeMaster._id,\r\n                masterVkUid: this.state.activeMaster.vkUid\r\n            };\r\n            this.postData(BACKEND.favs.new, fav, 'POST');\r\n            this.setState({isFavourite: {status: true}});\r\n            this.setState({countFavs: this.state.countFavs+1});\r\n            this.openSnackAvatar('Вы подписались на обновления мастера. Отменить подписку можно во вкладке Кабинет, в разделе Избранное.', this.state.activeMaster.avatarLink);\r\n        }\r\n\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={this.state.activeMaster.type}\r\n                            bottomContent={\r\n                                this.favStatus()\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <Gallery\r\n                                        slideWidth=\"90%\"\r\n                                        align=\"center\"\r\n                                        style={{height: 250}}\r\n                                    >\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <div key={index} style={{\r\n                                                        backgroundImage: 'url('+photoUrl+')',\r\n                                                        backgroundSize: 'cover'\r\n                                                    }}/>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Gallery>\r\n                                </Div>\r\n                        }\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <Cell\r\n                                            description={'От ' + item.price + \" рублей\"}\r\n                                            expandable\r\n                                            indicator=\"\">\r\n                                            {this.state.activeMaster.priceList[index].title}\r\n                                        </Cell>\r\n                                        {\r\n                                            this.state[index] &&\r\n                                            <Cell description=\"Краткое описание процедуры\"\r\n                                                  multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                        }\r\n                                        <Separator></Separator>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: {\r\n                id: '1',\r\n                body: 'ТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТест',\r\n                author: 'Тест Тестович',\r\n                date: Date.now()\r\n            },\r\n            body: '',\r\n            commentsArr: [],\r\n            isLoad: false,\r\n            rating: 3\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({commentsArr: this.props.activeMaster.comments});\r\n        //console.log('comments ',   this.props.activeMaster.comments);\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            try {\r\n                this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n                this.setState({isCommended: true});\r\n            } catch (e) {\r\n                alert(e);\r\n                console.log(e.message);\r\n            }\r\n    }\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={comment.date}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        //console.log(this.props.activeMaster.vkUid, this.props.user.vkUid);\r\n        if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n            )\r\n        }\r\n        else if (this.state.isCommended === true) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Slider\r\n                        step={1}\r\n                        min={1}\r\n                        max={5}\r\n                        value={Number(this.state.rating)}\r\n                        onChange={rating => this.setState({rating})}\r\n                        top=\"Оцените работу мастера\"\r\n                    />\r\n                    <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                    <Textarea\r\n                        name={'body'}\r\n                        value={this.state.body}\r\n                        top=\"Добавление отзыва\"\r\n                        placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {Group, HorizontalScroll, FixedLayout, TabsItem, Tabs, Panel, PanelHeader, Cell} from \"@vkontakte/vkui\"\r\n\r\n\r\nclass Idea extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: 'all',\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Panel id=\"idea\">\r\n                <PanelHeader>Случайная идея</PanelHeader>\r\n                <FixedLayout vertical=\"top\">\r\n                    <Tabs theme=\"header\" type=\"buttons\">\r\n                        <HorizontalScroll>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'all' })}\r\n                                selected={this.state.activeTab === 'all'}\r\n                            >\r\n                                Ногти\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'users' })}\r\n                                selected={this.state.activeTab === 'users'}\r\n                            >\r\n                                Информация о разделе\r\n                            </TabsItem>\r\n                        </HorizontalScroll>\r\n                    </Tabs>\r\n                </FixedLayout>\r\n                <Group>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Этот раздел</Cell>\r\n                </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Idea;","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar, PanelSpinner\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                    <Group>\r\n                        <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n                            Привет, {this.props.user.firstname}!\r\n                        </Placeholder>\r\n                        <Cell multiline>\r\n                            Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по\r\n                            любой области косметологии или предложить свои услуги.\r\n                        </Cell>\r\n                        <Cell\r\n                            onClick={() => this.props.openStory('masters')}\r\n                            before={<Icon24UserIncoming/>}\r\n                            expandable\r\n                        >Я клиент - ищу мастера</Cell>\r\n                        <Cell\r\n                            onClick={() => this.props.openStory('lk')}\r\n                            before={<Icon24UserOutgoing/>}\r\n                            expandable\r\n                        >Я мастер - ищу клиентов</Cell>\r\n                    </Group>\r\n                <Separator wide />\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n//import connect from \"@vkontakte/vk-connect\";\r\n//import VKConnect from '@vkontakte/vkui-connect-mock';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar} from \"@vkontakte/vkui\"\r\n//import {BACKEND} from \"../func/func\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkLicense: false,\r\n            hairVisible: false,\r\n            manicureVisible: false,\r\n            pedicureVisible: false,\r\n            eyelashesVisible: false,\r\n            eyebrowsVisible: false,\r\n            shugaringVisible: false,\r\n            cosmeticVisible: false,\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            activeMaster: {\r\n\r\n            },\r\n            manicureStatus: [\r\n                    {active: false, id:\"5e3756b37612461064809b28\", label: \"Наращивание\"},\r\n                    {active: false, id:\"5e3757907612461064809b29\", label: \"Покрытие гелем\"},\r\n                    {active: false, id:\"5e3757977612461064809b2a\", label: \"Маникюр комбинированый\"},\r\n                    {active: false, id:\"5e3757a37612461064809b2b\", label: \"Маникюр обрезной\"},\r\n                    {active: false, id:\"5e3757a97612461064809b2c\", label: \"Аппаратный маникюр\"},\r\n                    {active: false, id:\"5e3757b17612461064809b2d\", label: \"Укрепление ногтей\"}\r\n                ],\r\n            pedicureStatus: [\r\n                    {active: false, id:\"5e3757f67612461064809b33\", label: \"Классический\"},\r\n                    {active: false, id:\"5e3757fb7612461064809b34\", label: \"Аппаратный\"},\r\n                    {active: false, id:\"5e3757ff7612461064809b35\", label: \"Экспресс\"},\r\n                    {active: false, id:\"5e3758037612461064809b36\", label: \"Комбинированный\"},\r\n                    {active: false, id:\"5e3758087612461064809b37\", label: \"Покрытие\"}\r\n                ],\r\n            eyelashesStatus: [\r\n                    {active: false, id:\"5e3758147612461064809b38\", label: \"Наращивание\"},\r\n                    {active: false, id:\"5e3758197612461064809b39\", label: \"Ламинирование\"},\r\n                    {active: false, id:\"5e37581e7612461064809b3a\", label: \"Кератиновая завивка\"},\r\n                    {active: false, id:\"5e3758267612461064809b3b\", label: \"Окрашивание\"},\r\n                    {active: false, id:\"5e37582b7612461064809b3c\", label: \"Биозавивка\"}\r\n                ],\r\n            eyebrowsStatus: [\r\n                    {active: false, id:\"5e3758347612461064809b3d\", label: \"Перманентный макияж\"},\r\n                    {active: false, id:\"5e37583b7612461064809b3e\", label: \"Микроблейдинг\"},\r\n                    {active: false, id:\"5e3758407612461064809b3f\", label: \"Нанонапыление\"},\r\n                    {active: false, id:\"5e3758467612461064809b40\", label: \"Долговременная укладка\"},\r\n                    {active: false, id:\"5e37584c7612461064809b41\", label: \"Окрашивание\"}\r\n                ],\r\n            shugaringStatus: [\r\n                    {active: false, id:\"5e37585a7612461064809b42\", label: \"Подмышечные впадины\"},\r\n                    {active: false, id:\"5e3758607612461064809b43\", label: \"Бикини\"},\r\n                    {active: false, id:\"5e3758647612461064809b44\", label: \"Руки\"},\r\n                    {active: false, id:\"5e3758697612461064809b45\", label: \"Ноги\"},\r\n                    {active: false, id:\"5e37586e7612461064809b46\", label: \"Белая линия живота\"}\r\n                ],\r\n            hairStatus: [\r\n                    {active: false, id:\"5e3757d07612461064809b2e\", label: \"Ламинирование\"},\r\n                    {active: false, id:\"5e3757d87612461064809b2f\", label: \"Окрашивание\"},\r\n                    {active: false, id:\"5e3757dd7612461064809b30\", label: \"Мелирование\"},\r\n                    {active: false, id:\"5e3757e17612461064809b31\", label: \"Ботокс волос\"},\r\n                    {active: false, id:\"5e3757e97612461064809b32\", label: \"Стрижка\"}\r\n                ],\r\n            cosmeticStatus: [\r\n                    {active: false, id:\"5e3758767612461064809b47\", label: \"Макияж\"},\r\n                    {active: false, id:\"5e37587a7612461064809b48\", label: \"Пилинг\"},\r\n                    {active: false, id:\"5e37587d7612461064809b49\", label: \"Чистка\"},\r\n                    {active: false, id:\"5e3758827612461064809b4a\", label: \"Массаж лица\"},\r\n                ],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.type !== this.state.type || prevState.about !== this.state.about || prevState.category !== this.state.category) {\r\n            let master = this.state.activeMaster;\r\n            master.type = this.state.type;\r\n            master.description = this.state.about;\r\n            master.category = [\r\n                {id: '5e37537a58b85c13bcffb8b4', active: this.state.count.manicureStatus > 0, label:'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', active: this.state.count.pedicureStatus > 0, label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', active: this.state.count.eyelashesStatus > 0, label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', active: this.state.count.eyebrowsStatus > 0, label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', active: this.state.count.shugaringStatus > 0, label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', active: this.state.count.hairStatus > 0, label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', active: this.state.count.cosmeticStatus > 0, label: 'Косметология'}\r\n            ];\r\n            this.setState({activeMaster: master});\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let master = this.state.activeMaster;\r\n        console.log('user пришел из props', this.props.user);\r\n        master.firstname = this.props.user.firstname;\r\n        master.lastname =this.props.user.lastname;\r\n        master.vkUid =this.props.user.vkUid;\r\n        master.avatarLink =this.props.user.avatarLink;\r\n        master.sex =this.props.user.sex;\r\n        master.city =this.props.user.city;\r\n        master.country =this.props.user.country;\r\n        master.manicureStatus = this.state.manicureStatus;\r\n        master.pedicureStatus = this.state.pedicureStatus;\r\n        master.eyelashesStatus = this.state.eyelashesStatus;\r\n        master.eyebrowsStatus = this.state.eyebrowsStatus;\r\n        master.shugaringStatus = this.state.shugaringStatus;\r\n        master.hairStatus = this.state.hairStatus;\r\n        master.cosmeticStatus = this.state.cosmeticStatus;\r\n        console.log('после обработки', master);\r\n        this.setState({activeMaster: master});\r\n\r\n    }\r\n    handleCheck = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let mass = this.state.activeMaster[name];\r\n        const index = target.id;\r\n        mass[index].active = !mass[index].active;\r\n        this.setState({ [name]: mass });\r\n        let countMass = this.state.activeMaster[name].filter(\r\n            function(item){\r\n                //console.log(item);\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n        let count = this.state.count;\r\n        count[name] = countMass.length;\r\n        this.setState({ count: count });\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                                bottomContent={'Bottom content'}\r\n                            >\r\n                                {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                            </Cell>\r\n                            <Textarea\r\n                                name={'about'}\r\n                                status={this.state.about ? 'valid' : 'error'}\r\n                                bottom={this.state.about ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.about}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                                <Cell expandable name={'manicureVisible'}\r\n                                      onClick={() => this.setState({manicureVisible: !this.state.manicureVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.manicureStatus}>Маникюр</Cell>\r\n                                {this.state.manicureVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.manicureStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'manicureStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.manicureStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.manicureStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'pedicureVisible'}\r\n                                      onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.pedicureStatus}>Педикюр</Cell>\r\n                                {this.state.pedicureVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.pedicureStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'pedicureStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.pedicureStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.pedicureStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'eyelashesVisible'}\r\n                                      onClick={() => this.setState({eyelashesVisible: !this.state.eyelashesVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.eyelashesStatus}>Ресницы</Cell>\r\n                                {this.state.eyelashesVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.eyelashesStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'eyelashesStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.eyelashesStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.eyelashesStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'eyebrowsVisible'}\r\n                                      onClick={() => this.setState({eyebrowsVisible: !this.state.eyebrowsVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.eyebrowsStatus}>Брови</Cell>\r\n                                {this.state.eyebrowsVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.eyebrowsStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'eyebrowsStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.eyebrowsStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.eyebrowsStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'shugaringVisible'}\r\n                                      onClick={() => this.setState({shugaringVisible: !this.state.shugaringVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.shugaringStatus}>Шугаринг</Cell>\r\n                                {this.state.shugaringVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.shugaringStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'shugaringStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.shugaringStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.shugaringStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'hairVisible'}\r\n                                      onClick={() => this.setState({hairVisible: !this.state.hairVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.hairStatus}>Уход за волосами</Cell>\r\n                                {this.state.hairVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.hairStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'hairStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.hairStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.hairStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                                <Cell expandable name={'hairVisible'}\r\n                                      onClick={() => this.setState({cosmeticVisible: !this.state.cosmeticVisible})}\r\n                                      indicator={'Выбрано: ' + this.state.count.cosmeticStatus}>Косметология</Cell>\r\n                                {this.state.cosmeticVisible &&\r\n                                <Div>\r\n                                    {\r\n                                        this.state.activeMaster.cosmeticStatus.map((subcategory, index)=>{\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={subcategory.id}\r\n                                                    asideContent={<Switch\r\n                                                        name={'cosmeticStatus'}\r\n                                                        id={index}\r\n                                                        onChange={this.handleCheck}\r\n                                                        checked={this.state.activeMaster.cosmeticStatus[index].active}/>}>\r\n                                                    {this.state.activeMaster.cosmeticStatus[index].label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Div>\r\n                                }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            {this.state.checkLicense && this.state.about && this.state.type &&\r\n                            <Button size=\"xl\" onClick={() => this.props.closeReg(this.state.activeMaster)}>Зарегистрироваться как мастер</Button>\r\n                            }\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.user);\r\n        //this.verifiedUser(this.props.user);\r\n    }\r\n    /*verifiedUser = (user) => {\r\n        console.log(BACKEND.users+'/vkuid/'+user.vkUid);\r\n        fetch(BACKEND.users+'/vkuid/'+user.vkUid)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0){\r\n                    console.log('Пользователь ', user, ' не найден');\r\n                    this.postData(BACKEND.users, user); //регитрируем\r\n                } else {\r\n                    console.log('Пришло при авторизации', usersArr[0]);\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };*/\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                {this.state.user.isMaster === false &&\r\n                    <CellButton\r\n                        onClick={this.props.openReg}\r\n                    >Зарегистрироваться как мастер</CellButton>\r\n                }\r\n                    <Group title=\"Основное\">\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                            user={this.state.user}\r\n                            indicator={this.state.user.city.title}\r\n                        >Выбранный город</Cell>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon28Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Settings />}\r\n                    >Настройки</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    List, Button, CellButton, Input, Spinner,Snackbar\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            activeMaster: {\r\n                priceList: [],\r\n                showProfile: false\r\n            },\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            hairVisible: false,\r\n            manicureVisible: false,\r\n            pedicureVisible: false,\r\n            eyelashesVisible: false,\r\n            eyebrowsVisible: false,\r\n            shugaringVisible: false,\r\n            cosmeticVisible: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n                this.setState({activeMaster: activeMaster[0]})\r\n                this.loadCount()\r\n                this.setState({about: activeMaster[0].description})\r\n            });\r\n    }\r\n    componentWillUpdate(prevProps, prevState, snapshot) {\r\n        if  (prevState.type !== this.state.type || prevState.about !== this.state.about || prevState.count !== this.state.count) {\r\n            let master = this.state.activeMaster;\r\n            master.type = this.state.type;\r\n            master.description = this.state.about;\r\n            master.category = [\r\n                {id: '5e37537a58b85c13bcffb8b4', active: this.state.count.manicureStatus > 0, label:'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', active: this.state.count.pedicureStatus > 0, label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', active: this.state.count.eyelashesStatus > 0, label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', active: this.state.count.eyebrowsStatus > 0, label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', active: this.state.count.shugaringStatus > 0, label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', active: this.state.count.hairStatus > 0, label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', active: this.state.count.cosmeticStatus > 0, label: 'Косметология'}\r\n            ];\r\n            console.log(master.category);\r\n            this.setState({activeMaster: master});\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    onChange(event) {\r\n        //console.log(event.target.value)\r\n    }\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        //console.log(activeMaster);\r\n        activeMaster.description = this.state.about;\r\n\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.openSnack(\"Изменения сохранены\");\r\n                //this.props.popout();\r\n                console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    showProfile = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        //console.log('Изменено с ', activeMaster[name], ' на ', !activeMaster[name]);\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    }\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    }\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        //console.log(this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    loadCount() {\r\n        const arrCategory = ['manicureStatus', 'pedicureStatus', 'eyelashesStatus',\r\n            'eyebrowsStatus', 'shugaringStatus', 'hairStatus'];\r\n        arrCategory.map(category => {\r\n            let countMass = this.state.activeMaster[category].filter(\r\n                item => item.active === true\r\n            );\r\n            let count = this.state.count;\r\n            count[category] = countMass.length;\r\n            this.setState({count: count});\r\n        });\r\n    }\r\n\r\n    handleCheck = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        //const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        let mass = this.state.activeMaster[name];\r\n        const index = target.id;\r\n        //console.log(mass);\r\n        mass[index].active = !mass[index].active;\r\n        this.setState({[name]: mass});\r\n        let countMass = this.state.activeMaster[name].filter(\r\n            function (item) {\r\n                //console.log(item);\r\n                if (item.active === true) {\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n        let count = this.state.count;\r\n        count[name] = countMass.length;\r\n        this.setState({count: count});\r\n        let master = this.state.activeMaster;\r\n        master.category = [\r\n            {id: '5e37537a58b85c13bcffb8b4', active: this.state.count.manicureStatus > 0, label:'Маникюр'},\r\n            {id: '5e3753be58b85c13bcffb8b5', active: this.state.count.pedicureStatus > 0, label: 'Педикюр'},\r\n            {id: '5e3753c458b85c13bcffb8b6', active: this.state.count.eyelashesStatus > 0, label: 'Ресницы'},\r\n            {id: '5e3753c858b85c13bcffb8b7', active: this.state.count.eyebrowsStatus > 0, label: 'Брови'},\r\n            {id: '5e3753cd58b85c13bcffb8b8', active: this.state.count.shugaringStatus > 0, label: 'Шугаринг'},\r\n            {id: '5e3753d558b85c13bcffb8b9', active: this.state.count.hairStatus > 0, label: 'Уход за волосами'},\r\n            {id: '5e3753dc58b85c13bcffb8ba', active: this.state.count.cosmeticStatus > 0, label: 'Косметология'}\r\n        ];\r\n        this.setState({activeMaster: master});\r\n        //console.log(this.state.count);\r\n        //console.log(this.state.activeMaster);\r\n    };\r\n\r\n    render() {\r\n        //console.log(this.state);\r\n        if (!this.state.activeMaster._id) {\r\n            //console.log(this.state.activeMaster);\r\n            return (<div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                <Spinner size=\"large\" style={{marginTop: 120}}/>\r\n            </div>)\r\n        } else {\r\n            //console.log(this.state.activeMaster);\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={'Показывать в поиске'}\r\n                        before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                    </Cell>\r\n                    <Group>\r\n                        <Cell\r\n                            asideContent={<Switch\r\n                                name={'showProfile'}\r\n                                onChange={this.showProfile}\r\n                                checked={this.state.activeMaster.showProfile}/>}>\r\n                            Показывать мой профиль в поиске\r\n                        </Cell>\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                    {this.state.activeMaster.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры</Cell>\r\n                    }\r\n                    {this.state.activeMaster.priceList.map((item, index) => (\r\n                        <List key={index}>\r\n                            <Cell\r\n                                key={item}\r\n                                multiline\r\n                                //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                removable\r\n                                onRemove={() => {\r\n                                    this.onRemove(index)\r\n                                }}>\r\n                                <Cell\r\n                                    description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                <Cell description=\"Краткое описание процедуры\"\r\n                                      multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                <Cell\r\n                                    description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                            </Cell>\r\n                        </List>\r\n                    ))}\r\n                    {this.state.add &&\r\n                    <Div>\r\n                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdTitle\"\r\n                                type=\"text\"\r\n                                value={this.state.newProdTitle}\r\n                                placeholder={'Введите название'}\r\n                                onChange={this.handleChange}/>\r\n                            <Textarea\r\n                                require\r\n                                name=\"newProdBody\"\r\n                                value={this.state.newProdBody}\r\n                                placeholder={'Укажите описание'}\r\n                                onChange={this.handleChange}/>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdPrice\"\r\n                                type=\"number\" value={this.state.newProdPrice}\r\n                                placeholder={'Укажите цену'}\r\n                                onChange={this.handleChange}/>\r\n                        </Cell>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                        </Div>\r\n                    </Div>\r\n                    }\r\n                    </Group>\r\n                    <Group>\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Textarea\r\n                                name={'about'}\r\n                                status={this.state.about ? 'valid' : 'error'}\r\n                                bottom={this.state.about ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.about}\r\n                                onChange={this.handleChange}/>\r\n                        </ FormLayout>\r\n                        <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                         bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                         id={'category'}>\r\n                            <Cell expandable name={'manicureVisible'}\r\n                                  onClick={() => this.setState({manicureVisible: !this.state.manicureVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.manicureStatus}>Маникюр</Cell>\r\n                            {this.state.manicureVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.manicureStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'manicureStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.manicureStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.manicureStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'pedicureVisible'}\r\n                                  onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.pedicureStatus}>Педикюр</Cell>\r\n                            {this.state.pedicureVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.pedicureStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'pedicureStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.pedicureStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.pedicureStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'eyelashesVisible'}\r\n                                  onClick={() => this.setState({eyelashesVisible: !this.state.eyelashesVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.eyelashesStatus}>Ресницы</Cell>\r\n                            {this.state.eyelashesVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.eyelashesStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'eyelashesStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.eyelashesStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.eyelashesStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'eyebrowsVisible'}\r\n                                  onClick={() => this.setState({eyebrowsVisible: !this.state.eyebrowsVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.eyebrowsStatus}>Брови</Cell>\r\n                            {this.state.eyebrowsVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.eyebrowsStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'eyebrowsStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.eyebrowsStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.eyebrowsStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'shugaringVisible'}\r\n                                  onClick={() => this.setState({shugaringVisible: !this.state.shugaringVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.shugaringStatus}>Шугаринг</Cell>\r\n                            {this.state.shugaringVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.shugaringStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'shugaringStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.shugaringStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.shugaringStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'hairVisible'}\r\n                                  onClick={() => this.setState({hairVisible: !this.state.hairVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.hairStatus}>Уход за волосами</Cell>\r\n                            {this.state.hairVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.hairStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'hairStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.hairStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.hairStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                            <Cell expandable name={'hairVisible'}\r\n                                  onClick={() => this.setState({cosmeticVisible: !this.state.cosmeticVisible})}\r\n                                  indicator={'Выбрано: ' + this.state.count.cosmeticStatus}>Косметология</Cell>\r\n                            {this.state.cosmeticVisible &&\r\n                            <Div>\r\n                                {\r\n                                    this.state.activeMaster.cosmeticStatus.map((subcategory, index) => {\r\n                                        return (\r\n                                            <Cell\r\n                                                key={subcategory.id}\r\n                                                asideContent={<Switch\r\n                                                    name={'cosmeticStatus'}\r\n                                                    id={index}\r\n                                                    onChange={this.handleCheck}\r\n                                                    checked={this.state.activeMaster.cosmeticStatus[index].active}/>}>\r\n                                                {this.state.activeMaster.cosmeticStatus[index].label}\r\n                                            </Cell>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Div>\r\n                            }\r\n                        </FormLayoutGroup>\r\n                        <Button size=\"xl\"\r\n                                onClick={() => this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)}>Сохранить\r\n                            изменения</Button>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Lk;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div, Separator, Cell, Avatar, Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadFavsMasters(this.props.user);\r\n    }\r\n\r\n    loadFavsMasters = (user) => {\r\n        fetch(BACKEND.favs.user + user._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                if(favsArr.length === 0){\r\n                    this.setState({isLoaded: true});\r\n                } else {\r\n                    favsArr.map(fav => {\r\n                        fetch(BACKEND.masters.onID + fav.masterId)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                let mastersArr = this.state.mastersArr;\r\n                                mastersArr.push(master);\r\n                                this.setState({mastersArr: mastersArr});\r\n                            });\r\n                    });\r\n                    this.setState({isLoaded: true});\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.length === 0) {\r\n                return (\r\n                    <Group>\r\n                        <Cell multiline>\r\n                            Вы еще не добавили ни одного мастера в список избранного\r\n                        </Cell>\r\n                    </Group>\r\n                )\r\n            } else {\r\n                return (\r\n                    this.state.mastersArr.map(master => (\r\n                        <Group key={master._id}>\r\n                            <Separator style={{margin: '12px 0'}}/>\r\n                            <Cell expandable\r\n                                  photo={master.avatarLink}\r\n                                  description={master.type}\r\n                                  before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                            >{master.firstname} {master.lastname}\r\n                            </Cell>\r\n                        </Group>\r\n                    ))\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Cell, Div, Group, Separator, Spinner, Placeholder, Button} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: [],\r\n            title: '',\r\n            master: {\r\n                vkUid: 9999999999,\r\n                avatarLink: \"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\",\r\n                firstname: 'Евгения',\r\n                lastname: 'Плюхова'\r\n            },\r\n            findArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.user);\r\n        fetch(BACKEND.findModel.onCity+this.props.user.city.id)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                console.log(find);\r\n                this.setState({findArr: find});\r\n                console.log('Найдено '+find.length);\r\n                this.setState({isLoad: true})\r\n            });\r\n    }\r\n\r\n    findList = () => {\r\n        if (this.state.findArr.length === 0) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент в городе {this.props.user.city.title} нет поиска моледей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                this.state.findArr.map(find => {\r\n                    return (\r\n                        <Group key={find._id}>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            <Cell expandable\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                // description={'Место под категории'}\r\n                                  before={<Avatar src={find.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openMasterOnId(find.masterId)}\r\n                                  bottom=\"\"\r\n                            >{find.firstname} {find.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>\r\n                                {find.body}\r\n                            </Cell>\r\n                        </Group>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={this.props.user.city.title}>Выбранный город</Cell>\r\n                    {this.findList()}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            master: '',\r\n            body: '',\r\n            loadFind: '',\r\n            isLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({master: master[0]});\r\n                fetch(BACKEND.findModel.onMasterId+master[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        this.setState({findArr: find, isLoaded: true});\r\n                        if (find.length > 0) {\r\n                            this.setState({body: find[0].body, loadFind: find[0]});\r\n                            let activeFind =\r\n                                <Group>\r\n                                    <Cell>Ваш активный поиск</Cell>\r\n                                    <Separator style={{ margin: '12px 0' }} />\r\n                                    <Cell expandable\r\n                                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                          description={'desf'}\r\n                                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                          size=\"l\"\r\n                                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                                    </Cell>\r\n                                    <Cell multiline>\r\n                                        {this.state.findArr[0].body}\r\n                                    </Cell>\r\n                                </Group>\r\n                            ;\r\n                            this.setState({activeFind: activeFind});\r\n                        } else {\r\n                            let activeFind = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({activeFind: activeFind});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.master._id,\r\n            body: this.state.body,\r\n            city: this.state.master.city,\r\n            firstname: this.state.master.firstname,\r\n            lastname: this.state.master.lastname,\r\n            avatarLink: this.state.master.avatarLink\r\n        };\r\n        console.log(BACKEND.findModel.new+this.state.loadFind._id);\r\n        if (this.state.loadFind._id) {\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            let activeFind =\r\n                <Group>\r\n                    <Cell>Ваш активный поиск</Cell>\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <Cell expandable\r\n                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                          description={'desf'}\r\n                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                          size=\"l\"\r\n                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                    </Cell>\r\n                    <Cell multiline>\r\n                        {find.body}\r\n                    </Cell>\r\n                </Group>\r\n            ;\r\n            this.setState({activeFind: activeFind});\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.popout();\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Cell>Добавить / изменить</Cell>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                            top=\"О себе\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}/>\r\n                    </FormLayoutGroup>\r\n                    <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    {this.state.activeFind}\r\n                </FormLayout>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {\r\n    View,\r\n    Panel,\r\n    PanelHeader,\r\n    Tabbar,\r\n    TabbarItem,\r\n    Epic,\r\n    SelectMimicry,\r\n    FormLayout,\r\n    Group, List, Cell, Root, PanelHeaderButton, platform, IOS, Alert\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n//import Sale from './js/sale/sale.js';\r\nimport PanelMasterList from './js/masters/panelMasterList.js';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport Idea from './js/idea/idea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {BACKEND} from \"./js/func/func\";\r\n//import VKConnect from \"@vkontakte/vkui-connect-mock\";\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nconst osname = platform();\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            mastersList: null,\r\n            user: {\r\n                firstname: '',\r\n                lastname: '',\r\n                avatarLink: '',\r\n                vkUid: '',\r\n                status: '',\r\n                city: {id:1, title: 'СПБ'}\r\n            },\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ]\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        bridge.send(\"VKWebAppInit\", {}).then(data => console.log('Инициализировали апи вк? '+data.result));\r\n            console.log('Пользователь с VKid: '+this.props.vkUserId);\r\n            this.verifiedUser(this.props.vkUserId);\r\n    }\r\n    regNewUser = () => {\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => {\r\n            console.log('Данные с моста '+data);\r\n            const user = {\r\n                vkUid: data.id,\r\n                firstname: data.first_name,\r\n                lastname: data.last_name,\r\n                avatarLink: data.photo_200,\r\n                sex: data.sex,\r\n                city: {id: data.city.id, title: data.city.title},\r\n                country: {id: data.country.id, title: data.country.title},\r\n                isMaster: false\r\n            };\r\n            this.setState({user: user});\r\n            this.postData(BACKEND.users, user); //регитрируем\r\n        });\r\n    }\r\n    verifiedUser = (vkUserId) => {\r\n        fetch(BACKEND.users+'/vkuid/'+vkUserId)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0){\r\n                    console.log('Пользователь зашел впервые');\r\n                    this.regNewUser();\r\n                } else {\r\n                    console.log('Пользователь уже заходил в приложение');\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    openAlert = (title, body, action) => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    closeReg = (master) => {\r\n        console.log('master - ', master);\r\n        this.postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({ user: user });\r\n        //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n        this.setState({ activeViewLk: 'lk' });\r\n    };\r\n    change = (story, view, panel) => {\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n    };\r\n    /*\r\n    *Story (news,masters,findmodel,idea,lk)\r\n    * mastersView -> mastersPanel\r\n    *\r\n    *\r\n    */\r\n\r\n    /*\r\n    *\r\n    *\r\n    *\r\n     */\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({ activePanelMasters: panelName });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMaster = (master) => {\r\n        this.setState({ activeViewMasters: 'mastersList' });\r\n        this.setState({ activeStory: 'masters' });\r\n        this.setState({ activePanelMasters: 'masterInfo' });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelFindModels: 'masterInfo' });\r\n            });\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelLk: 'masterInfo' });\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({ activePanelMasters: name });\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({ activeStory: storyName })\r\n    }\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n    render () {\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    {\r\n                        /*<TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'sale'}\r\n                            data-story=\"sale\"\r\n                            text=\"Акции\"\r\n                        ><Icon28FireOutline /></TabbarItem>*/\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'news'}\r\n                        data-story=\"news\"\r\n                        text=\"News\"\r\n                    ><Icon28FireOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'masters'}\r\n                        data-story=\"masters\"\r\n                        text=\"Мастера\"\r\n                    ><Icon28ServicesOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'findmodel'}\r\n                        data-story=\"findmodel\"\r\n                        text=\"Ищу модель\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'idea'}*/}\r\n                    {/*    data-story=\"idea\"*/}\r\n                    {/*    text=\"Идеи\"*/}\r\n                    {/*><Icon28HelpOutline /></TabbarItem>*/}\r\n                    {\r\n                        /*\r\n                        <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомлен.\"\r\n                        label=\"1\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                        * */\r\n                    }\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'lk'}\r\n                        data-story=\"lk\"\r\n                        text=\"Кабинет\"\r\n                    ><Icon28More /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                {\r\n                    /*<View id=\"sale\" activePanel=\"sale\">\r\n                    <Panel id=\"sale\">\r\n                        <PanelHeader>Акции</PanelHeader>\r\n                        <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })} indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                        <Sale />\r\n                    </Panel>\r\n                </View>*/\r\n                }\r\n                <View id=\"news\" activePanel=\"news\">\r\n                    <Panel id=\"news\">\r\n                        <PanelHeader>Горячие новости</PanelHeader>\r\n                        <News user={this.state.user} openStory={this.openStory}/>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"masters\" activeView={this.state.activeViewMasters}>\r\n                    <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                        <Panel id=\"mastersList\">\r\n                            <FormLayout>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                    indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                                <SelectMimicry\r\n                                    top=\"Выберите категорию\"\r\n                                    placeholder=\"Не выбрана\"\r\n                                    onClick={() => this.setState({ activeViewMasters: 'masterCat' })}\r\n                                >{this.state.targetCategory.label}</SelectMimicry>\r\n                            </FormLayout>\r\n                            <PanelHeader>Мастера</PanelHeader>\r\n                            <PanelMasterList category={this.state.targetCategory} city={this.state.user.city} openPanelMaster={this.openPanelMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelMasters: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelMasters: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                        <Panel id=\"masterCat\">\r\n                            <PanelHeader>Выбор категории</PanelHeader>\r\n                            <Group>\r\n                                <List>\r\n                                    {\r\n                                        this.state.categories.map(category => {\r\n                                            //console.log(category);\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={category.id}\r\n                                                    onClick={() => this.setState({ targetCategory: category, activeViewMasters: 'mastersList' })}\r\n                                                    asideContent={this.state.targetCategory === category ? <Icon24Done fill=\"var(--accent)\" /> : null}\r\n                                                >\r\n                                                    {category.label}\r\n                                                </Cell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </Group>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n                <View id=\"idea\" activePanel=\"idea\">\r\n                    <Panel id=\"idea\">\r\n                        <Idea />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"findmodel\" activePanel={this.state.activePanelFindModels}>\r\n                    <Panel id=\"findmodel\">\r\n                        <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                        <FindModel openMasterOnId={this.openMasterOnId} user={this.state.user}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterInfo\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            О мастере\r\n                        </PanelHeader>\r\n                        <MasterCard openPhoto={() => this.setState({ activePanelFindModels: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelFindModels: 'masterComments' })}/>\r\n                    </Panel>\r\n                    <Panel id=\"masterPhoto\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Портфолио\r\n                        </PanelHeader>\r\n                        <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                    </Panel>\r\n                    <Panel id=\"masterComments\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                            addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                        >\r\n                            Отзывы\r\n                        </PanelHeader>\r\n                        <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        <Group>\r\n                            <Cell\r\n                                expandable\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Этот раздел</Cell>\r\n                        </Group>\r\n                    </Panel>\r\n                </View>\r\n                <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                    <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout}>\r\n                        <Panel id=\"lk\">\r\n                            <PanelHeader>Личный кабинет</PanelHeader>\r\n                            <Lk\r\n                                user={this.state.user}\r\n                                openReg={() => this.setState({ activeViewLk: 'masterReg' })}\r\n                                openSetting={() => this.setState({ activePanelLk: 'setting' })}\r\n                                openFavourite={() => this.setState({ activePanelLk: 'favourite' })}\r\n                                openFindModel={() => this.setState({ activePanelLk: 'findModel' })}\r\n                                openMasterPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })}\r\n                            />\r\n                        </Panel>\r\n                        <Panel id='favourite'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Избранное</PanelHeader>\r\n                            <Favourite user={this.state.user} openFavMasterOnId={this.openFavMasterOnId}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelLk: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <Portfolio user={this.state.user}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id='findModel'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Мастер ищет модель</PanelHeader>\r\n                            <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                        <Panel id='setting'>\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Настройки</PanelHeader>\r\n                            <Setting user={this.state.user} popout={this.openAlert}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <View activePanel=\"masterReg\" id=\"masterReg\">\r\n                        <Panel id=\"masterReg\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                            >Регистрация мастера\r\n                            </PanelHeader>\r\n                            <Invite user={this.state.user} closeReg={this.closeReg}/>\r\n                        </Panel>\r\n                    </View>\r\n                </Root>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nconsole.log(params);\r\n\r\n\r\nReactDOM.render(<App vkUserId={params.vk_user_id} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}