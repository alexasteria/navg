{"version":3,"sources":["js/func/func.js","js/masters/panelMasterList.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/idea/idea.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","App.js","serviceWorker.js","index.js"],"names":["BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","getAll","logs","params","MasterList","props","share","bridge","send","state","activeMaster","_id","then","result","openSnackAvatar","avatarLink","setBottom","rating","length","style","margin","padding","fontSize","color","mastersList","title","isLoad","this","fetch","res","json","setState","setTitle","console","log","id","city","count","undefined","Array","isArray","display","alignItems","flexDirection","size","marginTop","icon","header","action","onClick","map","ratingArr","comments","Number","reduce","a","b","key","vkUid","mode","expandable","photo","description","categories","label","bottomContent","before","src","openPanelMaster","firstname","lastname","separator","renderMaster","React","Component","MastersCard","handleChange","event","target","name","value","favStatus","isFavourite","status","float","marginRight","checkFavs","width","height","fill","connectStatus","getPhone","loadFavs","favsArr","countFavs","fav","userId","changeVisible","index","userVkUid","masterId","masterVkUid","postData","sendMessage","sendtitle","phone","Math","random","snackbar","mess","catch","e","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","activeMasterId","priceList","text","after","url","data","method","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","brand","openComments","indicator","photos","slice","photoUrl","backgroundImage","backgroundSize","openPhoto","item","multiline","price","images","reverse","start_index","image","openShowImages","gridPhoto","sendComment","isCommended","alert","bodyComment","author","date","Date","now","commentsArr","countComments","arr","push","comDate","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","step","min","max","top","bottom","replace","placeholder","commentList","validate","News","addFav","group_id","feedList","feed","vertical","isMaster","openReg","Invite","regMaster","cat","subcat","filter","active","sex","location","closeReg","permMessage","statusMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","i","subcategory","asideContent","checked","checkLicense","Lk","connection","tmpUser","isUser","mastersArr","activePanel","openFavourite","openMasterPhoto","openFindModel","openSetting","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","error","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","visible","onRemove","patchData","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","checkBan","banned","about","tooltip","popout","showProfile","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","setActive","includes","backgroundColor","removable","require","stretched","onSubmit","handleSubmit","Favourite","loadFavsMasters","isLoaded","openFavMasterOnId","FindModel","findList","findArr","find","openMasterOnId","FindModelMaster","save","loadFind","activeFind","osname","platform","App","loadCategories","catArr","regNewUser","first_name","last_name","photo_200","country","verifiedUser","vkUserId","usersArr","openAlert","actionsLayout","actions","autoclose","activeViewLk","change","story","view","panel","panelName","activePanelMasters","openMaster","activeViewMasters","activeStory","activePanelFindModels","openMasterOnLink","activePanelLk","openStory","storyName","targetCategory","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","onStoryChange","linkParams","masterid","vkuser","currentTarget","dataset","tabbar","selected","data-story","activeView","theme","left","IOS","addon","Boolean","window","hostname","match","hash","split","p","decodeURIComponent","search","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd72ec0e.chunk.js","sourcesContent":["//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    }\r\n};","import React from 'react';\r\nimport {\r\n    Spinner,\r\n    Separator,\r\n    Avatar,\r\n    Button,\r\n    Cell,\r\n    Div,\r\n    Group,\r\n    List,\r\n    Header,\r\n    CardGrid,\r\n    Card,\r\n    Placeholder, Counter\r\n} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MasterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: null,\r\n            title: '',\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n            if(this.props.category === '') {\r\n                fetch(BACKEND.masters.all)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                            this.setState({isLoad: true});\r\n                    });\r\n            } else {\r\n                console.log(BACKEND.masters.category+this.props.category.id+'/'+this.props.city.id);\r\n                fetch(BACKEND.masters.category+this.props.category.id+'/'+this.props.city.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                            this.setState({mastersList: mastersList, isLoad: true});\r\n                            this.setTitle(this.state.mastersList.length);\r\n                    });\r\n            }\r\n        }\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    setTitle(count) {\r\n        if (count===undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n    renderMaster() {\r\n        if(Array.isArray(this.state.mastersList)) {\r\n            if(this.state.isLoad === false) {\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (this.state.mastersList.length === 0) {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Не расстраивайтесь\"\r\n                            action={<Button onClick={this.share} size=\"l\">Поделиться</Button>}\r\n                        >\r\n                            В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                            Поделитесь приложением с мастерами, которых Вы знаете.\r\n                        </Placeholder>\r\n                    );\r\n                } else {\r\n                    return this.state.mastersList.map(master => {\r\n                        let ratingArr = master.comments.map(comment =>{\r\n                            return Number(comment.rating)\r\n                        });\r\n                        let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n                        let rating = sum/ratingArr.length;\r\n                        //console.log(rating);\r\n                        return (\r\n                                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                                      description={\r\n                                                          master.categories.category.map(category => {\r\n                                                              return category.label+\" \"\r\n                                                          })\r\n                                                      }\r\n                                                      bottomContent={\r\n                                                          this.setBottom(rating, ratingArr.length)\r\n                                                      }\r\n                                                      before={<Avatar src={master.avatarLink} size={70}/>}\r\n                                                      size=\"l\"\r\n                                                      onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                                                >{master.firstname} {master.lastname}\r\n                                                </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                        {this.renderMaster()}\r\n                        </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MasterList","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, Alert, Input,FormLayout\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {\r\n                priceList: []\r\n            },\r\n            favsArr: [\r\n                {vkUid:12523452}\r\n            ],\r\n            isFavourite: {\r\n                status: false\r\n            },\r\n            isLoad: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.setState({activeMaster: this.props.activeMaster});\r\n        this.loadFavs();\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        console.log(this.state);\r\n    };\r\n    favStatus = () => {\r\n        if(this.state.isFavourite.status === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button onClick={() => this.getPhone(title)}>Записаться</Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        //console.log(BACKEND.favs.master+this.props.activeMaster._id);\r\n        fetch(BACKEND.favs.master+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                this.setState({favsArr: favsArr});\r\n                let count = favsArr.length;\r\n                this.setState({countFavs: count});\r\n                this.setState({isLoad: true})\r\n                this.state.favsArr.map(fav => {\r\n                    if (fav.userId === this.props.user._id) {\r\n                        this.setState({isFavourite: {status: true, id: fav._id}});\r\n                        //console.log('У тебя в избранном');\r\n                    } else {\r\n                        this.setState({isFavourite: {status: false}})\r\n                        //console.log('Нет в избранном');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    }\r\n    checkFavs = () => {\r\n        console.log('прежний статус '+this.state.isFavourite.status);\r\n        if (this.state.isFavourite.status === false) {\r\n            let fav = {\r\n                userId: this.props.user._id,\r\n                userVkUid: this.props.user.vkUid,\r\n                masterId: this.state.activeMaster._id,\r\n                masterVkUid: this.state.activeMaster.vkUid\r\n            };\r\n            this.postData(BACKEND.favs.new, fav, 'POST');\r\n            this.setState({isFavourite: {status: true}});\r\n            this.setState({countFavs: this.state.countFavs+1});\r\n            this.openSnackAvatar('Вы подписались на обновления мастера. Отменить подписку можно во вкладке Кабинет, в разделе Избранное.', this.state.activeMaster.avatarLink);\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({phone: result.phone_number});\r\n                //this.sendMessage();\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    {/*<Input*/}\r\n                    {/*    mask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    inputmask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    name='phone'*/}\r\n                    {/*    type=\"text\"*/}\r\n                    {/*    defaultValue={number || ''}*/}\r\n                    {/*    align=\"center\"*/}\r\n                    {/*    value={this.state.phone}*/}\r\n                    {/*    onChange={this.handleChange}*/}\r\n                    {/*/>*/}\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                <Cell>\r\n                                    {this.favStatus()}\r\n                                    <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card size=\"s\">\r\n                                                        <div key={index} style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover'}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div>\r\n                        }\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={'От ' + item.price + \" рублей\"}\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                    <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                    </Cell>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout, Snackbar\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: {\r\n                id: '1',\r\n                body: 'ТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТест',\r\n                author: 'Тест Тестович',\r\n                date: Date.now()\r\n            },\r\n            body: '',\r\n            commentsArr: [],\r\n            isLoad: false,\r\n            rating: 3,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({commentsArr: this.props.activeMaster.comments});\r\n        //console.log('comments ',   this.props.activeMaster.comments);\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n        if (this.state.body.length < 50) {\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.\r\n                    </Snackbar>\r\n            });\r\n        } else {\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            try {\r\n                this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n                this.setState({isCommended: true});\r\n            } catch (e) {\r\n                alert(e);\r\n                console.log(e.message);\r\n            }\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.sendMessage(data.body);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    sendMessage = (bodyComment) => {\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        let message = \"Привет! У тебя новый комментарий: \"+bodyComment;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={this.getDate(comment.date)}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        //console.log(this.props.activeMaster.vkUid, this.props.user.vkUid);\r\n        if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n            )\r\n        }\r\n        else if (this.state.isCommended === true) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <Slider\r\n                        step={1}\r\n                        min={1}\r\n                        max={5}\r\n                        value={Number(this.state.rating)}\r\n                        onChange={rating => this.setState({rating})}\r\n                        top=\"Оцените работу мастера\"\r\n                    />\r\n                    <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                    <Textarea\r\n                        name={'body'}\r\n                        value={this.state.body}\r\n                        status={this.state.body.length > 50 ? 'valid' : 'error'}\r\n                        bottom={this.state.body.length > 50 ? '' : 'Опишите подробнее. Символов: '+this.state.body.replace(/ /g, \"\").length+' из 50' }\r\n                        top={\"Добавление отзыва\"}\r\n                        placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                </FormLayout>\r\n            )\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {Group, HorizontalScroll, FixedLayout, TabsItem, Tabs, Panel, PanelHeader, Cell} from \"@vkontakte/vkui\"\r\n\r\n\r\nclass Idea extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: 'all',\r\n        };\r\n    }\r\n    render(){\r\n        return (\r\n            <Panel id=\"idea\">\r\n                <PanelHeader>Случайная идея</PanelHeader>\r\n                <FixedLayout vertical=\"top\">\r\n                    <Tabs theme=\"header\" type=\"buttons\">\r\n                        <HorizontalScroll>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'all' })}\r\n                                selected={this.state.activeTab === 'all'}\r\n                            >\r\n                                Ногти\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => this.setState({ activeTab: 'users' })}\r\n                                selected={this.state.activeTab === 'users'}\r\n                            >\r\n                                Информация о разделе\r\n                            </TabsItem>\r\n                        </HorizontalScroll>\r\n                    </Tabs>\r\n                </FixedLayout>\r\n                <Group>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Этот раздел</Cell>\r\n                </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Idea;","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar, PanelSpinner, Spinner, FixedLayout,CardGrid,Card,Button\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9]\r\n        };\r\n    }\r\n    addFav = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        });\r\n    };\r\n    feedList = () => {\r\n        return(\r\n            <Placeholder\r\n                icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                header=\"Привет!\"\r\n                action={<Button onClick={this.addFav} size=\"l\">Вступить в группу</Button>}\r\n            >\r\n            Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным. Вступайте в нашу группу Вконтакте, чтобы не пропустить важные обновления!\r\n            </Placeholder>\r\n            // this.state.feed.map(feed=>{\r\n            //     return (\r\n            //         <CardGrid>\r\n            //             <Card key={feed} size=\"l\" mode=\"shadow\">\r\n            //                 <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n            //             </Card>\r\n            //         </CardGrid>\r\n            //     )\r\n            // })\r\n        )\r\n    };\r\n    render(){\r\n        return (\r\n            <Group>\r\n                <FixedLayout vertical=\"bottom\">\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <Cell\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                  description={\r\n                                      this.props.user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                                  }\r\n                                  //bottomContent={}\r\n                                  before={<Avatar src={this.props.user.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                            >{this.props.user.firstname} {this.props.user.lastname}\r\n                            </Cell>\r\n                            {this.props.user.isMaster === false &&\r\n                                <Cell\r\n                                    multiline\r\n                                    onClick={this.props.openReg}\r\n                                    before={<Icon24UserOutgoing/>}\r\n                                    expandable\r\n                                >\r\n                                    Если вы - мастер, пройдите простую процедуру регистрации\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                </FixedLayout>\r\n                {this.feedList()}\r\n            </Group>\r\n            // <Div>\r\n            //         <Group>\r\n            //             {\r\n            //                 this.props.user.firstname === '???' ?\r\n            //                     <Placeholder >\r\n            //                         <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            //                     </Placeholder> :\r\n            //                     <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n            //                         Привет, {this.props.user.firstname}!\r\n            //                     </Placeholder>\r\n            //             }\r\n            //             <Cell multiline>\r\n            //                 Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по\r\n            //                 любой области косметологии или предложить свои услуги.\r\n            //             </Cell>\r\n            //         </Group>\r\n            //     {this.props.user.isMaster === false &&\r\n            //     <FixedLayout vertical=\"bottom\">\r\n            //         <Cell\r\n            //             multiline\r\n            //             onClick={this.props.openReg}\r\n            //             before={<Icon24UserOutgoing/>}\r\n            //             expandable\r\n            //         >\r\n            //             Если вы - мастер, пройдите простую процедуру регистрации\r\n            //         </Cell>\r\n            //     </FixedLayout>\r\n            //     }\r\n            //     <Separator wide />\r\n            // </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar, Input} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.permMessage();\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n                console.log('State on load', this.state)\r\n            });\r\n\r\n    }\r\n\r\n    regMaster = () => {\r\n        let cat = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n        let categories = this.state.categories;\r\n        categories.map((category, index) => {\r\n            let countCat = category.subcat.filter(\r\n                function(subcat){\r\n                    if (subcat.active === true){\r\n                        cat.subcat.push(subcat._id);\r\n                        return subcat.active;\r\n                    } else {\r\n                        return null\r\n                    }\r\n                }\r\n            );\r\n            if (countCat.length > 0) {\r\n                cat.category.push({id: category._id, label: category.label});\r\n                category.active = true;\r\n            } else {\r\n                category.active = false;\r\n            }\r\n        });\r\n\r\n        let master = {\r\n            firstname: this.props.user.firstname,\r\n            lastname: this.props.user.lastname,\r\n            description: this.state.description,\r\n            vkUid: this.props.user.vkUid,\r\n            type: this.state.type,\r\n            avatarLink: this.props.user.avatarLink,\r\n            sex: this.props.user.sex,\r\n            location: this.props.user.location,\r\n            //categories: this.state.categories,\r\n            categories: cat,\r\n            brand: this.state.brand\r\n        };\r\n        this.props.closeReg(master);\r\n    };\r\n    // permPhoto = () => {\r\n    //     bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n    //         .then(data => {\r\n    //             console.log(data);\r\n    //             this.setState({statusPhoto: data.result})\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    console.log(result);\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    multiline*/}\r\n                            {/*    onClick={this.permPhoto}*/}\r\n                            {/*    description=\"Для загрузки фото в портфолио\"*/}\r\n                            {/*    bottom={this.state.statusPhoto === false && 'Доступ обязателен для регистрации'}*/}\r\n                            {/*>Доступ к загрузке фотографий в альбом приложения - {this.state.statusPhoto === true ? 'Разрешен' : 'Не разрешен'}</Cell>*/}\r\n                            <Cell\r\n                                expandable\r\n                                multiline\r\n                                onClick={this.permMessage}\r\n                                description=\"Для получения уведомлений о заявках\"\r\n                                status={this.state.statusMessage === true ? 'valid' : 'error'}\r\n                                bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                            >Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? 'Разрешен' : 'Не разрешен'}</Cell>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            {this.state.checkLicense && this.state.statusMessage && this.state.description && this.state.type &&\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                            }\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.user);\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Cell\r\n                            //expandable\r\n                            onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                            user={this.state.user}\r\n                            indicator={this.state.user.location.city.title}\r\n                        >Ваш город</Cell>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Settings />}\r\n                    >Настройки</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    List, Button, CellButton, Input, Spinner,Snackbar, Tooltip, CardGrid, Card\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            activeMaster: {\r\n                priceList: [],\r\n                showProfile: false\r\n            },\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n                    .then(res => res.json())\r\n                    .then(activeMaster => {\r\n                        this.setState({activeMaster: activeMaster[0], description: activeMaster[0].description, categories: categories});\r\n                        this.setActive(categories)\r\n                    });\r\n            });\r\n    }\r\n\r\n    setActive(categories){\r\n        categories.map(category => {\r\n            this.setState({[category._id]: false});\r\n            category.subcat.map(subcat => {\r\n                if (this.state.activeMaster.categories.subcat.includes(subcat._id)){\r\n                    subcat.active = true;\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n            console.log(activeMaster.categories);\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.openSnack(\"Изменения сохранены\");\r\n                //this.props.popout();\r\n                console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    };\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        //console.log(this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.activeMaster.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.activeMaster.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        if (this.counter(indexCat) > 0) {\r\n            this.state.categories[indexCat].active = true;\r\n        } else {\r\n            this.state.categories[indexCat].active = false;\r\n        }\r\n        this.setState({categories: categories})\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.activeMaster._id) {\r\n            return (<div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                <Spinner size=\"large\" style={{marginTop: 120}}/>\r\n            </div>)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={\r\n                            this.state.activeMaster.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                        }\r\n                        before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                    </Cell>\r\n                    <Group>\r\n                        {this.checkBan()}\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                    {this.state.activeMaster.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                    }\r\n                        <CardGrid>\r\n                    {this.state.activeMaster.priceList.map((item, index) => (\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell\r\n                                    key={item}\r\n                                    multiline\r\n                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                    removable\r\n                                    onRemove={() => {\r\n                                        this.onRemove(index)\r\n                                    }}>\r\n                                    <Cell\r\n                                        description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                    <Cell description=\"Краткое описание процедуры\"\r\n                                          multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                    <Cell\r\n                                        description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                                </Cell>\r\n                            </Card>\r\n                    ))}\r\n                        </CardGrid>\r\n                    {this.state.add &&\r\n                    <Div>\r\n                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdTitle\"\r\n                                type=\"text\"\r\n                                value={this.state.newProdTitle}\r\n                                placeholder={'Введите название'}\r\n                                onChange={this.handleChange}/>\r\n                            <Textarea\r\n                                require\r\n                                name=\"newProdBody\"\r\n                                value={this.state.newProdBody}\r\n                                placeholder={'Укажите описание'}\r\n                                onChange={this.handleChange}/>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdPrice\"\r\n                                type=\"number\" value={this.state.newProdPrice}\r\n                                placeholder={'Укажите цену'}\r\n                                onChange={this.handleChange}/>\r\n                        </Cell>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                        </Div>\r\n                    </Div>\r\n                    }\r\n                    </Group>\r\n                    <Group>\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                        </ FormLayout>\r\n                        <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                         bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                         id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                        name={i}\r\n                                                                        id={index}\r\n                                                                        onChange={this.checkSubcat}\r\n                                                                        checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </FormLayoutGroup>\r\n                        <Button size=\"xl\"\r\n                                onClick={() => this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)}>Сохранить\r\n                            изменения</Button>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Lk;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div, Separator, Cell, Avatar, Spinner, Card, CardGrid, FixedLayout\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadFavsMasters(this.props.user);\r\n    }\r\n\r\n    loadFavsMasters = (user) => {\r\n        fetch(BACKEND.favs.user + user._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                if(favsArr.length === 0){\r\n                    this.setState({isLoaded: true});\r\n                } else {\r\n                    favsArr.map(fav => {\r\n                        fetch(BACKEND.masters.onID + fav.masterId)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                let mastersArr = this.state.mastersArr;\r\n                                mastersArr.push(master);\r\n                                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n                            });\r\n                        //this.setState({isLoaded: true});\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.length === 0) {\r\n                return (\r\n                        <CardGrid>\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell multiline align=\"center\">\r\n                                    Список избранного пуст\r\n                                </Cell>\r\n                            </Card>\r\n                        </CardGrid>\r\n                )\r\n            } else {\r\n                console.log(this.state.mastersArr);\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null) && (master.visible === true)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master._id}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                              photo={master.avatarLink}\r\n                                              description={master.type}\r\n                                              before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                              onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >{master.firstname} {master.lastname}\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Cell, Div, Group, Separator, Spinner, Placeholder, Button} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: [],\r\n            title: '',\r\n            master: {\r\n                vkUid: 9999999999,\r\n                avatarLink: \"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\",\r\n                firstname: 'Евгения',\r\n                lastname: 'Плюхова'\r\n            },\r\n            findArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.user);\r\n        fetch(BACKEND.findModel.onCity+this.props.user.location.city.id)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                console.log(find);\r\n                this.setState({findArr: find});\r\n                console.log('Найдено '+find.length);\r\n                this.setState({isLoad: true})\r\n            });\r\n    }\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    findList = () => {\r\n        if (this.state.findArr.length === 0) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={this.share} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент в городе {this.props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                this.state.findArr.map(find => {\r\n                    return (\r\n                        <Group key={find._id}>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            <Cell expandable\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                // description={'Место под категории'}\r\n                                  before={<Avatar src={find.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openMasterOnId(find.masterId)}\r\n                                  bottom=\"\"\r\n                            >{find.firstname} {find.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>\r\n                                {find.body}\r\n                            </Cell>\r\n                        </Group>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        //expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={this.props.user.location.city.title}>Ваш город</Cell>\r\n                    {this.findList()}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            master: '',\r\n            body: '',\r\n            loadFind: '',\r\n            isLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({master: master[0]});\r\n                fetch(BACKEND.findModel.onMasterId+master[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        this.setState({findArr: find, isLoaded: true});\r\n                        if (find.length > 0) {\r\n                            this.setState({body: find[0].body, loadFind: find[0]});\r\n                            let activeFind =\r\n                                <Group>\r\n                                    <Cell>Ваш активный поиск</Cell>\r\n                                    <Separator style={{ margin: '12px 0' }} />\r\n                                    <Cell expandable\r\n                                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                          description={'desf'}\r\n                                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                          size=\"l\"\r\n                                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                                    </Cell>\r\n                                    <Cell multiline>\r\n                                        {this.state.findArr[0].body}\r\n                                    </Cell>\r\n                                </Group>\r\n                            ;\r\n                            this.setState({activeFind: activeFind});\r\n                        } else {\r\n                            let activeFind = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({activeFind: activeFind});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.master._id,\r\n            body: this.state.body,\r\n            location: this.state.master.location,\r\n            firstname: this.state.master.firstname,\r\n            lastname: this.state.master.lastname,\r\n            avatarLink: this.state.master.avatarLink\r\n        };\r\n        console.log(BACKEND.findModel.new+this.state.loadFind._id);\r\n        if (this.state.loadFind._id) {\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            let activeFind =\r\n                <Group>\r\n                    <Cell>Ваш активный поиск</Cell>\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <Cell expandable\r\n                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                          description={'desf'}\r\n                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                          size=\"l\"\r\n                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                    </Cell>\r\n                    <Cell multiline>\r\n                        {find.body}\r\n                    </Cell>\r\n                </Group>\r\n            ;\r\n            this.setState({activeFind: activeFind});\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.popout();\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Cell>Добавить / изменить</Cell>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                            top=\"О себе\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}/>\r\n                    </FormLayoutGroup>\r\n                    <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    {this.state.activeFind}\r\n                </FormLayout>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {\r\n    View,\r\n    Panel,\r\n    PanelHeader,\r\n    Tabbar,\r\n    TabbarItem,\r\n    Epic,\r\n    SelectMimicry,\r\n    FormLayout,\r\n    Group, List, Cell, Root, PanelHeaderButton, platform, IOS, Alert, Div, Spinner, Avatar, Placeholder\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n//import Sale from './js/sale/sale.js';\r\nimport PanelMasterList from './js/masters/panelMasterList.js';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\nimport Idea from './js/idea/idea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {BACKEND} from \"./js/func/func\";\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nconst osname = platform();\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            mastersList: null,\r\n            user: '',\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ]\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.params) {\r\n            this.postData(BACKEND.logs.params, this.props.params);\r\n        }\r\n        if (this.props.linkParams.masterid){\r\n            console.log('В параметры пришел мастер');\r\n            this.openMasterOnLink(this.props.linkParams.masterid)\r\n        }\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data=> {\r\n                this.setState({vkuser: data})\r\n                console.log(data);\r\n                this.verifiedUser(data.id);\r\n            });\r\n        this.loadCategories();\r\n    }\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                let catArr = categories.map(category=>{\r\n                    return {id: category._id, label: category.label}\r\n                });\r\n                catArr.unshift({id: 'all', label: 'Мастера всех категорий'});\r\n                console.log(catArr);\r\n                this.setState({categories: catArr})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    }\r\n    regNewUser = () => {\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => {\r\n            console.log('Данные с моста',data);\r\n            const user = {\r\n                vkUid: data.id,\r\n                firstname: data.first_name,\r\n                lastname: data.last_name,\r\n                avatarLink: data.photo_200,\r\n                sex: data.sex,\r\n                location: {\r\n                    country: data.country || 'Не определен',\r\n                    city: data.city || 'Не определен'\r\n                },\r\n                isMaster: false\r\n            };\r\n            this.setState({user: user});\r\n            this.postData(BACKEND.users, user); //регитрируем\r\n        });\r\n    }\r\n    verifiedUser = (vkUserId) => {\r\n        //on mock\r\n        //vkUserId = 2314852;\r\n        fetch(BACKEND.users+'/vkuid/'+vkUserId)\r\n            .then(res => res.json())\r\n            .then(usersArr => {\r\n                if (usersArr.length === 0){\r\n                    console.log('Пользователь зашел впервые');\r\n                    this.regNewUser();\r\n                } else {\r\n                    console.log('Пользователь уже заходил в приложение');\r\n                    this.setState({user: usersArr[0]});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    };\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    openAlert = (title, body, action) => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={()=>this.setState({ popout: null })}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    // closeAlert = () => {\r\n    //     this.setState({ popout: null });\r\n    // };\r\n    closeReg = (master) => {\r\n       console.log(master);\r\n        this.postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({ user: user, activeViewLk: 'lk' });\r\n        // //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n    };\r\n    change = (story, view, panel) => {\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n        this.setState({ story: story });\r\n    };\r\n    /*\r\n    *Story (news,masters,findmodel,idea,lk)\r\n    * mastersView -> mastersPanel\r\n    *\r\n    *\r\n    */\r\n\r\n    /*\r\n    *\r\n    *\r\n    *\r\n     */\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({ activePanelMasters: panelName });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMaster = (master) => {\r\n        this.setState({ activeViewMasters: 'mastersList' });\r\n        this.setState({ activeStory: 'masters' });\r\n        this.setState({ activePanelMasters: 'masterInfo' });\r\n        this.setState({ activeMaster: master });\r\n    };\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelFindModels: 'masterInfo' });\r\n            });\r\n    };\r\n    openMasterOnLink = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({ activeMaster: master });\r\n                this.setState({ activeStory: 'masters' });\r\n                this.setState({ activeViewMasters: 'mastersList' });\r\n                this.setState({ activePanelMasters: 'masterInfo' });\r\n            });\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID+masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({ activeMaster: master });\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({ activePanelLk: 'masterInfo' });\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({ activePanelMasters: name });\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({ activeStory: storyName })\r\n    };\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n    render () {\r\n        if (this.state.user === '') {\r\n            return (\r\n                    <Placeholder icon={<Spinner size=\"large\" style={{ marginTop: 20 }} />}>\r\n                        Выполняется вход...\r\n                    </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        {\r\n                            /*<TabbarItem\r\n                                onClick={this.onStoryChange}\r\n                                selected={this.state.activeStory === 'sale'}\r\n                                data-story=\"sale\"\r\n                                text=\"Акции\"\r\n                            ><Icon28FireOutline /></TabbarItem>*/\r\n                        }\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"News\"\r\n                        ><Icon28FireOutline /></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline /></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications /></TabbarItem>\r\n                        {/*<TabbarItem*/}\r\n                        {/*    onClick={this.onStoryChange}*/}\r\n                        {/*    selected={this.state.activeStory === 'idea'}*/}\r\n                        {/*    data-story=\"idea\"*/}\r\n                        {/*    text=\"Идеи\"*/}\r\n                        {/*><Icon28HelpOutline /></TabbarItem>*/}\r\n                        {\r\n                            /*\r\n                            <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'notifications'}\r\n                            data-story=\"notifications\"\r\n                            text=\"Уведомлен.\"\r\n                            label=\"1\"\r\n                        ><Icon28Notifications /></TabbarItem>\r\n                            * */\r\n                        }\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More /></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    {\r\n                        /*<View id=\"sale\" activePanel=\"sale\">\r\n                        <Panel id=\"sale\">\r\n                            <PanelHeader>Акции</PanelHeader>\r\n                            <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })} indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                            <Sale />\r\n                        </Panel>\r\n                    </View>*/\r\n                    }\r\n                    <View id=\"news\" activePanel=\"news\">\r\n                        <Panel id=\"news\">\r\n                            <PanelHeader>Навигатор красоты</PanelHeader>\r\n                            <News openReg={() => this.setState({ activeViewLk: 'masterReg',activeStory:'lk' })} user={this.state.user} openStory={this.openStory}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <Root id=\"masters\" activeView={this.state.activeViewMasters}>\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <FormLayout>\r\n                                    <Cell\r\n                                        //expandable\r\n                                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                        indicator={this.state.user.location.city.title}>Ваш город</Cell>\r\n                                    <SelectMimicry\r\n                                        top=\"Выберите категорию\"\r\n                                        placeholder=\"Показаны мастера всех категорий\"\r\n                                        onClick={() => this.setState({ activeViewMasters: 'masterCat' })}\r\n                                    >{this.state.targetCategory.label}</SelectMimicry>\r\n                                </FormLayout>\r\n                                <PanelHeader>Мастера</PanelHeader>\r\n                                <PanelMasterList category={this.state.targetCategory} city={this.state.user.location.city} openPanelMaster={this.openPanelMaster}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'mastersList' })}>Назад</PanelHeaderButton>}\r\n                                >\r\n                                    О мастере\r\n                                </PanelHeader>\r\n                                <MasterCard openPhoto={() => this.setState({ activePanelMasters: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelMasters: 'masterComments' })}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                                >\r\n                                    Портфолио\r\n                                </PanelHeader>\r\n                                <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activePanelMasters: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                                >\r\n                                    Отзывы\r\n                                </PanelHeader>\r\n                                <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <List>\r\n                                        {\r\n                                            this.state.categories.map(category => {\r\n                                                //console.log(category);\r\n                                                return (\r\n                                                    <Cell\r\n                                                        key={category.id}\r\n                                                        onClick={() => this.setState({ targetCategory: category, activeViewMasters: 'mastersList' })}\r\n                                                        asideContent={this.state.targetCategory === category ? <Icon24Done fill=\"var(--accent)\" /> : null}\r\n                                                    >\r\n                                                        {category.label}\r\n                                                    </Cell>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </List>\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                    {/*<View id=\"idea\" activePanel=\"idea\">*/}\r\n                    {/*    <Panel id=\"idea\">*/}\r\n                    {/*        <Idea />*/}\r\n                    {/*    </Panel>*/}\r\n                    {/*</View>*/}\r\n                    <View id=\"findmodel\" activePanel={this.state.activePanelFindModels}>\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                            <FindModel openMasterOnId={this.openMasterOnId} user={this.state.user}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'findmodel' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                О мастере\r\n                            </PanelHeader>\r\n                            <MasterCard openPhoto={() => this.setState({ activePanelFindModels: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelFindModels: 'masterComments' })}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Портфолио\r\n                            </PanelHeader>\r\n                            <MasterPhoto activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <PanelHeader\r\n                                theme=\"light\"\r\n                                left={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                addon={<PanelHeaderButton onClick={() => this.setState({ activePanelFindModels: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                            >\r\n                                Отзывы\r\n                            </PanelHeader>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                        </Panel>\r\n                    </View>\r\n                    <View id=\"notifications\" activePanel=\"notifications\">\r\n                        <Panel id=\"notifications\">\r\n                            <PanelHeader>Уведомления</PanelHeader>\r\n                            <Group>\r\n                                <Cell\r\n                                    expandable\r\n                                    onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                    indicator={'В разработке'}\r\n                                >Этот раздел</Cell>\r\n                            </Group>\r\n                        </Panel>\r\n                    </View>\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader>Личный кабинет</PanelHeader>\r\n                                <Lk\r\n                                    user={this.state.user}\r\n                                    openSetting={() => this.setState({ activePanelLk: 'setting' })}\r\n                                    openFavourite={() => this.setState({ activePanelLk: 'favourite' })}\r\n                                    openFindModel={() => this.setState({ activePanelLk: 'findModel' })}\r\n                                    openMasterPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                                >Избранное</PanelHeader>\r\n                                <Favourite user={this.state.user} openFavMasterOnId={this.openFavMasterOnId}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'favourite' })}>Назад</PanelHeaderButton>}\r\n                                >\r\n                                    О мастере\r\n                                </PanelHeader>\r\n                                <MasterCard openPhoto={() => this.setState({ activePanelLk: 'masterPhoto' })} user={this.state.user} activeMaster={this.state.activeMaster} openComments={() => this.setState({ activePanelLk: 'masterComments' })}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                                >\r\n                                    Портфолио\r\n                                </PanelHeader>\r\n                                <Portfolio user={this.state.user}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'masterInfo' })}>Назад</PanelHeaderButton>}\r\n                                >\r\n                                    Отзывы\r\n                                </PanelHeader>\r\n                                <MasterComments user={this.state.user} activeMaster={this.state.activeMaster} />\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                                >Мастер ищет модель</PanelHeader>\r\n                                <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activePanelLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                                >Настройки</PanelHeader>\r\n                                <Setting user={this.state.user} popout={this.openAlert}/>\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterReg\" id=\"masterReg\">\r\n                            <Panel id=\"masterReg\">\r\n                                <PanelHeader\r\n                                    theme=\"light\"\r\n                                    left={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                                    addon={<PanelHeaderButton onClick={() => this.setState({ activeViewLk: 'lk' })}>Назад</PanelHeaderButton>}\r\n                                >Регистрация мастера\r\n                                </PanelHeader>\r\n                                <Invite user={this.state.user} closeReg={this.closeReg}/>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nbridge.send(\"VKWebAppInit\", {})\r\n    .then(data => console.log('Инициализировали апи вк? '+data.result));\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nconsole.log(params);\r\n\r\n\r\nReactDOM.render(<App linkParams={linkParams} params={params} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}