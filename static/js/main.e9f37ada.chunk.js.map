{"version":3,"sources":["js/elements/panelHeader.js","js/func/func.js","js/masters/panelMasterList.js","js/masters/mastersCard.js","js/masters/mastersPhoto.js","js/masters/mastersComments.js","js/func/alert.js","js/news/news.js","js/lk/invite.js","js/lk/lk.js","js/lk/portfolio.js","js/elements/cityListModal.js","js/lk/setting.js","js/lk/favourite.js","js/findmodel/findModel.js","js/lk/findModelMaster.js","js/elements/cityList.js","js/elements/functions.js","App.js","serviceWorker.js","index.js"],"names":["osname","platform","Head","theme","left","onClick","this","props","goBack","IOS","addon","title","React","Component","BACK_LINK","BACKEND","users","message","masters","all","onID","category","vkuid","favs","new","master","user","findModel","onMasterId","onCity","comment","vkapi","uploadPhoto","savePhoto","getAll","logs","params","MasterList","loadList","console","log","city","id","fetch","then","res","json","mastersList","setState","isLoad","setTitle","state","length","share","bridge","send","activeMaster","_id","result","openSnackAvatar","avatarLink","setBottom","rating","style","margin","padding","fontSize","color","prevProps","prevState","snapshot","count","undefined","Array","isArray","display","alignItems","flexDirection","size","marginTop","icon","header","action","map","ratingArr","comments","Number","reduce","a","b","key","vkUid","mode","expandable","photo","description","categories","label","bottomContent","before","src","openPanelMaster","firstname","lastname","separator","renderMaster","MastersCard","handleChange","event","target","name","value","favStatus","isFavourite","status","float","marginRight","checkFavs","width","height","fill","connectStatus","getPhone","loadFavs","favsArr","countFavs","fav","userId","changeVisible","index","userVkUid","masterId","masterVkUid","postData","sendMessage","sendtitle","phone","Math","random","snackbar","mess","catch","e","phone_number","enterNumber","error_data","error_reason","number","duration","layout","onClose","className","mask","type","defaultValue","align","onChange","activeMasterId","priceList","text","after","url","data","method","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","brand","openComments","indicator","photos","slice","photoUrl","backgroundImage","backgroundSize","openPhoto","item","multiline","price","images","reverse","start_index","image","openShowImages","gridPhoto","sendComment","isCommended","alert","bodyComment","author","date","Date","now","commentsArr","countComments","arr","push","comDate","hours","getHours","minutes","getMinutes","date1","getDate","month","getMonth","getFullYear","step","min","max","top","bottom","replace","placeholder","commentList","validate","News","addFav","group_id","feedList","feed","vertical","isMaster","openReg","Invite","regMaster","cat","subcat","filter","active","sex","location","targetCity","closeReg","permMessage","statusMessage","checkSubcat","indexCat","indexSubcat","counter","statusPhoto","bind","changeCity","i","subcategory","asideContent","checked","checkLicense","Lk","connection","tmpUser","isUser","mastersArr","activePanel","openFavourite","openMasterPhoto","openFindModel","openSetting","loading","formData","FormData","selectedFile","document","getElementById","files","append","uploadUrl","token","openSnack","fetchJsonp","saveUrl","newImg","sizes","imgArr","unshift","error","getUploadServer","upload_url","getToken","access_token","photoArr","photoFile","CityListModal","search","cities","getCities","toLowerCase","items","updateModalHeight","Fragment","region","changeTargetCity","withModalRootContext","saveChanges","patchData","visible","onRemove","addProd","add","saveProd","newProdTitle","newProdBody","newProdPrice","checkBan","banned","about","tooltip","popout","showProfile","manicureStatus","pedicureStatus","eyelashesStatus","eyebrowsStatus","shugaringStatus","hairStatus","cosmeticStatus","Object","setActive","includes","modalBack","activeModal","dynamicContentHeight","ANDROID","right","changeModal","removable","require","stretched","onSubmit","handleSubmit","Favourite","loadFavsMasters","isLoaded","openFavMasterOnId","FindModel","findList","findArr","find","openMasterOnId","FindModelMaster","save","loadFind","activeFind","CityList","App","loadCategories","catArr","regNewUser","first_name","last_name","photo_200","country","openAlert","actionsLayout","actions","autoclose","activeViewLk","panelName","activePanelMasters","activePanelFindModels","openMasterOnLink","activeStory","activeViewMasters","activePanelLk","openStory","storyName","targetCategory","catRu","Manicure","Pedicure","Eyelashes","Eyebrows","Shugaring","Hairstyles","activePanelReg","baseCities","searchCity","modalHistory","onStoryChange","setActiveModal","vkUser","usersArr","verifiedUser","linkParams","masterid","indexOf","splice","backgroundColor","currentTarget","dataset","story","setting","searchFilter","tabbar","selected","data-story","activeView","modal","disabled","Boolean","window","hostname","match","hash","split","p","decodeURIComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uVAIMA,EAASC,cAeAC,E,iLAXP,OACI,kBAAC,IAAD,CACIC,MAAM,QACNC,KAAM,kBAAC,IAAD,CAAmBC,QAASC,KAAKC,MAAMC,QAASR,IAAWS,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,OAC/FC,MAAO,kBAAC,IAAD,CAAmBL,QAASC,KAAKC,MAAMC,QAAvC,mCACTF,KAAKC,MAAMI,W,GAPNC,IAAMC,W,4DCLnBC,EAAY,iDAELC,EAAU,CACnBC,MAAOF,EAAU,QACjBG,QAASH,EAAU,iBACnBI,QAAS,CACLC,IAAKL,EAAU,WACfM,KAAMN,EAAU,WAChBO,SAAUP,EAAU,oBACpBQ,MAAOR,EAAU,kBAErBS,KAAM,CACFC,IAAKV,EAAU,QACfW,OAAQX,EAAU,eAClBY,KAAMZ,EAAU,cAEpBa,UAAW,CACPH,IAAKV,EAAU,aACfc,WAAYd,EAAU,wBACtBe,OAAQf,EAAU,qBAEtBgB,QAAS,CACLN,IAAKV,EAAU,kBACfc,WAAYd,EAAU,mBAE1BiB,MAAO,CACHC,YAAalB,EAAU,qBACvBmB,UAAWnB,EAAU,oBAEzBO,SAAU,CACNa,OAAQpB,EAAU,aAEtBqB,KAAM,CACFC,OAAQtB,EAAU,iB,iBCwIXuB,E,YAnJX,WAAY9B,GAAQ,IAAD,8BACf,4CAAMA,KAmBV+B,SAAW,WACwB,KAAxB,EAAK/B,MAAMc,UACVkB,QAAQC,IAAIzB,EAAQG,QAAQG,SAAS,OAAO,EAAKd,MAAMkC,KAAKC,IAC5DC,MAAM5B,EAAQG,QAAQG,SAAS,OAAO,EAAKd,MAAMkC,KAAKC,IACjDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFR,QAAQC,IAAIO,GACZ,EAAKC,SAAS,CAACD,YAAaA,EAAaE,QAAQ,IACjD,EAAKC,SAAS,EAAKC,MAAMJ,YAAYK,aAG7Cb,QAAQC,IAAIzB,EAAQG,QAAQG,SAAS,EAAKd,MAAMc,SAASqB,GAAG,IAAI,EAAKnC,MAAMkC,KAAKC,IAChFC,MAAM5B,EAAQG,QAAQG,SAAS,EAAKd,MAAMc,SAASqB,GAAG,IAAI,EAAKnC,MAAMkC,KAAKC,IACrEE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFR,QAAQC,IAAIO,GACZ,EAAKC,SAAS,CAACD,YAAaA,EAAaE,QAAQ,IACjD,EAAKC,SAAS,EAAKC,MAAMJ,YAAYK,aArCtC,EA0CnBC,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,kDAAkD,EAAKJ,MAAMK,aAAaC,MAC3Gb,MAAK,SAAAc,GAAM,OAAI,EAAKC,gBAAgB,4JAAgC,EAAKR,MAAMK,aAAaI,gBA5ClF,EAoHnBC,UAAY,SAACC,EAAQV,GACjB,OAAIA,EAAS,EAEL,kBAAC,IAAD,CAAKW,MAAO,CAACC,OAAQ,EAAGC,QAAS,EAAGC,SAAU,GAAIC,MAAO,YAAzD,8CACaL,EADb,iBACyBV,EADzB,+CAMA,kBAAC,IAAD,CAAKW,MAAO,CAACC,OAAQ,EAAGC,QAAS,EAAGC,SAAU,GAAIC,MAAO,YAAzD,4GA3HR,EAAKhB,MAAQ,CACTJ,YAAa,KACbpC,MAAO,GACPsC,QAAQ,GALG,E,iFAUf3C,KAAKgC,a,yCAGc8B,EAAWC,EAAWC,GACzC/B,QAAQC,IAAI4B,EAAW9D,KAAKC,OACpB6D,EAAU3B,OAASnC,KAAKC,MAAMkC,MAAQ2B,EAAU/C,WAAaf,KAAKC,MAAMc,UACxEf,KAAKgC,a,+BA8BRiC,QACOC,IAARD,EACAjE,KAAK0C,SAAS,CAACrC,MAAO,6KAEtBL,KAAK0C,SAAS,CAACrC,MAAO,gGAAqB4D,M,qCAGnC,IAAD,OACX,GAAGE,MAAMC,QAAQpE,KAAK6C,MAAMJ,aACxB,OAAyB,IAAtBzC,KAAK6C,MAAMF,OAEN,yBAAKc,MAAO,CAAEY,QAAS,OAAQC,WAAY,SAAUC,cAAe,WACpE,kBAAC,IAAD,CAASC,KAAK,QAAQf,MAAO,CAAEgB,UAAW,OAIxB,4DAAlBzE,KAAKC,MAAMkC,KAEP,kBAAC,IAAD,CACIuC,KAAM,kBAAC,IAAD,MACNC,OAAO,oCAFX,wSAOqC,IAAlC3E,KAAK6C,MAAMJ,YAAYK,OAE1B,kBAAC,IAAD,CACI4B,KAAM,kBAAC,IAAD,MACNC,OAAO,0GACPC,OAAQ,kBAAC,IAAD,CAAQ7E,QAASC,KAAK+C,MAAOyB,KAAK,KAAlC,iEAHZ,q9BAUGxE,KAAK6C,MAAMJ,YAAYoC,KAAI,SAAA1D,GAC9B,IAAI2D,EAAY3D,EAAO4D,SAASF,KAAI,SAAArD,GAChC,OAAOwD,OAAOxD,EAAQgC,WAGtBA,EADMsB,EAAUG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAC3BL,EAAUhC,OAE3B,OACQ,kBAAC,IAAD,CAAUsC,IAAKjE,EAAOkE,MAAO5B,MAAO,CAACE,QAAS,IAC1C,kBAAC,IAAD,CAAMa,KAAK,IAAIc,KAAK,UAChB,kBAAC,IAAD,CAAMC,YAAU,EACFC,MAAM,kEACNC,YACItE,EAAOuE,WAAW3E,SAAS8D,KAAI,SAAA9D,GAC3B,OAAOA,EAAS4E,MAAM,OAG9BC,cACI,EAAKrC,UAAUC,EAAQsB,EAAUhC,QAErC+C,OAAQ,kBAAC,IAAD,CAAQC,IAAK3E,EAAOmC,WAAYkB,KAAM,KAC9CA,KAAK,IACLzE,QAAS,kBAAM,EAAKE,MAAM8F,gBAAgB,aAAc5E,KAC5DA,EAAO6E,UAbjB,IAa6B7E,EAAO8E,iB,+BA2BpE,OAAyB,IAAtBjG,KAAK6C,MAAMF,OACF,kBAAC,IAAD,CAAS6B,KAAK,QAAQf,MAAO,CAAEgB,UAAW,MAG9C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyB,UAAU,OAAOvB,OAAQ,kBAAC,IAAD,CAAQW,KAAK,aAAatF,KAAK6C,MAAMxC,QAChEL,KAAKmG,qB,GA5IL7F,IAAMC,W,yBCoThB6F,E,YArTX,WAAYnG,GAAQ,IAAD,8BACf,4CAAMA,KAqBVoG,aAAe,SAACC,GACZ,EAAK5D,SAAL,eAAgB4D,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,QACjDxE,QAAQC,IAAI,EAAKW,QAxBF,EA0BnB6D,UAAY,WACR,OAAqC,IAAlC,EAAK7D,MAAM8D,YAAYC,OAEN,kBAAC,IAAD,CAAKnD,MAAO,CAACoD,MAAO,OAAQlD,QAAS,EAAGmD,YAAa,IAAK/G,QAAS,EAAKgH,WACpE,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,GAAIC,KAAK,SAK3D,kBAAC,IAAD,CAAKzD,MAAO,CAACoD,MAAO,OAAQlD,QAAS,EAAGmD,YAAa,IAAK/G,QAAS,EAAKgH,WACpE,kBAAC,IAAD,CAAYC,MAAO,GAAIC,OAAQ,GAAIC,KAAK,UApCzC,EAyCnBC,cAAgB,SAAC9G,GACb,OACI,kBAAC,IAAD,CAAQN,QAAS,kBAAM,EAAKqH,SAAS/G,KAArC,iEA3CW,EA8CnB0C,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,kDAAkD,EAAKJ,MAAMK,aAAaC,MAC3Gb,MAAK,SAAAc,GAAM,OAAI,EAAKC,gBAAgB,4JAAgC,EAAKR,MAAMK,aAAaI,gBAhDlF,EAyEnB+D,SAAW,WAEPhF,MAAM5B,EAAQQ,KAAKE,OAAO,EAAKlB,MAAMiD,aAAaC,KAC7Cb,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgF,GACF,EAAK5E,SAAS,CAAC4E,QAASA,IACxB,IAAIrD,EAAQqD,EAAQxE,OACpB,EAAKJ,SAAS,CAAC6E,UAAWtD,IAC1B,EAAKvB,SAAS,CAACC,QAAQ,IACvB,EAAKE,MAAMyE,QAAQzC,KAAI,SAAA2C,GACfA,EAAIC,SAAW,EAAKxH,MAAMmB,KAAK+B,IAC/B,EAAKT,SAAS,CAACiE,YAAa,CAACC,QAAQ,EAAMxE,GAAIoF,EAAIrE,OAGnD,EAAKT,SAAS,CAACiE,YAAa,CAACC,QAAQ,YAvFtC,EA6FnBc,cAAgB,SAACC,GACb,EAAKjF,SAAL,eAAgBiF,GAAS,EAAK9E,MAAM8E,MA9FrB,EAgGnBZ,UAAY,WAER,GADA9E,QAAQC,IAAI,mFAAkB,EAAKW,MAAM8D,YAAYC,SACf,IAAlC,EAAK/D,MAAM8D,YAAYC,OAAkB,CACzC,IAAIY,EAAM,CACNC,OAAQ,EAAKxH,MAAMmB,KAAK+B,IACxByE,UAAW,EAAK3H,MAAMmB,KAAKiE,MAC3BwC,SAAU,EAAKhF,MAAMK,aAAaC,IAClC2E,YAAa,EAAKjF,MAAMK,aAAamC,OAEzC,EAAK0C,SAAStH,EAAQQ,KAAKC,IAAKsG,EAAK,QACrC,EAAK9E,SAAS,CAACiE,YAAa,CAACC,QAAQ,KACrC,EAAKlE,SAAS,CAAC6E,UAAW,EAAK1E,MAAM0E,UAAU,IAC/C,EAAKlE,gBAAgB,uhBAA0G,EAAKR,MAAMK,aAAaI,cA5G5I,EAgHnB0E,YAAc,WACV,IAAIrH,EAAU,yCAAW,EAAKV,MAAMmB,KAAK4E,UAAU,IAAI,EAAK/F,MAAMmB,KAAK6E,SAAS,6GAAwB,EAAKpD,MAAMoF,UAAU,mKAAsC,EAAKpF,MAAMqF,MAAM,2EAAmC,EAAKjI,MAAMmB,KAAKiE,MAEvOrC,IAAOC,KAAK,wBAAyB,CACjC,OAAU,gBACV,OAAU,CAAC,UAAakF,KAAKC,SAAU,QAAW,aAAc,QAAW,EAAKvF,MAAMK,aAAamC,MAAM,QAAW1E,EAAS,EAAI,QAAS,aAHlI,2FAIP2B,MAAK,SAAAc,GACFnB,QAAQC,IAAIkB,GACZ,EAAKV,SAAS,CAAE2F,SAAU,OAC1B,IAAIC,EAAO,CACPb,OAAQ,EAAKxH,MAAMmB,KAAK+B,IACxByE,UAAW,EAAK3H,MAAMmB,KAAKiE,MAC3BwC,SAAU,EAAKhF,MAAMK,aAAaC,IAClC2E,YAAa,EAAKjF,MAAMK,aAAamC,OAEzC,EAAK0C,SAAStH,EAAQE,QAAS2H,EAAM,QACrC,EAAKjF,gBAAgB,2TAAkE,EAAKR,MAAMK,aAAaI,eAElHiF,OAAM,SAAAC,GAAC,OAAIvG,QAAQC,IAAIsG,OAlIb,EAoInBpB,SAAW,SAAC/G,GACR,EAAKqC,SAAS,CAACuF,UAAW5H,IAC1B2C,IAAOC,KAAK,yBAA0B,CAAC,SAAY,UAAW,IAAO,oBAChEX,MAAK,SAAAc,GACFnB,QAAQC,IAAIkB,GACZ,EAAKV,SAAS,CAACwF,MAAO9E,EAAOqF,eAE7B,EAAKC,YAAYtF,EAAOqF,iBAE3BF,OAAM,SAAAC,GACHvG,QAAQC,IAAIsG,GACoB,gBAA5BA,EAAEG,WAAWC,cACb,EAAKF,kBAhJF,EAoJnBA,YAAc,SAACG,GACP,EAAKhG,MAAMwF,UACf,EAAK3F,SAAS,CAAE2F,SACR,kBAAC,IAAD,CACIS,SAAS,iBACTC,OAAO,WACPC,QAAS,kBAAM,EAAKtG,SAAS,CAAE2F,SAAU,SAEzC,0JACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKY,UAAU,iCACX,kBAAC,IAAD,CACIA,UAAU,YACVC,KAAK,oBACL1C,KAAK,QACL2C,KAAK,OACLC,aAAcP,GAAU,GACxBQ,MAAM,SACN5C,MAAO,EAAK5D,MAAMqF,MAClBoB,SAAU,EAAKjD,eAEnB,kBAAC,IAAD,CAAK4C,UAAU,uBAYnB,+dACA,kBAAC,IAAD,CAAQlJ,QAAS,EAAKiI,aAAtB,+DApLZ,EAAKnF,MAAQ,CACT0G,eAAgB,EAAKtJ,MAAMsJ,eAC3BrG,aAAc,CACVsG,UAAW,IAEflC,QAAS,CACL,CAACjC,MAAM,WAEXsB,YAAa,CACTC,QAAQ,GAEZjE,QAAQ,EACR0F,SAAU,MAdC,E,iFAkBfpG,QAAQC,IAAIlC,KAAKC,OACjBD,KAAK0C,SAAS,CAACQ,aAAclD,KAAKC,MAAMiD,eACxClD,KAAKqH,a,sCA8BQoC,EAAMnG,GAAa,IAAD,OAC3BtD,KAAK6C,MAAMwF,UAAUrI,KAAK0C,SAAS,CAAC2F,SAAU,OAClDrI,KAAK0C,SAAS,CAAE2F,SACR,kBAAC,IAAD,CACIU,OAAO,WACPC,QAAS,kBAAM,EAAKtG,SAAS,CAAE2F,SAAU,QACzCqB,MAAO,kBAAC,IAAD,CAAQ5D,IAAKxC,EAAYkB,KAAM,MAErCiF,O,iCAiIsB,IAA9BE,EAA6B,uDAAvB,GAAIC,EAAmB,uDAAZ,GAAIC,EAAQ,uCAElC,OAAOxH,MAAMsH,EAAK,CACdE,OAAQA,EACRvE,KAAM,OACNwE,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUT,KAEpBtH,MAAK,SAAAgI,GAAQ,OAAIrI,QAAQC,IAAIoI,EAAS9H,a,+BAEtC,IAAD,OACJ,OAAuB,IAApBxC,KAAK6C,MAAMF,OAEN,kBAAC,IAAD,CAAS6B,KAAK,QAAQf,MAAO,CAAEgB,UAAW,MAI1C,kBAAC,IAAD,CAAKhB,MAAO,CAACE,QAAS,IAClB,kBAAC,IAAD,CAAOtD,MAAM,IACT,kBAAC,IAAD,CACImF,MAAM,kEACNC,YACmC,uEAA/BzF,KAAK6C,MAAMK,aAAaiG,KAAuBnJ,KAAK6C,MAAMK,aAAaqH,MAAQvK,KAAK6C,MAAMK,aAAaiG,KAE3GvD,cACI,kBAAC,IAAD,KACK5F,KAAK0G,YACN,kBAAC,IAAD,CAAQ3G,QAAS,kBAAM,EAAKgD,UAA5B,iEAGR8C,OAAQ,kBAAC,IAAD,CAAQC,IAAK9F,KAAK6C,MAAMK,aAAaI,WAAYkB,KAAM,KAC/DA,KAAK,KAEJxE,KAAK6C,MAAMK,aAAa8C,UAd7B,IAcyChG,KAAK6C,MAAMK,aAAa+C,UAEjE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMV,YAAU,EAACxF,QAAS,kBAAM,EAAKE,MAAMuK,gBAAgBC,UAAWzK,KAAK6C,MAAMK,aAAa6B,SAASjC,QAAvG,wCAEA,kBAAC,IAAD,KAAM,kBAAC,IAAD,CAASwC,KAAK,WAAd,uEAAsCtF,KAAK6C,MAAM0E,aAE3D,kBAAC,IAAD,CAAOlH,MAAM,0DAELL,KAAK6C,MAAMK,aAAawH,OAAO5H,OAAS,GACpC,kBAAC,IAAD,KACI,kBAAC,IAAD,+IACA,kBAAC,IAAD,KAEQ9C,KAAK6C,MAAMK,aAAawH,OAAOC,MAAM,EAAG,GAAG9F,KAAI,SAAC+F,EAAUjD,GACtD,OACI,kBAAC,IAAD,CAAMnD,KAAK,KACP,yBAAKY,IAAKuC,EAAOlE,MAAO,CACpBuD,MAAO,IACPC,OAAQ,GACR4D,gBAAiB,OAAOD,EAAS,IACjCE,eAAgB,iBAQpD,kBAAC,IAAD,CACIvF,YAAU,EACVxF,QAAS,kBAAM,EAAKE,MAAM8K,aAC1BtF,YACIzF,KAAK6C,MAAMK,aAAawH,OAAO5H,OAAS,EACpC9C,KAAK6C,MAAMK,aAAawH,OAAO5H,OAAO,0FACtC,sLAER2H,UAAWzK,KAAK6C,MAAMK,aAAawH,OAAO5H,QAR9C,6GAWJ,kBAAC,IAAD,CAAOoD,UAAU,QAETlG,KAAK6C,MAAMK,aAAasG,UAAU3E,KAAI,SAACmG,EAAMrD,GAAP,OAC9B,kBAAC,IAAD,CACIvC,IAAKuC,EACLsD,WAAS,EACTlL,QAAS,kBAAM,EAAK2H,cAAcC,KAElC,kBAAC,IAAD,CAAUlE,MAAO,CAACE,QAAS,IACvB,kBAAC,IAAD,CAAMa,KAAK,KACP,kBAAC,IAAD,CACIiB,YAAa,gBAAQuF,EAAKE,MAAQ,wCAClC3F,YAAU,EACVkF,UAAU,IACT,EAAK5H,MAAMK,aAAasG,UAAU7B,GAAOtH,OAG1C,EAAKwC,MAAM8E,IACX,kBAAC,IAAD,CAAMlC,YAAY,qJACZwF,WAAS,GAAE,EAAKpI,MAAMK,aAAasG,UAAU7B,GAAOwC,KAC1D,kBAAC,IAAD,KAAO,EAAKhD,cAAc,EAAKtE,MAAMK,aAAasG,UAAU7B,GAAOtH,SAGvE,kBAAC,IAAD,aAO5B,kBAAC,IAAD,CAAO6F,UAAU,OAAOvB,OAAQ,kBAAC,IAAD,CAAQW,KAAK,aAAb,mHAC5B,kBAAC,IAAD,CAAM2F,WAAS,GACVjL,KAAK6C,MAAMK,aAAauC,cAGhCzF,KAAK6C,MAAMwF,c,GA/SN/H,IAAMC,WCmEjB6F,E,YAjFX,WAAYnG,GAAQ,IAAD,8BACf,4CAAMA,KACD4C,MAAQ,CACTK,aAAc,EAAKjD,MAAMiD,aACzBP,QAAQ,GAJG,E,iFASf3C,KAAK0C,SAAS,CAACyI,OAAQnL,KAAKC,MAAMiD,aAAawH,OAAOU,UAAWzI,QAAQ,M,qCAoB9DwI,EAAQxD,GACnB3E,IAAOC,KAAK,qBAAsB,CAC9BkI,OAAQA,EACRE,YAAa1D,IACdrF,MAAK,SAAAsH,GAAI,OAAI3H,QAAQC,IAAI0H,Q,kCAEnB,IAAD,OACR,OAAiC,IAA7B5J,KAAK6C,MAAMsI,OAAOrI,OAEd,kBAAC,IAAD,CAAMmI,WAAS,GAAf,sNAIA,kBAAC,IAAD,KAEQjL,KAAK6C,MAAMsI,OAAOtG,KAAI,SAACyG,EAAO3D,GAE1B,OACI,kBAAC,IAAD,CACInD,KAAK,IACLc,KAAK,SACLF,IAAKuC,EACL5H,QAAS,kBAAM,EAAKwL,eAAe,EAAK1I,MAAMsI,OAAQxD,KAEtD,yBAAKlE,MAAO,CAACwD,OAAQ,GAAI4D,gBAAiB,OAAOS,EAAM,IAAKR,eAAgB,kB,+BAUxG,OAAuB,IAApB9K,KAAK6C,MAAMF,OAEN,kBAAC,IAAD,CAAS6B,KAAK,QAAQf,MAAO,CAAEgB,UAAW,MAI1C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOpE,MAAM,0DACT,kBAAC,IAAD,CAAO6F,UAAU,QACZlG,KAAKwL,mB,GAzERlL,IAAMC,W,iBC0MjB6F,GC5MkB9F,IAAMC,U,YDiBnC,WAAYN,GAAQ,IAAD,8BACf,4CAAMA,KA0BVwL,YAAc,WACV,GAAI,EAAK5I,MAAMsH,KAAKrH,OAAS,GACzB,EAAKJ,SAAS,CAAE2F,SACR,kBAAC,IAAD,CACIU,OAAO,WACPC,QAAS,kBAAM,EAAKtG,SAAS,CAAE2F,SAAU,SAF7C,udAOL,CACH,IAAI7G,EAAU,CACVJ,KAAM,CACFqG,OAAQ,EAAKxH,MAAMmB,KAAK+B,IACxB6C,UAAW,EAAK/F,MAAMmB,KAAK4E,UAC3BC,SAAU,EAAKhG,MAAMmB,KAAK6E,SAC1B3C,WAAY,EAAKrD,MAAMmB,KAAKkC,YAEhCE,OAAQwB,OAAO,EAAKnC,MAAMW,QAC1B2G,KAAM,EAAKtH,MAAMsH,MAErB,IACI,EAAKpC,SAAStH,EAAQe,QAAQN,IAAI,EAAKjB,MAAMiD,aAAaC,IAAK3B,EAAS,QACxE,EAAKkB,SAAS,CAACgJ,aAAa,IAC9B,MAAOlD,GACLmD,MAAMnD,GACNvG,QAAQC,IAAIsG,EAAE7H,YArDP,EAkGnBqH,YAAc,SAAC4D,GACX,IACIjL,EAAU,4KAAqCiL,EACnD5I,IAAOC,KAAK,wBAAyB,CACjC,OAAU,gBACV,OAAU,CAAC,UAAakF,KAAKC,SAAU,QAAW,aAAc,QAAW,EAAKnI,MAAMiD,aAAamC,MAAM,QAAW1E,EAAS,EAAI,QAAS,aAJlI,2FAKP2B,MAAK,SAAAc,GACFnB,QAAQC,IAAIkB,MAGfmF,OAAM,SAAAC,GAAC,OAAIvG,QAAQC,IAAIsG,OA5Gb,EA4KnBnC,aAAe,SAACC,GAAW,IAAD,EACFA,EAAMC,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAK/D,SAAL,eAAgB8D,EAAOC,KA5KvB,EAAK5D,MAAQ,CACTkC,SAAU,CACN3C,GAAI,IACJ+H,KAAM,2iBACN0B,OAAQ,4EACRC,KAAMC,KAAKC,OAEf7B,KAAM,GACN8B,YAAa,GACbtJ,QAAQ,EACRa,OAAQ,EACR6E,SAAU,MAbC,E,iFAgBE,IAAD,OAChBrI,KAAK0C,SAAS,CAACuJ,YAAajM,KAAKC,MAAMiD,aAAa6B,WAEpD/E,KAAKC,MAAMiD,aAAa6B,SAASF,KAAI,SAAArD,GAC7BA,EAAQJ,KAAKqG,SAAW,EAAKxH,MAAMmB,KAAK+B,KACxC,EAAKT,SAAS,CAACgJ,aAAa,OAGpC,IAAIzH,EAAQjE,KAAKC,MAAMiD,aAAa6B,SAASjC,OAC7C9C,KAAK0C,SAAS,CAACwJ,cAAejI,EAAOtB,QAAQ,M,iCAgCV,IAAD,OAA7BgH,EAA6B,uDAAvB,GAAIC,EAAmB,uDAAZ,GAAIC,EAAQ,uCAElC,OAAOxH,MAAMsH,EAAK,CACdE,OAAQA,EACRvE,KAAM,OACNwE,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUT,KAEpBtH,MAAK,SAAAgI,GACFrI,QAAQC,IAAI0H,GACZ3H,QAAQC,IAAIoI,EAAS9H,QACrB,IAAI2J,EAAM,EAAKtJ,MAAMoJ,YACrBrC,EAAKkC,KAAO,0DACZK,EAAIC,KAAKxC,GACT,EAAKlH,SAAS,CAACuJ,YAAaE,IAC5B,EAAKnE,YAAY4B,EAAKO,W,8BAG1BkC,GACJ,GAAgB,4DAAZA,EACA,OAAOA,EAEP,IAAIP,EAAO,IAAIC,KAAKM,GAChBC,EAAQR,EAAKS,WACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAUV,EAAKW,aACfD,EAAU,KAAIA,EAAU,IAAIA,GAChC,IAAIE,EAAQZ,EAAKa,UACbD,EAAQ,KAAIA,EAAQ,IAAIA,GAC5B,IAAIE,EAAQd,EAAKe,WAEjB,OADID,EAAQ,KAAIA,EAAQ,IAAIA,GACrBF,EAAM,IAAIE,EAAM,IAAId,EAAKgB,cAAc,WAAMR,EAAM,IAAIE,I,oCAevD,IAAD,OACV,OAA0B,IAAtBxM,KAAK6C,MAAMF,OAEP,yBAAKc,MAAO,CAAEY,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAASC,KAAK,QAAQf,MAAO,CAAEgB,UAAW,OAI3CzE,KAAK6C,MAAMoJ,YAAYpH,KAAI,SAAArD,GAC9B,OACI,kBAAC,IAAD,CAAO4D,IAAK5D,EAAQ2B,IAAK+C,UAAW,QAChC,kBAAC,IAAD,CACIT,YAAa,EAAKkH,QAAQnL,EAAQsK,MAClCjG,OAAS,kBAAC,IAAD,CAAQrB,KAAM,GAAIsB,IAAKtE,EAAQJ,KAAKkC,cAE5C9B,EAAQJ,KAAK4E,UAAU,IAAIxE,EAAQJ,KAAK6E,UAE7C,kBAAC,IAAD,CAAMgF,WAAS,GAAEzJ,EAAQ2I,MACzB,kBAAC,IAAD,KAAM,kBAAC,IAAD,CAAS7E,KAAK,WAAd,yCAAiC9D,EAAQgC,OAAzC,oBACN,kBAAC,IAAD,Y,iCAMR,IAAD,OAEP,OAAIxD,KAAKC,MAAMiD,aAAamC,QAAUrF,KAAKC,MAAMmB,KAAKiE,MAE9C,kBAAC,IAAD,CAAK5B,MAAO,CAACG,SAAU,GAAIC,MAAO,aAAlC,8OAG4B,IAA3B7D,KAAK6C,MAAM6I,YAEZ,kBAAC,IAAD,CAAKjI,MAAO,CAACG,SAAU,GAAIC,MAAO,aAAlC,8OAIA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIkJ,KAAM,EACNC,IAAK,EACLC,IAAK,EACLxG,MAAOzB,OAAOhF,KAAK6C,MAAMW,QACzB8F,SAAU,SAAA9F,GAAM,OAAI,EAAKd,SAAS,CAACc,YACnC0J,IAAI,+HAER,kBAAC,IAAD,CAAS5H,KAAK,WAAd,kEAAsCtF,KAAK6C,MAAMW,QACjD,kBAAC,IAAD,CACIgD,KAAM,OACNC,MAAOzG,KAAK6C,MAAMsH,KAClBvD,OAAQ5G,KAAK6C,MAAMsH,KAAKrH,OAAS,GAAK,QAAU,QAChDqK,OAAQnN,KAAK6C,MAAMsH,KAAKrH,OAAS,GAAK,GAAK,wJAAgC9C,KAAK6C,MAAMsH,KAAKiD,QAAQ,KAAM,IAAItK,OAAO,mBACpHoK,IAAK,oGACLG,YAAY,iVACZ/D,SAAUtJ,KAAKqG,eAEnB,kBAAC,IAAD,CAAYtG,QAAS,kBAAM,EAAK0L,eAAe5F,OAAQ,kBAAC,IAAD,OAAvD,sF,+BAUZ,OACQ,kBAAC,IAAD,KACK7F,KAAKsN,cACN,kBAAC,IAAD,KAAStN,KAAKuN,YACbvN,KAAK6C,MAAMwF,c,GAtLN/H,IAAMC,Y,0BE4FjBiN,E,YAjGX,WAAavN,GAAQ,IAAD,8BAChB,4CAAMA,KAMVwN,OAAS,WACLzK,IAAOC,KAAK,oBAAqB,CAC7ByK,SAAU,aATE,EAYpBC,SAAW,WACP,OACI,kBAAC,IAAD,CACIjJ,KAAM,kBAAC,IAAD,CAAQoB,IAAI,2FAA2FtB,KAAM,KACnHG,OAAO,wCACPC,OAAQ,kBAAC,IAAD,CAAQ7E,QAAS,EAAK0N,OAAQjJ,KAAK,KAAnC,iGAHZ,q3BAXJ,EAAK3B,MAAQ,CACT+K,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAJX,E,sEAiChB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaC,SAAS,UAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMrJ,KAAK,KACP,kBAAC,IAAD,CACMgB,MAAM,kEACNC,aACiC,IAA7BzF,KAAKC,MAAMmB,KAAK0M,SAAqB,2EAAiB,4HAG1DjI,OAAQ,kBAAC,IAAD,CAAQC,IAAK9F,KAAKC,MAAMmB,KAAKkC,WAAYkB,KAAM,KACvDA,KAAK,KACTxE,KAAKC,MAAMmB,KAAK4E,UARlB,IAQ8BhG,KAAKC,MAAMmB,KAAK6E,WAEhB,IAA7BjG,KAAKC,MAAMmB,KAAK0M,UACb,kBAAC,IAAD,CACI7C,WAAS,EACTlL,QAASC,KAAKC,MAAM8N,QACpBlI,OAAQ,kBAAC,IAAD,MACRN,YAAU,GAJd,0SAYfvF,KAAK2N,gB,GA9DHrN,IAAMC,WCiNVyN,E,YAxNX,WAAY/N,GAAQ,IAAD,8BACf,4CAAMA,KAwBVgO,UAAY,WACR,IAAIC,EAAM,CACNC,OAAQ,GACRpN,SAAU,IAEG,EAAK8B,MAAM6C,WACjBb,KAAI,SAAC9D,EAAU4G,GACP5G,EAASoN,OAAOC,QAC3B,SAASD,GACL,OAAsB,IAAlBA,EAAOE,QACPH,EAAIC,OAAO/B,KAAK+B,EAAOhL,KAChBgL,EAAOE,QAEP,QAINvL,OAAS,GAClBoL,EAAInN,SAASqL,KAAK,CAAChK,GAAIrB,EAASoC,IAAKwC,MAAO5E,EAAS4E,QACrD5E,EAASsN,QAAS,GAElBtN,EAASsN,QAAS,KAI1B,IAAIlN,EAAS,CACT6E,UAAW,EAAK/F,MAAMmB,KAAK4E,UAC3BC,SAAU,EAAKhG,MAAMmB,KAAK6E,SAC1BR,YAAa,EAAK5C,MAAM4C,YACxBJ,MAAO,EAAKpF,MAAMmB,KAAKiE,MACvB8D,KAAM,EAAKtG,MAAMsG,KACjB7F,WAAY,EAAKrD,MAAMmB,KAAKkC,WAC5BgL,IAAK,EAAKrO,MAAMmB,KAAKkN,IACrBC,SAAU,EAAKtO,MAAMmB,KAAKmN,SAE1B7I,WAAYwI,EACZ3D,MAAO,EAAK1H,MAAM0H,OAEtBpJ,EAAOoN,SAASpM,KAAO,EAAKlC,MAAMuO,WAClC,EAAKvO,MAAMwO,SAAStN,IAhEL,EA0EnBuN,YAAc,WACN1L,IAAOC,KAAK,iCAAkC,CAAC,SAAY,UAAW,IAAO,oBACxEX,MAAK,SAAAc,GACFnB,QAAQC,IAAIkB,GACZ,EAAKV,SAAS,CAACiM,cAAevL,EAAOA,YAExCmF,OAAM,SAAAC,GAAC,OAAIvG,QAAQC,IAAIsG,OAhFjB,EAkFnBoG,YAAc,SAAAtI,GACV,IAAMC,EAASD,EAAMC,OACfsI,EAAWtI,EAAOC,KAClBsI,EAAcvI,EAAOnE,GACvBsD,EAAa,EAAK7C,MAAM6C,WAC5BA,EAAWmJ,GAAUV,OAAOW,GAAaT,QAAU,EAAKxL,MAAM6C,WAAWmJ,GAAUV,OAAOW,GAAaT,OACvG,EAAK3L,SAAS,CAACgD,WAAYA,KAxFZ,EA0FnBqJ,QAAU,SAACpH,GAUP,OATgB,EAAK9E,MAAM6C,WAAWiC,GAAOwG,OAAOC,QAChD,SAASpD,GACL,OAAoB,IAAhBA,EAAKqD,OACErD,EAAKqD,OAEL,QAIFvL,QAlGjB,EAAKD,MAAQ,CACToB,MAAO,GACPf,aAAc,GACdwC,WAAY,GACZsJ,aAAa,EACbL,eAAe,GAEnB,EAAKtI,aAAe,EAAKA,aAAa4I,KAAlB,gBATL,E,iFAWE,IAAD,OAChBjP,KAAK0O,cACLrM,MAAM5B,EAAQM,SAASa,QAClBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAoD,GACF,EAAKhD,SAAS,CAACgD,WAAYA,IAC3BA,EAAWb,KAAI,SAAA9D,GACX,EAAK2B,SAAL,eAAgB3B,EAASoC,KAAM,OAEnClB,QAAQC,IAAI,gBAAiB,EAAKW,Y,mCAkFlCyD,GAAQ,IAAD,EACKA,EAAMC,OAArBC,EADU,EACVA,KAAMC,EADI,EACJA,MACXzG,KAAK0C,SAAL,eAAgB8D,EAAOC,M,+BAGlB,IAAD,OACJ,OACY,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIjC,KAAK,IACLiB,YAAY,gHACZI,OAAQ,kBAAC,IAAD,CAAQC,IAAK9F,KAAKC,MAAMmB,KAAKkC,WAAYkB,KAAM,MAEtDxE,KAAKC,MAAMmB,KAAK4E,UAAY,IAAMhG,KAAKC,MAAMmB,KAAK6E,UASvD,kBAAC,IAAD,CACIV,YAAU,EACVxF,QAASC,KAAKC,MAAMiP,WACpBzE,UAAWzK,KAAKC,MAAMuO,WAAWnO,OAAS,oDAC1CuG,OAAQ5G,KAAKC,MAAMuO,WAAWnO,MAAQ,QAAU,QAChD8M,OAAQnN,KAAKC,MAAMuO,WAAWnO,MAAQ,GAAK,+MAL/C,qDASA,kBAAC,IAAD,CACIkF,YAAU,EACV0F,WAAS,EACTlL,QAASC,KAAK0O,YACdjJ,YAAY,iMACZmB,QAAqC,IAA7B5G,KAAK6C,MAAM8L,cAAyB,QAAU,QACtDxB,QAAqC,IAA7BnN,KAAK6C,MAAM8L,eAA2B,2LANlD,qRAOmF,IAA5B3O,KAAK6C,MAAM8L,cAAwB,mDAAa,iEACvG,kBAAC,IAAD,CACInI,KAAM,cACNI,OAAQ5G,KAAK6C,MAAM4C,YAAc,QAAU,QAC3C0H,OAAQnN,KAAK6C,MAAM4C,YAAc,GAAK,mMACtCyH,IAAI,kCACJzG,MAAOzG,KAAK6C,MAAM4C,YAClB6D,SAAUtJ,KAAKqG,eACnB,kBAAC,IAAD,CAAiB6G,IAAI,0GACJC,OAAO,mbACP/K,GAAI,YAEjBpC,KAAK6C,MAAM6C,WAAWb,KAAI,SAAC9D,EAAUoO,GACjC,OACI,kBAAC,IAAD,CAAO/J,IAAKrE,EAASoC,KACjB,kBAAC,IAAD,CAAMoC,YAAU,EAACiB,KAAMzF,EAASoC,IAC1BpD,QAAS,kBAAM,EAAK2C,SAAL,eAAgB3B,EAASoC,KAAO,EAAKN,MAAM9B,EAASoC,QACnEsH,UACI,+CAAc,EAAKsE,QAAQI,IAEhCpO,EAAS4E,OAEb,EAAK9C,MAAM9B,EAASoC,MACrB,kBAAC,IAAD,KAEQpC,EAASoN,OAAOtJ,KAAI,SAACuK,EAAazH,EAAO5G,GACrC,OACI,kBAAC,IAAD,CACIqE,IAAKuC,EACL0H,aACI,kBAAC,IAAD,CACA7I,KAAM2I,EACN/M,GAAIuF,EACJ2B,SAAU,EAAKsF,YACfU,QAASF,EAAYf,UAExBe,EAAYzJ,gBAYjD,kBAAC,IAAD,CACIa,KAAM,OACNC,MAAOzG,KAAK6C,MAAMsG,KAClBvC,OAAQ5G,KAAK6C,MAAMsG,KAAO,QAAU,QACpCgE,OAAQnN,KAAK6C,MAAMsG,KAAO,GAAK,8MAC/BG,SAAUtJ,KAAKqG,aACfgH,YAAY,uJACZ,4BAAQ5G,MAAM,sEAAd,sEACA,4BAAQA,MAAM,mFAAd,oFAGoB,uEAApBzG,KAAK6C,MAAMsG,MACX,kBAAC,IAAD,CAAiB+D,IAAI,gTACjB,kBAAC,IAAD,CAAO1G,KAAM,QAAS2C,KAAK,OAAO1C,MAAOzG,KAAK6C,MAAM0H,MAAOjB,SAAUtJ,KAAKqG,gBAGlF,kBAAC,IAAD,CAAUiD,SAAU,kBAAM,EAAK5G,SAAS,CAAC6M,cAAe,EAAK1M,MAAM0M,iBAAnE,sDACM,kBAAC,IAAD,4MACLvP,KAAK6C,MAAM0M,cAAgBvP,KAAK6C,MAAM8L,eAAiB3O,KAAK6C,MAAM4C,aAAezF,KAAK6C,MAAMsG,MAC7F,kBAAC,IAAD,CAAQ3E,KAAK,KAAKzE,QAASC,KAAKiO,WAAhC,8K,GAjNP3N,IAAMC,W,wHCiHZiP,G,YA1GX,WAAYvP,GAAQ,IAAD,8BACf,4CAAMA,KACD4C,MAAQ,CACT4M,YAAY,EACZrO,KAAM,EAAKnB,MAAMmB,KACjBsO,QAAS,GACT5B,UAAU,EACV6B,QAAQ,EACRrI,QAAS,GACTsI,WAAY,GACZrI,UAAW,GAVA,E,iFAeftF,QAAQC,IAAIlC,KAAK6C,MAAMzB,Q,iCAEI,IAAtBuI,EAAqB,uDAAf,GAAIC,EAAW,uDAAJ,GAEtB,OAAOvH,MAAMsH,EAAK,CACdE,OAAQ,OACRvE,KAAM,OACNwE,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUT,KAEpBtH,MAAK,SAAAgI,GAAQ,OAAIrI,QAAQC,IAAIoI,EAAS9H,a,+BAGtC,IAAD,OACJ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIgC,KAAK,IACLiB,YAAazF,KAAK6C,MAAMzB,KAAKwF,OAC7Bf,OAAQ,kBAAC,IAAD,CAAQC,IAAK9F,KAAK6C,MAAMzB,KAAKkC,WAAYkB,KAAM,MAEtDxE,KAAK6C,MAAMzB,KAAK4E,UAAU,IAAIhG,KAAK6C,MAAMzB,KAAK6E,UAE/C,kBAAC,IAAD,CAAO5F,MAAM,mDAAW6F,UAAW,QAC/B,kBAAC,IAAD,CAEInG,QAAS,kBAAM,EAAK2C,SAAS,CAAEmN,YAAa,aAC5CzO,KAAMpB,KAAK6C,MAAMzB,KACjBqJ,UAAWzK,KAAK6C,MAAMzB,KAAKmN,SAASpM,KAAK9B,OAJ7C,qDAMA,kBAAC,IAAD,CAAWoD,MAAO,CAAEC,OAAQ,YAC5B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI6B,YAAU,EACVM,OAAQ,kBAAC,KAAD,MACR9F,QAASC,KAAKC,MAAM6P,eAHxB,0DAKA,kBAAC,IAAD,CACIvK,YAAU,EACVM,OAAQ,kBAAC,KAAD,MACR9F,QAAS,kBAAM,EAAK2C,SAAS,CAAEmN,YAAa,aAC5CpF,UAAW,uEAJf,6DAQXzK,KAAK6C,MAAMzB,KAAK0M,UACb,kBAAC,IAAD,CAAOzN,MAAM,uEACb,kBAAC,IAAD,CAAWoD,MAAO,CAAEC,OAAQ,YAC5B,kBAAC,IAAD,KACA,kBAAC,IAAD,CACI6B,YAAU,EACVM,OAAQ,kBAAC,KAAD,MACR9F,QAAS,kBAAM,EAAK2C,SAAS,CAAEmN,YAAa,aAC5CpF,UAAW,uEAJf,2DAMA,kBAAC,IAAD,CACIlF,YAAU,EACVM,OAAQ,kBAAC,IAAD,MACR9F,QAAS,kBAAM,EAAK2C,SAAS,CAAEmN,YAAa,aAC5CpF,UAAW,uEAJf,wCAMA,kBAAC,IAAD,CACIlF,YAAU,EACVM,OAAQ,kBAAC,KAAD,MACR9F,QAASC,KAAKC,MAAM8P,iBAHxB,0DAKI,kBAAC,IAAD,CACIxK,YAAU,EACVM,OAAQ,kBAAC,KAAD,MACR9F,QAASC,KAAKC,MAAM+P,eAHxB,uEAKJ,kBAAC,IAAD,CACIzK,YAAU,EACVxF,QAASC,KAAKC,MAAMgQ,YACpBpK,OAAQ,kBAAC,KAAD,OAHZ,iE,GA9FHvF,IAAMC,W,wCCuLR6F,G,YAzLX,WAAYnG,GAAQ,IAAD,8BACf,4CAAMA,KAwCVyB,YAAc,WACV,EAAKgB,SAAS,CAACwN,SAAS,IACxB,IAAMC,EAAW,IAAIC,SACjBC,EAAeC,SAASC,eAAe,SAASC,MAAM,GAC1DL,EAASM,OAAO,SAAU,EAAK5N,MAAMK,aAAa8C,UAAU,IAAI,EAAKnD,MAAMK,aAAa+C,UACxFkK,EAASM,OAAO,YAAa,EAAK5N,MAAM6N,WACxCP,EAASM,OAAO,QAAS,EAAK5N,MAAM8N,OACpCR,EAASM,OAAO,QAASJ,GACzBhO,MAAM5B,EAAQgB,MAAMC,YAAa,CACzBmI,OAAQ,OACRM,KAAMgG,IAEL7N,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgI,GACF,EAAKsG,UAAUtG,EAAS3J,SAExBkQ,KAAWvG,EAASwG,QAAS,CACzBxL,KAAM,UACNuE,OAAQ,QAEPvH,MAAK,SAAAc,GAAM,OAAIA,EAAOZ,UACtBF,MAAK,SAAAc,GAEF,IAAI2N,EAAS3N,EAAOkH,SAAS,GAAG0G,MAAM,GAAGrH,IACrCsH,EAAS,EAAKpO,MAAMsI,OACxB8F,EAAOC,QAAQH,GACf,EAAKrO,SAAS,CAACyI,OAAQ8F,IACvB,IAAIrH,EAAO,CACP/B,SAAU,EAAKhF,MAAMK,aAAaC,IAClC4N,OAAQA,GAGZ1O,MAAM5B,EAAQgB,MAAME,UAAW,CAC3B2D,KAAM,OACNwE,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBH,OAAQ,OACRM,KAAMC,KAAKC,UAAUT,GACrBK,SAAU,SACVC,SAAU,gBAET5H,MAAK,SAAAc,GAAM,OAAIA,EAAOZ,UACtBF,MAAK,SAAAc,GACF,EAAKwN,UAAUxN,EAAOzC,SACtB,EAAK+B,SAAS,CAACwN,SAAS,OAE3B3H,OAAM,SAAA4I,GAAK,OAAI,EAAKP,UAAUO,SAGlC5I,OAAM,SAAA4I,GAAK,OAAI,EAAKP,UAAUO,SAE1C5I,OAAM,SAAA4I,GAAK,OAAI,EAAKP,UAAUO,OAhGxB,EAmGnBC,gBAAkB,SAACT,GACf3N,IAAOC,KAAK,wBAAyB,CACjC,OAAU,yBACV,OAAU,CAAC,SAAY,YAAY,SAAY,YAAa,EAAI,QAAS,aAAgB0N,KACxFrO,MAAK,SAAAc,GAEF,EAAKV,SAAS,CAACgO,UAAWtN,EAAOkH,SAAS+G,WAAYV,MAAOA,OAEhEpI,OAAM,SAAAC,GAAC,OAAIvG,QAAQC,IAAIsG,OA3Gb,EAqHnB8I,SAAW,WACPtO,IAAOC,KAAK,uBAAwB,CAAC,OAAU,QAAS,MAAS,WAC5DX,MAAK,SAAAsH,GAEF,EAAKwH,gBAAgBxH,EAAK2H,iBAG7BhJ,OAAM,SAAA4I,GAAK,OAAIlP,QAAQC,IAAIiP,OA1HhC,EAAKtO,MAAQ,CACT0G,eAAgB,EAAKtJ,MAAMsJ,eAC3BrG,aAAc,GACdsO,SAAU,GACV7O,QAAQ,EACR8O,UAAW,GACXtG,OAAQ,IARG,E,iFAWE,IAAD,OAChBnL,KAAKsR,WACLrP,QAAQC,IAAIlC,KAAKC,OACjBoC,MAAM5B,EAAQG,QAAQI,MAAQhB,KAAKC,MAAMmB,KAAKiE,OACzC/C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAY,GACH,EAAKR,SAAS,CAACQ,aAAcA,EAAa,GAAIiI,OAAQjI,EAAa,GAAGwH,OAAOU,UAAWzI,QAAQ,IAChGV,QAAQC,IAAIgB,EAAa,S,gCAGzBuG,GAAO,IAAD,OAITzJ,KAAK6C,MAAMwF,UACfrI,KAAK0C,SAAS,CAAE2F,SACR,kBAAC,IAAD,CACIU,OAAO,WACPC,QAAS,kBAAM,EAAKtG,SAAS,CAAE2F,SAAU,SAExCoB,O,qCAIF0B,EAAQxD,GACnB3E,IAAOC,KAAK,qBAAsB,CAC9BkI,OAAQA,EACRE,YAAa1D,IACdrF,MAAK,SAAAsH,GAAI,OAAI3H,QAAQC,IAAI0H,Q,kCAuFnB,IAAD,OACR,OAAI5J,KAAK6C,MAAMsI,OAAOrI,OAAS,EAEvB,kBAAC,IAAD,KAEQ9C,KAAK6C,MAAMsI,OAAOtG,KAAI,SAACyG,EAAO3D,GAE1B,OACI,kBAAC,IAAD,CACInD,KAAK,IACLc,KAAK,SACLF,IAAKuC,EACL5H,QAAS,kBAAM,EAAKwL,eAAe,EAAK1I,MAAMsI,OAAQxD,KAEtD,yBAAKlE,MAAO,CAACwD,OAAQ,GAAI4D,gBAAiB,OAAOS,EAAM,IAAKR,eAAgB,gBAQ5F,kBAAC,IAAD,uL,+BAKZ,OAAuB,IAApB9K,KAAK6C,MAAMF,OAEN,kBAAC,IAAD,CAAS6B,KAAK,QAAQf,MAAO,CAAEgB,UAAW,MAI1C,kBAAC,IAAD,KAEQzE,KAAK6C,MAAMqN,QAAU,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAMjF,WAAS,GAAf,wOAAkE,kBAAC,IAAD,OAAwB,kBAAC,IAAD,CAAO5K,MAAM,IAC7H,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI6M,IAAI,0IACJrH,OAAQ,kBAAC,KAAD,MACRrB,KAAK,IACL8E,SAAUtJ,KAAK0B,YACfU,GAAG,SALP,0FAUJ,kBAAC,IAAD,CAAO8D,UAAU,QACZlG,KAAKwL,cAIjBxL,KAAK6C,MAAMwF,c,GAnLN/H,IAAMC,W,oBCH1BmR,G,YAEF,WAAYzR,GAAQ,IAAD,8BACf,4CAAMA,KACD4C,MAAQ,CACT8O,OAAQ,GACRC,OAAQ,CAAC,CAACxP,GAAG,EAAG/B,MAAO,UAE3B,EAAKiJ,SAAW,EAAKA,SAAS2F,KAAd,gBAND,E,iFAcfjP,KAAK6R,c,kCAGI,IAAD,OACFF,EAAS3R,KAAK6C,MAAM8O,OAAOG,cAEjC9O,IAAOC,KAAK,wBAAyB,CACjC,OAAU,qBACV,OAAU,CACN,WAAc,EACd,EAAK0O,EACL,EAAK,QACL,aAPM,6EAUTrP,MAAK,SAAAc,GACFnB,QAAQC,IAAIkB,EAAOkH,UACnB,EAAK5H,SAAS,CAACkP,OAAQxO,EAAOkH,SAASyH,QAAQ,kBAAM,EAAK9R,MAAM+R,0BAEnEzJ,OAAM,SAAAC,GAAC,OAAIvG,QAAQC,IAAIsG,Q,+BAGvBA,GACLxI,KAAK0C,SAAS,CAACiP,OAAQnJ,EAAEjC,OAAOE,QAChCzG,KAAK6R,c,+BAGC,IAAD,OACL,OACI,kBAAC,IAAMI,SAAP,KACI,kBAAC,IAAD,CAAQxL,MAAOzG,KAAK6C,MAAM8O,OAAQrI,SAAUtJ,KAAKsJ,SAAUI,MAAO,OACjE1J,KAAK6C,MAAM+O,OAAO9O,OAAS,GAC5B,kBAAC,IAAD,KACK9C,KAAK6C,MAAM+O,OAAO/M,KAAI,SAAA1C,GAAI,OACvB,kBAAC,IAAD,CACIsD,YAAatD,EAAK+P,QAAU,GAC5BnS,QAAS,kBAAI,EAAKE,MAAMkS,iBAAiBhQ,IACzCiD,IAAKjD,EAAKC,IAETD,EAAK9B,gB,GAvDNC,IAAMC,WAgEnB6R,eAAsBV,ICtC/BhS,GAASC,cAET6P,G,YACF,WAAYvP,GAAQ,IAAD,8BACf,4CAAMA,KAwCVoS,YAAc,WACVpQ,QAAQC,IAAI,UACZ,EAAKoQ,UAAU7R,EAAQG,QAAQC,IAAM,EAAKgC,MAAMK,aAAaC,IAAK,EAAKN,MAAMK,cAC7E,EAAKjD,MAAMoI,SAAS,kHA5CL,EA0DnBhC,aAAe,SAACC,GACZ,EAAK5D,SAAL,eAAgB4D,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SA3DlC,EAsHnB8L,QAAU,SAAAjM,GACN,IACME,EADSF,EAAMC,OACDC,KAChBtD,EAAe,EAAKL,MAAMK,aAC9BA,EAAasD,IAAStD,EAAasD,GACnC,EAAK9D,SAAS,CAACQ,aAAcA,KA3Hd,EA6HnBsP,SAAW,SAAC7K,GACR,IAAIzE,EAAe,EAAKL,MAAMK,aAC9BA,EAAasG,UAAb,sBAA6B,EAAK3G,MAAMK,aAAasG,UAAUmB,MAAM,EAAGhD,IAAxE,YAAmF,EAAK9E,MAAMK,aAAasG,UAAUmB,MAAMhD,EAAQ,KACnI,EAAKjF,SAAS,CAACQ,aAAcA,IAC7B,EAAKoP,UAAU7R,EAAQG,QAAQC,IAAM,EAAKgC,MAAMK,aAAaC,IAAK,EAAKN,MAAMK,cAC7E,EAAK0N,UAAU,sGAlIA,EAoInB6B,QAAU,SAAC7L,GACP,EAAKlE,SAAS,CAACgQ,IAAK9L,KArIL,EAuInB+L,SAAW,SAACtS,EAAO8J,EAAMe,GAErB,IAAIhI,EAAe,EAAKL,MAAMK,aAC9BA,EAAasG,UAAU4C,KAAK,CACxB/L,MAAO,EAAKwC,MAAM+P,aAClBzI,KAAM,EAAKtH,MAAMgQ,YACjB3H,MAAO,EAAKrI,MAAMiQ,eAEtB,EAAKpQ,SAAS,CAACQ,aAAcA,IAC7B,EAAKR,SAAS,CAACgQ,KAAK,EAAOE,aAAc,GAAIC,YAAa,GAAIC,aAAc,KAE5E,EAAKR,UAAU7R,EAAQG,QAAQC,IAAM,EAAKgC,MAAMK,aAAaC,IAAK,EAAKN,MAAMK,eAlJ9D,EAqJnB6L,QAAU,SAACpH,GAUP,OATgB,EAAK9E,MAAM6C,WAAWiC,GAAOwG,OAAOC,QAChD,SAASpD,GACL,OAAoB,IAAhBA,EAAKqD,OACErD,EAAKqD,OAEL,QAIFvL,QA/JF,EAiKnBiQ,SAAW,WACP,OAA8C,IAA1C,EAAKlQ,MAAMK,aAAa8P,OAAOpM,OAE3B,kBAAC,IAAD,CAAMqE,WAAS,GAAf,oyBAIA,kBAAC,IAAD,CACIoE,aAAc,kBAAC,IAAD,CACV7I,KAAM,UACN8C,SAAU,EAAKiJ,QACfjD,QAAS,EAAKzM,MAAMK,aAAaqP,WAJzC,wJAxKO,EAmLnB3D,YAAc,SAAAtI,GACV,IAAMC,EAASD,EAAMC,OACfsI,EAAWtI,EAAOC,KAClBsI,EAAcvI,EAAOnE,GACvBsD,EAAa,EAAK7C,MAAM6C,WAC5BA,EAAWmJ,GAAUV,OAAOW,GAAaT,QAAU,EAAKxL,MAAM6C,WAAWmJ,GAAUV,OAAOW,GAAaT,OACnG,EAAKU,QAAQF,GAAY,EACzB,EAAKhM,MAAM6C,WAAWmJ,GAAUR,QAAS,EAEzC,EAAKxL,MAAM6C,WAAWmJ,GAAUR,QAAS,EAE7C,EAAK3L,SAAS,CAACgD,WAAYA,KA5L3B,EAAK7C,MAAQ,CACToQ,MAAO,WACPC,SAAS,EACTC,OAAQ,KACRnS,MAAO,GACPkC,aAAc,CACVsG,UAAW,GACX4J,aAAa,GAEjBnP,MAAO,CACHoP,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EACjBC,eAAgB,EAChBC,gBAAiB,EACjBC,WAAY,EACZC,eAAgB,GAEpB5S,SAAU,IApBC,E,iFAwBE,IAAD,OAChBkB,QAAQC,IAAIlC,KAAKC,OACjBoC,MAAM5B,EAAQM,SAASa,QAClBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAoD,GACFrD,MAAM5B,EAAQG,QAAQI,MAAQ,EAAKf,MAAMmB,KAAKiE,OACzC/C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAY,GACE,EAAKjD,MAAMuO,oBAAsBoF,SACjC1Q,EAAaqL,SAASpM,KAAO,EAAKlC,MAAMuO,YAE5C,EAAK9L,SAAS,CAACQ,aAAcA,EAAa,GAAIuC,YAAavC,EAAa,GAAGuC,YAAaC,WAAYA,IACpG,EAAKmO,UAAUnO,W,gCAWzBA,GAAY,IAAD,OACjBA,EAAWb,KAAI,SAAA9D,GACX,EAAK2B,SAAL,eAAgB3B,EAASoC,KAAM,IAC/BpC,EAASoN,OAAOtJ,KAAI,SAAAsJ,GACZ,EAAKtL,MAAMK,aAAawC,WAAWyI,OAAO2F,SAAS3F,EAAOhL,OAC1DgL,EAAOE,QAAS,W,kCAUQ,IAAD,OAA7B1E,EAA6B,uDAAvB,GAAIzG,EAAmB,uDAAJ,GAmB/B,OAlBAA,EAAauC,YAAczF,KAAK6C,MAAM4C,YACtCvC,EAAawC,WAAa,CACtByI,OAAQ,GACRpN,SAAU,IAEVf,KAAK6C,MAAM6C,WAAWb,KAAI,SAAA9D,IACE,IAApBA,EAASsN,QACTnL,EAAawC,WAAW3E,SAASqL,KAAK,CAAChK,GAAIrB,EAASoC,IAAKwC,MAAO5E,EAAS4E,QAE7E5E,EAASoN,OAAOtJ,KAAI,SAAAsJ,IACM,IAAlBA,EAAOE,QACPnL,EAAawC,WAAWyI,OAAO/B,KAAK+B,EAAOhL,WAI3DD,EAAaqL,SAASpM,KAAOnC,KAAKC,MAAMuO,WACxCvM,QAAQC,IAAIgB,GAELb,MAAMsH,EAAK,CACdE,OAAQ,QACRvE,KAAM,OACNwE,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUnH,KAEpBZ,MAAK,SAAAgI,GACFrI,QAAQC,IAAIoI,EAAS9H,QACrB,EAAKvC,MAAM8T,YACX,EAAK9T,MAAMoI,SAAS,sH,+BAgGtB,IAAD,OACL,OAAKrI,KAAK6C,MAAMK,aAAaC,IAQrB,kBAAC,IAAD,CACI6Q,YAAahU,KAAKC,MAAM+T,YACxBhL,QAAShJ,KAAKqS,aAEd,kBAAC,IAAD,CAAW4B,sBAAoB,EAC3B7R,GAAI,UACJ4G,QAAShJ,KAAKqS,YACd1N,OACI,kBAAC,IAAD,CACI7E,KAAMJ,KAAWwU,KACjB,kBAAC,IAAD,CAAmBnU,QAASC,KAAKqS,aAAc,0DAC/C8B,MAAO,kBAAC,IAAD,CAAmBpU,QAASC,KAAKqS,aAAc3S,KAAWS,IAAM,yDACnE,kBAAC,KAAD,QAJR,2DAUZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIqE,KAAK,IACLiB,YACIzF,KAAK6C,MAAMK,aAAaqP,QAAU,6JAAkC,gLAExE1M,OAAQ,kBAAC,IAAD,CAAQC,IAAK9F,KAAK6C,MAAMK,aAAaI,WAAYkB,KAAM,MAE9DxE,KAAK6C,MAAMK,aAAa8C,UAAY,IAAMhG,KAAK6C,MAAMK,aAAa+C,UAEvE,kBAAC,IAAD,CACIV,YAAU,EACVxF,QAAS,kBAAM,EAAKE,MAAMmU,YAAY,eACtC3J,UAAmC,wEAAxBzK,KAAKC,MAAMuO,WAA8BxO,KAAK6C,MAAMK,aAAaqL,SAASpM,KAAK9B,MAAQL,KAAKC,MAAMuO,WAAWnO,MACxH8M,OAAgC,wEAAxBnN,KAAKC,MAAMuO,WAA8B,GAAK,gVAJ1D,qDAQA,kBAAC,IAAD,KACKxO,KAAK+S,YAEV,kBAAC,IAAD,CAAO1S,MAAO,2DACgC,IAA7CL,KAAK6C,MAAMK,aAAasG,UAAU1G,QACnC,kBAAC,IAAD,CAAMmI,WAAS,GAAf,ufAEI,kBAAC,IAAD,KACHjL,KAAK6C,MAAMK,aAAasG,UAAU3E,KAAI,SAACmG,EAAMrD,GAAP,OAC/B,kBAAC,IAAD,CAAMnD,KAAK,IAAIc,KAAK,UAChB,kBAAC,IAAD,CACIF,IAAK4F,EACLC,WAAS,EAEToJ,WAAS,EACT7B,SAAU,WACN,EAAKA,SAAS7K,KAElB,kBAAC,IAAD,CACIlC,YAAY,2GAAsB,EAAK5C,MAAMK,aAAasG,UAAU7B,GAAOtH,OAC/E,kBAAC,IAAD,CAAMoF,YAAY,qJACZwF,WAAS,GAAE,EAAKpI,MAAMK,aAAasG,UAAU7B,GAAOwC,MAC1D,kBAAC,IAAD,CACI1E,YAAY,iJAA8B,EAAK5C,MAAMK,aAAasG,UAAU7B,GAAOuD,aAKtGlL,KAAK6C,MAAM6P,KACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMjN,YAAY,qJAA6BwF,WAAS,GACpD,kBAAC,IAAD,CACIqJ,SAAO,EACP9N,KAAK,eACL2C,KAAK,OACL1C,MAAOzG,KAAK6C,MAAM+P,aAClBvF,YAAa,8FACb/D,SAAUtJ,KAAKqG,eACnB,kBAAC,IAAD,CACIiO,SAAO,EACP9N,KAAK,cACLC,MAAOzG,KAAK6C,MAAMgQ,YAClBxF,YAAa,8FACb/D,SAAUtJ,KAAKqG,eACnB,kBAAC,IAAD,CACIiO,SAAO,EACP9N,KAAK,eACL2C,KAAK,SAAS1C,MAAOzG,KAAK6C,MAAMiQ,aAChCzF,YAAa,sEACb/D,SAAUtJ,KAAKqG,gBAEvB,kBAAC,IAAD,CAAK5C,MAAO,CAACY,QAAS,SAClB,kBAAC,IAAD,CAAQG,KAAK,IAAI+P,WAAS,EAAC9Q,MAAO,CAACqD,YAAa,GACxC/G,QAAS,kBAAM,EAAK4S,aAD5B,0DAEA,kBAAC,IAAD,CAAQnO,KAAK,IAAI+P,WAAS,EAACjP,KAAK,cACxBvF,QAAS,kBAAM,EAAK0S,SAAQ,KADpC,uDAMR,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI1S,QAAS,kBAAM,EAAK0S,SAAQ,IAC5B5M,OAAQ,kBAAC,IAAD,OAFZ,4GAKJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAY2O,SAAUxU,KAAKyU,cACvB,kBAAC,IAAD,CACIjO,KAAM,cACNI,OAAQ5G,KAAK6C,MAAM4C,YAAc,QAAU,QAC3C0H,OAAQnN,KAAK6C,MAAM4C,YAAc,GAAK,mMACtCyH,IAAI,kCACJzG,MAAOzG,KAAK6C,MAAM4C,YAClB6D,SAAUtJ,KAAKqG,gBAEvB,kBAAC,IAAD,CAAiB6G,IAAI,0GACJC,OAAO,mbACP/K,GAAI,YAEbpC,KAAK6C,MAAM6C,WAAWb,KAAI,SAAC9D,EAAUoO,GACjC,OACI,kBAAC,IAAD,CAAO/J,IAAKrE,EAASoC,KACjB,kBAAC,IAAD,CAAMoC,YAAU,EAACiB,KAAMzF,EAASoC,IAC1BpD,QAAS,kBAAM,EAAK2C,SAAL,eAAgB3B,EAASoC,KAAO,EAAKN,MAAM9B,EAASoC,QACnEsH,UACI,+CAAc,EAAKsE,QAAQI,IAEhCpO,EAAS4E,OAEb,EAAK9C,MAAM9B,EAASoC,MACrB,kBAAC,IAAD,KAEQpC,EAASoN,OAAOtJ,KAAI,SAACuK,EAAazH,EAAO5G,GACrC,OACI,kBAAC,IAAD,CACIqE,IAAKuC,EACL0H,aACI,kBAAC,IAAD,CACI7I,KAAM2I,EACN/M,GAAIuF,EACJ2B,SAAU,EAAKsF,YACfU,QAASF,EAAYf,UAE5Be,EAAYzJ,mBAezD,kBAAC,IAAD,CAAWsO,sBAAoB,EAC3B7R,GAAI,aACJ4G,QAAS,kBAAM,EAAK/I,MAAMmU,YAAY,YACtCzP,OACI,kBAAC,IAAD,CACI7E,KAAMJ,KAAWwU,KACjB,kBAAC,IAAD,CAAmBnU,QAAS,kBAAM,EAAKE,MAAMmU,YAAY,aAAa,kCACtED,MAAO,kBAAC,IAAD,CAAmBpU,QAAS,kBAAM,EAAKE,MAAMmU,YAAY,aAAa1U,KAAWS,IAAM,iCAC1F,kBAAC,KAAD,QAJR,wEAUJ,kBAAC,GAAD,CAAe8T,sBAAoB,EAC/B9B,iBAAkB,SAAChQ,GAAD,OAAU,EAAKlC,MAAMiP,WAAW/M,QAhL9D,yBAAKsB,MAAO,CAACY,QAAS,OAAQC,WAAY,SAAUC,cAAe,WACnE,kBAAC,IAAD,CAASC,KAAK,QAAQf,MAAO,CAACgB,UAAW,Y,GAtMxCnE,IAAMC,WA6XR6R,eAAsB5C,ICpUtBkF,G,YA/EX,WAAYzU,GAAQ,IAAD,8BACf,4CAAMA,KAYV0U,gBAAkB,SAACvT,GACfiB,MAAM5B,EAAQQ,KAAKG,KAAOA,EAAK+B,KAC1Bb,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgF,GACoB,IAAnBA,EAAQxE,OACP,EAAKJ,SAAS,CAACkS,UAAU,IAEzBtN,EAAQzC,KAAI,SAAA2C,GACRnF,MAAM5B,EAAQG,QAAQE,KAAO0G,EAAIK,UAC5BvF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAnB,GACF,IAAIyO,EAAa,EAAK/M,MAAM+M,WAC5BA,EAAWxD,KAAKjL,GAChB,EAAKuB,SAAS,CAACkN,WAAYA,EAAYgF,UAAU,cAxBzE,EAAK/R,MAAQ,CACTyE,QAAS,GACTsI,WAAY,GACZgF,UAAU,GALC,E,kFAUf5U,KAAK2U,gBAAgB3U,KAAKC,MAAMmB,Q,+BAwB1B,IAAD,OACL,OAA4B,IAAxBpB,KAAK6C,MAAM+R,SAEP,yBAAKnR,MAAO,CAACY,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAC/D,kBAAC,IAAD,CAASC,KAAK,QAAQf,MAAO,CAACgB,UAAW,OAIb,IAAjCzE,KAAK6C,MAAM+M,WAAW9M,OAEb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM0B,KAAK,IAAIc,KAAK,UAChB,kBAAC,IAAD,CAAM2F,WAAS,EAAC5B,MAAM,UAAtB,iIAOhBpH,QAAQC,IAAIlC,KAAK6C,MAAM+M,YAEnB5P,KAAK6C,MAAM+M,WAAW/K,KAAI,SAAA1D,GACtB,GAAgB,OAAXA,IAAwC,IAAnBA,EAAOoR,QAC7B,OACI,kBAAC,IAAD,CAAUnN,IAAKjE,EAAOgC,KAClB,kBAAC,IAAD,CAAMqB,KAAK,IAAIc,KAAK,UAChB,kBAAC,IAAD,CAAMC,YAAU,EACVC,MAAOrE,EAAOmC,WACdmC,YAAatE,EAAOgI,KACpBtD,OAAQ,kBAAC,IAAD,CAAQC,IAAK3E,EAAOmC,WAAYkB,KAAM,KAC9CA,KAAK,IACLzE,QAAS,kBAAM,EAAKE,MAAM4U,kBAAkB1T,EAAOgC,OACvDhC,EAAO6E,UANT,IAMqB7E,EAAO8E,oB,GAnE5C3F,IAAMC,WCkFfuU,G,YApFX,WAAY7U,GAAQ,IAAD,8BACf,4CAAMA,KA0BV8C,MAAQ,WACJC,IAAOC,KAAK,gBAAiB,CAAC,KAAQ,0CACjCX,MAAK,SAAAc,GAAM,OAAI,EAAKC,gBAAgB,4JAAgC,EAAKR,MAAMK,aAAaI,gBA7BlF,EA+BnByR,SAAW,WACP,OAAkC,IAA9B,EAAKlS,MAAMmS,QAAQlS,OAEf,kBAAC,IAAD,CACI4B,KAAM,kBAAC,IAAD,MACNC,OAAO,0GACPC,OAAQ,kBAAC,IAAD,CAAQ7E,QAAS,EAAKgD,MAAOyB,KAAK,KAAlC,iEAHZ,gIAK8B,EAAKvE,MAAMmB,KAAKmN,SAASpM,KAAK9B,MAL5D,irBAWA,EAAKwC,MAAMmS,QAAQnQ,KAAI,SAAAoQ,GACnB,OACI,kBAAC,IAAD,CAAO7P,IAAK6P,EAAK9R,KACb,kBAAC,IAAD,CAAWM,MAAO,CAAEC,OAAQ,YAC5B,kBAAC,IAAD,CAAM6B,YAAU,EACVC,MAAM,kEAENK,OAAQ,kBAAC,IAAD,CAAQC,IAAKmP,EAAK3R,WAAYkB,KAAM,KAC5CA,KAAK,IACLzE,QAAS,kBAAM,EAAKE,MAAMiV,eAAeD,EAAKpN,WAC9CsF,OAAO,IACX8H,EAAKjP,UAPP,IAOmBiP,EAAKhP,UAExB,kBAAC,IAAD,CAAMgF,WAAS,GACVgK,EAAK9K,WAzD9B,EAAKtH,MAAQ,CACT9B,SAAU,EAAKd,MAAMc,SACrB0B,YAAa,GACbpC,MAAO,GACPc,OAAQ,CACJkE,MAAO,WACP/B,WAAY,kEACZ0C,UAAW,6CACXC,SAAU,8CAEd+O,QAAS,GACTrS,QAAQ,GAbG,E,iFAgBE,IAAD,OAChBV,QAAQC,IAAIlC,KAAKC,MAAMmB,MACvBiB,MAAM5B,EAAQY,UAAUE,OAAOvB,KAAKC,MAAMmB,KAAKmN,SAASpM,KAAKC,IACxDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA2S,GACFhT,QAAQC,IAAI+S,GACZ,EAAKvS,SAAS,CAACsS,QAASC,IACxBhT,QAAQC,IAAI,8CAAW+S,EAAKnS,QAC5B,EAAKJ,SAAS,CAACC,QAAQ,S,+BA2C1B,IAAD,OACJ,OAA0B,IAAtB3C,KAAK6C,MAAMF,OACH,kBAAC,IAAD,CAAS6B,KAAK,QAAQf,MAAO,CAAEgB,UAAW,MAG9C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAEI1E,QAAS,kBAAM,EAAK2C,SAAS,CAAEmN,YAAa,aAC5CpF,UAAWzK,KAAKC,MAAMmB,KAAKmN,SAASpM,KAAK9B,OAH7C,qDAICL,KAAK+U,gB,GA9EFzU,IAAMC,WCyJf4U,G,YAhJX,WAAYlV,GAAQ,IAAD,8BACf,4CAAMA,KA4CVoG,aAAe,SAACC,GAAW,IAAD,EACFA,EAAMC,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACX,EAAK/D,SAAL,eAAgB8D,EAAOC,KA/CR,EAiDnB2O,KAAK,WACD,IAAIH,EAAO,CACPpN,SAAU,EAAKhF,MAAM1B,OAAOgC,IAC5BgH,KAAM,EAAKtH,MAAMsH,KACjBoE,SAAU,EAAK1L,MAAM1B,OAAOoN,SAC5BvI,UAAW,EAAKnD,MAAM1B,OAAO6E,UAC7BC,SAAU,EAAKpD,MAAM1B,OAAO8E,SAC5B3C,WAAY,EAAKT,MAAM1B,OAAOmC,YAGlC,GADArB,QAAQC,IAAIzB,EAAQY,UAAUH,IAAI,EAAK2B,MAAMwS,SAASlS,KAClD,EAAKN,MAAMwS,SAASlS,IAAK,CACzB,EAAKmP,UAAU7R,EAAQY,UAAUH,IAAI,EAAK2B,MAAMwS,SAASlS,IAAK8R,GAC9D,IAAIK,EACA,kBAAC,IAAD,KACI,kBAAC,IAAD,2GACA,kBAAC,IAAD,CAAW7R,MAAO,CAAEC,OAAQ,YAC5B,kBAAC,IAAD,CAAM6B,YAAU,EACVC,MAAM,kEACNC,YAAa,OACbI,OAAQ,kBAAC,IAAD,CAAQC,IAAK,EAAKjD,MAAM1B,OAAOmC,WAAYkB,KAAM,KACzDA,KAAK,KACT,EAAK3B,MAAM1B,OAAO6E,UALpB,IAKgC,EAAKnD,MAAM1B,OAAO8E,UAElD,kBAAC,IAAD,CAAMgF,WAAS,GACVgK,EAAK9K,OAIlB,EAAKzH,SAAS,CAAC4S,WAAYA,SAE3B,EAAKvN,SAAStH,EAAQY,UAAUH,IAAK+T,IA7EzC,EAAKpS,MAAQ,CACT1B,OAAQ,GACRgJ,KAAM,GACNkL,SAAU,GACVT,UAAU,GANC,E,iFASE,IAAD,OAChBvS,MAAM5B,EAAQG,QAAQI,MAAMhB,KAAKC,MAAMmB,KAAKiE,OACvC/C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAnB,GACF,EAAKuB,SAAS,CAACvB,OAAQA,EAAO,KAC9BkB,MAAM5B,EAAQY,UAAUC,WAAWH,EAAO,GAAGgC,KACxCb,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA2S,GAEF,GADA,EAAKvS,SAAS,CAACsS,QAASC,EAAML,UAAU,IACpCK,EAAKnS,OAAS,EAAG,CACjB,EAAKJ,SAAS,CAACyH,KAAM8K,EAAK,GAAG9K,KAAMkL,SAAUJ,EAAK,KAClD,IAAIK,EACA,kBAAC,IAAD,KACI,kBAAC,IAAD,2GACA,kBAAC,IAAD,CAAW7R,MAAO,CAAEC,OAAQ,YAC5B,kBAAC,IAAD,CAAM6B,YAAU,EACVC,MAAM,kEACNC,YAAa,OACbI,OAAQ,kBAAC,IAAD,CAAQC,IAAK,EAAKjD,MAAM1B,OAAOmC,WAAYkB,KAAM,KACzDA,KAAK,KACT,EAAK3B,MAAM1B,OAAO6E,UALpB,IAKgC,EAAKnD,MAAM1B,OAAO8E,UAElD,kBAAC,IAAD,CAAMgF,WAAS,GACV,EAAKpI,MAAMmS,QAAQ,GAAG7K,OAInC,EAAKzH,SAAS,CAAC4S,WAAYA,QACxB,CACH,IAAIA,EAAa,kBAAC,IAAD,iJACjB,EAAK5S,SAAS,CAAC4S,WAAYA,a,kCA2CnB,IAAD,OAArB3L,EAAqB,uDAAf,GAAIC,EAAW,uDAAJ,GACvB,OAAOvH,MAAMsH,EAAK,CACdE,OAAQ,QACRvE,KAAM,OACNwE,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUT,KAEpBtH,MAAK,SAAAgI,GACFrI,QAAQC,IAAIoI,EAAS9H,QACrB,EAAKvC,MAAMkT,c,iCAGQ,IAAtBxJ,EAAqB,uDAAf,GAAIC,EAAW,uDAAJ,GAEtBvH,MAAMsH,EAAK,CACPE,OAAQ,OACRvE,KAAM,OACNwE,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUT,KAEpBtH,KAAKsH,GACLtH,MAAK,SAAAgI,GAAQ,OAAIrI,QAAQC,IAAIoI,EAAS9H,a,+BAI3C,OAA4B,IAAxBxC,KAAK6C,MAAM+R,SACH,kBAAC,IAAD,CAASpQ,KAAK,QAAQf,MAAO,CAAEgB,UAAW,MAG9C,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,4GACA,kBAAC,IAAD,CACI+B,KAAM,OACN2G,OAAQnN,KAAK6C,MAAMsH,KAAO,GAAK,mMAC/B+C,IAAI,kCACJzG,MAAOzG,KAAK6C,MAAMsH,KAClBb,SAAUtJ,KAAKqG,gBAEvB,kBAAC,IAAD,CAAQ7B,KAAK,KAAKzE,QAASC,KAAKoV,MAAhC,0DACCpV,KAAK6C,MAAMyS,gB,GAzIFhV,IAAMC,WCV9BgV,G,YAEF,WAAYtV,GAAQ,IAAD,8BACf,4CAAMA,KACD4C,MAAQ,CACT8O,OAAQ,GACRC,OAAQ,CAAC,CAACxP,GAAG,EAAG/B,MAAO,UAE3B,EAAKiJ,SAAW,EAAKA,SAAS2F,KAAd,gBAND,E,iFAcfjP,KAAK6R,c,kCAGI,IAAD,OACFF,EAAS3R,KAAK6C,MAAM8O,OAAOG,cAEjC9O,IAAOC,KAAK,wBAAyB,CACjC,OAAU,qBACV,OAAU,CACN,WAAc,EACd,EAAK0O,EACL,EAAK,QACL,aAPM,6EAUTrP,MAAK,SAAAc,GACFnB,QAAQC,IAAIkB,EAAOkH,UACnB,EAAK5H,SAAS,CAACkP,OAAQxO,EAAOkH,SAASyH,QAAQ,kBAAM,EAAK9R,MAAM+R,0BAEnEzJ,OAAM,SAAAC,GAAC,OAAIvG,QAAQC,IAAIsG,Q,+BAGvBA,GACLxI,KAAK0C,SAAS,CAACiP,OAAQnJ,EAAEjC,OAAOE,QAChCzG,KAAK6R,c,+BAGC,IAAD,OACL,OACI,kBAAC,IAAMI,SAAP,KACI,kBAAC,IAAD,CAAQxL,MAAOzG,KAAK6C,MAAM8O,OAAQrI,SAAUtJ,KAAKsJ,SAAUI,MAAO,OACjE1J,KAAK6C,MAAM+O,OAAO9O,OAAS,GAC5B,kBAAC,IAAD,KACK9C,KAAK6C,MAAM+O,OAAO/M,KAAI,SAAA1C,GAAI,OACvB,kBAAC,IAAD,CACIsD,YAAatD,EAAK+P,QAAU,GAC5BnS,QAAS,kBAAI,EAAKE,MAAMkS,iBAAiBhQ,IACzCiD,IAAKjD,EAAKC,IAETD,EAAK9B,gB,GAvDXC,IAAMC,WAgEd6R,eAAsBmD,ICjDrC,SAASxN,KAA+B,IAAtB4B,EAAqB,uDAAf,GAAIC,EAAW,uDAAJ,GAE/BvH,MAAMsH,EAAK,CACPE,OAAQ,OACRvE,KAAM,OACNwE,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUT,KAEpBtH,KAAKsH,GACLtH,MAAK,SAAAgI,GAAQ,OAAIrI,QAAQC,IAAIoI,EAAS9H,WCahC7C,cAAf,IAmiBe6V,G,YAhiBX,WAAYvV,GAAQ,IAAD,8BACf,4CAAMA,KAsGVwV,eAAiB,WACbpT,MAAM5B,EAAQM,SAASa,QAClBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAoD,GACF,IAAIgQ,EAAShQ,EAAWb,KAAI,SAAA9D,GACxB,MAAO,CAACqB,GAAIrB,EAASoC,IAAKwC,MAAO5E,EAAS4E,UAE9C+P,EAAOxE,QAAQ,CAAC9O,GAAI,MAAOuD,MAAO,+HAClC1D,QAAQC,IAAIwT,GACZ,EAAKhT,SAAS,CAACgD,WAAYgQ,OAE9BnN,OAAM,SAAA4I,GACHlP,QAAQC,IAAIiP,OAnHL,EAyHnBwE,WAAa,WACT3S,IAAOC,KAAK,sBAAuB,IAAIX,MAAK,SAAAsH,GACxC3H,QAAQC,IAAI,6EAAkB0H,GAC9B,IAAMxI,EAAO,CACTiE,MAAOuE,EAAKxH,GACZ4D,UAAW4D,EAAKgM,WAChB3P,SAAU2D,EAAKiM,UACfvS,WAAYsG,EAAKkM,UACjBxH,IAAK1E,EAAK0E,IACVC,SAAU,CACNwH,QAASnM,EAAKmM,SAAW,sEACzB5T,KAAMyH,EAAKzH,MAAQ,uEAEvB2L,UAAU,GAEd,EAAKpL,SAAS,CAACtB,KAAMA,IACrB2G,GAAStH,EAAQC,MAAOU,OAzIb,EA6InB4U,UAAY,SAAC3V,EAAO8J,EAAMvF,GACtB,EAAKlC,SAAS,CACVyQ,OACI,kBAAC,IAAD,CACI8C,cAAc,WACdC,QAAS,CAAC,CACN7V,MAAOuE,GAAU,6CACjBuR,WAAW,EACX7Q,KAAM,WAEV0D,QAAS,kBAAM,EAAKtG,SAAS,CAACyQ,OAAQ,SAEtC,4BAAK9S,GAAS,iHACd,2BAAI8J,GAAQ,mOA1JT,EAiKnBsE,SAAW,SAACtN,GACRc,QAAQC,IAAIf,GACZ4G,GAAStH,EAAQG,QAAQC,IAAKM,GAC9B,IAAIC,EAAO,EAAKyB,MAAMzB,KACtBA,EAAK0M,UAAW,EAChB,EAAKpL,SAAS,CAACtB,KAAMA,EAAMgV,aAAc,QAtK1B,EA8KnBrQ,gBAAkB,SAACsQ,EAAWlV,GAC1B,EAAKuB,SAAS,CAAC4T,mBAAoBD,IACnC,EAAK3T,SAAS,CAACQ,aAAc/B,KAhLd,EAwLnB+T,eAAiB,SAACrN,GACdxF,MAAM5B,EAAQG,QAAQE,KAAO+G,GACxBvF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAnB,GACFc,QAAQC,IAAIf,GACZ,EAAKuB,SAAS,CAACQ,aAAc/B,IAG7B,EAAKuB,SAAS,CAAC6T,sBAAuB,mBAhM/B,EAmMnBC,iBAAmB,SAAC3O,GAChBxF,MAAM5B,EAAQG,QAAQE,KAAO+G,GACxBvF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAnB,GACFc,QAAQC,IAAIf,GACZ,EAAKuB,SAAS,CAACQ,aAAc/B,IAC7B,EAAKuB,SAAS,CAAC+T,YAAa,YAC5B,EAAK/T,SAAS,CAACgU,kBAAmB,gBAClC,EAAKhU,SAAS,CAAC4T,mBAAoB,mBA3M5B,EA8MnBzB,kBAAoB,SAAChN,GACjBxF,MAAM5B,EAAQG,QAAQE,KAAO+G,GACxBvF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAnB,GACF,EAAKuB,SAAS,CAACQ,aAAc/B,IAG7B,EAAKuB,SAAS,CAACiU,cAAe,mBArNvB,EAwNnBL,mBAAqB,SAAC9P,GAClB,EAAK9D,SAAS,CAAC4T,mBAAoB9P,IACnCvE,QAAQC,IAAI,EAAKW,MAAMyT,qBA1NR,EA4NnBM,UAAY,SAACC,GACT,EAAKnU,SAAS,CAAC+T,YAAaI,KA1N5B,EAAKhU,MAAQ,CACTsQ,OAAQ,KACRsD,YAAa,OACbF,sBAAuB,YACvBD,mBAAoB,cACpB/M,eAAgB,GAChBmN,kBAAmB,cACnBN,aAAc,KACdO,cAAe,KACfG,eAAgB,GAChBC,MAAO,CACHC,SAAU,6CACVC,SAAU,6CACVC,UAAW,6CACXC,SAAU,iCACVC,UAAW,mDACXC,WAAY,0FAEhB5U,YAAa,KACbiD,WAAY,CACR,CAACtD,GAAI,2BAA4BuD,MAAO,8CACxC,CAACvD,GAAI,2BAA4BuD,MAAO,8CACxC,CAACvD,GAAI,2BAA4BuD,MAAO,8CACxC,CAACvD,GAAI,2BAA4BuD,MAAO,kCACxC,CAACvD,GAAI,2BAA4BuD,MAAO,oDACxC,CAACvD,GAAI,2BAA4BuD,MAAO,0FACxC,CAACvD,GAAI,2BAA4BuD,MAAO,6EAE5C2R,eAAgB,eAChBC,WAAY,GACZC,WAAY,GACZxD,YAAa,KACbyD,aAAc,GACdjJ,WAAY,2DAGhB,EAAKkJ,cAAgB,EAAKA,cAAczI,KAAnB,gBACrB,EAAK8E,UAAY,WACb,EAAK4D,eAAe,EAAK9U,MAAM4U,aAAa,EAAK5U,MAAM4U,aAAa3U,OAAS,KAzClE,E,iFA8CE,IAAD,OAChBE,IAAOC,KAAK,sBAAuB,IAC9BX,MAAK,SAAAsH,IDlGlB,SAAsBgO,GAAS,IAAD,OAC1B,OAAOvV,MAAM5B,EAAQC,MAAQ,UAAYkX,EAAOxV,IAC3CE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAuV,GACF,GAAwB,IAApBA,EAAS/U,OAGN,CACHb,QAAQC,IAAI,8MACZ,IAAIsM,EAAaqJ,EAAS,GAAG1V,cAAgByR,OAAS,0DAAeiE,EAAS,GAAG1V,KAEjF,MAAO,CAACf,KAAMyW,EAAS,GAAIrJ,WAAYA,GANvCvM,QAAQC,IAAI,sJACZ,EAAKyT,gBAQZpN,OAAM,SAAA4I,GACHlP,QAAQC,IAAIiP,OCsFR2G,CAAalO,GAAMtH,MAAK,SAAAc,GACpB,EAAKV,SAAS,CAACtB,KAAMgC,EAAOhC,KAAMoN,WAAYpL,EAAOoL,aACrDvM,QAAQC,IAAI,sDAAckB,EAAOhC,YAGzCpB,KAAKC,MAAM6B,QACXiG,GAAStH,EAAQoB,KAAKC,OAAQ9B,KAAKC,MAAM6B,QAEzC9B,KAAKC,MAAM8X,WAAWC,WACtB/V,QAAQC,IAAI,2IACZlC,KAAKwW,iBAAiBxW,KAAKC,MAAM8X,WAAWC,WAEhDhY,KAAKyV,iBACLxT,QAAQC,IAAI,uEAAgBlC,KAAK6C,MAAM2L,c,qCAG5BwF,GACXA,EAAcA,GAAe,KAC7B,IAAIyD,EAAezX,KAAK6C,MAAM4U,aAAX,YAA8BzX,KAAK6C,MAAM4U,cAAgB,GAExD,OAAhBzD,EACAyD,EAAe,IAC+B,IAAvCA,EAAaQ,QAAQjE,GAC5ByD,EAAeA,EAAaS,OAAO,EAAGT,EAAaQ,QAAQjE,GAAe,GAE1EyD,EAAarL,KAAK4H,GAGtBhU,KAAK0C,SAAS,CACVsR,cACAyD,mB,gCAIEhO,GAAO,IAAD,OAIRzJ,KAAK6C,MAAMwF,UACfrI,KAAK0C,SAAS,CACV2F,SACI,kBAAC,IAAD,CACIU,OAAO,WACPC,QAAS,kBAAM,EAAKtG,SAAS,CAAC2F,SAAU,QACxCxC,OAAQ,kBAAC,IAAD,CAAQrB,KAAM,GAAIf,MATf,CACnB0U,gBAAiB,kBAQwC,kBAAC,IAAD,CAAYjR,KAAK,OAAOF,MAAO,GACnBC,OAAQ,OAEpEwC,O,oCA8HHjB,GACVxI,KAAK0C,SAAS,CAAC+T,YAAajO,EAAE4P,cAAcC,QAAQC,U,uCAGvCnW,GAAM,IAAD,OAClBnC,KAAK0C,SAAS,CAAC8L,WAAYrM,IAAO,kBAAM,EAAKwV,eAAe,SAC5D,IAAIvW,EAAOpB,KAAK6C,MAAMzB,KACtBA,EAAKmN,SAASpM,KAAOA,EDrP7B,WAAyC,IAAtBwH,EAAqB,uDAAf,GAAIC,EAAW,uDAAJ,GAEhC,OAAOvH,MAAMsH,EAAK,CACdE,OAAQ,QACRvE,KAAM,OACNwE,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAUT,KAEpBtH,MAAK,SAAAgI,GACFrI,QAAQC,IAAIoI,EAAS9H,WCsOzB8P,CAAU7R,EAAQC,MAAM,IAAIU,EAAK+B,IAAK/B,GAAMkB,MAAK,SAAAc,GAAM,OAAEnB,QAAQC,IAAIkB,Q,+BAG/D,IAAD,OACCmV,EACF,kBAAC,GAAD,CACIlQ,SAAU,SAAC1H,GAAD,OAAa,EAAKiQ,UAAUjQ,IACtCoT,UAAW/T,KAAK+T,UAChBC,YAAahU,KAAK6C,MAAMmR,YACxBxF,WAAYxO,KAAK6C,MAAM2L,WACvBpN,KAAMpB,KAAK6C,MAAMzB,KAEjB8N,WAAY,SAAC/M,GAAD,OAAU,EAAKO,SAAS,CAAC8L,WAAYrM,IAAO,kBAAM,EAAKwV,eAAe,eAClFvD,YAAa,SAAC5N,GAAD,OAAU,EAAKmR,eAAenR,MAG7CgS,EACF,kBAAC,IAAD,CACIxE,YAAahU,KAAK6C,MAAMmR,YACxBhL,QAAS,kBAAI,EAAK2O,eAAe,QAEjC,kBAAC,IAAD,CAAW1D,sBAAoB,EACpB7R,GAAI,aACJ4G,QAAS,kBAAI,EAAK2O,eAAe,OACjChT,OAAQ,kBAAC,IAAD,yFAEf,kBAAC,GAAD,CAAewN,iBAAkB,SAAChQ,GAAD,OAAQ,EAAKgQ,iBAAiBhQ,OAEnE,kBAAC,IAAD,CACIC,GAAI,SACJ4G,QAAS,kBAAM,EAAK2O,eAAe,OAEnChT,OAAO,8CACPuR,QAAS,CAAC,CACN7V,MAAO,yDACPiF,KAAM,YACNV,OAAQ,kBAAM,EAAK+S,eAAe,QACnC,CACCtX,MAAO,yDACPiF,KAAM,UACNV,OAAQ,kBAAM,EAAK+S,eAAe,YAKlD,MAAwB,KAApB3X,KAAK6C,MAAMzB,KAEP,kBAAC,IAAD,CAAasD,KAAM,kBAAC,IAAD,CAASF,KAAK,QAAQf,MAAO,CAACgB,UAAW,OAA5D,kGAMA,kBAAC,IAAD,CAAMgS,YAAazW,KAAK6C,MAAM4T,YAAagC,OACvC,kBAAC,IAAD,KASI,kBAAC,IAAD,CACI1Y,QAASC,KAAK0X,cACdgB,SAAqC,SAA3B1Y,KAAK6C,MAAM4T,YACrBkC,aAAW,OACXlP,KAAK,QACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI1J,QAASC,KAAK0X,cACdgB,SAAqC,YAA3B1Y,KAAK6C,MAAM4T,YACrBkC,aAAW,UACXlP,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI1J,QAASC,KAAK0X,cACdgB,SAAqC,cAA3B1Y,KAAK6C,MAAM4T,YACrBkC,aAAW,YACXlP,KAAK,2DACR,kBAAC,IAAD,OAkBD,kBAAC,IAAD,CACI1J,QAASC,KAAK0X,cACdgB,SAAqC,OAA3B1Y,KAAK6C,MAAM4T,YACrBkC,aAAW,KACXlP,KAAK,8CACR,kBAAC,IAAD,SAYL,kBAAC,IAAD,CAAMrH,GAAG,OAAOyN,YAAY,QACxB,kBAAC,IAAD,CAAOzN,GAAG,QACN,kBAAC,IAAD,0GACA,kBAAC,EAAD,CAAM2L,QAAS,kBAAM,EAAKrL,SAAS,CAAC0T,aAAc,eAAgBK,YAAa,QACzErV,KAAMpB,KAAK6C,MAAMzB,KAAMwV,UAAW5W,KAAK4W,cAGrD,kBAAC,IAAD,CAAMxU,GAAG,UAAUwW,WAAY5Y,KAAK6C,MAAM6T,kBAAmBmC,MAAOL,GAChE,kBAAC,IAAD,CAAMpW,GAAG,cAAcyN,YAAa7P,KAAK6C,MAAMyT,oBAC3C,kBAAC,IAAD,CAAOlU,GAAG,eACN,kBAAC,IAAD,KACI,kBAAC,IAAD,CACImD,YAAU,EACVxF,QAAS,kBAAI,EAAK4X,eAAe,eACjClN,UAAqC,4DAA1BzK,KAAK6C,MAAM2L,WAA8B,0DAAexO,KAAK6C,MAAM2L,WAAWnO,OAH7F,qDAIA,kBAAC,IAAD,CACIyY,SAAoC,4DAA1B9Y,KAAK6C,MAAM2L,WACrBtB,IAAI,0GACJG,YAAY,8KACZtN,QAAmC,4DAA1BC,KAAK6C,MAAM2L,WAChB,kBAAM,EAAKoC,UAAU,+HACrB,kBAAM,EAAKlO,SAAS,CAACgU,kBAAmB,gBAG9C1W,KAAK6C,MAAMiU,eAAenR,QAEhC,kBAAC,IAAD,mDACA,kBAAC,EAAD,CAAiB5E,SAAUf,KAAK6C,MAAMiU,eAErB3U,KAAMnC,KAAK6C,MAAM2L,WACjBzI,gBAAiB/F,KAAK+F,kBACtC/F,KAAK6C,MAAMwF,UAEhB,kBAAC,IAAD,CAAOjG,GAAG,cACN,kBAAC,EAAD,CAAM/B,MAAO,oDACPH,OAAQ,kBAAM,EAAKwC,SAAS,CAAC4T,mBAAoB,mBACvD,kBAAC,EAAD,CAAYvL,UAAW,kBAAM,EAAKrI,SAAS,CAAC4T,mBAAoB,iBACpDlV,KAAMpB,KAAK6C,MAAMzB,KAAM8B,aAAclD,KAAK6C,MAAMK,aAChDsH,aAAc,kBAAM,EAAK9H,SAAS,CAAC4T,mBAAoB,uBAEvE,kBAAC,IAAD,CAAOlU,GAAG,eACN,kBAAC,EAAD,CAAM/B,MAAO,yDACPH,OAAQ,kBAAM,EAAKwC,SAAS,CAAC4T,mBAAoB,kBACvD,kBAAC,EAAD,CAAapT,aAAclD,KAAK6C,MAAMK,gBAE1C,kBAAC,IAAD,CAAOd,GAAG,kBACN,kBAAC,EAAD,CAAM/B,MAAO,uCACPH,OAAQ,kBAAM,EAAKwC,SAAS,CAAC4T,mBAAoB,kBACvD,kBAAC,EAAD,CAAgBlV,KAAMpB,KAAK6C,MAAMzB,KAAM8B,aAAclD,KAAK6C,MAAMK,iBAGxE,kBAAC,IAAD,CAAM2M,YAAY,YAAYzN,GAAG,aAC7B,kBAAC,IAAD,CAAOA,GAAG,aACN,kBAAC,IAAD,8FACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEQpC,KAAK6C,MAAM6C,WAAWb,KAAI,SAAA9D,GAEtB,OACI,kBAAC,IAAD,CACIqE,IAAKrE,EAASqB,GACdrC,QAAS,kBAAM,EAAK2C,SAAS,CACzBoU,eAAgB/V,EAChB2V,kBAAmB,iBAEvBrH,aAAc,EAAKxM,MAAMiU,iBAAmB/V,EACxC,kBAAC,KAAD,CAAYmG,KAAK,kBAAoB,MAExCnG,EAAS4E,eAe9C,kBAAC,IAAD,CAAMvD,GAAG,YAAYyN,YAAa7P,KAAK6C,MAAM0T,uBACzC,kBAAC,IAAD,CAAOnU,GAAG,aACN,kBAAC,IAAD,2GACA,kBAAC,GAAD,CAAW8S,eAAgBlV,KAAKkV,eAAgB9T,KAAMpB,KAAK6C,MAAMzB,QAErE,kBAAC,IAAD,CAAOgB,GAAG,cACN,kBAAC,EAAD,CAAM/B,MAAO,oDACPH,OAAQ,kBAAM,EAAKwC,SAAS,CAAC6T,sBAAuB,iBAC1D,kBAAC,EAAD,CAAYxL,UAAW,kBAAM,EAAKrI,SAAS,CAAC6T,sBAAuB,iBACvDnV,KAAMpB,KAAK6C,MAAMzB,KAAM8B,aAAclD,KAAK6C,MAAMK,aAChDsH,aAAc,kBAAM,EAAK9H,SAAS,CAAC6T,sBAAuB,uBAE1E,kBAAC,IAAD,CAAOnU,GAAG,eACN,kBAAC,EAAD,CAAM/B,MAAO,yDACPH,OAAQ,kBAAM,EAAKwC,SAAS,CAAC6T,sBAAuB,kBAC1D,kBAAC,EAAD,CAAarT,aAAclD,KAAK6C,MAAMK,gBAE1C,kBAAC,IAAD,CAAOd,GAAG,kBACN,kBAAC,EAAD,CAAM/B,MAAO,uCAAUH,OAAQ,kBAAM,EAAKwC,SAAS,CAAC6T,sBAAuB,kBAC3E,kBAAC,EAAD,CAAgBnV,KAAMpB,KAAK6C,MAAMzB,KAAM8B,aAAclD,KAAK6C,MAAMK,iBAexE,kBAAC,IAAD,CAAMd,GAAG,KAAKwW,WAAY5Y,KAAK6C,MAAMuT,cACjC,kBAAC,IAAD,CAAMhU,GAAG,KAAKyN,YAAa7P,KAAK6C,MAAM8T,cAAexD,OAAQnT,KAAK6C,MAAMsQ,OAAQ0F,MAAON,GACnF,kBAAC,IAAD,CAAOnW,GAAG,MACN,kBAAC,IAAD,wFACA,kBAAC,GAAD,CACIhB,KAAMpB,KAAK6C,MAAMzB,KACjB6O,YAAa,kBAAM,EAAK0H,eAAe,YAEvC7H,cAAe,kBAAM,EAAKpN,SAAS,CAACiU,cAAe,eACnD3G,cAAe,kBAAM,EAAKtN,SAAS,CAACiU,cAAe,eACnD5G,gBAAiB,kBAAM,EAAKrN,SAAS,CAACiU,cAAe,mBAExD3W,KAAK6C,MAAMwF,UAEhB,kBAAC,IAAD,CAAOjG,GAAG,aACN,kBAAC,EAAD,CAAM/B,MAAO,yDAAaH,OAAQ,kBAAM,EAAKwC,SAAS,CAACiU,cAAe,UACtE,kBAAC,GAAD,CAAWvV,KAAMpB,KAAK6C,MAAMzB,KAAMyT,kBAAmB7U,KAAK6U,qBAE9D,kBAAC,IAAD,CAAOzS,GAAG,cACN,kBAAC,EAAD,CAAM/B,MAAO,oDAAaH,OAAQ,kBAAM,EAAKwC,SAAS,CAACiU,cAAe,iBACtE,kBAAC,EAAD,CAAY5L,UAAW,kBAAM,EAAKrI,SAAS,CAACiU,cAAe,iBAC/CvV,KAAMpB,KAAK6C,MAAMzB,KAAM8B,aAAclD,KAAK6C,MAAMK,aAChDsH,aAAc,kBAAM,EAAK9H,SAAS,CAACiU,cAAe,uBAElE,kBAAC,IAAD,CAAOvU,GAAG,eACN,kBAAC,EAAD,CAAM/B,MAAO,yDAAaH,OAAQ,kBAAM,EAAKwC,SAAS,CAACiU,cAAe,kBACtE,kBAAC,GAAD,CAAWvV,KAAMpB,KAAK6C,MAAMzB,QAEhC,kBAAC,IAAD,CAAOgB,GAAG,kBACN,kBAAC,EAAD,CAAM/B,MAAO,uCAAUH,OAAQ,kBAAM,EAAKwC,SAAS,CAACiU,cAAe,kBACnE,kBAAC,EAAD,CAAgBvV,KAAMpB,KAAK6C,MAAMzB,KAAM8B,aAAclD,KAAK6C,MAAMK,gBAEpE,kBAAC,IAAD,CAAOd,GAAG,aACN,kBAAC,EAAD,CAAM/B,MAAO,qGAAsBH,OAAQ,kBAAM,EAAKwC,SAAS,CAACiU,cAAe,UAC/E,kBAAC,GAAD,CAAiBvV,KAAMpB,KAAK6C,MAAMzB,KAAM+R,OAAQnT,KAAKgW,aAEzD,kBAAC,IAAD,CAAO5T,GAAG,WACN,kBAAC,EAAD,CAAM/B,MAAO,yDAAaH,OAAQ,kBAAM,EAAKwC,SAAS,CAACiU,cAAe,UACtE,kBAAC,GAAD,CACInI,WAAYxO,KAAK6C,MAAM2L,WACvBpN,KAAMpB,KAAK6C,MAAMzB,KACjB+R,OAAQnT,KAAKgW,UACb9G,WAAY,kBAAM,EAAKxM,SAAS,CAACiU,cAAe,mBAGxD,kBAAC,IAAD,CAAOvU,GAAG,cACN,kBAAC,EAAD,CAAM/B,MAAO,sEACPH,OAAQ,kBAAM,EAAKwC,SAAS,CAACiU,cAAe,eAClD,kBAAC,GAAD,CAAUxE,iBAAkB,SAAChQ,GAAD,OAAU,EAAKO,SAAS,CAChD8L,WAAYrM,EACZwU,cAAe,iBAI3B,kBAAC,IAAD,CAAM9G,YAAa7P,KAAK6C,MAAMyU,eAAgBlV,GAAG,gBAC7C,kBAAC,IAAD,CAAOA,GAAG,gBACN,kBAAC,EAAD,CAAM/B,MAAO,qEAAeH,OAAQ,kBAAM,EAAKwC,SAAS,CAAC0T,aAAc,UACvE,kBAAC,EAAD,CAAQ5H,WAAYxO,KAAK6C,MAAM2L,WACvBpN,KAAMpB,KAAK6C,MAAMzB,KACjBqN,SAAUzO,KAAKyO,SACfS,WAAY,kBAAM,EAAKxM,SAAS,CAAC4U,eAAgB,mBAE7D,kBAAC,IAAD,CAAOlV,GAAG,cACN,kBAAC,EAAD,CAAM/B,MAAO,sEACPH,OAAQ,kBAAM,EAAKwC,SAAS,CAAC4U,eAAgB,oBACnD,kBAAC,GAAD,CAAUnF,iBAAkB,SAAChQ,GAAD,OAAU,EAAKO,SAAS,CAChD8L,WAAYrM,EACZmV,eAAgB,4B,GArhBlChX,IAAMC,WCvCJwY,QACW,cAA7BC,OAAOzK,SAAS0K,UAEe,UAA7BD,OAAOzK,SAAS0K,UAEhBD,OAAOzK,SAAS0K,SAASC,MACvB,2DCVNlW,IAAOC,KAAK,eAAgB,IACvBX,MAAK,SAAAsH,GAAI,OAAI3H,QAAQC,IAAI,qIAA4B0H,EAAKxG,WAC/D,IAAI2U,GAAciB,OACbzK,SACA4K,KACA/L,QAAQ,IAAI,IACZgM,MAAM,KACNnU,QACG,SAASoU,EAAE7Q,GACP,IAAItD,EAAIsD,EAAE4Q,MAAM,KAEhB,OADAC,EAAGC,mBAAmBpU,EAAE,KAAOoU,mBAAmBpU,EAAE,IAC7CmU,IAEX,IAEJvX,GAASkX,OACRzK,SACAoD,OACAvE,QAAQ,IAAI,IACZgM,MAAM,KACNnU,QACG,SAASoU,EAAE7Q,GACP,IAAItD,EAAIsD,EAAE4Q,MAAM,KAEhB,OADAC,EAAGC,mBAAmBpU,EAAE,KAAOoU,mBAAmBpU,EAAE,IAC7CmU,IAEX,IAGRpX,QAAQC,IAAIJ,IAGZyX,IAASC,OAAO,kBAAC,GAAD,CAAKzB,WAAYA,GAAYjW,OAAQA,KAAYwO,SAASC,eAAe,SDyFnF,kBAAmBkJ,WACrBA,UAAUC,cAAcC,MAAMrX,MAAK,SAAAsX,GACjCA,EAAaC,iB","file":"static/js/main.e9f37ada.chunk.js","sourcesContent":["import React from 'react';\r\nimport {PanelHeader, IOS, PanelHeaderButton, platform} from \"@vkontakte/vkui\";\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nconst osname = platform();\r\n\r\nclass Head extends React.Component {\r\n    render(){\r\n        return (\r\n            <PanelHeader\r\n                theme=\"light\"\r\n                left={<PanelHeaderButton onClick={this.props.goBack}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</PanelHeaderButton>}\r\n                addon={<PanelHeaderButton onClick={this.props.goBack}>Назад</PanelHeaderButton>}\r\n            >{this.props.title}\r\n            </PanelHeader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head;","//const BACK_LINK = 'http://localhost:3030/';\r\nconst BACK_LINK = 'https://mysterious-garden-57052.herokuapp.com/';\r\n\r\nexport const BACKEND = {\r\n    users: BACK_LINK+'users',\r\n    message: BACK_LINK+'users/message/',\r\n    masters: {\r\n        all: BACK_LINK+'masters/',\r\n        onID: BACK_LINK+'masters/',\r\n        category: BACK_LINK+'masters/category/',\r\n        vkuid: BACK_LINK+'masters/vkuid/'\r\n    },\r\n    favs: {\r\n        new: BACK_LINK+'favs/',\r\n        master: BACK_LINK+'favs/master/',\r\n        user: BACK_LINK+'favs/user/'\r\n    },\r\n    findModel: {\r\n        new: BACK_LINK+'findmodel/',\r\n        onMasterId: BACK_LINK+'findmodel/onMasterId/',\r\n        onCity: BACK_LINK+'findmodel/onCity/'\r\n    },\r\n    comment: {\r\n        new: BACK_LINK+'comment/master/',\r\n        onMasterId: BACK_LINK+'comment/master/'\r\n    },\r\n    vkapi: {\r\n        uploadPhoto: BACK_LINK+'vkapi/uploadPhoto/',\r\n        savePhoto: BACK_LINK+'vkapi/savePhoto/'\r\n    },\r\n    category: {\r\n        getAll: BACK_LINK+'category/'\r\n    },\r\n    logs: {\r\n        params: BACK_LINK+'logs/params/'\r\n    }\r\n};","import React from 'react';\r\nimport {\r\n    Spinner,\r\n    Separator,\r\n    Avatar,\r\n    Button,\r\n    Cell,\r\n    Div,\r\n    Group,\r\n    List,\r\n    Header,\r\n    CardGrid,\r\n    Card,\r\n    Placeholder, Counter\r\n} from \"@vkontakte/vkui\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MasterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mastersList: null,\r\n            title: '',\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadList()\r\n        }\r\n\r\n        componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(prevProps, this.props);\r\n            if (prevProps.city !== this.props.city || prevProps.category !== this.props.category) {\r\n                this.loadList()\r\n            }\r\n        }\r\n\r\n    loadList = () => {\r\n            if(this.props.category === '') {\r\n                console.log(BACKEND.masters.category+'all/'+this.props.city.id);\r\n                fetch(BACKEND.masters.category+'all/'+this.props.city.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                        console.log(mastersList);\r\n                        this.setState({mastersList: mastersList, isLoad: true});\r\n                        this.setTitle(this.state.mastersList.length);\r\n                    });\r\n            } else {\r\n                console.log(BACKEND.masters.category+this.props.category.id+'/'+this.props.city.id);\r\n                fetch(BACKEND.masters.category+this.props.category.id+'/'+this.props.city.id)\r\n                    .then(res => res.json())\r\n                    .then(mastersList => {\r\n                        console.log(mastersList);\r\n                        this.setState({mastersList: mastersList, isLoad: true});\r\n                        this.setTitle(this.state.mastersList.length);\r\n                    });\r\n            }\r\n        }\r\n\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    setTitle(count) {\r\n        if (count===undefined){\r\n            this.setState({title: 'Мы никого не нашли :( пока не нашли...'});\r\n        } else {\r\n            this.setState({title: 'Найдено мастеров: '+count});\r\n        }\r\n    }\r\n    renderMaster() {\r\n        if(Array.isArray(this.state.mastersList)) {\r\n            if(this.state.isLoad === false) {\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (this.props.city==='Не выбрано') {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Где вы?\"\r\n                        >\r\n                            Нам не удалось определить Ваш город, укажите его вручную.\r\n                        </Placeholder>\r\n                    )\r\n                } else if (this.state.mastersList.length === 0) {\r\n                    return (\r\n                        <Placeholder\r\n                            icon={<Icon56UsersOutline />}\r\n                            header=\"Не расстраивайтесь\"\r\n                            action={<Button onClick={this.share} size=\"l\">Поделиться</Button>}\r\n                        >\r\n                            В данный момент у нас нет данных о специалистах этого профиля в Вашем городе. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                            Поделитесь приложением с мастерами, которых Вы знаете.\r\n                        </Placeholder>\r\n                    );\r\n                } else {\r\n                    return this.state.mastersList.map(master => {\r\n                        let ratingArr = master.comments.map(comment =>{\r\n                            return Number(comment.rating)\r\n                        });\r\n                        let sum = ratingArr.reduce((a, b) => a + b, 0);\r\n                        let rating = sum/ratingArr.length;\r\n                        //console.log(rating);\r\n                        return (\r\n                                <CardGrid key={master.vkUid} style={{padding: 0}}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                                      photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                                      description={\r\n                                                          master.categories.category.map(category => {\r\n                                                              return category.label+\" \"\r\n                                                          })\r\n                                                      }\r\n                                                      bottomContent={\r\n                                                          this.setBottom(rating, ratingArr.length)\r\n                                                      }\r\n                                                      before={<Avatar src={master.avatarLink} size={70}/>}\r\n                                                      size=\"l\"\r\n                                                      onClick={() => this.props.openPanelMaster('masterInfo', master)}\r\n                                                >{master.firstname} {master.lastname}\r\n                                                </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setBottom = (rating, length) => {\r\n        if (length > 0) {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Рейтинг {rating} из {length} отзывов\r\n                </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{margin: 0, padding: 0, fontSize: 12, color: \"#a9a9a9\"}}>\r\n                    Отзывы отсутствуют\r\n                </Div>\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if(this.state.isLoad === false) {\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">{this.state.title}</Header>}>\r\n                        {this.renderMaster()}\r\n                        </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MasterList","import React from 'react';\r\nimport {\r\n    Group,\r\n    List,\r\n    Cell,\r\n    Separator,\r\n    Div,\r\n    Avatar,\r\n    Counter,\r\n    Gallery,\r\n    Snackbar,\r\n    UsersStack,\r\n    Spinner, Header, Card, CardGrid, CardScroll, Button, Alert, Input,FormLayout\r\n} from \"@vkontakte/vkui\"\r\nimport InputMask from 'react-input-mask';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\nimport {BACKEND} from '../func/func';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {\r\n                priceList: []\r\n            },\r\n            favsArr: [\r\n                {vkUid:12523452}\r\n            ],\r\n            isFavourite: {\r\n                status: false\r\n            },\r\n            isLoad: false,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.setState({activeMaster: this.props.activeMaster});\r\n        this.loadFavs();\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        console.log(this.state);\r\n    };\r\n    favStatus = () => {\r\n        if(this.state.isFavourite.status === false) {\r\n            return (\r\n                            <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                                <Icon16LikeOutline width={30} height={30} fill=\"red\"/>\r\n                            </Div>\r\n            )\r\n        } else {\r\n            return (\r\n                    <Div style={{float: 'left', padding: 0, marginRight: 20}} onClick={this.checkFavs}>\r\n                        <Icon16Like width={30} height={30} fill=\"red\"/>\r\n                    </Div>\r\n            )\r\n        }\r\n    };\r\n    connectStatus = (title) => {\r\n        return (\r\n            <Button onClick={() => this.getPhone(title)}>Записаться</Button>\r\n        )\r\n    };\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866#masterid='+this.state.activeMaster._id})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    openSnackAvatar (text, avatarLink) {\r\n        if (this.state.snackbar) this.setState({snackbar: null});\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    after={<Avatar src={avatarLink} size={32} />}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    // subscribers = () => {\r\n    //     return (\r\n    //         <UsersStack\r\n    //         photos={[\r\n    //             'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\r\n    //             'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\r\n    //         ]}\r\n    //         size=\"s\"\r\n    //     >Настя и Jean и еще {this.state.countFavs} подписчиков</UsersStack>\r\n    //     )\r\n    // }\r\n    loadFavs = () => {\r\n        //console.log(BACKEND.favs.master+this.props.activeMaster._id);\r\n        fetch(BACKEND.favs.master+this.props.activeMaster._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                this.setState({favsArr: favsArr});\r\n                let count = favsArr.length;\r\n                this.setState({countFavs: count});\r\n                this.setState({isLoad: true})\r\n                this.state.favsArr.map(fav => {\r\n                    if (fav.userId === this.props.user._id) {\r\n                        this.setState({isFavourite: {status: true, id: fav._id}});\r\n                        //console.log('У тебя в избранном');\r\n                    } else {\r\n                        this.setState({isFavourite: {status: false}})\r\n                        //console.log('Нет в избранном');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n    changeVisible = (index) => {\r\n        this.setState({[index]: !this.state[index]})\r\n    }\r\n    checkFavs = () => {\r\n        console.log('прежний статус '+this.state.isFavourite.status);\r\n        if (this.state.isFavourite.status === false) {\r\n            let fav = {\r\n                userId: this.props.user._id,\r\n                userVkUid: this.props.user.vkUid,\r\n                masterId: this.state.activeMaster._id,\r\n                masterVkUid: this.state.activeMaster.vkUid\r\n            };\r\n            this.postData(BACKEND.favs.new, fav, 'POST');\r\n            this.setState({isFavourite: {status: true}});\r\n            this.setState({countFavs: this.state.countFavs+1});\r\n            this.openSnackAvatar('Вы подписались на обновления мастера. Отменить подписку можно во вкладке Кабинет, в разделе Избранное.', this.state.activeMaster.avatarLink);\r\n        }\r\n\r\n    };\r\n    sendMessage = () => {\r\n        let message = \"Привет! \"+this.props.user.firstname+' '+this.props.user.lastname+' хочет записаться на '+this.state.sendtitle+'! Информация для связи: Телефон - +'+this.state.phone+', страница VK - http://vk.com/id'+this.props.user.vkUid;\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.state.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ snackbar: null });\r\n                let mess = {\r\n                    userId: this.props.user._id,\r\n                    userVkUid: this.props.user.vkUid,\r\n                    masterId: this.state.activeMaster._id,\r\n                    masterVkUid: this.state.activeMaster.vkUid\r\n                };\r\n                this.postData(BACKEND.message, mess, 'POST');\r\n                this.openSnackAvatar('Мы уведомили мастера, что вы хотите с ним связаться. Ожидайте.', this.state.activeMaster.avatarLink);\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    getPhone = (title) => {\r\n        this.setState({sendtitle: title});\r\n        bridge.send(\"VKWebAppGetPhoneNumber\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({phone: result.phone_number});\r\n                //this.sendMessage();\r\n                this.enterNumber(result.phone_number)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                if (e.error_data.error_reason==='User denied') {\r\n                    this.enterNumber()\r\n                }\r\n            })\r\n    };\r\n    enterNumber = (number) => {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    duration='99999999999999'\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    <h2>Укажите номер телефона</h2>\r\n                    <FormLayout>\r\n                    <Div className=\"FormField Input Input--center\">\r\n                        <InputMask\r\n                            className=\"Input__el\"\r\n                            mask=\"7 (999) 999-99-99\"\r\n                            name='phone'\r\n                            type=\"text\"\r\n                            defaultValue={number || ''}\r\n                            align=\"center\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Div className=\"FormField__border\"></Div>\r\n                    </Div>\r\n                    {/*<Input*/}\r\n                    {/*    mask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    inputmask=\"7 (999) 999-99-99\"*/}\r\n                    {/*    name='phone'*/}\r\n                    {/*    type=\"text\"*/}\r\n                    {/*    defaultValue={number || ''}*/}\r\n                    {/*    align=\"center\"*/}\r\n                    {/*    value={this.state.phone}*/}\r\n                    {/*    onChange={this.handleChange}*/}\r\n                    {/*/>*/}\r\n                    <p>Укажите номер телефона. Если мастер не сможет ответить прямо сейчас, он свяжется с вами.</p>\r\n                    <Button onClick={this.sendMessage}>Отправить</Button>\r\n                    </FormLayout>\r\n                </Snackbar>\r\n        });\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div style={{padding: 0}}>\r\n                    <Group title=\"\">\r\n                        <Cell\r\n                            photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                            description={\r\n                                this.state.activeMaster.type==='Организация' ? this.state.activeMaster.brand : this.state.activeMaster.type\r\n                            }\r\n                            bottomContent={\r\n                                <Cell>\r\n                                    {this.favStatus()}\r\n                                    <Button onClick={() => this.share()}>Поделиться</Button>\r\n                                </Cell>\r\n                            }\r\n                            before={<Avatar src={this.state.activeMaster.avatarLink} size={90}/>}\r\n                            size=\"l\"\r\n                        >\r\n                            {this.state.activeMaster.firstname} {this.state.activeMaster.lastname}\r\n                        </Cell>\r\n                        <Separator/>\r\n                        <Cell expandable onClick={() => this.props.openComments()} indicator={this.state.activeMaster.comments.length}>Отзывы</Cell>\r\n                        {/*{this.subscribers()}*/}\r\n                        <Cell><Counter mode=\"primary\">Подписчиков: {this.state.countFavs}</Counter></Cell>\r\n                    </Group>\r\n                    <Group title=\"Портфолио\">\r\n                        {\r\n                            this.state.activeMaster.photos.length > 0 &&\r\n                                <Div>\r\n                                    <Cell>Последние работы мастера</Cell>\r\n                                    <CardScroll>\r\n                                        {\r\n                                            this.state.activeMaster.photos.slice(0, 5).map((photoUrl, index) => {\r\n                                                return (\r\n                                                    <Card size=\"s\">\r\n                                                        <div key={index} style={{\r\n                                                            width: 144,\r\n                                                            height: 96,\r\n                                                            backgroundImage: 'url('+photoUrl+')',\r\n                                                            backgroundSize: 'cover'}} />\r\n                                                    </Card>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </CardScroll>\r\n                                </Div>\r\n                        }\r\n                        <Cell\r\n                            expandable\r\n                            onClick={() => this.props.openPhoto()}\r\n                            description={\r\n                                this.state.activeMaster.photos.length > 0 ?\r\n                                    this.state.activeMaster.photos.length+' фото в портфолио' :\r\n                                    'У мастера еще нет фотографий работ'\r\n                            }\r\n                            indicator={this.state.activeMaster.photos.length}\r\n                        >Посмотреть все фото</Cell>\r\n                    </Group>\r\n                    <Group separator=\"hide\">\r\n                        {\r\n                            this.state.activeMaster.priceList.map((item, index) => (\r\n                                    <Cell\r\n                                        key={index}\r\n                                        multiline\r\n                                        onClick={() => this.changeVisible(index)}\r\n                                    >\r\n                                        <CardGrid style={{padding: 0}}>\r\n                                            <Card size=\"l\">\r\n                                                <Cell\r\n                                                    description={'От ' + item.price + \" рублей\"}\r\n                                                    expandable\r\n                                                    indicator=\"\">\r\n                                                    {this.state.activeMaster.priceList[index].title}\r\n                                                </Cell>\r\n                                                {\r\n                                                    this.state[index] &&\r\n                                                    <Cell description=\"Краткое описание процедуры\"\r\n                                                          multiline>{this.state.activeMaster.priceList[index].body}\r\n                                                    <Cell>{this.connectStatus(this.state.activeMaster.priceList[index].title)}</Cell>\r\n                                                    </Cell>\r\n                                                }\r\n                                                <Separator></Separator>\r\n                                            </Card>\r\n                                        </CardGrid>\r\n                                    </Cell>\r\n                                )\r\n                            )}\r\n                    </Group>\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Информация о мастере</Header>}>\r\n                        <Cell multiline>\r\n                            {this.state.activeMaster.description}\r\n                        </Cell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Group, Div, Cell, CardGrid, Card, Spinner, FormLayout, File} from \"@vkontakte/vkui\"\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMaster: this.props.activeMaster,\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        this.setState({images: this.props.activeMaster.photos.reverse(), isLoad: true});\r\n        // fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n        //     .then(res => res.json())\r\n        //     .then(activeMaster => {\r\n        //         this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos, isLoad: true});\r\n        //         console.log(activeMaster[0]);\r\n        //     });\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/photos?albumId=1')\r\n        //     .then(response => response.json())\r\n        //     .then(photoArr => {\r\n        //         const images = photoArr.map(photo => {\r\n        //             return photo.url\r\n        //         });\r\n        //         //console.log(images);\r\n        //         this.setState({images: images});\r\n        //         this.setState({isLoad: true});\r\n        //     })\r\n        // console.log('photo ', this.state.activeMasterId)\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length === 0) {\r\n            return (\r\n                <Cell multiline>У мастера еще нет фотографий в портфолио</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Group title=\"Портфолио\">\r\n                        <Group separator=\"hide\">\r\n                            {this.gridPhoto()}\r\n                        </Group>\r\n                    </Group>\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Cell,\r\n    Avatar,\r\n    Footer,\r\n    CellButton,\r\n    Textarea,\r\n    Spinner,\r\n    Separator,\r\n    Slider,\r\n    Counter, FormLayout, Snackbar\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Pop from \"../func/alert\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: {\r\n                id: '1',\r\n                body: 'ТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТестТест',\r\n                author: 'Тест Тестович',\r\n                date: Date.now()\r\n            },\r\n            body: '',\r\n            commentsArr: [],\r\n            isLoad: false,\r\n            rating: 3,\r\n            snackbar: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({commentsArr: this.props.activeMaster.comments});\r\n        //console.log('comments ',   this.props.activeMaster.comments);\r\n        this.props.activeMaster.comments.map(comment => {\r\n            if (comment.user.userId === this.props.user._id) {\r\n                this.setState({isCommended: true})\r\n            }\r\n        });\r\n        let count = this.props.activeMaster.comments.length;\r\n        this.setState({countComments: count, isLoad: true});\r\n    }\r\n    sendComment = () => {\r\n        if (this.state.body.length < 50) {\r\n            this.setState({ snackbar:\r\n                    <Snackbar\r\n                        layout=\"vertical\"\r\n                        onClose={() => this.setState({ snackbar: null })}\r\n                    >\r\n                        Короткий отзыв будет бесполезен для пользователей. Опишите ваши впечатления подробнее.\r\n                    </Snackbar>\r\n            });\r\n        } else {\r\n            let comment = {\r\n                user: {\r\n                    userId: this.props.user._id,\r\n                    firstname: this.props.user.firstname,\r\n                    lastname: this.props.user.lastname,\r\n                    avatarLink: this.props.user.avatarLink\r\n                },\r\n                rating: Number(this.state.rating),\r\n                body: this.state.body\r\n            };\r\n            try {\r\n                this.postData(BACKEND.comment.new+this.props.activeMaster._id, comment, 'POST');\r\n                this.setState({isCommended: true});\r\n            } catch (e) {\r\n                alert(e);\r\n                console.log(e.message);\r\n            }\r\n        }\r\n    };\r\n    postData(url = '', data = {}, method) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(data);\r\n                console.log(response.json());\r\n                let arr = this.state.commentsArr;\r\n                data.date = \"Только что\";\r\n                arr.push(data);\r\n                this.setState({commentsArr: arr});\r\n                this.sendMessage(data.body);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    getDate(comDate) {\r\n        if (comDate === 'Только что') {\r\n            return comDate;\r\n        } else {\r\n            let date = new Date(comDate);\r\n            let hours = date.getHours();\r\n            if (hours < 10) hours = '0'+hours;\r\n            let minutes = date.getMinutes();\r\n            if (minutes < 10) minutes = '0'+minutes;\r\n            let date1 = date.getDate();\r\n            if (date1 < 10) date1 = '0'+date1;\r\n            let month = date.getMonth();\r\n            if (month < 10) month = '0'+month;\r\n            return date1+'.'+month+'.'+date.getFullYear()+' в '+hours+':'+minutes;\r\n        }\r\n    }\r\n    sendMessage = (bodyComment) => {\r\n        let token = \"f663eda6fd8aa562fdfc872f13411acc87a73fe01a5d9b8de8c99557a1ecb9a34d9b0aaced498c8daecdf\";\r\n        let message = \"Привет! У тебя новый комментарий: \"+bodyComment;\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"messages.send\",\r\n            \"params\": {\"random_id\": Math.random(), \"peer_id\": \"-193179174\", \"user_id\": this.props.activeMaster.vkUid,\"message\": message, \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n    };\r\n    commentList() {\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.state.commentsArr.map(comment => {\r\n                return (\r\n                    <Group key={comment._id} separator={'hide'}>\r\n                        <Cell\r\n                            description={this.getDate(comment.date)}\r\n                            before={ <Avatar size={40} src={comment.user.avatarLink} /> }\r\n                        >\r\n                            {comment.user.firstname+' '+comment.user.lastname}\r\n                        </Cell>\r\n                        <Cell multiline>{comment.body}</Cell>\r\n                        <Cell><Counter mode=\"primary\">Оценка: {comment.rating} из 5</Counter></Cell>\r\n                        <Separator/>\r\n                    </Group>\r\n                )\r\n            });\r\n        }\r\n    };\r\n    validate() {\r\n        //console.log(this.props.activeMaster.vkUid, this.props.user.vkUid);\r\n        if (this.props.activeMaster.vkUid === this.props.user.vkUid) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Нельзя оставлять комментарий на самого себя</Div >\r\n            )\r\n        }\r\n        else if (this.state.isCommended === true) {\r\n            return (\r\n                <Div style={{fontSize: 12, color: 'darkgray'}}>Вы уже оставляли комментарий об этом мастере</Div>\r\n            )\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <Slider\r\n                        step={1}\r\n                        min={1}\r\n                        max={5}\r\n                        value={Number(this.state.rating)}\r\n                        onChange={rating => this.setState({rating})}\r\n                        top=\"Оцените работу мастера\"\r\n                    />\r\n                    <Counter mode=\"primary\">Ваша оценка: {this.state.rating}</Counter>\r\n                    <Textarea\r\n                        name={'body'}\r\n                        value={this.state.body}\r\n                        status={this.state.body.length > 50 ? 'valid' : 'error'}\r\n                        bottom={this.state.body.length > 50 ? '' : 'Опишите подробнее. Символов: '+this.state.body.replace(/ /g, \"\").length+' из 50' }\r\n                        top={\"Добавление отзыва\"}\r\n                        placeholder=\"Опишите, что вам понравилось или не понравилось в работе мастера\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <CellButton onClick={() => this.sendComment()} before={<Icon24Add />}>Добавить отзыв</CellButton>\r\n                </FormLayout>\r\n            )\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n    render(){\r\n        return (\r\n                <Div>\r\n                    {this.commentList()}\r\n                    <Footer>{this.validate()}</Footer>\r\n                    {this.state.snackbar}\r\n                </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Alert} from \"@vkontakte/vkui\";\r\n\r\nexport default class Pop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    openAlert = () => {\r\n        this.setState({ popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={this.closeAlert}\r\n                >\r\n                    <h2>Изменения сохранены</h2>\r\n                    <p>Внесенные изменение отобразятся в поиске в течении 2-х минут.</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    closeAlert = () => {\r\n        this.setState({ popout: null });\r\n    };\r\n    render() {\r\n       return (\r\n           this.openAlert()\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Placeholder,\r\n    Separator,\r\n    Group,\r\n    Cell,\r\n    Div,\r\n    Avatar, PanelSpinner, Spinner, FixedLayout,CardGrid,Card,Button\r\n} from \"@vkontakte/vkui\"\r\nimport Icon24UserIncoming from '@vkontakte/icons/dist/24/user_incoming';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass News extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            feed: [1,2,3,4,5,6,7,8,9]\r\n        };\r\n    }\r\n    addFav = () => {\r\n        bridge.send(\"VKWebAppJoinGroup\", {\r\n            group_id: 193179174\r\n        });\r\n    };\r\n    feedList = () => {\r\n        return(\r\n            <Placeholder\r\n                icon={<Avatar src=\"https://sun1-28.userapi.com/O4KZM7zfdhZ-zHP-LtRj_xrYiNSRdraBcCQe6Q/PLqKmK-NWTY.jpg?ava=1\" size={70}/>}\r\n                header=\"Привет!\"\r\n                action={<Button onClick={this.addFav} size=\"l\">Вступить в группу</Button>}\r\n            >\r\n            Сейчас мы расширяем базу мастеров в разных городах России. Вскоре, список станет более обширным. Вступайте в нашу группу Вконтакте, чтобы не пропустить важные обновления!\r\n            </Placeholder>\r\n            // this.state.feed.map(feed=>{\r\n            //     return (\r\n            //         <CardGrid>\r\n            //             <Card key={feed} size=\"l\" mode=\"shadow\">\r\n            //                 <div style={{ height: 96, backgroundColor: 'aliceblue' }} />\r\n            //             </Card>\r\n            //         </CardGrid>\r\n            //     )\r\n            // })\r\n        )\r\n    };\r\n    render(){\r\n        return (\r\n            <Group>\r\n                <FixedLayout vertical=\"bottom\">\r\n                    <CardGrid>\r\n                        <Card size=\"l\">\r\n                            <Cell\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                  description={\r\n                                      this.props.user.isMaster === false ? 'Пользователь' : 'Авторизованный мастер'\r\n                                  }\r\n                                  //bottomContent={}\r\n                                  before={<Avatar src={this.props.user.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                            >{this.props.user.firstname} {this.props.user.lastname}\r\n                            </Cell>\r\n                            {this.props.user.isMaster === false &&\r\n                                <Cell\r\n                                    multiline\r\n                                    onClick={this.props.openReg}\r\n                                    before={<Icon24UserOutgoing/>}\r\n                                    expandable\r\n                                >\r\n                                    Если вы - мастер, пройдите простую процедуру регистрации\r\n                                </Cell>\r\n                            }\r\n                        </Card>\r\n                    </CardGrid>\r\n                </FixedLayout>\r\n                {this.feedList()}\r\n            </Group>\r\n            // <Div>\r\n            //         <Group>\r\n            //             {\r\n            //                 this.props.user.firstname === '???' ?\r\n            //                     <Placeholder >\r\n            //                         <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            //                     </Placeholder> :\r\n            //                     <Placeholder icon={<Avatar src={this.props.user.avatarLink} size={80}/>}>\r\n            //                         Привет, {this.props.user.firstname}!\r\n            //                     </Placeholder>\r\n            //             }\r\n            //             <Cell multiline>\r\n            //                 Ты находишься в сервисе \"Навигатор красоты\". Здесь ты можешь найти мастера практически по\r\n            //                 любой области косметологии или предложить свои услуги.\r\n            //             </Cell>\r\n            //         </Group>\r\n            //     {this.props.user.isMaster === false &&\r\n            //     <FixedLayout vertical=\"bottom\">\r\n            //         <Cell\r\n            //             multiline\r\n            //             onClick={this.props.openReg}\r\n            //             before={<Icon24UserOutgoing/>}\r\n            //             expandable\r\n            //         >\r\n            //             Если вы - мастер, пройдите простую процедуру регистрации\r\n            //         </Cell>\r\n            //     </FixedLayout>\r\n            //     }\r\n            //     <Separator wide />\r\n            // </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport {Group, Select, Cell, Switch, FormLayoutGroup, Link, Button, Checkbox, Textarea, FormLayout, Div, Avatar, Input} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Invite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: {},\r\n            activeMaster: {},\r\n            categories: [],\r\n            statusPhoto: false,\r\n            statusMessage: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.permMessage();\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                this.setState({categories: categories});\r\n                categories.map(category => {\r\n                    this.setState({[category._id]: false});\r\n                });\r\n                console.log('State on load', this.state)\r\n            });\r\n\r\n    }\r\n\r\n    regMaster = () => {\r\n        let cat = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n        let categories = this.state.categories;\r\n        categories.map((category, index) => {\r\n            let countCat = category.subcat.filter(\r\n                function(subcat){\r\n                    if (subcat.active === true){\r\n                        cat.subcat.push(subcat._id);\r\n                        return subcat.active;\r\n                    } else {\r\n                        return null\r\n                    }\r\n                }\r\n            );\r\n            if (countCat.length > 0) {\r\n                cat.category.push({id: category._id, label: category.label});\r\n                category.active = true;\r\n            } else {\r\n                category.active = false;\r\n            }\r\n        });\r\n\r\n        let master = {\r\n            firstname: this.props.user.firstname,\r\n            lastname: this.props.user.lastname,\r\n            description: this.state.description,\r\n            vkUid: this.props.user.vkUid,\r\n            type: this.state.type,\r\n            avatarLink: this.props.user.avatarLink,\r\n            sex: this.props.user.sex,\r\n            location: this.props.user.location,\r\n            //categories: this.state.categories,\r\n            categories: cat,\r\n            brand: this.state.brand\r\n        };\r\n        master.location.city = this.props.targetCity;\r\n        this.props.closeReg(master);\r\n    };\r\n    // permPhoto = () => {\r\n    //     bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n    //         .then(data => {\r\n    //             console.log(data);\r\n    //             this.setState({statusPhoto: data.result})\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // };\r\n    permMessage = () => {\r\n            bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 193179174, \"key\": \"dBuBKe1kFcdemzB\"})\r\n                .then(result => {\r\n                    console.log(result);\r\n                    this.setState({statusMessage: result.result})\r\n                })\r\n                .catch(e => console.log(e))\r\n    };\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        this.setState({categories: categories});\r\n    };\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n   handleChange(event) {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                    <Group>\r\n                        <FormLayout>\r\n                            <Cell\r\n                                size=\"l\"\r\n                                description=\"Регистрация мастера\"\r\n                                before={<Avatar src={this.props.user.avatarLink} size={80}/>}\r\n                            >\r\n                                {this.props.user.firstname + ' ' + this.props.user.lastname}\r\n                            </Cell>\r\n                            {/*<Cell*/}\r\n                            {/*    expandable*/}\r\n                            {/*    multiline*/}\r\n                            {/*    onClick={this.permPhoto}*/}\r\n                            {/*    description=\"Для загрузки фото в портфолио\"*/}\r\n                            {/*    bottom={this.state.statusPhoto === false && 'Доступ обязателен для регистрации'}*/}\r\n                            {/*>Доступ к загрузке фотографий в альбом приложения - {this.state.statusPhoto === true ? 'Разрешен' : 'Не разрешен'}</Cell>*/}\r\n                            <Cell\r\n                                expandable\r\n                                onClick={this.props.changeCity}\r\n                                indicator={this.props.targetCity.title || 'Не выбран'}\r\n                                status={this.props.targetCity.title ? 'valid' : 'error'}\r\n                                bottom={this.props.targetCity.title ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                            >\r\n                                Ваш город\r\n                            </Cell>\r\n                            <Cell\r\n                                expandable\r\n                                multiline\r\n                                onClick={this.permMessage}\r\n                                description=\"Для получения уведомлений о заявках\"\r\n                                status={this.state.statusMessage === true ? 'valid' : 'error'}\r\n                                bottom={this.state.statusMessage === false && 'Доступ обязателен для регистрации'}\r\n                            >Доступ на получение личных сообщений от приложения - {this.state.statusMessage=== true ? 'Разрешен' : 'Не разрешен'}</Cell>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                            <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                             bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                             id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                    name={i}\r\n                                                                    id={index}\r\n                                                                    onChange={this.checkSubcat}\r\n                                                                    checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </FormLayoutGroup>\r\n                            <Select\r\n                                name={'type'}\r\n                                value={this.state.type}\r\n                                status={this.state.type ? 'valid' : 'error'}\r\n                                bottom={this.state.type ? '' : 'Пожалуйста, укажите тип оказания услуг'}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Выберите тип оказания услуг\">\r\n                                <option value=\"Организация\">Организация</option>\r\n                                <option value=\"Частный мастер\">Частный мастер</option>\r\n                            </Select>\r\n                            {\r\n                                this.state.type === 'Организация' &&\r\n                                <FormLayoutGroup top=\"Укажите наименование организации в которой вы работаете\">\r\n                                    <Input name={'brand'} type=\"text\" value={this.state.brand} onChange={this.handleChange}/>\r\n                                </FormLayoutGroup>\r\n                            }\r\n                            <Checkbox onChange={() => this.setState({checkLicense: !this.state.checkLicense})}>Согласен\r\n                                c <Link>условиями использования приложения</Link></Checkbox>\r\n                            {this.state.checkLicense && this.state.statusMessage && this.state.description && this.state.type &&\r\n                            <Button size=\"xl\" onClick={this.regMaster}>Зарегистрироваться как мастер</Button>\r\n                            }\r\n                        </FormLayout>\r\n                    </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Invite;","import React from 'react';\r\nimport {Div, Separator, CellButton, Avatar, Cell, List, Group} from \"@vkontakte/vkui\"\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\r\nimport Icon24UserOutgoing from '@vkontakte/icons/dist/24/user_outgoing';\r\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\r\nimport Icon24Like from '@vkontakte/icons/dist/24/like';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connection: false,\r\n            user: this.props.user,\r\n            tmpUser: [],\r\n            isMaster: false,\r\n            isUser: false,\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            countFavs: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.user);\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <Div>\r\n                <Cell\r\n                    size=\"l\"\r\n                    description={this.state.user.status}\r\n                    before={<Avatar src={this.state.user.avatarLink} size={80}/>}\r\n                >\r\n                    {this.state.user.firstname+' '+this.state.user.lastname}\r\n                </Cell>\r\n                    <Group title=\"Основное\" separator={'hide'}>\r\n                        <Cell\r\n                            //expandable\r\n                            onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                            user={this.state.user}\r\n                            indicator={this.state.user.location.city.title}\r\n                        >Ваш город</Cell>\r\n                        <Separator style={{ margin: '12px 0' }} />\r\n                        <List>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Like />}\r\n                                onClick={this.props.openFavourite}\r\n                            >Избранное</Cell>\r\n                            <Cell\r\n                                expandable\r\n                                before={<Icon24Recent />}\r\n                                onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                                indicator={'В разработке'}\r\n                            >Мои записи</Cell>\r\n                        </List>\r\n                    </Group>\r\n                {this.state.user.isMaster &&\r\n                    <Group title=\"Меню мастера\">\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <List>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Users />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >Мои заявки</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24UserOutgoing />}\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={'В разработке'}\r\n                    >График</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        before={<Icon24Story />}\r\n                        onClick={this.props.openMasterPhoto}\r\n                    >Портфолио</Cell>\r\n                        <Cell\r\n                            expandable\r\n                            before={<Icon24Search />}\r\n                            onClick={this.props.openFindModel}\r\n                        >Поиск модели</Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={this.props.openSetting}\r\n                        before={<Icon24Settings />}\r\n                    >Настройки</Cell>\r\n                    </List>\r\n                    </Group>\r\n                }\r\n            </Div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lk;","import React from 'react';\r\nimport {Group, Div, File, FormLayout, CardGrid, Card, Spinner, Button, Snackbar, Cell, PanelSpinner} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from '../func/func.js';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport fetchJsonp from \"fetch-jsonp\";\r\n\r\nclass MastersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeMasterId: this.props.activeMasterId,\r\n            activeMaster: {},\r\n            photoArr: [],\r\n            isLoad: false,\r\n            photoFile: '',\r\n            images: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getToken();\r\n        console.log(this.props);\r\n        fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(activeMaster => {\r\n               this.setState({activeMaster: activeMaster[0], images: activeMaster[0].photos.reverse(), isLoad: true});\r\n               console.log(activeMaster[0]);\r\n            });\r\n    }\r\n    openSnack (text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n    openShowImages(images, index) {\r\n        bridge.send(\"VKWebAppShowImages\", {\r\n            images: images,\r\n            start_index: index\r\n        }).then(data => console.log(data));\r\n    }\r\n    uploadPhoto = () =>{\r\n        this.setState({loading: true});\r\n        const formData = new FormData();\r\n        let selectedFile = document.getElementById('input').files[0];\r\n        formData.append('master', this.state.activeMaster.firstname+' '+this.state.activeMaster.lastname );\r\n        formData.append('uploadUrl', this.state.uploadUrl);\r\n        formData.append('token', this.state.token);\r\n        formData.append('file1', selectedFile);\r\n        fetch(BACKEND.vkapi.uploadPhoto, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.openSnack(response.message);\r\n                    //console.log(response);\r\n                    fetchJsonp(response.saveUrl, {\r\n                        mode: 'no-cors',\r\n                        method: 'GET'\r\n                    })\r\n                        .then(result => result.json())\r\n                        .then(result => {\r\n                            //console.log(result);\r\n                            let newImg = result.response[0].sizes[2].url;\r\n                            let imgArr = this.state.images;\r\n                            imgArr.unshift(newImg);\r\n                            this.setState({images: imgArr});\r\n                            let data = {\r\n                                masterId: this.state.activeMaster._id,\r\n                                newImg: newImg\r\n                            };\r\n                            //console.log(data);\r\n                            fetch(BACKEND.vkapi.savePhoto, {\r\n                                mode: 'cors', // no-cors, cors, *same-origin\r\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                                credentials: 'same-origin', // include, *same-origin, omit\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                method: 'POST',\r\n                                body: JSON.stringify(data),\r\n                                redirect: 'follow', // manual, *follow, error\r\n                                referrer: 'no-referrer', // no-referrer, *client\r\n                            })\r\n                                .then(result => result.json())\r\n                                .then(result => {\r\n                                    this.openSnack(result.message);\r\n                                    this.setState({loading: false});\r\n                                })\r\n                                .catch(error => this.openSnack(error))\r\n\r\n                            })\r\n                            .catch(error => this.openSnack(error))\r\n                })\r\n                .catch(error => this.openSnack(error))\r\n\r\n    }\r\n    getUploadServer = (token) => {\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"photos.getUploadServer\",\r\n            \"params\": {\"group_id\": \"193179174\",\"album_id\": \"269622026\", \"v\":\"5.103\", \"access_token\": token}})\r\n            .then(result => {\r\n                //console.log(result.response.upload_url);\r\n                this.setState({uploadUrl: result.response.upload_url, token: token});\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    };\r\n    // getApiCall = () => {\r\n    //     bridge.send(\"VKWebAppCallAPIMethod\", {\r\n    //         \"method\": \"photos.getUploadServer\",\r\n    //         \"request_id\": \"32test\",\r\n    //         \"params\": {\"user_ids\": \"1\", \"v\":\"5.103\", \"access_token\":\"your_token\"}})\r\n    //         .then(result => console.log(result));\r\n    // }\r\n    getToken = () => {\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7170938, \"scope\": \"photos\"})\r\n            .then(data => {\r\n                //console.log('Токен '+data.access_token);\r\n                this.getUploadServer(data.access_token);\r\n                //this.setState({token: data.access_token})\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    gridPhoto() {\r\n        if (this.state.images.length > 0) {\r\n            return (\r\n                <CardGrid>\r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            //console.log(image, index);\r\n                            return (\r\n                                <Card\r\n                                    size=\"s\"\r\n                                    mode=\"shadow\"\r\n                                    key={index}\r\n                                    onClick={() => this.openShowImages(this.state.images, index)}\r\n                                >\r\n                                    <div style={{height: 96, backgroundImage: 'url('+image+')', backgroundSize: 'cover'}} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </ CardGrid>\r\n            )\r\n        } else {\r\n            return (<Cell>В вашем портфолио нет фотографий</Cell>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoad===false){\r\n            return (\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    {\r\n                        this.state.loading ? <Div><Cell multiline>Подождите немного... Фотография сохраняется</Cell><PanelSpinner /></Div>: <Group title=\"\">\r\n                            <FormLayout>\r\n                                <File\r\n                                    top=\"Добавьте фото в портфолио\"\r\n                                    before={<Icon24Camera />}\r\n                                    size=\"l\"\r\n                                    onChange={this.uploadPhoto}\r\n                                    id=\"input\"\r\n                                >\r\n                                    Открыть галерею\r\n                                </File>\r\n                            </FormLayout>\r\n                            <Group separator=\"hide\">\r\n                                {this.gridPhoto()}\r\n                            </Group>\r\n                        </Group>\r\n                    }\r\n                    {this.state.snackbar}\r\n                </Div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MastersCard;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityListModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityListModal)","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div,\r\n    Avatar,\r\n    Cell,\r\n    FormLayout,\r\n    Textarea,\r\n    Switch,\r\n    FormLayoutGroup,\r\n    List,\r\n    Button,\r\n    CellButton,\r\n    Input,\r\n    Spinner,\r\n    Snackbar,\r\n    Tooltip,\r\n    CardGrid,\r\n    Card,\r\n    ModalPage,\r\n    ModalPageHeader,\r\n    ANDROID,\r\n    PanelHeaderButton, IOS, ModalRoot, platform, withModalRootContext\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from '../func/func';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport CityListModal from \"../elements/cityListModal\";\r\n\r\nconst osname = platform();\r\n\r\nclass Lk extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: 'non info',\r\n            tooltip: true,\r\n            popout: null,\r\n            vkuid: '',\r\n            activeMaster: {\r\n                priceList: [],\r\n                showProfile: false\r\n            },\r\n            count: {\r\n                manicureStatus: 0,\r\n                pedicureStatus: 0,\r\n                eyelashesStatus: 0,\r\n                eyebrowsStatus: 0,\r\n                shugaringStatus: 0,\r\n                hairStatus: 0,\r\n                cosmeticStatus: 0\r\n            },\r\n            category: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        fetch(BACKEND.category.getAll)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                fetch(BACKEND.masters.vkuid + this.props.user.vkUid)\r\n                    .then(res => res.json())\r\n                    .then(activeMaster => {\r\n                        if (this.props.targetCity === typeof Object) {\r\n                            activeMaster.location.city = this.props.targetCity;\r\n                        }\r\n                        this.setState({activeMaster: activeMaster[0], description: activeMaster[0].description, categories: categories});\r\n                        this.setActive(categories)\r\n                    });\r\n            });\r\n    }\r\n\r\n    saveChanges = () => {\r\n        console.log('saving');\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster);\r\n        this.props.snackbar('Изменения сохранены');\r\n    };\r\n\r\n    setActive(categories){\r\n        categories.map(category => {\r\n            this.setState({[category._id]: false});\r\n            category.subcat.map(subcat => {\r\n                if (this.state.activeMaster.categories.subcat.includes(subcat._id)){\r\n                    subcat.active = true;\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    patchData(url = '', activeMaster = {}) {\r\n        activeMaster.description = this.state.description;\r\n        activeMaster.categories = {\r\n            subcat: [],\r\n            category: []\r\n        };\r\n            this.state.categories.map(category => {\r\n                if (category.active === true) {\r\n                    activeMaster.categories.category.push({id: category._id, label: category.label})\r\n                }\r\n                category.subcat.map(subcat=> {\r\n                    if (subcat.active === true) {\r\n                        activeMaster.categories.subcat.push(subcat._id);\r\n                    }\r\n                })\r\n        });\r\n        activeMaster.location.city = this.props.targetCity;\r\n        console.log(activeMaster);\r\n        // Значения по умолчанию обозначены знаком *\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(activeMaster), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.modalBack();\r\n                this.props.snackbar('Изменения сохранены');\r\n                //this.props.popout();\r\n                //console.log(activeMaster);\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n\r\n    // openSnack (text) {\r\n    //     const blueBackground = {\r\n    //         backgroundColor: 'var(--accent)'\r\n    //     };\r\n    //     if (this.state.snackbar) return;\r\n    //     this.setState({ snackbar:\r\n    //             <Snackbar\r\n    //                 layout=\"vertical\"\r\n    //                 onClose={() => this.setState({ snackbar: null })}\r\n    //                 before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n    //             >\r\n    //                 {text}\r\n    //             </Snackbar>\r\n    //     });\r\n    // }\r\n    visible = event => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster[name] = !activeMaster[name];\r\n        this.setState({activeMaster: activeMaster});\r\n    };\r\n    onRemove = (index) => {\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList = [...this.state.activeMaster.priceList.slice(0, index), ...this.state.activeMaster.priceList.slice(index + 1)];\r\n        this.setState({activeMaster: activeMaster});\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n        this.openSnack(\"Процедура удалена\")\r\n    };\r\n    addProd = (status) => {\r\n        this.setState({add: status})\r\n    };\r\n    saveProd = (title, body, price) => {\r\n        //console.log(title, body, price);\r\n        let activeMaster = this.state.activeMaster;\r\n        activeMaster.priceList.push({\r\n            title: this.state.newProdTitle,\r\n            body: this.state.newProdBody,\r\n            price: this.state.newProdPrice\r\n        });\r\n        this.setState({activeMaster: activeMaster});\r\n        this.setState({add: false, newProdTitle: '', newProdBody: '', newProdPrice: ''});\r\n        //console.log(this.state.activeMaster);\r\n        this.patchData(BACKEND.masters.all + this.state.activeMaster._id, this.state.activeMaster)\r\n    }\r\n\r\n    counter = (index) => {\r\n        let countMass = this.state.categories[index].subcat.filter(\r\n            function(item){\r\n                if (item.active === true){\r\n                    return item.active;\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        );\r\n        return countMass.length;\r\n    };\r\n    checkBan = () => {\r\n        if (this.state.activeMaster.banned.status === true) {\r\n            return (\r\n                <Cell multiline>Ваш профиль сейчас не выводится в поиске, так-как обнаружены нарушения. Для возобновления доступа - исправьте их. Информация отправлена в личные сообщения.</Cell>\r\n            )\r\n        } else {\r\n            return (\r\n                <Cell\r\n                    asideContent={<Switch\r\n                        name={'visible'}\r\n                        onChange={this.visible}\r\n                        checked={this.state.activeMaster.visible}/>}>\r\n                    Показывать профиль в поиске\r\n                </Cell>\r\n            )\r\n        }\r\n    };\r\n\r\n    checkSubcat = event => {\r\n        const target = event.target;\r\n        const indexCat = target.name;\r\n        const indexSubcat = target.id;\r\n        let categories = this.state.categories;\r\n        categories[indexCat].subcat[indexSubcat].active = !this.state.categories[indexCat].subcat[indexSubcat].active;\r\n        if (this.counter(indexCat) > 0) {\r\n            this.state.categories[indexCat].active = true;\r\n        } else {\r\n            this.state.categories[indexCat].active = false;\r\n        }\r\n        this.setState({categories: categories})\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.activeMaster._id) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                <Spinner size=\"large\" style={{marginTop: 120}}/>\r\n            </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <ModalRoot\r\n                    activeModal={this.props.activeModal}\r\n                    onClose={this.saveChanges}\r\n                >\r\n                    <ModalPage dynamicContentHeight\r\n                        id={'setting'}\r\n                        onClose={this.saveChanges}\r\n                        header={\r\n                            <ModalPageHeader\r\n                                left={osname === ANDROID &&\r\n                                <PanelHeaderButton onClick={this.saveChanges}>{'Сохранить'}</PanelHeaderButton>}\r\n                                right={<PanelHeaderButton onClick={this.saveChanges}>{osname === IOS ? 'Сохранить' :\r\n                                    <Icon24Done/>}</PanelHeaderButton>}\r\n                            >\r\n                                Настройки\r\n                            </ModalPageHeader>\r\n                        }\r\n                    >\r\n                <Div>\r\n                    <Cell\r\n                        size=\"l\"\r\n                        description={\r\n                            this.state.activeMaster.visible ? 'Ваш профиль доступен в поиске' : 'Ваш профиль не выводится в поиске'\r\n                        }\r\n                        before={<Avatar src={this.state.activeMaster.avatarLink} size={80}/>}\r\n                    >\r\n                        {this.state.activeMaster.firstname + ' ' + this.state.activeMaster.lastname}\r\n                    </Cell>\r\n                    <Cell\r\n                        expandable\r\n                        onClick={() => this.props.changeModal('changeCity')}\r\n                        indicator={this.props.targetCity==='Не определен' ? this.state.activeMaster.location.city.title : this.props.targetCity.title}\r\n                        bottom={this.props.targetCity==='Не определен' ? '' : 'Не забудьте сохранить изменения нажав на кнопку внизу страницы'}\r\n                    >\r\n                        Ваш город\r\n                    </Cell>\r\n                    <Group>\r\n                        {this.checkBan()}\r\n                    </Group>\r\n                    <Group title={'Прайс-лист'}>\r\n                    {this.state.activeMaster.priceList.length === 0 &&\r\n                    <Cell multiline>Вы еще не указали ни одной процедуры. Пока они не указаны, пользователи не смогут связаться с Вами.</Cell>\r\n                    }\r\n                        <CardGrid>\r\n                    {this.state.activeMaster.priceList.map((item, index) => (\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell\r\n                                    key={item}\r\n                                    multiline\r\n                                    //onClick={() => this.setState({pedicureVisible: !this.state.pedicureVisible})}\r\n                                    removable\r\n                                    onRemove={() => {\r\n                                        this.onRemove(index)\r\n                                    }}>\r\n                                    <Cell\r\n                                        description=\"Название процедуры\">{this.state.activeMaster.priceList[index].title}</Cell>\r\n                                    <Cell description=\"Краткое описание процедуры\"\r\n                                          multiline>{this.state.activeMaster.priceList[index].body}</Cell>\r\n                                    <Cell\r\n                                        description=\"Минимальная цена за работу\">{this.state.activeMaster.priceList[index].price}</Cell>\r\n                                </Cell>\r\n                            </Card>\r\n                    ))}\r\n                        </CardGrid>\r\n                    {this.state.add &&\r\n                    <Div>\r\n                        <Cell description=\"Добавления нового элемента\" multiline>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdTitle\"\r\n                                type=\"text\"\r\n                                value={this.state.newProdTitle}\r\n                                placeholder={'Введите название'}\r\n                                onChange={this.handleChange}/>\r\n                            <Textarea\r\n                                require\r\n                                name=\"newProdBody\"\r\n                                value={this.state.newProdBody}\r\n                                placeholder={'Укажите описание'}\r\n                                onChange={this.handleChange}/>\r\n                            <Input\r\n                                require\r\n                                name=\"newProdPrice\"\r\n                                type=\"number\" value={this.state.newProdPrice}\r\n                                placeholder={'Укажите цену'}\r\n                                onChange={this.handleChange}/>\r\n                        </Cell>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                                    onClick={() => this.saveProd()}>Сохранить</Button>\r\n                            <Button size=\"l\" stretched mode=\"destructive\"\r\n                                    onClick={() => this.addProd(false)}>Отменить</Button>\r\n                        </Div>\r\n                    </Div>\r\n                    }\r\n                    </Group>\r\n                    <Group>\r\n                        <CellButton\r\n                            onClick={() => this.addProd(true)}\r\n                            before={<Icon24Add/>}\r\n                        >Добавить процедуру</CellButton>\r\n                    </Group>\r\n                    <Group>\r\n                        <FormLayout onSubmit={this.handleSubmit}>\r\n                            <Textarea\r\n                                name={'description'}\r\n                                status={this.state.description ? 'valid' : 'error'}\r\n                                bottom={this.state.description ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                                top=\"О себе\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}/>\r\n                        </ FormLayout>\r\n                        <FormLayoutGroup top=\"Сфера деятельности\"\r\n                                         bottom=\"Укажите вид работы, в соответствии с тем, что вы выполняете. Так вас будет проще найти.\"\r\n                                         id={'category'}>\r\n                            {\r\n                                this.state.categories.map((category, i) => {\r\n                                    return (\r\n                                        <Group key={category._id}>\r\n                                            <Cell expandable name={category._id}\r\n                                                  onClick={() => this.setState({[category._id]: !this.state[category._id]})}\r\n                                                  indicator={\r\n                                                      'Выбрано: ' + this.counter(i)\r\n                                                  }>\r\n                                                {category.label}\r\n                                            </Cell>\r\n                                            {this.state[category._id] &&\r\n                                            <Div>\r\n                                                {\r\n                                                    category.subcat.map((subcategory, index, category)=>{\r\n                                                        return (\r\n                                                            <Cell\r\n                                                                key={index}\r\n                                                                asideContent={\r\n                                                                    <Switch\r\n                                                                        name={i}\r\n                                                                        id={index}\r\n                                                                        onChange={this.checkSubcat}\r\n                                                                        checked={subcategory.active}/>\r\n                                                                }>\r\n                                                                {subcategory.label}\r\n                                                            </Cell>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Div>\r\n                                            }\r\n                                        </Group>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </FormLayoutGroup>\r\n                    </Group>\r\n                </Div>\r\n                    </ModalPage>\r\n                    <ModalPage dynamicContentHeight\r\n                        id={'changeCity'}\r\n                        onClose={() => this.props.changeModal('setting')}\r\n                        header={\r\n                            <ModalPageHeader\r\n                                left={osname === ANDROID &&\r\n                                <PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{'Назад'}</PanelHeaderButton>}\r\n                                right={<PanelHeaderButton onClick={() => this.props.changeModal('setting')}>{osname === IOS ? 'Назад' :\r\n                                    <Icon24Done/>}</PanelHeaderButton>}\r\n                            >\r\n                                Выбор города\r\n                            </ModalPageHeader>\r\n                        }\r\n                    >\r\n                        <CityListModal dynamicContentHeight\r\n                            changeTargetCity={(city) => this.props.changeCity(city)}\r\n                        />\r\n                    </ModalPage>\r\n                </ModalRoot>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withModalRootContext (Lk);","import React from 'react';\r\nimport {\r\n    Group,\r\n    Div, Separator, Cell, Avatar, Spinner, Card, CardGrid, FixedLayout\r\n} from \"@vkontakte/vkui\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon16LikeOutline from '@vkontakte/icons/dist/16/like_outline';\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favsArr: [],\r\n            mastersArr: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadFavsMasters(this.props.user);\r\n    }\r\n\r\n    loadFavsMasters = (user) => {\r\n        fetch(BACKEND.favs.user + user._id)\r\n            .then(res => res.json())\r\n            .then(favsArr => {\r\n                if(favsArr.length === 0){\r\n                    this.setState({isLoaded: true});\r\n                } else {\r\n                    favsArr.map(fav => {\r\n                        fetch(BACKEND.masters.onID + fav.masterId)\r\n                            .then(res => res.json())\r\n                            .then(master => {\r\n                                let mastersArr = this.state.mastersArr;\r\n                                mastersArr.push(master);\r\n                                this.setState({mastersArr: mastersArr, isLoaded: true});\r\n                            });\r\n                        //this.setState({isLoaded: true});\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded === false) {\r\n            return (\r\n                <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <Spinner size=\"large\" style={{marginTop: 20}}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if(this.state.mastersArr.length === 0) {\r\n                return (\r\n                        <CardGrid>\r\n                            <Card size=\"l\" mode=\"shadow\">\r\n                                <Cell multiline align=\"center\">\r\n                                    Список избранного пуст\r\n                                </Cell>\r\n                            </Card>\r\n                        </CardGrid>\r\n                )\r\n            } else {\r\n                console.log(this.state.mastersArr);\r\n                return (\r\n                    this.state.mastersArr.map(master => {\r\n                        if ((master !== null) && (master.visible === true)) { //если мастер не удален\r\n                            return (\r\n                                <CardGrid key={master._id}>\r\n                                    <Card size=\"l\" mode=\"shadow\">\r\n                                        <Cell expandable\r\n                                              photo={master.avatarLink}\r\n                                              description={master.type}\r\n                                              before={<Avatar src={master.avatarLink} size={50}/>}\r\n                                              size=\"l\"\r\n                                              onClick={() => this.props.openFavMasterOnId(master._id)}\r\n                                        >{master.firstname} {master.lastname}\r\n                                        </Cell>\r\n                                    </Card>\r\n                                </CardGrid>\r\n                            )\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Favourite;","import React from 'react';\r\nimport {Avatar, Cell, Div, Group, Separator, Spinner, Placeholder, Button} from \"@vkontakte/vkui\"\r\nimport {BACKEND} from \"../func/func\";\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\n\r\nclass FindModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: this.props.category, //{id: '1', label: 'Маникюр'},\r\n            mastersList: [],\r\n            title: '',\r\n            master: {\r\n                vkUid: 9999999999,\r\n                avatarLink: \"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\",\r\n                firstname: 'Евгения',\r\n                lastname: 'Плюхова'\r\n            },\r\n            findArr: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.user);\r\n        fetch(BACKEND.findModel.onCity+this.props.user.location.city.id)//ловим обьявления по городу юзера\r\n            .then(res => res.json())\r\n            .then(find => {\r\n                console.log(find);\r\n                this.setState({findArr: find});\r\n                console.log('Найдено '+find.length);\r\n                this.setState({isLoad: true})\r\n            });\r\n    }\r\n    share = () => {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": 'https://m.vk.com/app7170938_199500866'})\r\n            .then(result => this.openSnackAvatar('Карточка мастера отправлена.', this.state.activeMaster.avatarLink))\r\n    };\r\n    findList = () => {\r\n        if (this.state.findArr.length === 0) {\r\n            return (\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header=\"Не расстраивайтесь\"\r\n                    action={<Button onClick={this.share} size=\"l\">Поделиться</Button>}\r\n                >\r\n                    В данный момент в городе {this.props.user.location.city.title} нет поиска моделей. Мы расширяем базу мастеров, и скоро - предложения появятся.\r\n                    Поделитесь приложением с мастерами, которых Вы знаете.\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                this.state.findArr.map(find => {\r\n                    return (\r\n                        <Group key={find._id}>\r\n                            <Separator style={{ margin: '12px 0' }} />\r\n                            <Cell expandable\r\n                                  photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                // description={'Место под категории'}\r\n                                  before={<Avatar src={find.avatarLink} size={50}/>}\r\n                                  size=\"l\"\r\n                                  onClick={() => this.props.openMasterOnId(find.masterId)}\r\n                                  bottom=\"\"\r\n                            >{find.firstname} {find.lastname}\r\n                            </Cell>\r\n                            <Cell multiline>\r\n                                {find.body}\r\n                            </Cell>\r\n                        </Group>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n    render(){\r\n        if (this.state.isLoad === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <Div>\r\n                    <Cell\r\n                        //expandable\r\n                        onClick={() => this.setState({ activePanel: 'nothing' })}\r\n                        indicator={this.props.user.location.city.title}>Ваш город</Cell>\r\n                    {this.findList()}\r\n                </Div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindModel;","import React from 'react';\r\nimport {\r\n    FormLayout,\r\n    Button,\r\n    Cell,\r\n    Group,\r\n    FormLayoutGroup,\r\n    Textarea,\r\n    Separator,\r\n    Avatar,\r\n    Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport {BACKEND} from \"../func/func\";\r\n\r\n\r\nclass FindModelMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            master: '',\r\n            body: '',\r\n            loadFind: '',\r\n            isLoaded: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(BACKEND.masters.vkuid+this.props.user.vkUid)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({master: master[0]});\r\n                fetch(BACKEND.findModel.onMasterId+master[0]._id)\r\n                    .then(res => res.json())\r\n                    .then(find => {\r\n                        this.setState({findArr: find, isLoaded: true});\r\n                        if (find.length > 0) {\r\n                            this.setState({body: find[0].body, loadFind: find[0]});\r\n                            let activeFind =\r\n                                <Group>\r\n                                    <Cell>Ваш активный поиск</Cell>\r\n                                    <Separator style={{ margin: '12px 0' }} />\r\n                                    <Cell expandable\r\n                                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                                          description={'desf'}\r\n                                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                                          size=\"l\"\r\n                                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                                    </Cell>\r\n                                    <Cell multiline>\r\n                                        {this.state.findArr[0].body}\r\n                                    </Cell>\r\n                                </Group>\r\n                            ;\r\n                            this.setState({activeFind: activeFind});\r\n                        } else {\r\n                            let activeFind = <Cell>У вас нет активных поисков</Cell>;\r\n                            this.setState({activeFind: activeFind});\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    save=()=>{\r\n        let find = {\r\n            masterId: this.state.master._id,\r\n            body: this.state.body,\r\n            location: this.state.master.location,\r\n            firstname: this.state.master.firstname,\r\n            lastname: this.state.master.lastname,\r\n            avatarLink: this.state.master.avatarLink\r\n        };\r\n        console.log(BACKEND.findModel.new+this.state.loadFind._id);\r\n        if (this.state.loadFind._id) {\r\n            this.patchData(BACKEND.findModel.new+this.state.loadFind._id, find);\r\n            let activeFind =\r\n                <Group>\r\n                    <Cell>Ваш активный поиск</Cell>\r\n                    <Separator style={{ margin: '12px 0' }} />\r\n                    <Cell expandable\r\n                          photo=\"https://pp.userapi.com/c841034/v841034569/3b8c1/pt3sOw_qhfg.jpg\"\r\n                          description={'desf'}\r\n                          before={<Avatar src={this.state.master.avatarLink} size={50}/>}\r\n                          size=\"l\"\r\n                    >{this.state.master.firstname} {this.state.master.lastname}\r\n                    </Cell>\r\n                    <Cell multiline>\r\n                        {find.body}\r\n                    </Cell>\r\n                </Group>\r\n            ;\r\n            this.setState({activeFind: activeFind});\r\n        } else {\r\n            this.postData(BACKEND.findModel.new, find);\r\n        }\r\n    }\r\n    patchData(url = '', data = {}) {\r\n        return fetch(url, {\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(response => {\r\n                console.log(response.json());\r\n                this.props.popout();\r\n            }); // парсит JSON ответ в Javascript объект\r\n    }\r\n    postData(url = '', data = {}) {\r\n        // Значения по умолчанию обозначены знаком *\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, cors, *same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrer: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n        })\r\n            .then(data)\r\n            .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n\r\n    }\r\n    render(){\r\n        if (this.state.isLoaded === false){\r\n            return (<Spinner size=\"large\" style={{ marginTop: 20 }} />)\r\n        } else {\r\n            return (\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Cell>Добавить / изменить</Cell>\r\n                        <Textarea\r\n                            name={'body'}\r\n                            bottom={this.state.body ? '' : 'Пожалуйста, напишите пару слов о себе'}\r\n                            top=\"О себе\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}/>\r\n                    </FormLayoutGroup>\r\n                    <Button size=\"xl\" onClick={this.save}>Сохранить</Button>\r\n                    {this.state.activeFind}\r\n                </FormLayout>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FindModelMaster;","import React from 'react';\r\nimport {Cell, List, Search, withModalRootContext } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CityList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            cities: [{id:1, title: 'City'}]\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n    }\r\n    static propTypes = {\r\n        // Сообщает ModalRoot, что высота модальной страницы могла измениться\r\n        updateModalHeight: PropTypes.func,\r\n    };\r\n    componentDidMount() {\r\n        this.getCities()\r\n    }\r\n\r\n    getCities() {\r\n        const search = this.state.search.toLowerCase();\r\n        const token = '17e5eb3d17e5eb3d17e5eb3dee17888047117e517e5eb3d4a4130ddab66ef8955df224b';\r\n        bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"database.getCities\",\r\n            \"params\": {\r\n                \"country_id\": 1,\r\n                \"q\": search,\r\n                \"v\": \"5.103\",\r\n                \"access_token\": token\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result.response);\r\n                this.setState({cities: result.response.items}, () => this.props.updateModalHeight())\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({search: e.target.value});\r\n        this.getCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n                {this.state.cities.length > 0 &&\r\n                <List>\r\n                    {this.state.cities.map(city =>\r\n                        <Cell\r\n                            description={city.region || ''}\r\n                            onClick={()=>this.props.changeTargetCity(city)}\r\n                            key={city.id}\r\n                        >\r\n                            {city.title}\r\n                        </Cell>\r\n                    )}\r\n                </List>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withModalRootContext (CityList)","import {BACKEND} from \"../func/func\";\r\n\r\nfunction verifiedUser(vkUser) {\r\n    return fetch(BACKEND.users + '/vkuid/' + vkUser.id)\r\n        .then(res => res.json())\r\n        .then(usersArr => {\r\n            if (usersArr.length === 0) {\r\n                console.log('Пользователь зашел впервые');\r\n                this.regNewUser();\r\n            } else {\r\n                console.log('Пользователь уже заходил в приложение');\r\n                let targetCity = usersArr[0].city !== typeof Object ? 'Не выбрано' : usersArr[0].city;\r\n                //this.setState({user: usersArr[0], targetCity: targetCity});\r\n                return {user: usersArr[0], targetCity: targetCity}\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error); // Error: Not Found\r\n        });\r\n}\r\nfunction postData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(data)\r\n        .then(response => console.log(response.json())); // парсит JSON ответ в Javascript объект\r\n}\r\nfunction patchData(url = '', data = {}) {\r\n    // Значения по умолчанию обозначены знаком *\r\n    return fetch(url, {\r\n        method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    })\r\n        .then(response => {\r\n            console.log(response.json());\r\n        }); // парсит JSON ответ в Javascript объект\r\n}\r\nexport {verifiedUser, postData, patchData}","import React from 'react';\r\nimport {\r\n    Alert,\r\n    Cell,\r\n    Epic,\r\n    FormLayout,\r\n    Group,\r\n    List,\r\n    Panel,\r\n    PanelHeader,\r\n    Placeholder,\r\n    Root,\r\n    Search,\r\n    SelectMimicry,\r\n    Spinner,\r\n    Tabbar,\r\n    TabbarItem,\r\n    View, ModalRoot, ModalPage, ModalPageHeader, PanelHeaderButton, IOS, ANDROID, platform, Snackbar, Avatar,ModalCard\r\n} from '@vkontakte/vkui';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification.js';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more.js';\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Head from './js/elements/panelHeader';\r\n//import Sale from './js/sale/sale.js';\r\nimport PanelMasterList from './js/masters/panelMasterList.js';\r\nimport MasterCard from './js/masters/mastersCard.js';\r\nimport MasterPhoto from './js/masters/mastersPhoto.js';\r\nimport MasterComments from './js/masters/mastersComments.js';\r\n//import Idea from './js/idea/idea.js';\r\nimport News from './js/news/news.js';\r\nimport Invite from './js/lk/invite.js';\r\nimport Lk from './js/lk/lk.js'\r\nimport Portfolio from './js/lk/portfolio.js'\r\nimport Setting from './js/lk/setting.js';\r\nimport Favourite from './js/lk/favourite.js';\r\nimport FindModel from \"./js/findmodel/findModel\";\r\nimport FindModelMaster from \"./js/lk/findModelMaster\";\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport {BACKEND} from \"./js/func/func\";\r\nimport CityList from './js/elements/cityList'\r\n//import bridge from \"@vkontakte/vk-bridge-mock\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport CityListModal from \"./js/elements/cityListModal\";\r\nimport {verifiedUser, postData, patchData} from './js/elements/functions'\r\n\r\nconst osname = platform();\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            activeStory: 'news',\r\n            activePanelFindModels: 'findmodel',\r\n            activePanelMasters: 'mastersList',\r\n            activeMasterId: '',\r\n            activeViewMasters: 'mastersList',\r\n            activeViewLk: 'lk',\r\n            activePanelLk: 'lk',\r\n            targetCategory: '',\r\n            catRu: {\r\n                Manicure: 'Маникюр',\r\n                Pedicure: 'Педикюр',\r\n                Eyelashes: 'Ресницы',\r\n                Eyebrows: 'Брови',\r\n                Shugaring: 'Шугаринг',\r\n                Hairstyles: 'Уход за волосами'\r\n            },\r\n            mastersList: null,\r\n            categories: [\r\n                {id: '5e37537a58b85c13bcffb8b4', label: 'Маникюр'},\r\n                {id: '5e3753be58b85c13bcffb8b5', label: 'Педикюр'},\r\n                {id: '5e3753c458b85c13bcffb8b6', label: 'Ресницы'},\r\n                {id: '5e3753c858b85c13bcffb8b7', label: 'Брови'},\r\n                {id: '5e3753cd58b85c13bcffb8b8', label: 'Шугаринг'},\r\n                {id: '5e3753d558b85c13bcffb8b9', label: 'Уход за волосами'},\r\n                {id: '5e3753dc58b85c13bcffb8ba', label: 'Косметология'},\r\n            ],\r\n            activePanelReg: 'registration',\r\n            baseCities: '',\r\n            searchCity: '',\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            targetCity: 'Не выбрано'\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.modalBack = () => {\r\n            this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        bridge.send('VKWebAppGetUserInfo', {})\r\n            .then(data => {\r\n                //console.log(data);\r\n                //this.setState({vkuser: data});\r\n                verifiedUser(data).then(result=>{\r\n                    this.setState({user: result.user, targetCity: result.targetCity});\r\n                    console.log('юзер из бд '+result.user)\r\n                });\r\n            });\r\n        if (this.props.params) {\r\n            postData(BACKEND.logs.params, this.props.params);\r\n        }\r\n        if (this.props.linkParams.masterid) {\r\n            console.log('В параметры пришел мастер');\r\n            this.openMasterOnLink(this.props.linkParams.masterid)\r\n        }\r\n        this.loadCategories();\r\n        console.log('Таргет город '+this.state.targetCity)\r\n    }\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n\r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n    };\r\n\r\n    openSnack(text) {\r\n        const blueBackground = {\r\n            backgroundColor: 'var(--accent)'\r\n        };\r\n        if (this.state.snackbar) return;\r\n        this.setState({\r\n            snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({snackbar: null})}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14}\r\n                                                                                 height={14}/></Avatar>}\r\n                >\r\n                    {text}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n    loadCategories = () => {\r\n        fetch(BACKEND.category.getAll)\r\n            .then(res => res.json())\r\n            .then(categories => {\r\n                let catArr = categories.map(category => {\r\n                    return {id: category._id, label: category.label}\r\n                });\r\n                catArr.unshift({id: 'all', label: 'Мастера всех категорий'});\r\n                console.log(catArr);\r\n                this.setState({categories: catArr})\r\n            })\r\n            .catch(error => {\r\n                console.log(error); // Error: Not Found\r\n            });\r\n    }\r\n    // changeCity = (e) => {\r\n    //     this.setState({searchCity: e.target.value});\r\n    // };\r\n    regNewUser = () => {\r\n        bridge.send('VKWebAppGetUserInfo', {}).then(data => {\r\n            console.log('Данные с моста', data);\r\n            const user = {\r\n                vkUid: data.id,\r\n                firstname: data.first_name,\r\n                lastname: data.last_name,\r\n                avatarLink: data.photo_200,\r\n                sex: data.sex,\r\n                location: {\r\n                    country: data.country || 'Не определен',\r\n                    city: data.city || 'Не определен'\r\n                },\r\n                isMaster: false\r\n            };\r\n            this.setState({user: user});\r\n            postData(BACKEND.users, user); //регитрируем\r\n        });\r\n    };\r\n\r\n    openAlert = (title, body, action) => {\r\n        this.setState({\r\n            popout:\r\n                <Alert\r\n                    actionsLayout=\"vertical\"\r\n                    actions={[{\r\n                        title: action || 'Закрыть',\r\n                        autoclose: true,\r\n                        mode: 'cancel'\r\n                    }]}\r\n                    onClose={() => this.setState({popout: null})}\r\n                >\r\n                    <h2>{title || 'Изменения сохранены'}</h2>\r\n                    <p>{body || 'Изменения вступят в силу в течении 2-х минут'}</p>\r\n                </Alert>\r\n        });\r\n    };\r\n    // closeAlert = () => {\r\n    //     this.setState({ popout: null });\r\n    // };\r\n    closeReg = (master) => {\r\n        console.log(master);\r\n        postData(BACKEND.masters.all, master);\r\n        let user = this.state.user;\r\n        user.isMaster = true;\r\n        this.setState({user: user, activeViewLk: 'lk'});\r\n        // //this.verifiedUser(master); //проходит до запроса в БД пофиксить\r\n    };\r\n    // change = (story, view, panel) => {\r\n    //     this.setState({ story: story });\r\n    //     this.setState({ story: story });\r\n    //     this.setState({ story: story });\r\n    // };\r\n    openPanelMaster = (panelName, master) => {\r\n        this.setState({activePanelMasters: panelName});\r\n        this.setState({activeMaster: master});\r\n    };\r\n    // openMaster = (master) => {\r\n    //     this.setState({ activeViewMasters: 'mastersList' });\r\n    //     this.setState({ activeStory: 'masters' });\r\n    //     this.setState({ activePanelMasters: 'masterInfo' });\r\n    //     this.setState({ activeMaster: master });\r\n    // };\r\n    openMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({activeMaster: master});\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({activePanelFindModels: 'masterInfo'});\r\n            });\r\n    };\r\n    openMasterOnLink = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                console.log(master);\r\n                this.setState({activeMaster: master});\r\n                this.setState({activeStory: 'masters'});\r\n                this.setState({activeViewMasters: 'mastersList'});\r\n                this.setState({activePanelMasters: 'masterInfo'});\r\n            });\r\n    };\r\n    openFavMasterOnId = (masterId) => {\r\n        fetch(BACKEND.masters.onID + masterId)\r\n            .then(res => res.json())\r\n            .then(master => {\r\n                this.setState({activeMaster: master});\r\n                //this.setState({ activeViewMasters: 'mastersList' });\r\n                //this.setState({ activeStory: 'masters' });\r\n                this.setState({activePanelLk: 'masterInfo'});\r\n            });\r\n    };\r\n    activePanelMasters = (name) => {\r\n        this.setState({activePanelMasters: name});\r\n        console.log(this.state.activePanelMasters);\r\n    };\r\n    openStory = (storyName) => {\r\n        this.setState({activeStory: storyName})\r\n    };\r\n\r\n    onStoryChange(e) {\r\n        this.setState({activeStory: e.currentTarget.dataset.story})\r\n    }\r\n\r\n    changeTargetCity(city){\r\n        this.setState({targetCity: city}, () => this.setActiveModal(null));\r\n        let user = this.state.user;\r\n        user.location.city = city;\r\n        patchData(BACKEND.users+'/'+user._id, user).then(result=>console.log(result));\r\n    }\r\n\r\n    render() {\r\n        const setting = (\r\n            <Setting\r\n                snackbar={(message) => this.openSnack(message)}\r\n                modalBack={this.modalBack}\r\n                activeModal={this.state.activeModal}\r\n                targetCity={this.state.targetCity}\r\n                user={this.state.user}\r\n                //popout={this.openAlert}\r\n                changeCity={(city) => this.setState({targetCity: city}, () => this.setActiveModal('setting'))}\r\n                changeModal={(name) => this.setActiveModal(name)}\r\n            />\r\n        );\r\n        const searchFilter = (\r\n            <ModalRoot\r\n                activeModal={this.state.activeModal}\r\n                onClose={()=>this.setActiveModal(null)}\r\n            >\r\n                <ModalPage dynamicContentHeight\r\n                           id={'cityChange'}\r\n                           onClose={()=>this.setActiveModal(null)}\r\n                           header={<ModalPageHeader>Выберите город</ModalPageHeader>}\r\n                >\r\n                    <CityListModal changeTargetCity={(city)=>this.changeTargetCity(city)}/>\r\n                </ModalPage>\r\n                <ModalCard\r\n                    id={'filter'}\r\n                    onClose={() => this.setActiveModal(null)}\r\n                    //icon={<Icon56NotificationOutline />}\r\n                    header=\"Фильтры1\"\r\n                    actions={[{\r\n                        title: 'Запретить',\r\n                        mode: 'secondary',\r\n                        action: () => this.setActiveModal(null)\r\n                    }, {\r\n                        title: 'Разрешить',\r\n                        mode: 'primary',\r\n                        action: () => this.setActiveModal(null)\r\n                    }]}\r\n                />\r\n            </ModalRoot>\r\n        );\r\n        if (this.state.user === '') {\r\n            return (\r\n                <Placeholder icon={<Spinner size=\"large\" style={{marginTop: 20}}/>}>\r\n                    Выполняется вход...\r\n                </Placeholder>\r\n            )\r\n        } else {\r\n            return (\r\n                <Epic activeStory={this.state.activeStory} tabbar={\r\n                    <Tabbar>\r\n                        {\r\n                            /*<TabbarItem\r\n                                onClick={this.onStoryChange}\r\n                                selected={this.state.activeStory === 'sale'}\r\n                                data-story=\"sale\"\r\n                                text=\"Акции\"\r\n                            ><Icon28FireOutline /></TabbarItem>*/\r\n                        }\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'news'}\r\n                            data-story=\"news\"\r\n                            text=\"News\"\r\n                        ><Icon28FireOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'masters'}\r\n                            data-story=\"masters\"\r\n                            text=\"Мастера\"\r\n                        ><Icon28ServicesOutline/></TabbarItem>\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'findmodel'}\r\n                            data-story=\"findmodel\"\r\n                            text=\"Ищу модель\"\r\n                        ><Icon28Notifications/></TabbarItem>\r\n                        {/*<TabbarItem*/}\r\n                        {/*    onClick={this.onStoryChange}*/}\r\n                        {/*    selected={this.state.activeStory === 'idea'}*/}\r\n                        {/*    data-story=\"idea\"*/}\r\n                        {/*    text=\"Идеи\"*/}\r\n                        {/*><Icon28HelpOutline /></TabbarItem>*/}\r\n                        {\r\n                            /*\r\n                            <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'notifications'}\r\n                            data-story=\"notifications\"\r\n                            text=\"Уведомлен.\"\r\n                            label=\"1\"\r\n                        ><Icon28Notifications /></TabbarItem>\r\n                            * */\r\n                        }\r\n                        <TabbarItem\r\n                            onClick={this.onStoryChange}\r\n                            selected={this.state.activeStory === 'lk'}\r\n                            data-story=\"lk\"\r\n                            text=\"Кабинет\"\r\n                        ><Icon28More/></TabbarItem>\r\n                    </Tabbar>\r\n                }>\r\n                    {\r\n                        /*<View id=\"sale\" activePanel=\"sale\">\r\n                        <Panel id=\"sale\">\r\n                            <PanelHeader>Акции</PanelHeader>\r\n                            <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })} indicator={this.state.user.city.title}>Выбранный город</Cell>\r\n                            <Sale />\r\n                        </Panel>\r\n                    </View>*/\r\n                    }\r\n                    <View id=\"news\" activePanel=\"news\">\r\n                        <Panel id=\"news\">\r\n                            <PanelHeader>Навигатор красоты</PanelHeader>\r\n                            <News openReg={() => this.setState({activeViewLk: 'registration', activeStory: 'lk'})}\r\n                                  user={this.state.user} openStory={this.openStory}/>\r\n                        </Panel>\r\n                    </View>\r\n                    <Root id=\"masters\" activeView={this.state.activeViewMasters} modal={searchFilter}>\r\n                        <View id=\"mastersList\" activePanel={this.state.activePanelMasters}>\r\n                            <Panel id=\"mastersList\">\r\n                                <FormLayout>\r\n                                    <Cell\r\n                                        expandable\r\n                                        onClick={()=>this.setActiveModal('cityChange')}\r\n                                        indicator={this.state.targetCity === 'Не выбрано' ? 'Не выбрано' : this.state.targetCity.title}>Ваш город</Cell>\r\n                                    <SelectMimicry\r\n                                        disabled={this.state.targetCity === 'Не выбрано' ? true : false}\r\n                                        top=\"Выберите категорию\"\r\n                                        placeholder=\"Показаны мастера всех категорий\"\r\n                                        onClick={this.state.targetCity === 'Не выбрано' ?\r\n                                            () => this.openSnack('Сначала выберите город') :\r\n                                            () => this.setState({activeViewMasters: 'masterCat'})\r\n                                        }\r\n                                        //after={<Icon24Filter />}\r\n                                    >{this.state.targetCategory.label}</SelectMimicry>\r\n                                </FormLayout>\r\n                                <PanelHeader>Мастера</PanelHeader>\r\n                                <PanelMasterList category={this.state.targetCategory}\r\n                                                 //city={this.state.targetCity === 'Не выбрано' ? this.state.targetCity : this.user.location.city}\r\n                                                 city={this.state.targetCity}\r\n                                                 openPanelMaster={this.openPanelMaster}/>\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head title={'О мастере'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'mastersList'})}/>\r\n                                <MasterCard openPhoto={() => this.setState({activePanelMasters: 'masterPhoto'})}\r\n                                            user={this.state.user} activeMaster={this.state.activeMaster}\r\n                                            openComments={() => this.setState({activePanelMasters: 'masterComments'})}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'masterInfo'})}/>\r\n                                <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'}\r\n                                      goBack={() => this.setState({activePanelMasters: 'masterInfo'})}/>\r\n                                <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel=\"masterCat\" id=\"masterCat\">\r\n                            <Panel id=\"masterCat\">\r\n                                <PanelHeader>Выбор категории</PanelHeader>\r\n                                <Group>\r\n                                    <List>\r\n                                        {\r\n                                            this.state.categories.map(category => {\r\n                                                //console.log(category);\r\n                                                return (\r\n                                                    <Cell\r\n                                                        key={category.id}\r\n                                                        onClick={() => this.setState({\r\n                                                            targetCategory: category,\r\n                                                            activeViewMasters: 'mastersList'\r\n                                                        })}\r\n                                                        asideContent={this.state.targetCategory === category ?\r\n                                                            <Icon24Done fill=\"var(--accent)\"/> : null}\r\n                                                    >\r\n                                                        {category.label}\r\n                                                    </Cell>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </List>\r\n                                </Group>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                    {/*<View id=\"idea\" activePanel=\"idea\">*/}\r\n                    {/*    <Panel id=\"idea\">*/}\r\n                    {/*        <Idea />*/}\r\n                    {/*    </Panel>*/}\r\n                    {/*</View>*/}\r\n                    <View id=\"findmodel\" activePanel={this.state.activePanelFindModels}>\r\n                        <Panel id=\"findmodel\">\r\n                            <PanelHeader>Мастер ищет модель</PanelHeader>\r\n                            <FindModel openMasterOnId={this.openMasterOnId} user={this.state.user}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterInfo\">\r\n                            <Head title={'О мастере'}\r\n                                  goBack={() => this.setState({activePanelFindModels: 'findmodel'})}/>\r\n                            <MasterCard openPhoto={() => this.setState({activePanelFindModels: 'masterPhoto'})}\r\n                                        user={this.state.user} activeMaster={this.state.activeMaster}\r\n                                        openComments={() => this.setState({activePanelFindModels: 'masterComments'})}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterPhoto\">\r\n                            <Head title={'Портфолио'}\r\n                                  goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}/>\r\n                            <MasterPhoto activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                        <Panel id=\"masterComments\">\r\n                            <Head title={'Отзывы'} goBack={() => this.setState({activePanelFindModels: 'masterInfo'})}/>\r\n                            <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                        </Panel>\r\n                    </View>\r\n                    {/*<View id=\"notifications\" activePanel=\"notifications\">*/}\r\n                    {/*    <Panel id=\"notifications\">*/}\r\n                    {/*        <PanelHeader>Уведомления</PanelHeader>*/}\r\n                    {/*        <Group>*/}\r\n                    {/*            <Cell*/}\r\n                    {/*                expandable*/}\r\n                    {/*                onClick={() => this.setState({ activePanel: 'nothing' })}*/}\r\n                    {/*                indicator={'В разработке'}*/}\r\n                    {/*            >Этот раздел</Cell>*/}\r\n                    {/*        </Group>*/}\r\n                    {/*    </Panel>*/}\r\n                    {/*</View>*/}\r\n                    <Root id=\"lk\" activeView={this.state.activeViewLk}>\r\n                        <View id=\"lk\" activePanel={this.state.activePanelLk} popout={this.state.popout} modal={setting}>\r\n                            <Panel id=\"lk\">\r\n                                <PanelHeader>Личный кабинет</PanelHeader>\r\n                                <Lk\r\n                                    user={this.state.user}\r\n                                    openSetting={() => this.setActiveModal('setting')}\r\n                                    //openSetting={() => this.setState({activePanelLk: 'setting'})}\r\n                                    openFavourite={() => this.setState({activePanelLk: 'favourite'})}\r\n                                    openFindModel={() => this.setState({activePanelLk: 'findModel'})}\r\n                                    openMasterPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                />\r\n                                {this.state.snackbar}\r\n                            </Panel>\r\n                            <Panel id='favourite'>\r\n                                <Head title={'Избранное'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Favourite user={this.state.user} openFavMasterOnId={this.openFavMasterOnId}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterInfo\">\r\n                                <Head title={'О мастере'} goBack={() => this.setState({activePanelLk: 'favourite'})}/>\r\n                                <MasterCard openPhoto={() => this.setState({activePanelLk: 'masterPhoto'})}\r\n                                            user={this.state.user} activeMaster={this.state.activeMaster}\r\n                                            openComments={() => this.setState({activePanelLk: 'masterComments'})}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterPhoto\">\r\n                                <Head title={'Портфолио'} goBack={() => this.setState({activePanelLk: 'masterInfo'})}/>\r\n                                <Portfolio user={this.state.user}/>\r\n                            </Panel>\r\n                            <Panel id=\"masterComments\">\r\n                                <Head title={'Отзывы'} goBack={() => this.setState({activePanelLk: 'masterInfo'})}/>\r\n                                <MasterComments user={this.state.user} activeMaster={this.state.activeMaster}/>\r\n                            </Panel>\r\n                            <Panel id='findModel'>\r\n                                <Head title={'Мастер ищет модель'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <FindModelMaster user={this.state.user} popout={this.openAlert}/>\r\n                            </Panel>\r\n                            <Panel id='setting'>\r\n                                <Head title={'Настройки'} goBack={() => this.setState({activePanelLk: 'lk'})}/>\r\n                                <Setting\r\n                                    targetCity={this.state.targetCity}\r\n                                    user={this.state.user}\r\n                                    popout={this.openAlert}\r\n                                    changeCity={() => this.setState({activePanelLk: 'changeCity'})}\r\n                                />\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelLk: 'setting'})}/>\r\n                                <CityList changeTargetCity={(city) => this.setState({\r\n                                    targetCity: city,\r\n                                    activePanelLk: 'setting'\r\n                                })}/>\r\n                            </Panel>\r\n                        </View>\r\n                        <View activePanel={this.state.activePanelReg} id=\"registration\">\r\n                            <Panel id='registration'>\r\n                                <Head title={'Регистрация'} goBack={() => this.setState({activeViewLk: 'lk'})}/>\r\n                                <Invite targetCity={this.state.targetCity}\r\n                                        user={this.state.user}\r\n                                        closeReg={this.closeReg}\r\n                                        changeCity={() => this.setState({activePanelReg: 'changeCity'})}/>\r\n                            </Panel>\r\n                            <Panel id='changeCity'>\r\n                                <Head title={'Выбор города'}\r\n                                      goBack={() => this.setState({activePanelReg: 'registration'})}/>\r\n                                <CityList changeTargetCity={(city) => this.setState({\r\n                                    targetCity: city,\r\n                                    activePanelReg: 'registration'\r\n                                })}/>\r\n                            </Panel>\r\n                        </View>\r\n                    </Root>\r\n                </Epic>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import bridge from '@vkontakte/vk-bridge-mock';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nbridge.send(\"VKWebAppInit\", {})\r\n    .then(data => console.log('Инициализировали апи вк? '+data.result));\r\nlet linkParams =  window\r\n    .location\r\n    .hash\r\n    .replace('#','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\nlet params = window\r\n    .location\r\n    .search\r\n    .replace('?','')\r\n    .split('&')\r\n    .reduce(\r\n        function(p,e){\r\n            let a = e.split('=');\r\n            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nconsole.log(params);\r\n\r\n\r\nReactDOM.render(<App linkParams={linkParams} params={params} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}